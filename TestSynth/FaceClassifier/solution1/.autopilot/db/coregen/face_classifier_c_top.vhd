-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.std_logic_arith.all;
use IEEE.std_logic_unsigned.all;

entity face_classifier_c_top is
    generic (
        RESET_ACTIVE_LOW :  integer := 1
    );
    port (
        dense_input_input_array_Clk_A : out  std_logic;
        dense_input_input_array_Rst_A : out  std_logic;
        dense_input_input_array_EN_A : out  std_logic;
        dense_input_input_array_WEN_A : out  std_logic_vector(4 - 1 downto 0);
        dense_input_input_array_Addr_A : out  std_logic_vector(32 - 1 downto 0);
        dense_input_input_array_Dout_A : out  std_logic_vector(32 - 1 downto 0);
        dense_input_input_array_Din_A : in  std_logic_vector(32 - 1 downto 0);
        dense_input_input_shape_Clk_A : out  std_logic;
        dense_input_input_shape_Rst_A : out  std_logic;
        dense_input_input_shape_EN_A : out  std_logic;
        dense_input_input_shape_WEN_A : out  std_logic_vector(8 - 1 downto 0);
        dense_input_input_shape_Addr_A : out  std_logic_vector(32 - 1 downto 0);
        dense_input_input_shape_Dout_A : out  std_logic_vector(64 - 1 downto 0);
        dense_input_input_shape_Din_A : in  std_logic_vector(64 - 1 downto 0);
        activation_3_output_array_Clk_A : out  std_logic;
        activation_3_output_array_Rst_A : out  std_logic;
        activation_3_output_array_EN_A : out  std_logic;
        activation_3_output_array_WEN_A : out  std_logic_vector(4 - 1 downto 0);
        activation_3_output_array_Addr_A : out  std_logic_vector(32 - 1 downto 0);
        activation_3_output_array_Dout_A : out  std_logic_vector(32 - 1 downto 0);
        activation_3_output_array_Din_A : in  std_logic_vector(32 - 1 downto 0);
        activation_3_output_shape_Clk_A : out  std_logic;
        activation_3_output_shape_Rst_A : out  std_logic;
        activation_3_output_shape_EN_A : out  std_logic;
        activation_3_output_shape_WEN_A : out  std_logic_vector(8 - 1 downto 0);
        activation_3_output_shape_Addr_A : out  std_logic_vector(32 - 1 downto 0);
        activation_3_output_shape_Dout_A : out  std_logic_vector(64 - 1 downto 0);
        activation_3_output_shape_Din_A : in  std_logic_vector(64 - 1 downto 0);
        aresetn : in  std_logic;
        aclk : in  std_logic;
        dense_input_input_ndim : in  std_logic_vector(64 - 1 downto 0);
        dense_input_input_numel : in  std_logic_vector(64 - 1 downto 0);
        activation_3_output_ndim : out  std_logic_vector(64 - 1 downto 0);
        activation_3_output_ndim_ap_vld : out  std_logic;
        activation_3_output_numel : out  std_logic_vector(64 - 1 downto 0);
        activation_3_output_numel_ap_vld : out  std_logic;
        ap_start : in  std_logic;
        ap_ready : out  std_logic;
        ap_done : out  std_logic;
        ap_idle : out  std_logic
    );

-- attributes begin
-- attributes end
end entity;

architecture behav of face_classifier_c_top is
    component face_classifier_c is
        port (
            dense_input_input_array_address0 : out  std_logic_vector(19 - 1 downto 0);
            dense_input_input_array_ce0 : out  std_logic;
            dense_input_input_array_q0 : in  std_logic_vector(32 - 1 downto 0);
            dense_input_input_shape_address0 : out  std_logic_vector(3 - 1 downto 0);
            dense_input_input_shape_ce0 : out  std_logic;
            dense_input_input_shape_q0 : in  std_logic_vector(64 - 1 downto 0);
            activation_3_output_array_address0 : out  std_logic_vector(19 - 1 downto 0);
            activation_3_output_array_ce0 : out  std_logic;
            activation_3_output_array_we0 : out  std_logic;
            activation_3_output_array_d0 : out  std_logic_vector(32 - 1 downto 0);
            activation_3_output_shape_address0 : out  std_logic_vector(3 - 1 downto 0);
            activation_3_output_shape_ce0 : out  std_logic;
            activation_3_output_shape_we0 : out  std_logic;
            activation_3_output_shape_d0 : out  std_logic_vector(64 - 1 downto 0);
            ap_rst : in  std_logic;
            ap_clk : in  std_logic;
            dense_input_input_ndim : in  std_logic_vector(64 - 1 downto 0);
            dense_input_input_numel : in  std_logic_vector(64 - 1 downto 0);
            activation_3_output_ndim : out  std_logic_vector(64 - 1 downto 0);
            activation_3_output_ndim_ap_vld : out  std_logic;
            activation_3_output_numel : out  std_logic_vector(64 - 1 downto 0);
            activation_3_output_numel_ap_vld : out  std_logic;
            ap_start : in  std_logic;
            ap_ready : out  std_logic;
            ap_done : out  std_logic;
            ap_idle : out  std_logic
        );
    end component;

    component face_classifier_c_dense_input_input_array_if is
        port (
            clk :  in std_logic;
            reset :  in std_logic;
            dense_input_input_array_address0 :  in std_logic_vector(19 - 1 downto 0);
            dense_input_input_array_ce0 :  in std_logic;
            dense_input_input_array_q0 :  out std_logic_vector(32 - 1 downto 0);
            Clk_A :  out std_logic;
            Rst_A :  out std_logic;
            EN_A :  out std_logic;
            WEN_A :  out std_logic_vector(4 - 1 downto 0);
            Addr_A :  out std_logic_vector(32 - 1 downto 0);
            Dout_A :  out std_logic_vector(32 - 1 downto 0);
            Din_A :  in std_logic_vector(32 - 1 downto 0));
    end component;

    component face_classifier_c_dense_input_input_shape_if is
        port (
            clk :  in std_logic;
            reset :  in std_logic;
            dense_input_input_shape_address0 :  in std_logic_vector(3 - 1 downto 0);
            dense_input_input_shape_ce0 :  in std_logic;
            dense_input_input_shape_q0 :  out std_logic_vector(64 - 1 downto 0);
            Clk_A :  out std_logic;
            Rst_A :  out std_logic;
            EN_A :  out std_logic;
            WEN_A :  out std_logic_vector(8 - 1 downto 0);
            Addr_A :  out std_logic_vector(32 - 1 downto 0);
            Dout_A :  out std_logic_vector(64 - 1 downto 0);
            Din_A :  in std_logic_vector(64 - 1 downto 0));
    end component;

    component face_classifier_c_activation_3_output_array_if is
        port (
            clk :  in std_logic;
            reset :  in std_logic;
            activation_3_output_array_address0 :  in std_logic_vector(19 - 1 downto 0);
            activation_3_output_array_ce0 :  in std_logic;
            activation_3_output_array_we0 :  in std_logic;
            activation_3_output_array_d0 :  in std_logic_vector(32 - 1 downto 0);
            Clk_A :  out std_logic;
            Rst_A :  out std_logic;
            EN_A :  out std_logic;
            WEN_A :  out std_logic_vector(4 - 1 downto 0);
            Addr_A :  out std_logic_vector(32 - 1 downto 0);
            Dout_A :  out std_logic_vector(32 - 1 downto 0);
            Din_A :  in std_logic_vector(32 - 1 downto 0));
    end component;

    component face_classifier_c_activation_3_output_shape_if is
        port (
            clk :  in std_logic;
            reset :  in std_logic;
            activation_3_output_shape_address0 :  in std_logic_vector(3 - 1 downto 0);
            activation_3_output_shape_ce0 :  in std_logic;
            activation_3_output_shape_we0 :  in std_logic;
            activation_3_output_shape_d0 :  in std_logic_vector(64 - 1 downto 0);
            Clk_A :  out std_logic;
            Rst_A :  out std_logic;
            EN_A :  out std_logic;
            WEN_A :  out std_logic_vector(8 - 1 downto 0);
            Addr_A :  out std_logic_vector(32 - 1 downto 0);
            Dout_A :  out std_logic_vector(64 - 1 downto 0);
            Din_A :  in std_logic_vector(64 - 1 downto 0));
    end component;

    component face_classifier_c_ap_rst_if is
        generic (
            RESET_ACTIVE_LOW :  integer);
        port (
            dout :  out std_logic;
            din :  in std_logic);
    end component;

    signal sig_face_classifier_c_dense_input_input_array_address0 :  std_logic_vector(19 - 1 downto 0);
    signal sig_face_classifier_c_dense_input_input_array_ce0 :  std_logic;
    signal sig_face_classifier_c_dense_input_input_array_q0 :  std_logic_vector(32 - 1 downto 0);
    signal sig_face_classifier_c_dense_input_input_shape_address0 :  std_logic_vector(3 - 1 downto 0);
    signal sig_face_classifier_c_dense_input_input_shape_ce0 :  std_logic;
    signal sig_face_classifier_c_dense_input_input_shape_q0 :  std_logic_vector(64 - 1 downto 0);
    signal sig_face_classifier_c_activation_3_output_array_address0 :  std_logic_vector(19 - 1 downto 0);
    signal sig_face_classifier_c_activation_3_output_array_ce0 :  std_logic;
    signal sig_face_classifier_c_activation_3_output_array_we0 :  std_logic;
    signal sig_face_classifier_c_activation_3_output_array_d0 :  std_logic_vector(32 - 1 downto 0);
    signal sig_face_classifier_c_activation_3_output_shape_address0 :  std_logic_vector(3 - 1 downto 0);
    signal sig_face_classifier_c_activation_3_output_shape_ce0 :  std_logic;
    signal sig_face_classifier_c_activation_3_output_shape_we0 :  std_logic;
    signal sig_face_classifier_c_activation_3_output_shape_d0 :  std_logic_vector(64 - 1 downto 0);
    signal sig_face_classifier_c_ap_rst :  std_logic;

begin
    face_classifier_c_U  : component face_classifier_c
        port map (
            dense_input_input_array_address0 => sig_face_classifier_c_dense_input_input_array_address0,
            dense_input_input_array_ce0 => sig_face_classifier_c_dense_input_input_array_ce0,
            dense_input_input_array_q0 => sig_face_classifier_c_dense_input_input_array_q0,
            dense_input_input_shape_address0 => sig_face_classifier_c_dense_input_input_shape_address0,
            dense_input_input_shape_ce0 => sig_face_classifier_c_dense_input_input_shape_ce0,
            dense_input_input_shape_q0 => sig_face_classifier_c_dense_input_input_shape_q0,
            activation_3_output_array_address0 => sig_face_classifier_c_activation_3_output_array_address0,
            activation_3_output_array_ce0 => sig_face_classifier_c_activation_3_output_array_ce0,
            activation_3_output_array_we0 => sig_face_classifier_c_activation_3_output_array_we0,
            activation_3_output_array_d0 => sig_face_classifier_c_activation_3_output_array_d0,
            activation_3_output_shape_address0 => sig_face_classifier_c_activation_3_output_shape_address0,
            activation_3_output_shape_ce0 => sig_face_classifier_c_activation_3_output_shape_ce0,
            activation_3_output_shape_we0 => sig_face_classifier_c_activation_3_output_shape_we0,
            activation_3_output_shape_d0 => sig_face_classifier_c_activation_3_output_shape_d0,
            ap_rst => sig_face_classifier_c_ap_rst,
            ap_clk => aclk,
            dense_input_input_ndim => dense_input_input_ndim,
            dense_input_input_numel => dense_input_input_numel,
            activation_3_output_ndim => activation_3_output_ndim,
            activation_3_output_ndim_ap_vld => activation_3_output_ndim_ap_vld,
            activation_3_output_numel => activation_3_output_numel,
            activation_3_output_numel_ap_vld => activation_3_output_numel_ap_vld,
            ap_start => ap_start,
            ap_ready => ap_ready,
            ap_done => ap_done,
            ap_idle => ap_idle
        );

    face_classifier_c_dense_input_input_array_if_U : component face_classifier_c_dense_input_input_array_if
        port map (
            clk => aclk,
            reset => sig_face_classifier_c_ap_rst_n,
            dense_input_input_array_address0 => sig_face_classifier_c_dense_input_input_array_address0,
            dense_input_input_array_ce0 => sig_face_classifier_c_dense_input_input_array_ce0,
            dense_input_input_array_q0 => sig_face_classifier_c_dense_input_input_array_q0,
            Clk_A => dense_input_input_array_Clk_A,
            Rst_A => dense_input_input_array_Rst_A,
            EN_A => dense_input_input_array_EN_A,
            WEN_A => dense_input_input_array_WEN_A,
            Addr_A => dense_input_input_array_Addr_A,
            Dout_A => dense_input_input_array_Dout_A,
            Din_A => dense_input_input_array_Din_A);

    face_classifier_c_dense_input_input_shape_if_U : component face_classifier_c_dense_input_input_shape_if
        port map (
            clk => aclk,
            reset => sig_face_classifier_c_ap_rst_n,
            dense_input_input_shape_address0 => sig_face_classifier_c_dense_input_input_shape_address0,
            dense_input_input_shape_ce0 => sig_face_classifier_c_dense_input_input_shape_ce0,
            dense_input_input_shape_q0 => sig_face_classifier_c_dense_input_input_shape_q0,
            Clk_A => dense_input_input_shape_Clk_A,
            Rst_A => dense_input_input_shape_Rst_A,
            EN_A => dense_input_input_shape_EN_A,
            WEN_A => dense_input_input_shape_WEN_A,
            Addr_A => dense_input_input_shape_Addr_A,
            Dout_A => dense_input_input_shape_Dout_A,
            Din_A => dense_input_input_shape_Din_A);

    face_classifier_c_activation_3_output_array_if_U : component face_classifier_c_activation_3_output_array_if
        port map (
            clk => aclk,
            reset => sig_face_classifier_c_ap_rst_n,
            activation_3_output_array_address0 => sig_face_classifier_c_activation_3_output_array_address0,
            activation_3_output_array_ce0 => sig_face_classifier_c_activation_3_output_array_ce0,
            activation_3_output_array_we0 => sig_face_classifier_c_activation_3_output_array_we0,
            activation_3_output_array_d0 => sig_face_classifier_c_activation_3_output_array_d0,
            Clk_A => activation_3_output_array_Clk_A,
            Rst_A => activation_3_output_array_Rst_A,
            EN_A => activation_3_output_array_EN_A,
            WEN_A => activation_3_output_array_WEN_A,
            Addr_A => activation_3_output_array_Addr_A,
            Dout_A => activation_3_output_array_Dout_A,
            Din_A => activation_3_output_array_Din_A);

    face_classifier_c_activation_3_output_shape_if_U : component face_classifier_c_activation_3_output_shape_if
        port map (
            clk => aclk,
            reset => sig_face_classifier_c_ap_rst_n,
            activation_3_output_shape_address0 => sig_face_classifier_c_activation_3_output_shape_address0,
            activation_3_output_shape_ce0 => sig_face_classifier_c_activation_3_output_shape_ce0,
            activation_3_output_shape_we0 => sig_face_classifier_c_activation_3_output_shape_we0,
            activation_3_output_shape_d0 => sig_face_classifier_c_activation_3_output_shape_d0,
            Clk_A => activation_3_output_shape_Clk_A,
            Rst_A => activation_3_output_shape_Rst_A,
            EN_A => activation_3_output_shape_EN_A,
            WEN_A => activation_3_output_shape_WEN_A,
            Addr_A => activation_3_output_shape_Addr_A,
            Dout_A => activation_3_output_shape_Dout_A,
            Din_A => activation_3_output_shape_Din_A);

    ap_rst_if_U : component face_classifier_c_ap_rst_if
        generic map (
            RESET_ACTIVE_LOW => RESET_ACTIVE_LOW)
        port map (
            dout => sig_face_classifier_c_ap_rst,
            din => aresetn);

end architecture;

