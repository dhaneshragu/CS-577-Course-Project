// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module k2c_dot_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        C_array_address0,
        C_array_ce0,
        C_array_we0,
        C_array_d0,
        Ar_array_address0,
        Ar_array_ce0,
        Ar_array_q0,
        Ar_ndim_read,
        Ar_numel_read,
        Ar_shape_address0,
        Ar_shape_ce0,
        Ar_shape_q0,
        B_array_address0,
        B_array_ce0,
        B_array_q0,
        B_shape_address0,
        B_shape_ce0,
        B_shape_q0,
        axesA_address0,
        axesA_ce0,
        axesA_q0,
        fwork_address0,
        fwork_ce0,
        fwork_we0,
        fwork_d0,
        fwork_q0,
        fwork_address1,
        fwork_ce1,
        fwork_q1
);

parameter    ap_ST_fsm_state1 = 100'd1;
parameter    ap_ST_fsm_state2 = 100'd2;
parameter    ap_ST_fsm_state3 = 100'd4;
parameter    ap_ST_fsm_state4 = 100'd8;
parameter    ap_ST_fsm_state5 = 100'd16;
parameter    ap_ST_fsm_state6 = 100'd32;
parameter    ap_ST_fsm_state7 = 100'd64;
parameter    ap_ST_fsm_state8 = 100'd128;
parameter    ap_ST_fsm_state9 = 100'd256;
parameter    ap_ST_fsm_state10 = 100'd512;
parameter    ap_ST_fsm_state11 = 100'd1024;
parameter    ap_ST_fsm_state12 = 100'd2048;
parameter    ap_ST_fsm_state13 = 100'd4096;
parameter    ap_ST_fsm_state14 = 100'd8192;
parameter    ap_ST_fsm_state15 = 100'd16384;
parameter    ap_ST_fsm_state16 = 100'd32768;
parameter    ap_ST_fsm_state17 = 100'd65536;
parameter    ap_ST_fsm_state18 = 100'd131072;
parameter    ap_ST_fsm_state19 = 100'd262144;
parameter    ap_ST_fsm_state20 = 100'd524288;
parameter    ap_ST_fsm_state21 = 100'd1048576;
parameter    ap_ST_fsm_state22 = 100'd2097152;
parameter    ap_ST_fsm_state23 = 100'd4194304;
parameter    ap_ST_fsm_state24 = 100'd8388608;
parameter    ap_ST_fsm_state25 = 100'd16777216;
parameter    ap_ST_fsm_state26 = 100'd33554432;
parameter    ap_ST_fsm_state27 = 100'd67108864;
parameter    ap_ST_fsm_state28 = 100'd134217728;
parameter    ap_ST_fsm_state29 = 100'd268435456;
parameter    ap_ST_fsm_state30 = 100'd536870912;
parameter    ap_ST_fsm_state31 = 100'd1073741824;
parameter    ap_ST_fsm_state32 = 100'd2147483648;
parameter    ap_ST_fsm_state33 = 100'd4294967296;
parameter    ap_ST_fsm_state34 = 100'd8589934592;
parameter    ap_ST_fsm_state35 = 100'd17179869184;
parameter    ap_ST_fsm_state36 = 100'd34359738368;
parameter    ap_ST_fsm_state37 = 100'd68719476736;
parameter    ap_ST_fsm_state38 = 100'd137438953472;
parameter    ap_ST_fsm_state39 = 100'd274877906944;
parameter    ap_ST_fsm_state40 = 100'd549755813888;
parameter    ap_ST_fsm_state41 = 100'd1099511627776;
parameter    ap_ST_fsm_state42 = 100'd2199023255552;
parameter    ap_ST_fsm_state43 = 100'd4398046511104;
parameter    ap_ST_fsm_state44 = 100'd8796093022208;
parameter    ap_ST_fsm_state45 = 100'd17592186044416;
parameter    ap_ST_fsm_state46 = 100'd35184372088832;
parameter    ap_ST_fsm_state47 = 100'd70368744177664;
parameter    ap_ST_fsm_state48 = 100'd140737488355328;
parameter    ap_ST_fsm_state49 = 100'd281474976710656;
parameter    ap_ST_fsm_state50 = 100'd562949953421312;
parameter    ap_ST_fsm_state51 = 100'd1125899906842624;
parameter    ap_ST_fsm_state52 = 100'd2251799813685248;
parameter    ap_ST_fsm_state53 = 100'd4503599627370496;
parameter    ap_ST_fsm_state54 = 100'd9007199254740992;
parameter    ap_ST_fsm_state55 = 100'd18014398509481984;
parameter    ap_ST_fsm_state56 = 100'd36028797018963968;
parameter    ap_ST_fsm_state57 = 100'd72057594037927936;
parameter    ap_ST_fsm_state58 = 100'd144115188075855872;
parameter    ap_ST_fsm_state59 = 100'd288230376151711744;
parameter    ap_ST_fsm_state60 = 100'd576460752303423488;
parameter    ap_ST_fsm_state61 = 100'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 100'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 100'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 100'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 100'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 100'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 100'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 100'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 100'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 100'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 100'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 100'd2361183241434822606848;
parameter    ap_ST_fsm_pp0_stage0 = 100'd4722366482869645213696;
parameter    ap_ST_fsm_state75 = 100'd9444732965739290427392;
parameter    ap_ST_fsm_pp1_stage0 = 100'd18889465931478580854784;
parameter    ap_ST_fsm_state78 = 100'd37778931862957161709568;
parameter    ap_ST_fsm_pp2_stage0 = 100'd75557863725914323419136;
parameter    ap_ST_fsm_state81 = 100'd151115727451828646838272;
parameter    ap_ST_fsm_pp3_stage0 = 100'd302231454903657293676544;
parameter    ap_ST_fsm_state85 = 100'd604462909807314587353088;
parameter    ap_ST_fsm_pp4_stage0 = 100'd1208925819614629174706176;
parameter    ap_ST_fsm_state89 = 100'd2417851639229258349412352;
parameter    ap_ST_fsm_state90 = 100'd4835703278458516698824704;
parameter    ap_ST_fsm_state91 = 100'd9671406556917033397649408;
parameter    ap_ST_fsm_pp5_stage0 = 100'd19342813113834066795298816;
parameter    ap_ST_fsm_state95 = 100'd38685626227668133590597632;
parameter    ap_ST_fsm_state96 = 100'd77371252455336267181195264;
parameter    ap_ST_fsm_state97 = 100'd154742504910672534362390528;
parameter    ap_ST_fsm_state98 = 100'd309485009821345068724781056;
parameter    ap_ST_fsm_state99 = 100'd618970019642690137449562112;
parameter    ap_ST_fsm_state100 = 100'd1237940039285380274899124224;
parameter    ap_ST_fsm_state101 = 100'd2475880078570760549798248448;
parameter    ap_ST_fsm_state102 = 100'd4951760157141521099596496896;
parameter    ap_ST_fsm_state103 = 100'd9903520314283042199192993792;
parameter    ap_ST_fsm_state104 = 100'd19807040628566084398385987584;
parameter    ap_ST_fsm_pp6_stage0 = 100'd39614081257132168796771975168;
parameter    ap_ST_fsm_pp6_stage1 = 100'd79228162514264337593543950336;
parameter    ap_ST_fsm_pp6_stage2 = 100'd158456325028528675187087900672;
parameter    ap_ST_fsm_pp6_stage3 = 100'd316912650057057350374175801344;
parameter    ap_ST_fsm_state113 = 100'd633825300114114700748351602688;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] C_array_address0;
output   C_array_ce0;
output   C_array_we0;
output  [31:0] C_array_d0;
output  [11:0] Ar_array_address0;
output   Ar_array_ce0;
input  [31:0] Ar_array_q0;
input  [63:0] Ar_ndim_read;
input  [63:0] Ar_numel_read;
output  [2:0] Ar_shape_address0;
output   Ar_shape_ce0;
input  [63:0] Ar_shape_q0;
output  [18:0] B_array_address0;
output   B_array_ce0;
input  [31:0] B_array_q0;
output  [2:0] B_shape_address0;
output   B_shape_ce0;
input  [63:0] B_shape_q0;
output  [0:0] axesA_address0;
output   axesA_ce0;
input  [63:0] axesA_q0;
output  [18:0] fwork_address0;
output   fwork_ce0;
output   fwork_we0;
output  [31:0] fwork_d0;
input  [31:0] fwork_q0;
output  [18:0] fwork_address1;
output   fwork_ce1;
input  [31:0] fwork_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] C_array_address0;
reg C_array_ce0;
reg C_array_we0;
reg[31:0] C_array_d0;
reg Ar_array_ce0;
reg[2:0] Ar_shape_address0;
reg Ar_shape_ce0;
reg B_array_ce0;
reg[2:0] B_shape_address0;
reg B_shape_ce0;
reg[0:0] axesA_address0;
reg axesA_ce0;
reg[18:0] fwork_address0;
reg fwork_ce0;
reg fwork_we0;
reg[31:0] fwork_d0;
reg fwork_ce1;

(* fsm_encoding = "none" *) reg   [99:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [2:0] i_4_reg_508;
reg   [2:0] i_5_reg_519;
reg   [63:0] j_2_reg_528;
reg   [1:0] i_7_reg_540;
reg   [0:0] j_3_reg_552;
reg   [2:0] i_8_reg_563;
reg   [1:0] i_9_reg_574;
reg   [2:0] j_4_reg_598;
reg   [31:0] tmp_24_reg_664;
reg   [63:0] k_reg_676;
wire    ap_CS_fsm_state2;
reg   [63:0] axesA_load_reg_1186;
wire   [63:0] i_20_fu_728_p2;
wire    ap_CS_fsm_state3;
wire   [1:0] i_22_fu_765_p2;
wire    ap_CS_fsm_state4;
wire   [0:0] exitcond7_fu_759_p2;
reg   [63:0] Ar_shape_load_reg_1226;
wire    ap_CS_fsm_state5;
wire  signed [19:0] tmp_37_fu_792_p1;
reg  signed [19:0] tmp_37_reg_1232;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state47;
wire   [63:0] grp_fu_796_p2;
reg   [63:0] free_axesA_reg_1247;
wire    ap_CS_fsm_state72;
wire   [63:0] grp_fu_801_p2;
reg   [63:0] free_axesB_reg_1252;
wire  signed [19:0] tmp_40_fu_807_p1;
reg  signed [19:0] tmp_40_reg_1258;
wire  signed [12:0] tmp_41_fu_811_p1;
reg  signed [12:0] tmp_41_reg_1263;
wire   [63:0] i_19_fu_818_p2;
reg   [63:0] i_19_reg_1268;
wire   [2:0] i_20_cast_fu_823_p2;
reg   [2:0] i_20_cast_reg_1273;
wire   [63:0] i_4_cast_fu_829_p1;
reg   [63:0] i_4_cast_reg_1278;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state73_pp0_stage0_iter0;
wire    ap_block_state74_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] exitcond8_fu_834_p2;
reg   [0:0] exitcond8_reg_1283;
wire   [2:0] i_21_fu_839_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] i_5_cast_fu_845_p1;
reg   [63:0] i_5_cast_reg_1297;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state76_pp1_stage0_iter0;
wire    ap_block_state77_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [0:0] tmp_s_fu_849_p2;
reg   [0:0] tmp_s_reg_1302;
wire   [63:0] j_fu_854_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [2:0] i_23_fu_860_p2;
wire   [0:0] exitcond1_fu_866_p2;
reg   [0:0] exitcond1_reg_1321;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state79_pp2_stage0_iter0;
wire    ap_block_state80_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [1:0] i_24_fu_877_p2;
reg   [1:0] i_24_reg_1330;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] j_6_fu_883_p2;
wire   [63:0] i_8_cast_fu_894_p1;
reg   [63:0] i_8_cast_reg_1340;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state82_pp3_stage0_iter0;
wire    ap_block_state83_pp3_stage0_iter1;
wire    ap_block_state84_pp3_stage0_iter2;
wire    ap_block_pp3_stage0_11001;
reg   [63:0] i_8_cast_reg_1340_pp3_iter1_reg;
wire   [0:0] exitcond2_fu_899_p2;
reg   [0:0] exitcond2_reg_1345;
reg   [0:0] exitcond2_reg_1345_pp3_iter1_reg;
wire   [2:0] i_25_fu_904_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [0:0] exitcond3_fu_910_p2;
reg   [0:0] exitcond3_reg_1364;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_state86_pp4_stage0_iter0;
wire    ap_block_state87_pp4_stage0_iter1;
wire    ap_block_state88_pp4_stage0_iter2;
wire    ap_block_pp4_stage0_11001;
reg   [0:0] exitcond3_reg_1364_pp4_iter1_reg;
wire   [1:0] i_26_fu_916_p2;
reg    ap_enable_reg_pp4_iter0;
wire   [63:0] i_9_cast6_fu_922_p1;
reg   [63:0] i_9_cast6_reg_1373;
reg   [63:0] i_9_cast6_reg_1373_pp4_iter1_reg;
wire   [63:0] i_27_fu_937_p2;
reg   [63:0] i_27_reg_1391;
wire    ap_CS_fsm_state90;
wire   [19:0] tmp_43_fu_943_p1;
reg   [19:0] tmp_43_reg_1396;
wire   [0:0] exitcond5_fu_932_p2;
wire   [63:0] j_4_cast_fu_946_p1;
reg   [63:0] j_4_cast_reg_1402;
wire    ap_CS_fsm_pp5_stage0;
wire    ap_block_state92_pp5_stage0_iter0;
wire    ap_block_state93_pp5_stage0_iter1;
wire    ap_block_state94_pp5_stage0_iter2;
wire    ap_block_pp5_stage0_11001;
reg   [63:0] j_4_cast_reg_1402_pp5_iter1_reg;
wire   [0:0] exitcond10_fu_951_p2;
reg   [0:0] exitcond10_reg_1407;
reg   [0:0] exitcond10_reg_1407_pp5_iter1_reg;
wire   [2:0] j_1_fu_956_p2;
reg    ap_enable_reg_pp5_iter0;
wire    ap_CS_fsm_state95;
wire   [18:0] i_28_fu_968_p2;
reg   [18:0] i_28_reg_1434;
wire    ap_CS_fsm_state97;
wire   [63:0] i_11_cast5_fu_974_p1;
reg   [63:0] i_11_cast5_reg_1439;
wire   [0:0] exitcond4_fu_962_p2;
reg   [18:0] B_array_addr_reg_1444;
wire   [127:0] bound_fu_986_p2;
reg   [127:0] bound_reg_1449;
wire   [1:0] j_7_fu_998_p2;
reg   [1:0] j_7_reg_1457;
wire    ap_CS_fsm_state99;
wire   [63:0] j_5_cast4_fu_1004_p1;
reg   [63:0] j_5_cast4_reg_1462;
wire   [0:0] exitcond9_fu_992_p2;
wire   [0:0] ifzero_fu_1009_p2;
reg   [0:0] ifzero_reg_1472;
wire    ap_CS_fsm_state100;
wire   [0:0] exitcond_flatten_fu_1034_p2;
wire    ap_CS_fsm_state104;
wire   [127:0] indvar_flatten_next_fu_1039_p2;
reg   [127:0] indvar_flatten_next_reg_1485;
wire   [63:0] j_mid2_fu_1050_p3;
reg   [63:0] j_mid2_reg_1490;
wire   [63:0] tmp_20_mid2_v_v_fu_1064_p3;
reg   [63:0] tmp_20_mid2_v_v_reg_1495;
wire   [19:0] tmp_21_mid2_fu_1080_p2;
reg   [19:0] tmp_21_mid2_reg_1500;
wire   [19:0] tmp_46_fu_1085_p1;
reg   [19:0] tmp_46_reg_1505;
reg   [11:0] C_array_addr_reg_1510;
wire   [0:0] exitcond_fu_1097_p2;
reg   [0:0] exitcond_reg_1515;
wire    ap_CS_fsm_pp6_stage0;
wire    ap_block_state105_pp6_stage0_iter0;
wire    ap_block_state109_pp6_stage0_iter1;
wire    ap_block_pp6_stage0_11001;
reg   [0:0] exitcond_reg_1515_pp6_iter1_reg;
wire   [63:0] k_2_fu_1102_p2;
reg   [63:0] k_2_reg_1519;
reg    ap_enable_reg_pp6_iter0;
reg   [31:0] fwork_load_reg_1534;
wire    ap_CS_fsm_pp6_stage1;
wire    ap_block_state106_pp6_stage1_iter0;
wire    ap_block_state110_pp6_stage1_iter1;
wire    ap_block_pp6_stage1_11001;
reg   [31:0] fwork_load_2_reg_1539;
wire   [31:0] grp_fu_714_p2;
reg   [31:0] tmp_27_reg_1544;
wire    ap_CS_fsm_pp6_stage3;
wire    ap_block_state108_pp6_stage3_iter0;
wire    ap_block_state112_pp6_stage3_iter1;
wire    ap_block_pp6_stage3_11001;
wire   [31:0] grp_fu_708_p2;
reg    ap_enable_reg_pp6_iter1;
wire   [63:0] j_8_fu_1142_p2;
wire    ap_CS_fsm_state113;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state73;
reg    ap_enable_reg_pp0_iter1;
wire    ap_CS_fsm_state75;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state76;
reg    ap_enable_reg_pp1_iter1;
wire    ap_CS_fsm_state78;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state79;
reg    ap_enable_reg_pp2_iter1;
wire    ap_CS_fsm_state81;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state82;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter2;
wire    ap_CS_fsm_state85;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state86;
reg    ap_enable_reg_pp4_iter1;
reg    ap_enable_reg_pp4_iter2;
wire    ap_CS_fsm_state91;
wire    grp_k2c_idx2sub_fu_687_ap_idle;
wire    grp_k2c_idx2sub_fu_687_ap_ready;
wire    grp_k2c_idx2sub_fu_687_ap_done;
wire    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state92;
reg    ap_enable_reg_pp5_iter1;
reg    ap_enable_reg_pp5_iter2;
wire    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state105;
wire    ap_block_pp6_stage3_subdone;
reg   [2:0] permA_address0;
reg    permA_ce0;
reg    permA_we0;
reg   [63:0] permA_d0;
wire   [63:0] permA_q0;
reg   [2:0] permB_address0;
reg    permB_ce0;
reg    permB_we0;
reg   [1:0] permB_d0;
wire   [1:0] permB_q0;
reg   [2:0] freeA_address0;
reg    freeA_ce0;
reg    freeA_we0;
wire   [63:0] freeA_q0;
reg   [2:0] freeB_address0;
reg    freeB_ce0;
reg    freeB_we0;
wire   [1:0] freeB_q0;
reg   [2:0] newshpA_address0;
reg    newshpA_ce0;
reg    newshpA_we0;
wire   [63:0] newshpA_q0;
reg   [2:0] newshpB_address0;
reg    newshpB_ce0;
reg    newshpB_we0;
wire   [63:0] newshpB_q0;
reg   [2:0] Asub_address0;
reg    Asub_ce0;
reg    Asub_we0;
reg   [63:0] Asub_d0;
wire   [63:0] Asub_q0;
reg   [2:0] Bsub_address0;
reg    Bsub_ce0;
reg    Bsub_we0;
reg   [63:0] Bsub_d0;
wire   [63:0] Bsub_q0;
wire    grp_k2c_idx2sub_fu_687_ap_start;
reg   [63:0] grp_k2c_idx2sub_fu_687_idx;
wire   [2:0] grp_k2c_idx2sub_fu_687_sub_address0;
wire    grp_k2c_idx2sub_fu_687_sub_ce0;
wire    grp_k2c_idx2sub_fu_687_sub_we0;
wire   [63:0] grp_k2c_idx2sub_fu_687_sub_d0;
wire   [2:0] grp_k2c_idx2sub_fu_687_shape_address0;
wire    grp_k2c_idx2sub_fu_687_shape_ce0;
reg   [63:0] grp_k2c_idx2sub_fu_687_shape_q0;
reg   [63:0] grp_k2c_idx2sub_fu_687_ndim;
wire    grp_k2c_sub2idx_fu_699_ap_start;
wire    grp_k2c_sub2idx_fu_699_ap_done;
wire    grp_k2c_sub2idx_fu_699_ap_idle;
wire    grp_k2c_sub2idx_fu_699_ap_ready;
wire   [2:0] grp_k2c_sub2idx_fu_699_sub_address0;
wire    grp_k2c_sub2idx_fu_699_sub_ce0;
reg   [63:0] grp_k2c_sub2idx_fu_699_sub_q0;
wire   [2:0] grp_k2c_sub2idx_fu_699_shape_address0;
wire    grp_k2c_sub2idx_fu_699_shape_ce0;
reg   [63:0] grp_k2c_sub2idx_fu_699_shape_q0;
reg   [63:0] grp_k2c_sub2idx_fu_699_ndim;
wire   [63:0] grp_k2c_sub2idx_fu_699_ap_return;
reg   [63:0] i_reg_484;
wire   [0:0] exitcond6_fu_723_p2;
reg   [1:0] i_1_reg_496;
reg   [1:0] ap_phi_mux_i_7_phi_fu_544_p4;
wire    ap_block_pp2_stage0;
reg   [63:0] i_10_reg_585;
wire    ap_CS_fsm_state96;
wire    ap_CS_fsm_state89;
reg   [18:0] i_11_reg_609;
reg   [1:0] j_5_reg_620;
wire    ap_CS_fsm_state98;
wire    ap_CS_fsm_state103;
reg    ap_block_state103_on_subcall_done;
reg   [127:0] indvar_flatten_reg_631;
reg   [63:0] i_s_reg_642;
reg   [63:0] j_s_reg_653;
reg   [63:0] ap_phi_mux_k_phi_fu_680_p4;
wire    ap_block_pp6_stage0;
reg    grp_k2c_idx2sub_fu_687_ap_start_reg;
reg    grp_k2c_sub2idx_fu_699_ap_start_reg;
wire    ap_CS_fsm_state102;
wire   [0:0] tmp_18_fu_734_p2;
wire   [0:0] tmp_fu_771_p2;
wire    ap_block_pp0_stage0;
wire    ap_block_pp1_stage0;
wire   [63:0] j_3_cast_fu_872_p1;
wire   [63:0] i_7_cast7_fu_889_p1;
wire    ap_block_pp3_stage0;
wire    ap_block_pp4_stage0;
wire   [63:0] extLd_fu_927_p1;
wire    ap_block_pp5_stage0;
wire   [63:0] extLd1_fu_1015_p1;
wire    ap_CS_fsm_state101;
wire   [63:0] sum9_cast_fu_1029_p1;
wire   [63:0] tmp_23_cast_fu_1093_p1;
wire   [63:0] sum_cast_fu_1117_p1;
wire   [63:0] sum2_cast_fu_1137_p1;
reg   [63:0] count_fu_108;
wire   [63:0] count_4_fu_743_p2;
reg   [63:0] count_2_fu_144;
wire   [63:0] count_5_fu_781_p2;
wire    ap_block_pp6_stage3;
wire    ap_CS_fsm_pp6_stage2;
wire    ap_block_pp6_stage2;
wire   [21:0] grp_fu_801_p0;
wire   [2:0] tmp_42_fu_815_p1;
wire   [63:0] bound_fu_986_p0;
wire   [63:0] bound_fu_986_p1;
wire   [19:0] tmp_48_fu_1020_p1;
wire   [19:0] sum9_fu_1024_p2;
wire   [0:0] tmp_36_fu_1045_p2;
wire   [63:0] i_29_fu_1058_p2;
wire  signed [19:0] tmp_45_fu_1076_p1;
wire  signed [12:0] grp_fu_1147_p3;
wire  signed [19:0] tmp_49_fu_1108_p1;
wire   [19:0] sum_fu_1112_p2;
wire   [19:0] tmp_25_fu_1122_p2;
wire   [19:0] tmp1_fu_1127_p2;
wire   [19:0] sum2_fu_1132_p2;
wire  signed [12:0] grp_fu_1147_p0;
wire   [12:0] grp_fu_1147_p2;
reg    grp_fu_796_ap_start;
wire    grp_fu_796_ap_done;
reg    grp_fu_801_ap_start;
wire    grp_fu_801_ap_done;
reg   [99:0] ap_NS_fsm;
wire    ap_block_pp6_stage1_subdone;
wire    ap_block_state107_pp6_stage2_iter0;
wire    ap_block_state111_pp6_stage2_iter1;
wire    ap_block_pp6_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
wire   [127:0] bound_fu_986_p00;
wire   [127:0] bound_fu_986_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 100'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 grp_k2c_idx2sub_fu_687_ap_start_reg = 1'b0;
#0 grp_k2c_sub2idx_fu_699_ap_start_reg = 1'b0;
end

k2c_dot_1_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
permA_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(permA_address0),
    .ce0(permA_ce0),
    .we0(permA_we0),
    .d0(permA_d0),
    .q0(permA_q0)
);

k2c_dot_1_permB #(
    .DataWidth( 2 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
permB_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(permB_address0),
    .ce0(permB_ce0),
    .we0(permB_we0),
    .d0(permB_d0),
    .q0(permB_q0)
);

k2c_dot_1_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
freeA_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(freeA_address0),
    .ce0(freeA_ce0),
    .we0(freeA_we0),
    .d0(i_reg_484),
    .q0(freeA_q0)
);

k2c_dot_1_permB #(
    .DataWidth( 2 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
freeB_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(freeB_address0),
    .ce0(freeB_ce0),
    .we0(freeB_we0),
    .d0(i_1_reg_496),
    .q0(freeB_q0)
);

k2c_dot_1_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
newshpA_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(newshpA_address0),
    .ce0(newshpA_ce0),
    .we0(newshpA_we0),
    .d0(Ar_shape_q0),
    .q0(newshpA_q0)
);

k2c_dot_1_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
newshpB_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(newshpB_address0),
    .ce0(newshpB_ce0),
    .we0(newshpB_we0),
    .d0(B_shape_q0),
    .q0(newshpB_q0)
);

k2c_dot_1_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
Asub_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Asub_address0),
    .ce0(Asub_ce0),
    .we0(Asub_we0),
    .d0(Asub_d0),
    .q0(Asub_q0)
);

k2c_dot_1_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
Bsub_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Bsub_address0),
    .ce0(Bsub_ce0),
    .we0(Bsub_we0),
    .d0(Bsub_d0),
    .q0(Bsub_q0)
);

k2c_idx2sub grp_k2c_idx2sub_fu_687(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_idx2sub_fu_687_ap_start),
    .ap_done(grp_k2c_idx2sub_fu_687_ap_done),
    .ap_idle(grp_k2c_idx2sub_fu_687_ap_idle),
    .ap_ready(grp_k2c_idx2sub_fu_687_ap_ready),
    .idx(grp_k2c_idx2sub_fu_687_idx),
    .sub_address0(grp_k2c_idx2sub_fu_687_sub_address0),
    .sub_ce0(grp_k2c_idx2sub_fu_687_sub_ce0),
    .sub_we0(grp_k2c_idx2sub_fu_687_sub_we0),
    .sub_d0(grp_k2c_idx2sub_fu_687_sub_d0),
    .shape_address0(grp_k2c_idx2sub_fu_687_shape_address0),
    .shape_ce0(grp_k2c_idx2sub_fu_687_shape_ce0),
    .shape_q0(grp_k2c_idx2sub_fu_687_shape_q0),
    .ndim(grp_k2c_idx2sub_fu_687_ndim)
);

k2c_sub2idx grp_k2c_sub2idx_fu_699(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_sub2idx_fu_699_ap_start),
    .ap_done(grp_k2c_sub2idx_fu_699_ap_done),
    .ap_idle(grp_k2c_sub2idx_fu_699_ap_idle),
    .ap_ready(grp_k2c_sub2idx_fu_699_ap_ready),
    .sub_address0(grp_k2c_sub2idx_fu_699_sub_address0),
    .sub_ce0(grp_k2c_sub2idx_fu_699_sub_ce0),
    .sub_q0(grp_k2c_sub2idx_fu_699_sub_q0),
    .shape_address0(grp_k2c_sub2idx_fu_699_shape_address0),
    .shape_ce0(grp_k2c_sub2idx_fu_699_shape_ce0),
    .shape_q0(grp_k2c_sub2idx_fu_699_shape_q0),
    .ndim(grp_k2c_sub2idx_fu_699_ndim),
    .ap_return(grp_k2c_sub2idx_fu_699_ap_return)
);

face_classifier_cdEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_cdEe_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_24_reg_664),
    .din1(tmp_27_reg_1544),
    .ce(1'b1),
    .dout(grp_fu_708_p2)
);

face_classifier_ceOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_ceOg_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(fwork_load_reg_1534),
    .din1(fwork_load_2_reg_1539),
    .ce(1'b1),
    .dout(grp_fu_714_p2)
);

face_classifier_cfYi #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
face_classifier_cfYi_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_796_ap_start),
    .done(grp_fu_796_ap_done),
    .din0(Ar_numel_read),
    .din1(Ar_shape_q0),
    .ce(1'b1),
    .dout(grp_fu_796_p2)
);

face_classifier_cg8j #(
    .ID( 1 ),
    .NUM_STAGE( 26 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
face_classifier_cg8j_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_801_ap_start),
    .done(grp_fu_801_ap_done),
    .din0(grp_fu_801_p0),
    .din1(B_shape_q0),
    .ce(1'b1),
    .dout(grp_fu_801_p2)
);

face_classifier_chbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
face_classifier_chbi_U16(
    .din0(grp_fu_1147_p0),
    .din1(tmp_41_reg_1263),
    .din2(grp_fu_1147_p2),
    .dout(grp_fu_1147_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state73) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state72)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state73))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state73);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state72)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state76) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state75)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state76))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state76);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state75)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state79) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state78)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state79))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state79);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state78)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state82) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state81)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state82)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state82);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((1'b1 == ap_CS_fsm_state81)) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state86) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state85)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state86)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state86);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end else if ((1'b1 == ap_CS_fsm_state85)) begin
            ap_enable_reg_pp4_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_condition_pp5_exit_iter0_state92) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if (((grp_k2c_idx2sub_fu_687_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state91))) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state92)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state92);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end else if (((grp_k2c_idx2sub_fu_687_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state91))) begin
            ap_enable_reg_pp5_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_condition_pp6_exit_iter0_state105) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if (((exitcond_flatten_fu_1034_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state104))) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage3_subdone) & (1'b1 == ap_condition_pp6_exit_iter0_state105) & (1'b1 == ap_CS_fsm_pp6_stage3))) begin
            ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state105);
        end else if (((1'b0 == ap_block_pp6_stage3_subdone) & (1'b1 == ap_CS_fsm_pp6_stage3))) begin
            ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
        end else if (((exitcond_flatten_fu_1034_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state104))) begin
            ap_enable_reg_pp6_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_idx2sub_fu_687_ap_start_reg <= 1'b0;
    end else begin
        if ((((exitcond4_fu_962_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state97)) | ((exitcond5_fu_932_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state90)))) begin
            grp_k2c_idx2sub_fu_687_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_idx2sub_fu_687_ap_ready == 1'b1)) begin
            grp_k2c_idx2sub_fu_687_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_sub2idx_fu_699_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state95))) begin
            grp_k2c_sub2idx_fu_699_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_sub2idx_fu_699_ap_ready == 1'b1)) begin
            grp_k2c_sub2idx_fu_699_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_771_p2 == 1'd0) & (exitcond7_fu_759_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        count_2_fu_144 <= count_5_fu_781_p2;
    end else if (((exitcond6_fu_723_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        count_2_fu_144 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_18_fu_734_p2 == 1'd0) & (exitcond6_fu_723_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        count_fu_108 <= count_4_fu_743_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        count_fu_108 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        i_10_reg_585 <= 64'd0;
    end else if (((grp_k2c_sub2idx_fu_699_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state96))) begin
        i_10_reg_585 <= i_27_reg_1391;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_932_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state90))) begin
        i_11_reg_609 <= 19'd0;
    end else if (((exitcond9_fu_992_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state99))) begin
        i_11_reg_609 <= i_28_reg_1434;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_fu_759_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        i_1_reg_496 <= i_22_fu_765_p2;
    end else if (((exitcond6_fu_723_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_1_reg_496 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_fu_834_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_4_reg_508 <= i_21_fu_839_p2;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        i_4_reg_508 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        i_5_reg_519 <= i_20_cast_reg_1273;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_s_fu_849_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_5_reg_519 <= i_23_fu_860_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        i_7_reg_540 <= 2'd1;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond1_reg_1321 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_7_reg_540 <= i_24_reg_1330;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        i_8_reg_563 <= 3'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond2_fu_899_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_8_reg_563 <= i_25_fu_904_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        i_9_reg_574 <= 2'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (exitcond3_fu_910_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        i_9_reg_574 <= i_26_fu_916_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_723_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i_reg_484 <= i_20_fu_728_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_484 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        i_s_reg_642 <= tmp_20_mid2_v_v_reg_1495;
    end else if (((exitcond4_fu_962_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state97))) begin
        i_s_reg_642 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        indvar_flatten_reg_631 <= indvar_flatten_next_reg_1485;
    end else if (((exitcond4_fu_962_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state97))) begin
        indvar_flatten_reg_631 <= 128'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        j_2_reg_528 <= 64'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_s_fu_849_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j_2_reg_528 <= j_fu_854_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        j_3_reg_552 <= 1'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond1_fu_866_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        j_3_reg_552 <= j_6_fu_883_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (exitcond10_fu_951_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        j_4_reg_598 <= j_1_fu_956_p2;
    end else if (((grp_k2c_idx2sub_fu_687_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state91))) begin
        j_4_reg_598 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state103_on_subcall_done) & (1'b1 == ap_CS_fsm_state103))) begin
        j_5_reg_620 <= j_7_reg_1457;
    end else if (((grp_k2c_idx2sub_fu_687_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state98))) begin
        j_5_reg_620 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        j_s_reg_653 <= j_8_fu_1142_p2;
    end else if (((exitcond4_fu_962_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state97))) begin
        j_s_reg_653 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (exitcond_reg_1515 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        k_reg_676 <= k_2_reg_1519;
    end else if (((exitcond_flatten_fu_1034_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state104))) begin
        k_reg_676 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage3_11001) & (exitcond_reg_1515_pp6_iter1_reg == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage3))) begin
        tmp_24_reg_664 <= grp_fu_708_p2;
    end else if (((exitcond_flatten_fu_1034_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state104))) begin
        tmp_24_reg_664 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        Ar_shape_load_reg_1226 <= Ar_shape_q0;
        tmp_37_reg_1232 <= tmp_37_fu_792_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_962_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state97))) begin
        B_array_addr_reg_1444 <= i_11_cast5_fu_974_p1;
        i_11_cast5_reg_1439[18 : 0] <= i_11_cast5_fu_974_p1[18 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_1034_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state104))) begin
        C_array_addr_reg_1510 <= tmp_23_cast_fu_1093_p1;
        j_mid2_reg_1490 <= j_mid2_fu_1050_p3;
        tmp_20_mid2_v_v_reg_1495 <= tmp_20_mid2_v_v_fu_1064_p3;
        tmp_21_mid2_reg_1500 <= tmp_21_mid2_fu_1080_p2;
        tmp_46_reg_1505 <= tmp_46_fu_1085_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        axesA_load_reg_1186 <= axesA_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_962_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state97))) begin
        bound_reg_1449 <= bound_fu_986_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        exitcond10_reg_1407 <= exitcond10_fu_951_p2;
        exitcond10_reg_1407_pp5_iter1_reg <= exitcond10_reg_1407;
        j_4_cast_reg_1402[2 : 0] <= j_4_cast_fu_946_p1[2 : 0];
        j_4_cast_reg_1402_pp5_iter1_reg[2 : 0] <= j_4_cast_reg_1402[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond1_reg_1321 <= exitcond1_fu_866_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        exitcond2_reg_1345 <= exitcond2_fu_899_p2;
        exitcond2_reg_1345_pp3_iter1_reg <= exitcond2_reg_1345;
        i_8_cast_reg_1340[2 : 0] <= i_8_cast_fu_894_p1[2 : 0];
        i_8_cast_reg_1340_pp3_iter1_reg[2 : 0] <= i_8_cast_reg_1340[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        exitcond3_reg_1364 <= exitcond3_fu_910_p2;
        exitcond3_reg_1364_pp4_iter1_reg <= exitcond3_reg_1364;
        i_9_cast6_reg_1373_pp4_iter1_reg[1 : 0] <= i_9_cast6_reg_1373[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond8_reg_1283 <= exitcond8_fu_834_p2;
        i_4_cast_reg_1278[2 : 0] <= i_4_cast_fu_829_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        exitcond_reg_1515 <= exitcond_fu_1097_p2;
        exitcond_reg_1515_pp6_iter1_reg <= exitcond_reg_1515;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        free_axesA_reg_1247 <= grp_fu_796_p2;
        free_axesB_reg_1252 <= grp_fu_801_p2;
        i_19_reg_1268 <= i_19_fu_818_p2;
        i_20_cast_reg_1273 <= i_20_cast_fu_823_p2;
        tmp_40_reg_1258 <= tmp_40_fu_807_p1;
        tmp_41_reg_1263 <= tmp_41_fu_811_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage1_11001) & (exitcond_reg_1515 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage1) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
        fwork_load_2_reg_1539 <= fwork_q1;
        fwork_load_reg_1534 <= fwork_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond1_fu_866_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_24_reg_1330 <= i_24_fu_877_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        i_27_reg_1391 <= i_27_fu_937_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        i_28_reg_1434 <= i_28_fu_968_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_5_cast_reg_1297[2 : 0] <= i_5_cast_fu_845_p1[2 : 0];
        tmp_s_reg_1302 <= tmp_s_fu_849_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (exitcond3_fu_910_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        i_9_cast6_reg_1373[1 : 0] <= i_9_cast6_fu_922_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond9_fu_992_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state99))) begin
        ifzero_reg_1472 <= ifzero_fu_1009_p2;
        j_5_cast4_reg_1462[1 : 0] <= j_5_cast4_fu_1004_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        indvar_flatten_next_reg_1485 <= indvar_flatten_next_fu_1039_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        j_7_reg_1457 <= j_7_fu_998_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        k_2_reg_1519 <= k_2_fu_1102_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage3_11001) & (exitcond_reg_1515 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage3))) begin
        tmp_27_reg_1544 <= grp_fu_714_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_932_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state90))) begin
        tmp_43_reg_1396 <= tmp_43_fu_943_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        Ar_array_ce0 = 1'b1;
    end else begin
        Ar_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        Ar_shape_address0 = permA_q0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        Ar_shape_address0 = axesA_load_reg_1186;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        Ar_shape_address0 = grp_k2c_idx2sub_fu_687_shape_address0;
    end else begin
        Ar_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        Ar_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        Ar_shape_ce0 = grp_k2c_idx2sub_fu_687_shape_ce0;
    end else begin
        Ar_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        Asub_address0 = j_5_cast4_reg_1462;
    end else if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        Asub_address0 = permA_q0;
    end else if (((ifzero_reg_1472 == 1'd1) & (1'b1 == ap_CS_fsm_state103))) begin
        Asub_address0 = grp_k2c_sub2idx_fu_699_sub_address0;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        Asub_address0 = grp_k2c_idx2sub_fu_687_sub_address0;
    end else begin
        Asub_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state101) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)))) begin
        Asub_ce0 = 1'b1;
    end else if (((ifzero_reg_1472 == 1'd1) & (1'b1 == ap_CS_fsm_state103))) begin
        Asub_ce0 = grp_k2c_sub2idx_fu_699_sub_ce0;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        Asub_ce0 = grp_k2c_idx2sub_fu_687_sub_ce0;
    end else begin
        Asub_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        Asub_d0 = Bsub_q0;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        Asub_d0 = grp_k2c_idx2sub_fu_687_sub_d0;
    end else begin
        Asub_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        Asub_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        Asub_we0 = grp_k2c_idx2sub_fu_687_sub_we0;
    end else begin
        Asub_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        B_array_ce0 = 1'b1;
    end else begin
        B_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        B_shape_address0 = extLd_fu_927_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        B_shape_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        B_shape_address0 = grp_k2c_idx2sub_fu_687_shape_address0;
    end else begin
        B_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        B_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        B_shape_ce0 = grp_k2c_idx2sub_fu_687_shape_ce0;
    end else begin
        B_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        Bsub_address0 = extLd1_fu_1015_p1;
    end else if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter2 == 1'b1))) begin
        Bsub_address0 = j_4_cast_reg_1402_pp5_iter1_reg;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        Bsub_address0 = grp_k2c_sub2idx_fu_699_sub_address0;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        Bsub_address0 = grp_k2c_idx2sub_fu_687_sub_address0;
    end else begin
        Bsub_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state100) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter2 == 1'b1)))) begin
        Bsub_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        Bsub_ce0 = grp_k2c_sub2idx_fu_699_sub_ce0;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        Bsub_ce0 = grp_k2c_idx2sub_fu_687_sub_ce0;
    end else begin
        Bsub_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter2 == 1'b1))) begin
        Bsub_d0 = Asub_q0;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        Bsub_d0 = grp_k2c_idx2sub_fu_687_sub_d0;
    end else begin
        Bsub_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (exitcond10_reg_1407_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1))) begin
        Bsub_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        Bsub_we0 = grp_k2c_idx2sub_fu_687_sub_we0;
    end else begin
        Bsub_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage3) & (1'b0 == ap_block_pp6_stage3))) begin
        C_array_address0 = C_array_addr_reg_1510;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        C_array_address0 = tmp_23_cast_fu_1093_p1;
    end else begin
        C_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state104) | ((1'b0 == ap_block_pp6_stage3_11001) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage3)))) begin
        C_array_ce0 = 1'b1;
    end else begin
        C_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage3) & (1'b0 == ap_block_pp6_stage3))) begin
        C_array_d0 = grp_fu_708_p2;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        C_array_d0 = 32'd0;
    end else begin
        C_array_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp6_stage3_11001) & (exitcond_reg_1515_pp6_iter1_reg == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage3)) | ((exitcond_flatten_fu_1034_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state104)))) begin
        C_array_we0 = 1'b1;
    end else begin
        C_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond8_fu_834_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state73 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state73 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_s_fu_849_p2 == 1'd0)) begin
        ap_condition_pp1_exit_iter0_state76 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state76 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond1_fu_866_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state79 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state79 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond2_fu_899_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state82 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state82 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond3_fu_910_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state86 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state86 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond10_fu_951_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state92 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state92 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_fu_1097_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state105 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state105 = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond_flatten_fu_1034_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state104)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (exitcond1_reg_1321 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_i_7_phi_fu_544_p4 = i_24_reg_1330;
    end else begin
        ap_phi_mux_i_7_phi_fu_544_p4 = i_7_reg_540;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (exitcond_reg_1515 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        ap_phi_mux_k_phi_fu_680_p4 = k_2_reg_1519;
    end else begin
        ap_phi_mux_k_phi_fu_680_p4 = k_reg_676;
    end
end

always @ (*) begin
    if (((exitcond_flatten_fu_1034_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state104))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        axesA_address0 = j_2_reg_528;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        axesA_address0 = 64'd0;
    end else begin
        axesA_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        axesA_ce0 = 1'b1;
    end else begin
        axesA_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        freeA_address0 = i_4_cast_fu_829_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        freeA_address0 = count_fu_108;
    end else begin
        freeA_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        freeA_ce0 = 1'b1;
    end else begin
        freeA_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_18_fu_734_p2 == 1'd0) & (exitcond6_fu_723_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        freeA_we0 = 1'b1;
    end else begin
        freeA_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        freeB_address0 = j_3_cast_fu_872_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        freeB_address0 = count_2_fu_144;
    end else begin
        freeB_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        freeB_ce0 = 1'b1;
    end else begin
        freeB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_771_p2 == 1'd0) & (exitcond7_fu_759_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        freeB_we0 = 1'b1;
    end else begin
        freeB_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        fwork_address0 = sum_cast_fu_1117_p1;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        fwork_address0 = sum9_cast_fu_1029_p1;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        fwork_address0 = grp_k2c_sub2idx_fu_699_ap_return;
    end else begin
        fwork_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state103_on_subcall_done) & (1'b1 == ap_CS_fsm_state103)) | ((grp_k2c_sub2idx_fu_699_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state96)) | ((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0)))) begin
        fwork_ce0 = 1'b1;
    end else begin
        fwork_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        fwork_ce1 = 1'b1;
    end else begin
        fwork_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        fwork_d0 = B_array_q0;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        fwork_d0 = Ar_array_q0;
    end else begin
        fwork_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state103_on_subcall_done) & (ifzero_reg_1472 == 1'd1) & (1'b1 == ap_CS_fsm_state103)) | ((grp_k2c_sub2idx_fu_699_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state96)))) begin
        fwork_we0 = 1'b1;
    end else begin
        fwork_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_796_ap_start = 1'b1;
    end else begin
        grp_fu_796_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_801_ap_start = 1'b1;
    end else begin
        grp_fu_801_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        grp_k2c_idx2sub_fu_687_idx = i_11_cast5_reg_1439;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        grp_k2c_idx2sub_fu_687_idx = i_10_reg_585;
    end else begin
        grp_k2c_idx2sub_fu_687_idx = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        grp_k2c_idx2sub_fu_687_ndim = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        grp_k2c_idx2sub_fu_687_ndim = Ar_ndim_read;
    end else begin
        grp_k2c_idx2sub_fu_687_ndim = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        grp_k2c_idx2sub_fu_687_shape_q0 = B_shape_q0;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        grp_k2c_idx2sub_fu_687_shape_q0 = Ar_shape_q0;
    end else begin
        grp_k2c_idx2sub_fu_687_shape_q0 = 'bx;
    end
end

always @ (*) begin
    if (((ifzero_reg_1472 == 1'd1) & (1'b1 == ap_CS_fsm_state103))) begin
        grp_k2c_sub2idx_fu_699_ndim = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        grp_k2c_sub2idx_fu_699_ndim = Ar_ndim_read;
    end else begin
        grp_k2c_sub2idx_fu_699_ndim = 'bx;
    end
end

always @ (*) begin
    if (((ifzero_reg_1472 == 1'd1) & (1'b1 == ap_CS_fsm_state103))) begin
        grp_k2c_sub2idx_fu_699_shape_q0 = newshpB_q0;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        grp_k2c_sub2idx_fu_699_shape_q0 = newshpA_q0;
    end else begin
        grp_k2c_sub2idx_fu_699_shape_q0 = 'bx;
    end
end

always @ (*) begin
    if (((ifzero_reg_1472 == 1'd1) & (1'b1 == ap_CS_fsm_state103))) begin
        grp_k2c_sub2idx_fu_699_sub_q0 = Asub_q0;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        grp_k2c_sub2idx_fu_699_sub_q0 = Bsub_q0;
    end else begin
        grp_k2c_sub2idx_fu_699_sub_q0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        newshpA_address0 = i_8_cast_reg_1340_pp3_iter1_reg;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        newshpA_address0 = grp_k2c_sub2idx_fu_699_shape_address0;
    end else begin
        newshpA_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        newshpA_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        newshpA_ce0 = grp_k2c_sub2idx_fu_699_shape_ce0;
    end else begin
        newshpA_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond2_reg_1345_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        newshpA_we0 = 1'b1;
    end else begin
        newshpA_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        newshpB_address0 = i_9_cast6_reg_1373_pp4_iter1_reg;
    end else if (((ifzero_reg_1472 == 1'd1) & (1'b1 == ap_CS_fsm_state103))) begin
        newshpB_address0 = grp_k2c_sub2idx_fu_699_shape_address0;
    end else begin
        newshpB_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        newshpB_ce0 = 1'b1;
    end else if (((ifzero_reg_1472 == 1'd1) & (1'b1 == ap_CS_fsm_state103))) begin
        newshpB_ce0 = grp_k2c_sub2idx_fu_699_shape_ce0;
    end else begin
        newshpB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (exitcond3_reg_1364_pp4_iter1_reg == 1'd0) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        newshpB_we0 = 1'b1;
    end else begin
        newshpB_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        permA_address0 = j_4_cast_fu_946_p1;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        permA_address0 = i_8_cast_fu_894_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        permA_address0 = i_5_cast_reg_1297;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        permA_address0 = i_4_cast_reg_1278;
    end else begin
        permA_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        permA_ce0 = 1'b1;
    end else begin
        permA_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        permA_d0 = axesA_q0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        permA_d0 = freeA_q0;
    end else begin
        permA_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (tmp_s_reg_1302 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((exitcond8_reg_1283 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        permA_we0 = 1'b1;
    end else begin
        permA_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        permB_address0 = j_5_cast4_fu_1004_p1;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        permB_address0 = i_9_cast6_fu_922_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        permB_address0 = i_7_cast7_fu_889_p1;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        permB_address0 = 64'd0;
    end else begin
        permB_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state99) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        permB_ce0 = 1'b1;
    end else begin
        permB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        permB_d0 = freeB_q0;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        permB_d0 = 2'd0;
    end else begin
        permB_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state78) | ((1'b0 == ap_block_pp2_stage0_11001) & (exitcond1_reg_1321 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        permB_we0 = 1'b1;
    end else begin
        permB_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond6_fu_723_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((exitcond7_fu_759_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond8_fu_834_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond8_fu_834_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (tmp_s_fu_849_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (tmp_s_fu_849_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((1'b0 == ap_block_pp2_stage0_subdone) & (exitcond1_fu_866_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (exitcond1_fu_866_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (exitcond2_fu_899_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)) & ~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (exitcond2_fu_899_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone) & (exitcond3_fu_910_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1)) & ~((ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if ((((ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter2 == 1'b1)) | ((ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone) & (exitcond3_fu_910_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            if (((exitcond5_fu_932_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state90))) begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end
        end
        ap_ST_fsm_state91 : begin
            if (((grp_k2c_idx2sub_fu_687_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state91))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((ap_enable_reg_pp5_iter1 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone) & (exitcond10_fu_951_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1)) & ~((ap_enable_reg_pp5_iter1 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((ap_enable_reg_pp5_iter1 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter2 == 1'b1)) | ((ap_enable_reg_pp5_iter1 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone) & (exitcond10_fu_951_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            if (((grp_k2c_sub2idx_fu_699_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state96))) begin
                ap_NS_fsm = ap_ST_fsm_state90;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state96;
            end
        end
        ap_ST_fsm_state97 : begin
            if (((exitcond4_fu_962_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state97))) begin
                ap_NS_fsm = ap_ST_fsm_state104;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end
        end
        ap_ST_fsm_state98 : begin
            if (((grp_k2c_idx2sub_fu_687_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state98))) begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end
        end
        ap_ST_fsm_state99 : begin
            if (((exitcond9_fu_992_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state99))) begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state100;
            end
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            if (((ifzero_reg_1472 == 1'd0) & (1'b1 == ap_CS_fsm_state101))) begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            if (((1'b0 == ap_block_state103_on_subcall_done) & (1'b1 == ap_CS_fsm_state103))) begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end
        end
        ap_ST_fsm_state104 : begin
            if (((exitcond_flatten_fu_1034_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state104))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter1 == 1'b0) & (exitcond_fu_1097_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1)) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage1;
            end else if (((1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter1 == 1'b0) & (exitcond_fu_1097_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state113;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_pp6_stage1 : begin
            if ((1'b0 == ap_block_pp6_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage1;
            end
        end
        ap_ST_fsm_pp6_stage2 : begin
            if ((1'b0 == ap_block_pp6_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage2;
            end
        end
        ap_ST_fsm_pp6_stage3 : begin
            if ((~((1'b0 == ap_block_pp6_stage3_subdone) & (ap_enable_reg_pp6_iter0 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage3)) & (1'b0 == ap_block_pp6_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if (((1'b0 == ap_block_pp6_stage3_subdone) & (ap_enable_reg_pp6_iter0 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage3))) begin
                ap_NS_fsm = ap_ST_fsm_state113;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage3;
            end
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Ar_array_address0 = i_10_reg_585;

assign B_array_address0 = B_array_addr_reg_1444;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_pp6_stage1 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_pp6_stage2 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_pp6_stage3 = ap_CS_fsm[32'd98];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd89];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage3_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state103_on_subcall_done = ((grp_k2c_sub2idx_fu_699_ap_done == 1'b0) & (ifzero_reg_1472 == 1'd1));
end

assign ap_block_state105_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp6_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp6_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp6_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state110_pp6_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp6_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp6_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign bound_fu_986_p0 = bound_fu_986_p00;

assign bound_fu_986_p00 = free_axesB_reg_1252;

assign bound_fu_986_p1 = bound_fu_986_p10;

assign bound_fu_986_p10 = free_axesA_reg_1247;

assign bound_fu_986_p2 = (bound_fu_986_p0 * bound_fu_986_p1);

assign count_4_fu_743_p2 = (count_fu_108 + 64'd1);

assign count_5_fu_781_p2 = (count_2_fu_144 + 64'd1);

assign exitcond10_fu_951_p2 = ((j_4_cast_fu_946_p1 == Ar_ndim_read) ? 1'b1 : 1'b0);

assign exitcond1_fu_866_p2 = ((ap_phi_mux_i_7_phi_fu_544_p4 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond2_fu_899_p2 = ((i_8_cast_fu_894_p1 == Ar_ndim_read) ? 1'b1 : 1'b0);

assign exitcond3_fu_910_p2 = ((i_9_reg_574 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond4_fu_962_p2 = ((i_11_reg_609 == 19'd262200) ? 1'b1 : 1'b0);

assign exitcond5_fu_932_p2 = ((i_10_reg_585 == Ar_numel_read) ? 1'b1 : 1'b0);

assign exitcond6_fu_723_p2 = ((i_reg_484 == Ar_ndim_read) ? 1'b1 : 1'b0);

assign exitcond7_fu_759_p2 = ((i_1_reg_496 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond8_fu_834_p2 = ((i_4_cast_fu_829_p1 == i_19_reg_1268) ? 1'b1 : 1'b0);

assign exitcond9_fu_992_p2 = ((j_5_reg_620 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_1034_p2 = ((indvar_flatten_reg_631 == bound_reg_1449) ? 1'b1 : 1'b0);

assign exitcond_fu_1097_p2 = ((ap_phi_mux_k_phi_fu_680_p4 == Ar_shape_load_reg_1226) ? 1'b1 : 1'b0);

assign extLd1_fu_1015_p1 = permB_q0;

assign extLd_fu_927_p1 = permB_q0;

assign fwork_address1 = sum2_cast_fu_1137_p1;

assign grp_fu_1147_p0 = tmp_20_mid2_v_v_fu_1064_p3[12:0];

assign grp_fu_1147_p2 = j_mid2_fu_1050_p3[12:0];

assign grp_fu_801_p0 = 64'd262200;

assign grp_k2c_idx2sub_fu_687_ap_start = grp_k2c_idx2sub_fu_687_ap_start_reg;

assign grp_k2c_sub2idx_fu_699_ap_start = grp_k2c_sub2idx_fu_699_ap_start_reg;

assign i_11_cast5_fu_974_p1 = i_11_reg_609;

assign i_19_fu_818_p2 = ($signed(64'd18446744073709551615) + $signed(Ar_ndim_read));

assign i_20_cast_fu_823_p2 = ($signed(3'd7) + $signed(tmp_42_fu_815_p1));

assign i_20_fu_728_p2 = (i_reg_484 + 64'd1);

assign i_21_fu_839_p2 = (i_4_reg_508 + 3'd1);

assign i_22_fu_765_p2 = (i_1_reg_496 + 2'd1);

assign i_23_fu_860_p2 = (i_5_reg_519 + 3'd1);

assign i_24_fu_877_p2 = (ap_phi_mux_i_7_phi_fu_544_p4 + 2'd1);

assign i_25_fu_904_p2 = (i_8_reg_563 + 3'd1);

assign i_26_fu_916_p2 = (i_9_reg_574 + 2'd1);

assign i_27_fu_937_p2 = (i_10_reg_585 + 64'd1);

assign i_28_fu_968_p2 = (i_11_reg_609 + 19'd1);

assign i_29_fu_1058_p2 = (64'd1 + i_s_reg_642);

assign i_4_cast_fu_829_p1 = i_4_reg_508;

assign i_5_cast_fu_845_p1 = i_5_reg_519;

assign i_7_cast7_fu_889_p1 = i_7_reg_540;

assign i_8_cast_fu_894_p1 = i_8_reg_563;

assign i_9_cast6_fu_922_p1 = i_9_reg_574;

assign ifzero_fu_1009_p2 = ((j_7_fu_998_p2 == 2'd2) ? 1'b1 : 1'b0);

assign indvar_flatten_next_fu_1039_p2 = (indvar_flatten_reg_631 + 128'd1);

assign j_1_fu_956_p2 = (j_4_reg_598 + 3'd1);

assign j_3_cast_fu_872_p1 = j_3_reg_552;

assign j_4_cast_fu_946_p1 = j_4_reg_598;

assign j_5_cast4_fu_1004_p1 = j_5_reg_620;

assign j_6_fu_883_p2 = (j_3_reg_552 ^ 1'd1);

assign j_7_fu_998_p2 = (j_5_reg_620 + 2'd1);

assign j_8_fu_1142_p2 = (j_mid2_reg_1490 + 64'd1);

assign j_fu_854_p2 = (j_2_reg_528 + 64'd1);

assign j_mid2_fu_1050_p3 = ((tmp_36_fu_1045_p2[0:0] === 1'b1) ? j_s_reg_653 : 64'd0);

assign k_2_fu_1102_p2 = (ap_phi_mux_k_phi_fu_680_p4 + 64'd1);

assign sum2_cast_fu_1137_p1 = sum2_fu_1132_p2;

assign sum2_fu_1132_p2 = (tmp1_fu_1127_p2 + tmp_46_reg_1505);

assign sum9_cast_fu_1029_p1 = sum9_fu_1024_p2;

assign sum9_fu_1024_p2 = (tmp_48_fu_1020_p1 + tmp_43_reg_1396);

assign sum_cast_fu_1117_p1 = sum_fu_1112_p2;

assign sum_fu_1112_p2 = ($signed(tmp_49_fu_1108_p1) + $signed(tmp_21_mid2_reg_1500));

assign tmp1_fu_1127_p2 = (tmp_25_fu_1122_p2 + tmp_43_reg_1396);

assign tmp_18_fu_734_p2 = ((i_reg_484 == axesA_load_reg_1186) ? 1'b1 : 1'b0);

assign tmp_20_mid2_v_v_fu_1064_p3 = ((tmp_36_fu_1045_p2[0:0] === 1'b1) ? i_s_reg_642 : i_29_fu_1058_p2);

assign tmp_21_mid2_fu_1080_p2 = ($signed(tmp_37_reg_1232) * $signed(tmp_45_fu_1076_p1));

assign tmp_23_cast_fu_1093_p1 = $unsigned(grp_fu_1147_p3);

assign tmp_25_fu_1122_p2 = ($signed(tmp_49_fu_1108_p1) * $signed(tmp_40_reg_1258));

assign tmp_36_fu_1045_p2 = ((j_s_reg_653 < free_axesB_reg_1252) ? 1'b1 : 1'b0);

assign tmp_37_fu_792_p1 = Ar_shape_q0[19:0];

assign tmp_40_fu_807_p1 = grp_fu_801_p2[19:0];

assign tmp_41_fu_811_p1 = grp_fu_801_p2[12:0];

assign tmp_42_fu_815_p1 = Ar_ndim_read[2:0];

assign tmp_43_fu_943_p1 = Ar_numel_read[19:0];

assign tmp_45_fu_1076_p1 = tmp_20_mid2_v_v_fu_1064_p3[19:0];

assign tmp_46_fu_1085_p1 = j_mid2_fu_1050_p3[19:0];

assign tmp_48_fu_1020_p1 = grp_k2c_sub2idx_fu_699_ap_return[19:0];

assign tmp_49_fu_1108_p1 = ap_phi_mux_k_phi_fu_680_p4[19:0];

assign tmp_fu_771_p2 = ((i_1_reg_496 == 2'd0) ? 1'b1 : 1'b0);

assign tmp_s_fu_849_p2 = ((i_5_cast_fu_845_p1 < Ar_ndim_read) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    i_4_cast_reg_1278[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_5_cast_reg_1297[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_8_cast_reg_1340[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_8_cast_reg_1340_pp3_iter1_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_9_cast6_reg_1373[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    i_9_cast6_reg_1373_pp4_iter1_reg[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    j_4_cast_reg_1402[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    j_4_cast_reg_1402_pp5_iter1_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_11_cast5_reg_1439[63:19] <= 45'b000000000000000000000000000000000000000000000;
    j_5_cast4_reg_1462[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
end

endmodule //k2c_dot_1
