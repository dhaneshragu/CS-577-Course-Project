// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module generic_tanh_float_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        t_in,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [31:0] t_in;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] expx_reg_58;
wire   [31:0] grp_fu_109_p2;
reg   [31:0] reg_160;
reg   [0:0] tmp_s_reg_344;
reg   [0:0] tmp_s_reg_344_pp0_iter2_reg;
reg   [0:0] tmp_54_reg_348;
reg   [0:0] tmp_54_reg_348_pp0_iter2_reg;
reg   [0:0] or_cond_reg_352;
reg   [0:0] or_cond_reg_352_pp0_iter2_reg;
reg   [0:0] tmp_18_reg_356;
reg   [0:0] tmp_18_reg_356_pp0_iter2_reg;
reg   [0:0] tmp_58_reg_360;
reg   [0:0] tmp_58_reg_360_pp0_iter2_reg;
wire   [31:0] grp_fu_126_p2;
reg   [31:0] reg_165;
reg   [0:0] tmp_s_reg_344_pp0_iter4_reg;
reg   [0:0] tmp_54_reg_348_pp0_iter4_reg;
reg   [0:0] or_cond_reg_352_pp0_iter4_reg;
reg   [0:0] tmp_18_reg_356_pp0_iter4_reg;
reg   [0:0] tmp_58_reg_360_pp0_iter4_reg;
reg   [0:0] p_Result_s_reg_339;
reg   [0:0] p_Result_s_reg_339_pp0_iter1_reg;
reg   [0:0] p_Result_s_reg_339_pp0_iter2_reg;
reg   [0:0] p_Result_s_reg_339_pp0_iter3_reg;
reg   [0:0] p_Result_s_reg_339_pp0_iter4_reg;
reg   [0:0] p_Result_s_reg_339_pp0_iter5_reg;
wire   [0:0] tmp_s_fu_221_p2;
reg   [0:0] tmp_s_reg_344_pp0_iter1_reg;
reg   [0:0] tmp_s_reg_344_pp0_iter3_reg;
reg   [0:0] tmp_s_reg_344_pp0_iter5_reg;
wire   [0:0] tmp_54_fu_227_p2;
reg   [0:0] tmp_54_reg_348_pp0_iter1_reg;
reg   [0:0] tmp_54_reg_348_pp0_iter3_reg;
reg   [0:0] tmp_54_reg_348_pp0_iter5_reg;
wire   [0:0] or_cond_fu_239_p2;
reg   [0:0] or_cond_reg_352_pp0_iter1_reg;
reg   [0:0] or_cond_reg_352_pp0_iter3_reg;
reg   [0:0] or_cond_reg_352_pp0_iter5_reg;
wire   [0:0] tmp_18_fu_139_p2;
reg   [0:0] tmp_18_reg_356_pp0_iter1_reg;
reg   [0:0] tmp_18_reg_356_pp0_iter3_reg;
reg   [0:0] tmp_18_reg_356_pp0_iter5_reg;
wire   [0:0] tmp_58_fu_245_p2;
reg   [0:0] tmp_58_reg_360_pp0_iter1_reg;
reg   [0:0] tmp_58_reg_360_pp0_iter3_reg;
reg   [0:0] tmp_58_reg_360_pp0_iter5_reg;
wire   [31:0] x_2_fu_262_p3;
reg   [31:0] x_2_reg_364;
wire   [0:0] tmp_i_fu_284_p2;
reg   [0:0] tmp_i_reg_370;
reg   [0:0] tmp_i_reg_370_pp0_iter1_reg;
reg   [0:0] tmp_i_reg_370_pp0_iter2_reg;
wire   [0:0] tmp_i_44_fu_290_p2;
reg   [0:0] tmp_i_44_reg_374;
reg   [0:0] tmp_i_44_reg_374_pp0_iter1_reg;
reg   [0:0] tmp_i_44_reg_374_pp0_iter2_reg;
wire   [31:0] resultf_fu_121_p2;
reg   [31:0] resultf_reg_378;
reg   [31:0] resultf_reg_378_pp0_iter1_reg;
reg   [31:0] resultf_reg_378_pp0_iter2_reg;
reg   [31:0] resultf_reg_378_pp0_iter3_reg;
reg   [31:0] resultf_reg_378_pp0_iter4_reg;
wire   [0:0] tmp_53_fu_155_p2;
reg   [0:0] tmp_53_reg_383;
reg   [0:0] tmp_53_reg_383_pp0_iter1_reg;
reg   [0:0] tmp_53_reg_383_pp0_iter2_reg;
reg   [0:0] tmp_53_reg_383_pp0_iter3_reg;
reg   [0:0] tmp_53_reg_383_pp0_iter4_reg;
wire   [63:0] grp_exp_generic_double_s_fu_89_ap_return;
reg   [63:0] tmp_121_i_reg_388;
wire   [31:0] tmp_60_fu_306_p1;
wire   [31:0] p_1_fu_311_p3;
reg    ap_block_pp0_stage0_subdone;
wire    grp_exp_generic_double_s_fu_89_ap_start;
wire    grp_exp_generic_double_s_fu_89_ap_done;
wire    grp_exp_generic_double_s_fu_89_ap_idle;
wire    grp_exp_generic_double_s_fu_89_ap_ready;
reg    grp_exp_generic_double_s_fu_89_ap_ce;
reg    ap_predicate_op43_call_state2;
reg   [31:0] ap_phi_mux_expx_phi_fu_62_p6;
wire   [31:0] tmp_123_i_fu_131_p1;
reg   [31:0] ap_phi_reg_pp0_iter3_expx_reg_58;
wire   [31:0] ap_phi_reg_pp0_iter0_expx_reg_58;
reg   [31:0] ap_phi_reg_pp0_iter1_expx_reg_58;
reg   [31:0] ap_phi_reg_pp0_iter2_expx_reg_58;
reg   [31:0] ap_phi_mux_resultf_4_phi_fu_76_p10;
wire   [31:0] ap_phi_reg_pp0_iter0_resultf_4_reg_72;
reg   [31:0] ap_phi_reg_pp0_iter1_resultf_4_reg_72;
reg   [31:0] ap_phi_reg_pp0_iter2_resultf_4_reg_72;
reg   [31:0] ap_phi_reg_pp0_iter3_resultf_4_reg_72;
reg   [31:0] ap_phi_reg_pp0_iter4_resultf_4_reg_72;
reg   [31:0] ap_phi_reg_pp0_iter5_resultf_4_reg_72;
reg   [31:0] ap_phi_reg_pp0_iter6_resultf_4_reg_72;
wire   [31:0] resultf_2_fu_115_p2;
reg    grp_exp_generic_double_s_fu_89_ap_start_reg;
reg    ap_predicate_op43_call_state2_state1;
wire   [63:0] xd_fu_135_p1;
reg   [31:0] grp_fu_100_p0;
wire   [31:0] tmp_59_fu_257_p1;
wire   [31:0] abst_in_fu_211_p1;
reg   [31:0] grp_fu_100_p1;
wire   [31:0] grp_fu_100_p2;
reg   [31:0] grp_fu_126_p0;
wire   [63:0] tmp_122_i_fu_144_p2;
wire   [22:0] loc_V_1_fu_193_p1;
wire   [31:0] p_Val2_s_fu_171_p1;
wire   [30:0] tmp_fu_199_p1;
wire   [31:0] p_Result_9_fu_203_p3;
wire   [7:0] loc_V_fu_183_p4;
wire   [0:0] tmp_55_fu_233_p2;
wire   [0:0] tmp_56_fu_150_p2;
wire   [31:0] tmp_117_neg_fu_251_p2;
wire   [31:0] x_1_fu_104_p2;
wire   [31:0] p_Val2_3_fu_270_p1;
wire   [7:0] loc_V_2_fu_274_p4;
wire   [31:0] tmp_118_to_int_fu_296_p1;
wire   [31:0] tmp_118_neg_fu_300_p2;
wire   [31:0] tmp_122_to_int_fu_318_p1;
wire   [31:0] tmp_122_neg_fu_322_p2;
wire   [31:0] tmp_64_fu_328_p1;
reg   [1:0] grp_fu_100_opcode;
reg    ap_block_pp0_stage0_00001;
reg    grp_fu_126_ce;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to5;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_300;
reg    ap_condition_307;
reg    ap_condition_68;
reg    ap_condition_346;
reg    ap_condition_324;
reg    ap_condition_130;
reg    ap_condition_113;
reg    ap_condition_282;
reg    ap_condition_79;
reg    ap_condition_200;
reg    ap_condition_173;
reg    ap_condition_518;
reg    ap_condition_25;
reg    ap_condition_653;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 grp_exp_generic_double_s_fu_89_ap_start_reg = 1'b0;
end

exp_generic_double_s grp_exp_generic_double_s_fu_89(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_exp_generic_double_s_fu_89_ap_start),
    .ap_done(grp_exp_generic_double_s_fu_89_ap_done),
    .ap_idle(grp_exp_generic_double_s_fu_89_ap_idle),
    .ap_ready(grp_exp_generic_double_s_fu_89_ap_ready),
    .ap_ce(grp_exp_generic_double_s_fu_89_ap_ce),
    .x(xd_fu_135_p1),
    .ap_return(grp_exp_generic_double_s_fu_89_ap_return)
);

face_classifier_cibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_cibs_U67(
    .din0(grp_fu_100_p0),
    .din1(grp_fu_100_p1),
    .opcode(grp_fu_100_opcode),
    .dout(grp_fu_100_p2)
);

face_classifier_cbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_cbkb_U68(
    .din0(abst_in_fu_211_p1),
    .din1(abst_in_fu_211_p1),
    .dout(x_1_fu_104_p2)
);

face_classifier_cbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_cbkb_U69(
    .din0(ap_phi_mux_expx_phi_fu_62_p6),
    .din1(32'd1073741824),
    .dout(grp_fu_109_p2)
);

face_classifier_cpcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_cpcA_U70(
    .din0(32'd1065353216),
    .din1(reg_165),
    .dout(resultf_2_fu_115_p2)
);

face_classifier_ccud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_ccud_U71(
    .din0(abst_in_fu_211_p1),
    .din1(grp_fu_100_p2),
    .dout(resultf_fu_121_p2)
);

face_classifier_cjbC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_cjbC_U72(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_126_p0),
    .din1(reg_160),
    .ce(grp_fu_126_ce),
    .dout(grp_fu_126_p2)
);

face_classifier_cqcK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
face_classifier_cqcK_U73(
    .din0(tmp_122_i_fu_144_p2),
    .dout(tmp_123_i_fu_131_p1)
);

face_classifier_crcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
face_classifier_crcU_U74(
    .din0(x_2_reg_364),
    .dout(xd_fu_135_p1)
);

face_classifier_csc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
face_classifier_csc4_U75(
    .din0(abst_in_fu_211_p1),
    .din1(32'd1102053376),
    .opcode(5'd4),
    .dout(tmp_18_fu_139_p2)
);

face_classifier_ctde #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
face_classifier_ctde_U76(
    .din0(tmp_121_i_reg_388),
    .din1(64'd13830554455654793216),
    .dout(tmp_122_i_fu_144_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_exp_generic_double_s_fu_89_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_predicate_op43_call_state2_state1 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_exp_generic_double_s_fu_89_ap_start_reg <= 1'b1;
        end else if ((grp_exp_generic_double_s_fu_89_ap_ready == 1'b1)) begin
            grp_exp_generic_double_s_fu_89_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_68)) begin
        if ((1'b1 == ap_condition_307)) begin
            ap_phi_reg_pp0_iter1_expx_reg_58 <= x_2_fu_262_p3;
        end else if ((1'b1 == ap_condition_300)) begin
            ap_phi_reg_pp0_iter1_expx_reg_58 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_expx_reg_58 <= ap_phi_reg_pp0_iter0_expx_reg_58;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_68)) begin
        if ((1'b1 == ap_condition_346)) begin
            ap_phi_reg_pp0_iter1_resultf_4_reg_72 <= 32'd1065353216;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_resultf_4_reg_72 <= ap_phi_reg_pp0_iter0_resultf_4_reg_72;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_113)) begin
        if ((tmp_s_reg_344_pp0_iter4_reg == 1'd1)) begin
            ap_phi_reg_pp0_iter6_resultf_4_reg_72 <= p_1_fu_311_p3;
        end else if ((1'b1 == ap_condition_130)) begin
            ap_phi_reg_pp0_iter6_resultf_4_reg_72 <= grp_fu_126_p2;
        end else if ((1'b1 == ap_condition_324)) begin
            ap_phi_reg_pp0_iter6_resultf_4_reg_72 <= resultf_reg_378_pp0_iter4_reg;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter6_resultf_4_reg_72 <= ap_phi_reg_pp0_iter5_resultf_4_reg_72;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_79)) begin
        if ((1'b1 == ap_condition_282)) begin
            expx_reg_58 <= tmp_123_i_fu_131_p1;
        end else if ((1'b1 == 1'b1)) begin
            expx_reg_58 <= ap_phi_reg_pp0_iter3_expx_reg_58;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_expx_reg_58 <= ap_phi_reg_pp0_iter1_expx_reg_58;
        ap_phi_reg_pp0_iter2_resultf_4_reg_72 <= ap_phi_reg_pp0_iter1_resultf_4_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_reg_pp0_iter3_expx_reg_58 <= ap_phi_reg_pp0_iter2_expx_reg_58;
        ap_phi_reg_pp0_iter3_resultf_4_reg_72 <= ap_phi_reg_pp0_iter2_resultf_4_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_phi_reg_pp0_iter4_resultf_4_reg_72 <= ap_phi_reg_pp0_iter3_resultf_4_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_phi_reg_pp0_iter5_resultf_4_reg_72 <= ap_phi_reg_pp0_iter4_resultf_4_reg_72;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_54_fu_227_p2 == 1'd0) & (tmp_s_fu_221_p2 == 1'd0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        or_cond_reg_352 <= or_cond_fu_239_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        or_cond_reg_352_pp0_iter1_reg <= or_cond_reg_352;
        p_Result_s_reg_339 <= p_Val2_s_fu_171_p1[32'd31];
        p_Result_s_reg_339_pp0_iter1_reg <= p_Result_s_reg_339;
        resultf_reg_378_pp0_iter1_reg <= resultf_reg_378;
        tmp_18_reg_356_pp0_iter1_reg <= tmp_18_reg_356;
        tmp_53_reg_383_pp0_iter1_reg <= tmp_53_reg_383;
        tmp_54_reg_348_pp0_iter1_reg <= tmp_54_reg_348;
        tmp_58_reg_360_pp0_iter1_reg <= tmp_58_reg_360;
        tmp_i_44_reg_374_pp0_iter1_reg <= tmp_i_44_reg_374;
        tmp_i_reg_370_pp0_iter1_reg <= tmp_i_reg_370;
        tmp_s_reg_344 <= tmp_s_fu_221_p2;
        tmp_s_reg_344_pp0_iter1_reg <= tmp_s_reg_344;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        or_cond_reg_352_pp0_iter2_reg <= or_cond_reg_352_pp0_iter1_reg;
        or_cond_reg_352_pp0_iter3_reg <= or_cond_reg_352_pp0_iter2_reg;
        or_cond_reg_352_pp0_iter4_reg <= or_cond_reg_352_pp0_iter3_reg;
        or_cond_reg_352_pp0_iter5_reg <= or_cond_reg_352_pp0_iter4_reg;
        p_Result_s_reg_339_pp0_iter2_reg <= p_Result_s_reg_339_pp0_iter1_reg;
        p_Result_s_reg_339_pp0_iter3_reg <= p_Result_s_reg_339_pp0_iter2_reg;
        p_Result_s_reg_339_pp0_iter4_reg <= p_Result_s_reg_339_pp0_iter3_reg;
        p_Result_s_reg_339_pp0_iter5_reg <= p_Result_s_reg_339_pp0_iter4_reg;
        resultf_reg_378_pp0_iter2_reg <= resultf_reg_378_pp0_iter1_reg;
        resultf_reg_378_pp0_iter3_reg <= resultf_reg_378_pp0_iter2_reg;
        resultf_reg_378_pp0_iter4_reg <= resultf_reg_378_pp0_iter3_reg;
        tmp_18_reg_356_pp0_iter2_reg <= tmp_18_reg_356_pp0_iter1_reg;
        tmp_18_reg_356_pp0_iter3_reg <= tmp_18_reg_356_pp0_iter2_reg;
        tmp_18_reg_356_pp0_iter4_reg <= tmp_18_reg_356_pp0_iter3_reg;
        tmp_18_reg_356_pp0_iter5_reg <= tmp_18_reg_356_pp0_iter4_reg;
        tmp_53_reg_383_pp0_iter2_reg <= tmp_53_reg_383_pp0_iter1_reg;
        tmp_53_reg_383_pp0_iter3_reg <= tmp_53_reg_383_pp0_iter2_reg;
        tmp_53_reg_383_pp0_iter4_reg <= tmp_53_reg_383_pp0_iter3_reg;
        tmp_54_reg_348_pp0_iter2_reg <= tmp_54_reg_348_pp0_iter1_reg;
        tmp_54_reg_348_pp0_iter3_reg <= tmp_54_reg_348_pp0_iter2_reg;
        tmp_54_reg_348_pp0_iter4_reg <= tmp_54_reg_348_pp0_iter3_reg;
        tmp_54_reg_348_pp0_iter5_reg <= tmp_54_reg_348_pp0_iter4_reg;
        tmp_58_reg_360_pp0_iter2_reg <= tmp_58_reg_360_pp0_iter1_reg;
        tmp_58_reg_360_pp0_iter3_reg <= tmp_58_reg_360_pp0_iter2_reg;
        tmp_58_reg_360_pp0_iter4_reg <= tmp_58_reg_360_pp0_iter3_reg;
        tmp_58_reg_360_pp0_iter5_reg <= tmp_58_reg_360_pp0_iter4_reg;
        tmp_i_44_reg_374_pp0_iter2_reg <= tmp_i_44_reg_374_pp0_iter1_reg;
        tmp_i_reg_370_pp0_iter2_reg <= tmp_i_reg_370_pp0_iter1_reg;
        tmp_s_reg_344_pp0_iter2_reg <= tmp_s_reg_344_pp0_iter1_reg;
        tmp_s_reg_344_pp0_iter3_reg <= tmp_s_reg_344_pp0_iter2_reg;
        tmp_s_reg_344_pp0_iter4_reg <= tmp_s_reg_344_pp0_iter3_reg;
        tmp_s_reg_344_pp0_iter5_reg <= tmp_s_reg_344_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_18_reg_356_pp0_iter2_reg == 1'd1) & (tmp_58_reg_360_pp0_iter2_reg == 1'd0) & (or_cond_reg_352_pp0_iter2_reg == 1'd0) & (tmp_54_reg_348_pp0_iter2_reg == 1'd0) & (tmp_s_reg_344_pp0_iter2_reg == 1'd0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((tmp_58_reg_360_pp0_iter2_reg == 1'd1) & (tmp_18_reg_356_pp0_iter2_reg == 1'd1) & (or_cond_reg_352_pp0_iter2_reg == 1'd0) & (tmp_54_reg_348_pp0_iter2_reg == 1'd0) & (tmp_s_reg_344_pp0_iter2_reg == 1'd0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        reg_160 <= grp_fu_109_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_58_reg_360_pp0_iter4_reg == 1'd1) & (tmp_18_reg_356_pp0_iter4_reg == 1'd1) & (or_cond_reg_352_pp0_iter4_reg == 1'd0) & (tmp_54_reg_348_pp0_iter4_reg == 1'd0) & (tmp_s_reg_344_pp0_iter4_reg == 1'd0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((tmp_18_reg_356_pp0_iter4_reg == 1'd1) & (tmp_58_reg_360_pp0_iter4_reg == 1'd0) & (or_cond_reg_352_pp0_iter4_reg == 1'd0) & (tmp_54_reg_348_pp0_iter4_reg == 1'd0) & (tmp_s_reg_344_pp0_iter4_reg == 1'd0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
        reg_165 <= grp_fu_126_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((or_cond_fu_239_p2 == 1'd1) & (tmp_s_fu_221_p2 == 1'd0)) | ((tmp_54_fu_227_p2 == 1'd1) & (tmp_s_fu_221_p2 == 1'd0))))) begin
        resultf_reg_378 <= resultf_fu_121_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_18_reg_356_pp0_iter1_reg == 1'd1) & (tmp_i_44_reg_374_pp0_iter1_reg == 1'd0) & (tmp_i_reg_370_pp0_iter1_reg == 1'd0) & (or_cond_reg_352_pp0_iter1_reg == 1'd0) & (tmp_54_reg_348_pp0_iter1_reg == 1'd0) & (tmp_s_reg_344_pp0_iter1_reg == 1'd0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_121_i_reg_388 <= grp_exp_generic_double_s_fu_89_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_fu_239_p2 == 1'd0) & (tmp_54_fu_227_p2 == 1'd0) & (tmp_s_fu_221_p2 == 1'd0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_18_reg_356 <= tmp_18_fu_139_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_221_p2 == 1'd1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_53_reg_383 <= tmp_53_fu_155_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_221_p2 == 1'd0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_54_reg_348 <= tmp_54_fu_227_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_18_fu_139_p2 == 1'd1) & (or_cond_fu_239_p2 == 1'd0) & (tmp_54_fu_227_p2 == 1'd0) & (tmp_s_fu_221_p2 == 1'd0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_58_reg_360 <= tmp_58_fu_245_p2;
        tmp_i_reg_370 <= tmp_i_fu_284_p2;
        x_2_reg_364 <= x_2_fu_262_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_18_fu_139_p2 == 1'd1) & (tmp_i_fu_284_p2 == 1'd0) & (or_cond_fu_239_p2 == 1'd0) & (tmp_54_fu_227_p2 == 1'd0) & (tmp_s_fu_221_p2 == 1'd0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_i_44_reg_374 <= tmp_i_44_fu_290_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to5 = 1'b1;
    end else begin
        ap_idle_pp0_0to5 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_18_reg_356_pp0_iter2_reg == 1'd1) & (or_cond_reg_352_pp0_iter2_reg == 1'd0) & (tmp_54_reg_348_pp0_iter2_reg == 1'd0) & (tmp_i_44_reg_374_pp0_iter2_reg == 1'd0) & (tmp_i_reg_370_pp0_iter2_reg == 1'd0) & (tmp_s_reg_344_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_phi_mux_expx_phi_fu_62_p6 = tmp_123_i_fu_131_p1;
    end else begin
        ap_phi_mux_expx_phi_fu_62_p6 = ap_phi_reg_pp0_iter3_expx_reg_58;
    end
end

always @ (*) begin
    if (((tmp_18_reg_356_pp0_iter5_reg == 1'd1) & (tmp_58_reg_360_pp0_iter5_reg == 1'd0) & (or_cond_reg_352_pp0_iter5_reg == 1'd0) & (tmp_54_reg_348_pp0_iter5_reg == 1'd0) & (tmp_s_reg_344_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ap_phi_mux_resultf_4_phi_fu_76_p10 = resultf_2_fu_115_p2;
    end else begin
        ap_phi_mux_resultf_4_phi_fu_76_p10 = ap_phi_reg_pp0_iter6_resultf_4_reg_72;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to5 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_exp_generic_double_s_fu_89_ap_ce = 1'b1;
    end else begin
        grp_exp_generic_double_s_fu_89_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_518)) begin
        if ((1'b1 == ap_condition_173)) begin
            grp_fu_100_opcode = 2'd1;
        end else if ((1'b1 == ap_condition_200)) begin
            grp_fu_100_opcode = 2'd0;
        end else begin
            grp_fu_100_opcode = 'bx;
        end
    end else begin
        grp_fu_100_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_25)) begin
        if ((1'b1 == ap_condition_200)) begin
            grp_fu_100_p0 = abst_in_fu_211_p1;
        end else if ((1'b1 == ap_condition_173)) begin
            grp_fu_100_p0 = tmp_59_fu_257_p1;
        end else begin
            grp_fu_100_p0 = 'bx;
        end
    end else begin
        grp_fu_100_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_25)) begin
        if ((1'b1 == ap_condition_200)) begin
            grp_fu_100_p1 = 32'd1065353216;
        end else if ((1'b1 == ap_condition_173)) begin
            grp_fu_100_p1 = abst_in_fu_211_p1;
        end else begin
            grp_fu_100_p1 = 'bx;
        end
    end else begin
        grp_fu_100_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_126_ce = 1'b1;
    end else begin
        grp_fu_126_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_653)) begin
        if ((tmp_58_reg_360_pp0_iter3_reg == 1'd1)) begin
            grp_fu_126_p0 = tmp_60_fu_306_p1;
        end else if ((tmp_58_reg_360_pp0_iter3_reg == 1'd0)) begin
            grp_fu_126_p0 = 32'd1073741824;
        end else begin
            grp_fu_126_p0 = 'bx;
        end
    end else begin
        grp_fu_126_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign abst_in_fu_211_p1 = p_Result_9_fu_203_p3;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_00001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_113 = ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1));
end

always @ (*) begin
    ap_condition_130 = ((tmp_58_reg_360_pp0_iter4_reg == 1'd1) & (tmp_18_reg_356_pp0_iter4_reg == 1'd1) & (or_cond_reg_352_pp0_iter4_reg == 1'd0) & (tmp_54_reg_348_pp0_iter4_reg == 1'd0) & (tmp_s_reg_344_pp0_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_condition_173 = ((tmp_18_fu_139_p2 == 1'd1) & (or_cond_fu_239_p2 == 1'd0) & (tmp_54_fu_227_p2 == 1'd0) & (tmp_s_fu_221_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_200 = (((or_cond_fu_239_p2 == 1'd1) & (tmp_s_fu_221_p2 == 1'd0)) | ((tmp_54_fu_227_p2 == 1'd1) & (tmp_s_fu_221_p2 == 1'd0)));
end

always @ (*) begin
    ap_condition_25 = ((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_282 = ((tmp_18_reg_356_pp0_iter2_reg == 1'd1) & (or_cond_reg_352_pp0_iter2_reg == 1'd0) & (tmp_54_reg_348_pp0_iter2_reg == 1'd0) & (tmp_i_44_reg_374_pp0_iter2_reg == 1'd0) & (tmp_i_reg_370_pp0_iter2_reg == 1'd0) & (tmp_s_reg_344_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_condition_300 = ((tmp_i_fu_284_p2 == 1'd1) & (tmp_18_fu_139_p2 == 1'd1) & (or_cond_fu_239_p2 == 1'd0) & (tmp_54_fu_227_p2 == 1'd0) & (tmp_s_fu_221_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_307 = ((tmp_i_44_fu_290_p2 == 1'd1) & (tmp_18_fu_139_p2 == 1'd1) & (tmp_i_fu_284_p2 == 1'd0) & (or_cond_fu_239_p2 == 1'd0) & (tmp_54_fu_227_p2 == 1'd0) & (tmp_s_fu_221_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_324 = (((or_cond_reg_352_pp0_iter4_reg == 1'd1) & (tmp_s_reg_344_pp0_iter4_reg == 1'd0)) | ((tmp_54_reg_348_pp0_iter4_reg == 1'd1) & (tmp_s_reg_344_pp0_iter4_reg == 1'd0)));
end

always @ (*) begin
    ap_condition_346 = ((tmp_18_fu_139_p2 == 1'd0) & (or_cond_fu_239_p2 == 1'd0) & (tmp_54_fu_227_p2 == 1'd0) & (tmp_s_fu_221_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_518 = ((1'b0 == ap_block_pp0_stage0_00001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_653 = ((tmp_18_reg_356_pp0_iter3_reg == 1'd1) & (or_cond_reg_352_pp0_iter3_reg == 1'd0) & (tmp_54_reg_348_pp0_iter3_reg == 1'd0) & (tmp_s_reg_344_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

always @ (*) begin
    ap_condition_68 = ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_79 = ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_expx_reg_58 = 'bx;

assign ap_phi_reg_pp0_iter0_resultf_4_reg_72 = 'bx;

always @ (*) begin
    ap_predicate_op43_call_state2 = ((tmp_18_reg_356 == 1'd1) & (or_cond_reg_352 == 1'd0) & (tmp_54_reg_348 == 1'd0) & (tmp_i_44_reg_374 == 1'd0) & (tmp_i_reg_370 == 1'd0) & (tmp_s_reg_344 == 1'd0));
end

always @ (*) begin
    ap_predicate_op43_call_state2_state1 = ((tmp_18_fu_139_p2 == 1'd1) & (tmp_i_44_fu_290_p2 == 1'd0) & (tmp_i_fu_284_p2 == 1'd0) & (or_cond_fu_239_p2 == 1'd0) & (tmp_54_fu_227_p2 == 1'd0) & (tmp_s_fu_221_p2 == 1'd0));
end

assign ap_return = ((p_Result_s_reg_339_pp0_iter5_reg[0:0] === 1'b1) ? tmp_64_fu_328_p1 : ap_phi_mux_resultf_4_phi_fu_76_p10);

assign grp_exp_generic_double_s_fu_89_ap_start = grp_exp_generic_double_s_fu_89_ap_start_reg;

assign loc_V_1_fu_193_p1 = p_Val2_s_fu_171_p1[22:0];

assign loc_V_2_fu_274_p4 = {{p_Val2_3_fu_270_p1[30:23]}};

assign loc_V_fu_183_p4 = {{p_Val2_s_fu_171_p1[30:23]}};

assign or_cond_fu_239_p2 = (tmp_56_fu_150_p2 & tmp_55_fu_233_p2);

assign p_1_fu_311_p3 = ((tmp_53_reg_383_pp0_iter4_reg[0:0] === 1'b1) ? 32'd1065353216 : 32'd2147483647);

assign p_Result_9_fu_203_p3 = {{1'd0}, {tmp_fu_199_p1}};

assign p_Val2_3_fu_270_p1 = x_2_fu_262_p3;

assign p_Val2_s_fu_171_p1 = t_in;

assign tmp_117_neg_fu_251_p2 = (p_Result_9_fu_203_p3 ^ 32'd2147483648);

assign tmp_118_neg_fu_300_p2 = (tmp_118_to_int_fu_296_p1 ^ 32'd2147483648);

assign tmp_118_to_int_fu_296_p1 = expx_reg_58;

assign tmp_122_neg_fu_322_p2 = (tmp_122_to_int_fu_318_p1 ^ 32'd2147483648);

assign tmp_122_to_int_fu_318_p1 = ap_phi_mux_resultf_4_phi_fu_76_p10;

assign tmp_53_fu_155_p2 = ((loc_V_1_fu_193_p1 == 23'd0) ? 1'b1 : 1'b0);

assign tmp_54_fu_227_p2 = ((loc_V_fu_183_p4 < 8'd72) ? 1'b1 : 1'b0);

assign tmp_55_fu_233_p2 = ((loc_V_fu_183_p4 == 8'd72) ? 1'b1 : 1'b0);

assign tmp_56_fu_150_p2 = ((loc_V_1_fu_193_p1 == 23'd0) ? 1'b1 : 1'b0);

assign tmp_58_fu_245_p2 = ((loc_V_fu_183_p4 < 8'd127) ? 1'b1 : 1'b0);

assign tmp_59_fu_257_p1 = tmp_117_neg_fu_251_p2;

assign tmp_60_fu_306_p1 = tmp_118_neg_fu_300_p2;

assign tmp_64_fu_328_p1 = tmp_122_neg_fu_322_p2;

assign tmp_fu_199_p1 = p_Val2_s_fu_171_p1[30:0];

assign tmp_i_44_fu_290_p2 = ((loc_V_2_fu_274_p4 < 8'd96) ? 1'b1 : 1'b0);

assign tmp_i_fu_284_p2 = ((loc_V_2_fu_274_p4 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_s_fu_221_p2 = ((loc_V_fu_183_p4 == 8'd255) ? 1'b1 : 1'b0);

assign x_2_fu_262_p3 = ((tmp_58_fu_245_p2[0:0] === 1'b1) ? grp_fu_100_p2 : x_1_fu_104_p2);

endmodule //generic_tanh_float_s
