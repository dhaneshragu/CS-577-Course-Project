// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module exp_generic_double_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        x,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [63:0] x;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
reg    ap_block_pp0_stage0_11001;
wire   [7:0] table_exp_Z1_array_s_address0;
reg    table_exp_Z1_array_s_ce0;
wire   [57:0] table_exp_Z1_array_s_q0;
wire   [7:0] table_f_Z3_array_V_address0;
reg    table_f_Z3_array_V_ce0;
wire   [25:0] table_f_Z3_array_V_q0;
wire   [7:0] table_f_Z3_array_V_address1;
reg    table_f_Z3_array_V_ce1;
wire   [25:0] table_f_Z3_array_V_q1;
wire   [7:0] table_f_Z2_array_V_address0;
reg    table_f_Z2_array_V_ce0;
wire   [41:0] table_f_Z2_array_V_q0;
wire   [0:0] p_Result_s_fu_263_p3;
reg   [0:0] p_Result_s_reg_1183;
reg   [0:0] p_Result_s_reg_1183_pp0_iter1_reg;
reg   [0:0] p_Result_s_reg_1183_pp0_iter2_reg;
reg   [0:0] p_Result_s_reg_1183_pp0_iter3_reg;
reg   [0:0] p_Result_s_reg_1183_pp0_iter4_reg;
reg   [0:0] p_Result_s_reg_1183_pp0_iter5_reg;
wire   [0:0] not_demorgan_fu_297_p2;
reg   [0:0] not_demorgan_reg_1190;
reg   [0:0] not_demorgan_reg_1190_pp0_iter1_reg;
reg   [0:0] not_demorgan_reg_1190_pp0_iter2_reg;
reg   [0:0] not_demorgan_reg_1190_pp0_iter3_reg;
reg   [0:0] not_demorgan_reg_1190_pp0_iter4_reg;
reg   [0:0] not_demorgan_reg_1190_pp0_iter5_reg;
wire   [0:0] tmp_54_i_fu_309_p2;
reg   [0:0] tmp_54_i_reg_1196;
reg   [0:0] tmp_54_i_reg_1196_pp0_iter1_reg;
reg   [0:0] tmp_54_i_reg_1196_pp0_iter2_reg;
reg   [0:0] tmp_54_i_reg_1196_pp0_iter3_reg;
reg   [0:0] tmp_54_i_reg_1196_pp0_iter4_reg;
reg   [0:0] tmp_54_i_reg_1196_pp0_iter5_reg;
wire  signed [70:0] p_Val2_3_fu_413_p3;
reg  signed [70:0] p_Val2_3_reg_1203;
reg  signed [70:0] p_Val2_3_reg_1203_pp0_iter1_reg;
wire  signed [30:0] grp_fu_1173_p3;
reg  signed [30:0] r_V_reg_1208;
wire   [12:0] tmp_138_fu_481_p4;
reg   [12:0] tmp_138_reg_1213;
wire   [0:0] tmp_139_fu_493_p2;
reg   [0:0] tmp_139_reg_1219;
wire   [12:0] tmp_140_fu_499_p2;
reg   [12:0] tmp_140_reg_1224;
wire   [0:0] tmp_149_fu_521_p2;
reg   [0:0] tmp_149_reg_1229;
reg   [0:0] tmp_149_reg_1229_pp0_iter1_reg;
reg   [0:0] tmp_149_reg_1229_pp0_iter2_reg;
reg   [0:0] tmp_149_reg_1229_pp0_iter3_reg;
reg   [0:0] tmp_149_reg_1229_pp0_iter4_reg;
reg   [0:0] tmp_149_reg_1229_pp0_iter5_reg;
wire   [0:0] tmp_150_fu_527_p2;
reg   [0:0] tmp_150_reg_1237;
reg   [0:0] tmp_150_reg_1237_pp0_iter1_reg;
reg   [0:0] tmp_150_reg_1237_pp0_iter2_reg;
reg   [0:0] tmp_150_reg_1237_pp0_iter3_reg;
reg   [0:0] tmp_150_reg_1237_pp0_iter4_reg;
reg   [0:0] tmp_150_reg_1237_pp0_iter5_reg;
reg   [0:0] tmp_171_reg_1242;
reg   [0:0] tmp_171_reg_1242_pp0_iter1_reg;
reg   [0:0] tmp_171_reg_1242_pp0_iter2_reg;
reg   [0:0] tmp_171_reg_1242_pp0_iter3_reg;
reg   [0:0] tmp_171_reg_1242_pp0_iter4_reg;
reg   [0:0] tmp_171_reg_1242_pp0_iter5_reg;
wire  signed [12:0] r_exp_V_3_fu_553_p3;
reg  signed [12:0] r_exp_V_3_reg_1248;
reg  signed [12:0] r_exp_V_3_reg_1248_pp0_iter2_reg;
reg  signed [12:0] r_exp_V_3_reg_1248_pp0_iter3_reg;
reg  signed [12:0] r_exp_V_3_reg_1248_pp0_iter4_reg;
reg  signed [12:0] r_exp_V_3_reg_1248_pp0_iter5_reg;
reg   [70:0] tmp_2_reg_1254;
reg   [7:0] m_diff_hi_V_reg_1259;
reg   [7:0] m_diff_hi_V_reg_1259_pp0_iter3_reg;
reg   [7:0] p_Val2_22_reg_1264;
reg   [7:0] p_Val2_22_reg_1264_pp0_iter3_reg;
reg   [7:0] p_Val2_22_reg_1264_pp0_iter4_reg;
wire   [7:0] p_Val2_17_fu_620_p4;
reg   [7:0] p_Val2_17_reg_1271;
wire   [34:0] p_Val2_11_fu_630_p1;
reg   [34:0] p_Val2_11_reg_1276;
wire   [35:0] r_V_1_fu_671_p2;
reg   [35:0] r_V_1_reg_1291;
wire   [42:0] tmp_130_i_fu_677_p4;
reg   [42:0] tmp_130_i_reg_1296;
reg   [19:0] tmp_3_reg_1301;
wire   [43:0] p_Val2_20_fu_733_p2;
reg   [43:0] p_Val2_20_reg_1316;
wire   [39:0] tmp_4_fu_739_p4;
reg   [39:0] tmp_4_reg_1321;
reg   [35:0] tmp_5_reg_1326;
reg   [57:0] p_Val2_25_reg_1331;
wire   [99:0] p_Val2_13_fu_842_p2;
reg   [99:0] p_Val2_13_reg_1336;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] tmp_121_i_fu_644_p1;
wire   [63:0] tmp_124_i_fu_649_p1;
wire   [63:0] tmp_126_i_fu_710_p1;
wire   [63:0] tmp_145_fu_714_p1;
wire   [63:0] p_Val2_s_fu_259_p1;
wire   [10:0] loc_V_fu_271_p4;
wire   [51:0] loc_V_3_fu_281_p1;
wire   [0:0] tmp_i_fu_285_p2;
wire   [0:0] tmp_i_105_fu_291_p2;
wire   [0:0] tmp_i1_fu_303_p2;
wire   [11:0] tmp_i2_cast_fu_315_p1;
wire   [53:0] p_Result_18_fu_325_p3;
wire   [53:0] p_Val2_s_106_fu_333_p2;
wire   [53:0] p_Val2_1_fu_339_p3;
wire  signed [60:0] p_Val2_2_fu_347_p3;
wire   [11:0] m_exp_fu_319_p2;
wire   [10:0] tmp_s_fu_367_p2;
wire   [0:0] isNeg_fu_359_p3;
wire  signed [11:0] tmp_128_cast_fu_373_p1;
wire   [11:0] sh_assign_1_fu_377_p3;
wire  signed [31:0] sh_assign_1_cast_fu_385_p1;
wire   [60:0] tmp_129_cast_fu_393_p1;
wire   [60:0] tmp_129_fu_397_p2;
wire  signed [70:0] p_Val2_2_cast_fu_355_p1;
wire   [70:0] tmp_128_fu_389_p1;
wire  signed [70:0] tmp_130_cast_fu_403_p1;
wire   [70:0] tmp_130_fu_407_p2;
wire   [63:0] tmp_132_fu_421_p4;
wire   [63:0] tmp_133_fu_431_p1;
wire  signed [15:0] tmp_136_fu_447_p4;
wire   [0:0] tmp_165_fu_457_p3;
wire  signed [18:0] tmp_137_fu_469_p3;
wire   [17:0] tmp_167_fu_490_p1;
wire   [63:0] tmp_134_fu_435_p2;
wire   [63:0] tmp_135_fu_441_p2;
wire   [63:0] tmp_1_fu_505_p3;
wire   [70:0] tmp_142_fu_513_p3;
wire   [0:0] tmp_166_fu_541_p3;
wire   [12:0] tmp_141_fu_548_p3;
wire  signed [12:0] p_Val2_9_fu_564_p1;
wire   [83:0] p_Val2_9_fu_564_p2;
wire   [71:0] tmp_144_fu_583_p3;
wire  signed [72:0] tmp_143_fu_580_p1;
wire  signed [72:0] tmp_149_cast_fu_590_p1;
wire   [72:0] p_Val2_7_fu_594_p2;
wire   [7:0] Z4_ind_V_fu_634_p4;
wire   [9:0] p_Val2_15_fu_654_p4;
wire   [35:0] tmp_123_i_fu_667_p1;
wire   [35:0] tmp_122_i_fu_664_p1;
wire   [35:0] p_Val2_18_fu_694_p0;
wire   [42:0] p_Val2_18_fu_694_p1;
wire   [78:0] p_Val2_18_fu_694_p2;
wire   [35:0] tmp_134_i_cast_fu_721_p1;
wire   [35:0] tmp_fu_724_p2;
wire   [43:0] tmp_132_i_fu_718_p1;
wire   [43:0] tmp_cast_fu_729_p1;
wire   [48:0] tmp_127_i_fu_749_p4;
wire   [43:0] p_Val2_23_fu_766_p0;
wire   [48:0] p_Val2_23_fu_766_p1;
wire   [92:0] p_Val2_23_fu_766_p2;
wire   [50:0] tmp_136_i_fu_782_p5;
wire   [43:0] tmp_138_i_cast_fu_796_p1;
wire   [43:0] tmp6_fu_799_p2;
wire   [51:0] tmp_136_i_cast_fu_792_p1;
wire   [51:0] tmp51_cast_fu_804_p1;
wire   [51:0] p_Val2_24_fu_808_p2;
wire   [49:0] tmp_146_fu_824_p4;
wire   [49:0] exp_Z1P_m_1_V_fu_814_p4;
wire   [49:0] p_Val2_13_fu_842_p0;
wire   [49:0] p_Val2_13_fu_842_p1;
wire   [58:0] tmp_147_fu_857_p1;
wire   [58:0] p_Val2_12_fu_860_p2;
wire   [107:0] tmp_156_cast_fu_874_p1;
wire   [107:0] tmp_148_fu_866_p3;
wire   [107:0] p_Val2_14_fu_877_p2;
wire   [0:0] tmp_169_fu_883_p3;
wire   [12:0] r_exp_V_fu_891_p2;
wire   [12:0] r_exp_V_2_fu_896_p3;
wire   [2:0] tmp_170_fu_903_p4;
wire   [0:0] icmp_fu_913_p2;
wire   [51:0] tmp_152_fu_930_p4;
wire   [51:0] tmp_153_fu_940_p4;
wire   [10:0] tmp_172_fu_958_p1;
wire   [10:0] out_exp_V_fu_962_p2;
wire   [51:0] loc_V_4_fu_950_p3;
wire   [0:0] not_Result_i4_fu_848_p2;
wire   [0:0] sel_tmp1_fu_978_p2;
wire   [0:0] tmp7_fu_983_p2;
wire   [0:0] x_is_ninf_fu_853_p2;
wire   [0:0] tmp_54_i_not_fu_1000_p2;
wire   [0:0] sel_tmp3_fu_1010_p2;
wire   [0:0] tmp8_fu_1016_p2;
wire   [0:0] sel_tmp_fu_1005_p2;
wire   [0:0] or_cond_fu_919_p2;
wire   [0:0] sel_tmp8_fu_1038_p2;
wire   [0:0] sel_tmp6_fu_1033_p2;
wire   [0:0] sel_tmp9_fu_1043_p2;
wire   [0:0] sel_tmp10_fu_1049_p2;
wire   [0:0] sel_tmp5_fu_1028_p2;
wire   [0:0] tmp9_fu_1055_p2;
wire   [0:0] sel_tmp4_fu_1022_p2;
wire   [0:0] sel_tmp12_fu_1072_p2;
wire   [0:0] sel_tmp44_demorgan_fu_1083_p2;
wire   [0:0] sel_tmp13_fu_1078_p2;
wire   [0:0] sel_tmp14_fu_1088_p2;
wire   [0:0] tmp_151_fu_924_p2;
wire   [0:0] sel_tmp15_fu_1094_p2;
wire   [63:0] p_Result_19_fu_968_p4;
wire   [0:0] sel_tmp2_fu_989_p2;
wire   [0:0] tmp_156_fu_1118_p2;
wire   [63:0] tmp_155_fu_1110_p3;
wire   [63:0] tmp_154_fu_1106_p1;
wire   [0:0] sel_tmp11_fu_1061_p2;
wire   [0:0] sel_tmp7_fu_994_p2;
wire   [0:0] tmp_159_fu_1139_p2;
wire   [63:0] tmp_158_fu_1131_p3;
wire   [63:0] tmp_157_fu_1123_p3;
wire   [0:0] tmp11_fu_1100_p2;
wire   [0:0] tmp10_fu_1067_p2;
wire   [0:0] sel_tmp16_fu_1153_p2;
wire   [0:0] tmp_161_fu_1159_p2;
wire   [63:0] tmp_160_fu_1145_p3;
wire   [15:0] grp_fu_1173_p0;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to5;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [99:0] p_Val2_13_fu_842_p00;
wire   [99:0] p_Val2_13_fu_842_p10;
wire   [78:0] p_Val2_18_fu_694_p00;
wire   [78:0] p_Val2_18_fu_694_p10;
wire   [92:0] p_Val2_23_fu_766_p00;
wire   [92:0] p_Val2_23_fu_766_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
end

exp_generic_doublmb6 #(
    .DataWidth( 58 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
table_exp_Z1_array_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(table_exp_Z1_array_s_address0),
    .ce0(table_exp_Z1_array_s_ce0),
    .q0(table_exp_Z1_array_s_q0)
);

exp_generic_doublncg #(
    .DataWidth( 26 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
table_f_Z3_array_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(table_f_Z3_array_V_address0),
    .ce0(table_f_Z3_array_V_ce0),
    .q0(table_f_Z3_array_V_q0),
    .address1(table_f_Z3_array_V_address1),
    .ce1(table_f_Z3_array_V_ce1),
    .q1(table_f_Z3_array_V_q1)
);

exp_generic_doublocq #(
    .DataWidth( 42 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
table_f_Z2_array_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(table_f_Z2_array_V_address0),
    .ce0(table_f_Z2_array_V_ce0),
    .q0(table_f_Z2_array_V_q0)
);

face_classifier_cpcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 19 ),
    .dout_WIDTH( 31 ))
face_classifier_cpcA_U68(
    .din0(grp_fu_1173_p0),
    .din1(tmp_136_fu_447_p4),
    .din2(tmp_137_fu_469_p3),
    .dout(grp_fu_1173_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_diff_hi_V_reg_1259 <= {{p_Val2_7_fu_594_p2[58:51]}};
        m_diff_hi_V_reg_1259_pp0_iter3_reg <= m_diff_hi_V_reg_1259;
        not_demorgan_reg_1190_pp0_iter2_reg <= not_demorgan_reg_1190_pp0_iter1_reg;
        not_demorgan_reg_1190_pp0_iter3_reg <= not_demorgan_reg_1190_pp0_iter2_reg;
        not_demorgan_reg_1190_pp0_iter4_reg <= not_demorgan_reg_1190_pp0_iter3_reg;
        not_demorgan_reg_1190_pp0_iter5_reg <= not_demorgan_reg_1190_pp0_iter4_reg;
        p_Result_s_reg_1183_pp0_iter2_reg <= p_Result_s_reg_1183_pp0_iter1_reg;
        p_Result_s_reg_1183_pp0_iter3_reg <= p_Result_s_reg_1183_pp0_iter2_reg;
        p_Result_s_reg_1183_pp0_iter4_reg <= p_Result_s_reg_1183_pp0_iter3_reg;
        p_Result_s_reg_1183_pp0_iter5_reg <= p_Result_s_reg_1183_pp0_iter4_reg;
        p_Val2_11_reg_1276 <= p_Val2_11_fu_630_p1;
        p_Val2_13_reg_1336 <= p_Val2_13_fu_842_p2;
        p_Val2_17_reg_1271 <= {{p_Val2_7_fu_594_p2[42:35]}};
        p_Val2_20_reg_1316 <= p_Val2_20_fu_733_p2;
        p_Val2_22_reg_1264 <= {{p_Val2_7_fu_594_p2[50:43]}};
        p_Val2_22_reg_1264_pp0_iter3_reg <= p_Val2_22_reg_1264;
        p_Val2_22_reg_1264_pp0_iter4_reg <= p_Val2_22_reg_1264_pp0_iter3_reg;
        p_Val2_25_reg_1331 <= table_exp_Z1_array_s_q0;
        r_V_1_reg_1291 <= r_V_1_fu_671_p2;
        r_exp_V_3_reg_1248_pp0_iter2_reg <= r_exp_V_3_reg_1248;
        r_exp_V_3_reg_1248_pp0_iter3_reg <= r_exp_V_3_reg_1248_pp0_iter2_reg;
        r_exp_V_3_reg_1248_pp0_iter4_reg <= r_exp_V_3_reg_1248_pp0_iter3_reg;
        r_exp_V_3_reg_1248_pp0_iter5_reg <= r_exp_V_3_reg_1248_pp0_iter4_reg;
        tmp_130_i_reg_1296[25 : 0] <= tmp_130_i_fu_677_p4[25 : 0];
tmp_130_i_reg_1296[42 : 35] <= tmp_130_i_fu_677_p4[42 : 35];
        tmp_149_reg_1229_pp0_iter2_reg <= tmp_149_reg_1229_pp0_iter1_reg;
        tmp_149_reg_1229_pp0_iter3_reg <= tmp_149_reg_1229_pp0_iter2_reg;
        tmp_149_reg_1229_pp0_iter4_reg <= tmp_149_reg_1229_pp0_iter3_reg;
        tmp_149_reg_1229_pp0_iter5_reg <= tmp_149_reg_1229_pp0_iter4_reg;
        tmp_150_reg_1237_pp0_iter2_reg <= tmp_150_reg_1237_pp0_iter1_reg;
        tmp_150_reg_1237_pp0_iter3_reg <= tmp_150_reg_1237_pp0_iter2_reg;
        tmp_150_reg_1237_pp0_iter4_reg <= tmp_150_reg_1237_pp0_iter3_reg;
        tmp_150_reg_1237_pp0_iter5_reg <= tmp_150_reg_1237_pp0_iter4_reg;
        tmp_171_reg_1242_pp0_iter2_reg <= tmp_171_reg_1242_pp0_iter1_reg;
        tmp_171_reg_1242_pp0_iter3_reg <= tmp_171_reg_1242_pp0_iter2_reg;
        tmp_171_reg_1242_pp0_iter4_reg <= tmp_171_reg_1242_pp0_iter3_reg;
        tmp_171_reg_1242_pp0_iter5_reg <= tmp_171_reg_1242_pp0_iter4_reg;
        tmp_3_reg_1301 <= {{p_Val2_18_fu_694_p2[78:59]}};
        tmp_4_reg_1321 <= {{table_f_Z2_array_V_q0[41:2]}};
        tmp_54_i_reg_1196_pp0_iter2_reg <= tmp_54_i_reg_1196_pp0_iter1_reg;
        tmp_54_i_reg_1196_pp0_iter3_reg <= tmp_54_i_reg_1196_pp0_iter2_reg;
        tmp_54_i_reg_1196_pp0_iter4_reg <= tmp_54_i_reg_1196_pp0_iter3_reg;
        tmp_54_i_reg_1196_pp0_iter5_reg <= tmp_54_i_reg_1196_pp0_iter4_reg;
        tmp_5_reg_1326 <= {{p_Val2_23_fu_766_p2[92:57]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        not_demorgan_reg_1190 <= not_demorgan_fu_297_p2;
        not_demorgan_reg_1190_pp0_iter1_reg <= not_demorgan_reg_1190;
        p_Result_s_reg_1183 <= p_Val2_s_fu_259_p1[32'd63];
        p_Result_s_reg_1183_pp0_iter1_reg <= p_Result_s_reg_1183;
        p_Val2_3_reg_1203 <= p_Val2_3_fu_413_p3;
        p_Val2_3_reg_1203_pp0_iter1_reg <= p_Val2_3_reg_1203;
        r_exp_V_3_reg_1248 <= r_exp_V_3_fu_553_p3;
        tmp_138_reg_1213 <= {{grp_fu_1173_p3[30:18]}};
        tmp_139_reg_1219 <= tmp_139_fu_493_p2;
        tmp_140_reg_1224 <= tmp_140_fu_499_p2;
        tmp_149_reg_1229 <= tmp_149_fu_521_p2;
        tmp_149_reg_1229_pp0_iter1_reg <= tmp_149_reg_1229;
        tmp_150_reg_1237 <= tmp_150_fu_527_p2;
        tmp_150_reg_1237_pp0_iter1_reg <= tmp_150_reg_1237;
        tmp_171_reg_1242 <= p_Val2_1_fu_339_p3[32'd53];
        tmp_171_reg_1242_pp0_iter1_reg <= tmp_171_reg_1242;
        tmp_2_reg_1254 <= {{p_Val2_9_fu_564_p2[83:13]}};
        tmp_54_i_reg_1196 <= tmp_54_i_fu_309_p2;
        tmp_54_i_reg_1196_pp0_iter1_reg <= tmp_54_i_reg_1196;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        r_V_reg_1208 <= grp_fu_1173_p3;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to5 = 1'b1;
    end else begin
        ap_idle_pp0_0to5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to5 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        table_exp_Z1_array_s_ce0 = 1'b1;
    end else begin
        table_exp_Z1_array_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        table_f_Z2_array_V_ce0 = 1'b1;
    end else begin
        table_f_Z2_array_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        table_f_Z3_array_V_ce0 = 1'b1;
    end else begin
        table_f_Z3_array_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        table_f_Z3_array_V_ce1 = 1'b1;
    end else begin
        table_f_Z3_array_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Z4_ind_V_fu_634_p4 = {{p_Val2_7_fu_594_p2[34:27]}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = ((tmp_161_fu_1159_p2[0:0] === 1'b1) ? 64'd0 : tmp_160_fu_1145_p3);

assign exp_Z1P_m_1_V_fu_814_p4 = {{p_Val2_24_fu_808_p2[51:2]}};

assign grp_fu_1173_p0 = 31'd23637;

assign icmp_fu_913_p2 = (($signed(tmp_170_fu_903_p4) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign isNeg_fu_359_p3 = m_exp_fu_319_p2[32'd11];

assign loc_V_3_fu_281_p1 = p_Val2_s_fu_259_p1[51:0];

assign loc_V_4_fu_950_p3 = ((tmp_169_fu_883_p3[0:0] === 1'b1) ? tmp_152_fu_930_p4 : tmp_153_fu_940_p4);

assign loc_V_fu_271_p4 = {{p_Val2_s_fu_259_p1[62:52]}};

assign m_exp_fu_319_p2 = ($signed(12'd3073) + $signed(tmp_i2_cast_fu_315_p1));

assign not_Result_i4_fu_848_p2 = (p_Result_s_reg_1183_pp0_iter5_reg ^ 1'd1);

assign not_demorgan_fu_297_p2 = (tmp_i_fu_285_p2 & tmp_i_105_fu_291_p2);

assign or_cond_fu_919_p2 = (tmp_150_reg_1237_pp0_iter5_reg | icmp_fu_913_p2);

assign out_exp_V_fu_962_p2 = (11'd1023 + tmp_172_fu_958_p1);

assign p_Result_18_fu_325_p3 = {{2'd1}, {loc_V_3_fu_281_p1}};

assign p_Result_19_fu_968_p4 = {{{{1'd0}, {out_exp_V_fu_962_p2}}}, {loc_V_4_fu_950_p3}};

assign p_Result_s_fu_263_p3 = p_Val2_s_fu_259_p1[32'd63];

assign p_Val2_11_fu_630_p1 = p_Val2_7_fu_594_p2[34:0];

assign p_Val2_12_fu_860_p2 = (59'd16 + tmp_147_fu_857_p1);

assign p_Val2_13_fu_842_p0 = p_Val2_13_fu_842_p00;

assign p_Val2_13_fu_842_p00 = tmp_146_fu_824_p4;

assign p_Val2_13_fu_842_p1 = p_Val2_13_fu_842_p10;

assign p_Val2_13_fu_842_p10 = exp_Z1P_m_1_V_fu_814_p4;

assign p_Val2_13_fu_842_p2 = (p_Val2_13_fu_842_p0 * p_Val2_13_fu_842_p1);

assign p_Val2_14_fu_877_p2 = (tmp_156_cast_fu_874_p1 + tmp_148_fu_866_p3);

assign p_Val2_15_fu_654_p4 = {{table_f_Z3_array_V_q0[25:16]}};

assign p_Val2_17_fu_620_p4 = {{p_Val2_7_fu_594_p2[42:35]}};

assign p_Val2_18_fu_694_p0 = p_Val2_18_fu_694_p00;

assign p_Val2_18_fu_694_p00 = r_V_1_fu_671_p2;

assign p_Val2_18_fu_694_p1 = p_Val2_18_fu_694_p10;

assign p_Val2_18_fu_694_p10 = tmp_130_i_fu_677_p4;

assign p_Val2_18_fu_694_p2 = (p_Val2_18_fu_694_p0 * p_Val2_18_fu_694_p1);

assign p_Val2_1_fu_339_p3 = ((p_Result_s_fu_263_p3[0:0] === 1'b1) ? p_Val2_s_106_fu_333_p2 : p_Result_18_fu_325_p3);

assign p_Val2_20_fu_733_p2 = (tmp_132_i_fu_718_p1 + tmp_cast_fu_729_p1);

assign p_Val2_23_fu_766_p0 = p_Val2_23_fu_766_p00;

assign p_Val2_23_fu_766_p00 = p_Val2_20_fu_733_p2;

assign p_Val2_23_fu_766_p1 = p_Val2_23_fu_766_p10;

assign p_Val2_23_fu_766_p10 = tmp_127_i_fu_749_p4;

assign p_Val2_23_fu_766_p2 = (p_Val2_23_fu_766_p0 * p_Val2_23_fu_766_p1);

assign p_Val2_24_fu_808_p2 = (tmp_136_i_cast_fu_792_p1 + tmp51_cast_fu_804_p1);

assign p_Val2_2_cast_fu_355_p1 = p_Val2_2_fu_347_p3;

assign p_Val2_2_fu_347_p3 = {{p_Val2_1_fu_339_p3}, {7'd0}};

assign p_Val2_3_fu_413_p3 = ((isNeg_fu_359_p3[0:0] === 1'b1) ? tmp_130_cast_fu_403_p1 : tmp_130_fu_407_p2);

assign p_Val2_7_fu_594_p2 = ($signed(tmp_143_fu_580_p1) - $signed(tmp_149_cast_fu_590_p1));

assign p_Val2_9_fu_564_p1 = r_exp_V_3_fu_553_p3;

assign p_Val2_9_fu_564_p2 = ($signed({{1'b0}, {84'd1636647506585939924452}}) * $signed(p_Val2_9_fu_564_p1));

assign p_Val2_s_106_fu_333_p2 = (54'd0 - p_Result_18_fu_325_p3);

assign p_Val2_s_fu_259_p1 = x;

assign r_V_1_fu_671_p2 = (tmp_123_i_fu_667_p1 + tmp_122_i_fu_664_p1);

assign r_exp_V_2_fu_896_p3 = ((tmp_169_fu_883_p3[0:0] === 1'b1) ? r_exp_V_3_reg_1248_pp0_iter5_reg : r_exp_V_fu_891_p2);

assign r_exp_V_3_fu_553_p3 = ((tmp_166_fu_541_p3[0:0] === 1'b1) ? tmp_141_fu_548_p3 : tmp_138_reg_1213);

assign r_exp_V_fu_891_p2 = ($signed(13'd8191) + $signed(r_exp_V_3_reg_1248_pp0_iter5_reg));

assign sel_tmp10_fu_1049_p2 = (sel_tmp9_fu_1043_p2 | sel_tmp6_fu_1033_p2);

assign sel_tmp11_fu_1061_p2 = (tmp9_fu_1055_p2 & sel_tmp4_fu_1022_p2);

assign sel_tmp12_fu_1072_p2 = (or_cond_fu_919_p2 ^ 1'd1);

assign sel_tmp13_fu_1078_p2 = (tmp_149_reg_1229_pp0_iter5_reg & sel_tmp12_fu_1072_p2);

assign sel_tmp14_fu_1088_p2 = (sel_tmp44_demorgan_fu_1083_p2 ^ 1'd1);

assign sel_tmp15_fu_1094_p2 = (sel_tmp14_fu_1088_p2 | sel_tmp13_fu_1078_p2);

assign sel_tmp16_fu_1153_p2 = (tmp11_fu_1100_p2 | tmp10_fu_1067_p2);

assign sel_tmp1_fu_978_p2 = (not_demorgan_reg_1190_pp0_iter5_reg ^ 1'd1);

assign sel_tmp2_fu_989_p2 = (tmp_54_i_reg_1196_pp0_iter5_reg & tmp7_fu_983_p2);

assign sel_tmp3_fu_1010_p2 = (x_is_ninf_fu_853_p2 ^ 1'd1);

assign sel_tmp44_demorgan_fu_1083_p2 = (tmp_149_reg_1229_pp0_iter5_reg | icmp_fu_913_p2);

assign sel_tmp4_fu_1022_p2 = (tmp8_fu_1016_p2 & sel_tmp_fu_1005_p2);

assign sel_tmp5_fu_1028_p2 = (tmp_171_reg_1242_pp0_iter5_reg ^ 1'd1);

assign sel_tmp6_fu_1033_p2 = (tmp_149_reg_1229_pp0_iter5_reg & or_cond_fu_919_p2);

assign sel_tmp7_fu_994_p2 = (x_is_ninf_fu_853_p2 & sel_tmp1_fu_978_p2);

assign sel_tmp8_fu_1038_p2 = (tmp_149_reg_1229_pp0_iter5_reg ^ 1'd1);

assign sel_tmp9_fu_1043_p2 = (sel_tmp8_fu_1038_p2 & icmp_fu_913_p2);

assign sel_tmp_fu_1005_p2 = (tmp_54_i_not_fu_1000_p2 | p_Result_s_reg_1183_pp0_iter5_reg);

assign sh_assign_1_cast_fu_385_p1 = $signed(sh_assign_1_fu_377_p3);

assign sh_assign_1_fu_377_p3 = ((isNeg_fu_359_p3[0:0] === 1'b1) ? tmp_128_cast_fu_373_p1 : m_exp_fu_319_p2);

assign table_exp_Z1_array_s_address0 = tmp_145_fu_714_p1;

assign table_f_Z2_array_V_address0 = tmp_126_i_fu_710_p1;

assign table_f_Z3_array_V_address0 = tmp_121_i_fu_644_p1;

assign table_f_Z3_array_V_address1 = tmp_124_i_fu_649_p1;

assign tmp10_fu_1067_p2 = (tmp_171_reg_1242_pp0_iter5_reg & sel_tmp10_fu_1049_p2);

assign tmp11_fu_1100_p2 = (tmp_151_fu_924_p2 & sel_tmp15_fu_1094_p2);

assign tmp51_cast_fu_804_p1 = tmp6_fu_799_p2;

assign tmp6_fu_799_p2 = (tmp_138_i_cast_fu_796_p1 + p_Val2_20_reg_1316);

assign tmp7_fu_983_p2 = (sel_tmp1_fu_978_p2 & not_Result_i4_fu_848_p2);

assign tmp8_fu_1016_p2 = (sel_tmp3_fu_1010_p2 & sel_tmp1_fu_978_p2);

assign tmp9_fu_1055_p2 = (sel_tmp5_fu_1028_p2 & sel_tmp10_fu_1049_p2);

assign tmp_121_i_fu_644_p1 = Z4_ind_V_fu_634_p4;

assign tmp_122_i_fu_664_p1 = p_Val2_11_reg_1276;

assign tmp_123_i_fu_667_p1 = p_Val2_15_fu_654_p4;

assign tmp_124_i_fu_649_p1 = p_Val2_17_fu_620_p4;

assign tmp_126_i_fu_710_p1 = p_Val2_22_reg_1264;

assign tmp_127_i_fu_749_p4 = {{{p_Val2_22_reg_1264_pp0_iter3_reg}, {1'd0}}, {tmp_4_fu_739_p4}};

assign tmp_128_cast_fu_373_p1 = $signed(tmp_s_fu_367_p2);

assign tmp_128_fu_389_p1 = $unsigned(sh_assign_1_cast_fu_385_p1);

assign tmp_129_cast_fu_393_p1 = $unsigned(sh_assign_1_cast_fu_385_p1);

assign tmp_129_fu_397_p2 = $signed(p_Val2_2_fu_347_p3) >>> tmp_129_cast_fu_393_p1;

assign tmp_130_cast_fu_403_p1 = $signed(tmp_129_fu_397_p2);

assign tmp_130_fu_407_p2 = p_Val2_2_cast_fu_355_p1 << tmp_128_fu_389_p1;

assign tmp_130_i_fu_677_p4 = {{{p_Val2_17_reg_1271}, {9'd0}}, {table_f_Z3_array_V_q1}};

assign tmp_132_fu_421_p4 = {{p_Val2_3_fu_413_p3[70:7]}};

assign tmp_132_i_fu_718_p1 = tmp_130_i_reg_1296;

assign tmp_133_fu_431_p1 = $unsigned(sh_assign_1_cast_fu_385_p1);

assign tmp_134_fu_435_p2 = tmp_132_fu_421_p4 << tmp_133_fu_431_p1;

assign tmp_134_i_cast_fu_721_p1 = tmp_3_reg_1301;

assign tmp_135_fu_441_p2 = $signed(tmp_132_fu_421_p4) >>> tmp_133_fu_431_p1;

assign tmp_136_fu_447_p4 = {{p_Val2_3_fu_413_p3[70:55]}};

assign tmp_136_i_cast_fu_792_p1 = tmp_136_i_fu_782_p5;

assign tmp_136_i_fu_782_p5 = {{{{p_Val2_22_reg_1264_pp0_iter4_reg}, {1'd0}}, {tmp_4_reg_1321}}, {2'd0}};

assign tmp_137_fu_469_p3 = {{tmp_165_fu_457_p3}, {18'd131072}};

assign tmp_138_fu_481_p4 = {{grp_fu_1173_p3[30:18]}};

assign tmp_138_i_cast_fu_796_p1 = tmp_5_reg_1326;

assign tmp_139_fu_493_p2 = ((tmp_167_fu_490_p1 == 18'd0) ? 1'b1 : 1'b0);

assign tmp_140_fu_499_p2 = (13'd1 + tmp_138_fu_481_p4);

assign tmp_141_fu_548_p3 = ((tmp_139_reg_1219[0:0] === 1'b1) ? tmp_138_reg_1213 : tmp_140_reg_1224);

assign tmp_142_fu_513_p3 = {{tmp_1_fu_505_p3}, {7'd0}};

assign tmp_143_fu_580_p1 = p_Val2_3_reg_1203_pp0_iter1_reg;

assign tmp_144_fu_583_p3 = {{tmp_2_reg_1254}, {1'd0}};

assign tmp_145_fu_714_p1 = m_diff_hi_V_reg_1259_pp0_iter3_reg;

assign tmp_146_fu_824_p4 = {{table_exp_Z1_array_s_q0[57:8]}};

assign tmp_147_fu_857_p1 = p_Val2_25_reg_1331;

assign tmp_148_fu_866_p3 = {{p_Val2_12_fu_860_p2}, {49'd0}};

assign tmp_149_cast_fu_590_p1 = $signed(tmp_144_fu_583_p3);

assign tmp_149_fu_521_p2 = (($signed(m_exp_fu_319_p2) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign tmp_150_fu_527_p2 = ((tmp_142_fu_513_p3 != p_Val2_2_cast_fu_355_p1) ? 1'b1 : 1'b0);

assign tmp_151_fu_924_p2 = (($signed(r_exp_V_2_fu_896_p3) < $signed(13'd7170)) ? 1'b1 : 1'b0);

assign tmp_152_fu_930_p4 = {{p_Val2_14_fu_877_p2[105:54]}};

assign tmp_153_fu_940_p4 = {{p_Val2_14_fu_877_p2[104:53]}};

assign tmp_154_fu_1106_p1 = p_Result_19_fu_968_p4;

assign tmp_155_fu_1110_p3 = ((sel_tmp2_fu_989_p2[0:0] === 1'b1) ? 64'd9218868437227405312 : 64'd9223372036854775807);

assign tmp_156_cast_fu_874_p1 = p_Val2_13_reg_1336;

assign tmp_156_fu_1118_p2 = (sel_tmp2_fu_989_p2 | not_demorgan_reg_1190_pp0_iter5_reg);

assign tmp_157_fu_1123_p3 = ((tmp_156_fu_1118_p2[0:0] === 1'b1) ? tmp_155_fu_1110_p3 : tmp_154_fu_1106_p1);

assign tmp_158_fu_1131_p3 = ((sel_tmp11_fu_1061_p2[0:0] === 1'b1) ? 64'd9218868437227405312 : 64'd0);

assign tmp_159_fu_1139_p2 = (sel_tmp7_fu_994_p2 | sel_tmp11_fu_1061_p2);

assign tmp_160_fu_1145_p3 = ((tmp_159_fu_1139_p2[0:0] === 1'b1) ? tmp_158_fu_1131_p3 : tmp_157_fu_1123_p3);

assign tmp_161_fu_1159_p2 = (sel_tmp4_fu_1022_p2 & sel_tmp16_fu_1153_p2);

assign tmp_165_fu_457_p3 = p_Val2_3_fu_413_p3[32'd70];

assign tmp_166_fu_541_p3 = r_V_reg_1208[32'd30];

assign tmp_167_fu_490_p1 = grp_fu_1173_p3[17:0];

assign tmp_169_fu_883_p3 = p_Val2_14_fu_877_p2[32'd106];

assign tmp_170_fu_903_p4 = {{r_exp_V_2_fu_896_p3[12:10]}};

assign tmp_172_fu_958_p1 = r_exp_V_2_fu_896_p3[10:0];

assign tmp_1_fu_505_p3 = ((isNeg_fu_359_p3[0:0] === 1'b1) ? tmp_134_fu_435_p2 : tmp_135_fu_441_p2);

assign tmp_4_fu_739_p4 = {{table_f_Z2_array_V_q0[41:2]}};

assign tmp_54_i_fu_309_p2 = (tmp_i_fu_285_p2 & tmp_i1_fu_303_p2);

assign tmp_54_i_not_fu_1000_p2 = (tmp_54_i_reg_1196_pp0_iter5_reg ^ 1'd1);

assign tmp_cast_fu_729_p1 = tmp_fu_724_p2;

assign tmp_fu_724_p2 = (tmp_134_i_cast_fu_721_p1 + r_V_1_reg_1291);

assign tmp_i1_fu_303_p2 = ((loc_V_3_fu_281_p1 == 52'd0) ? 1'b1 : 1'b0);

assign tmp_i2_cast_fu_315_p1 = loc_V_fu_271_p4;

assign tmp_i_105_fu_291_p2 = ((loc_V_3_fu_281_p1 != 52'd0) ? 1'b1 : 1'b0);

assign tmp_i_fu_285_p2 = ((loc_V_fu_271_p4 == 11'd2047) ? 1'b1 : 1'b0);

assign tmp_s_fu_367_p2 = (11'd1023 - loc_V_fu_271_p4);

assign x_is_ninf_fu_853_p2 = (tmp_54_i_reg_1196_pp0_iter5_reg & p_Result_s_reg_1183_pp0_iter5_reg);

always @ (posedge ap_clk) begin
    tmp_130_i_reg_1296[34:26] <= 9'b000000000;
end

endmodule //exp_generic_double_s
