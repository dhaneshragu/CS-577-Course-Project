// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module k2c_dense (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        output_array_address0,
        output_array_ce0,
        output_array_we0,
        output_array_d0,
        output_array_q0,
        input_array_address0,
        input_array_ce0,
        input_array_q0,
        input_ndim_read,
        input_numel_read,
        input_shape_address0,
        input_shape_ce0,
        input_shape_q0,
        kernel_array_address0,
        kernel_array_ce0,
        kernel_array_q0,
        kernel_shape_address0,
        kernel_shape_ce0,
        kernel_shape_q0,
        kernel_shape_address1,
        kernel_shape_ce1,
        kernel_shape_q1,
        bias_array_address0,
        bias_array_ce0,
        bias_array_q0,
        fwork_address0,
        fwork_ce0,
        fwork_we0,
        fwork_d0,
        fwork_q0,
        fwork_address1,
        fwork_ce1,
        fwork_q1,
        axesA_address0,
        axesA_ce0,
        axesA_we0,
        axesA_d0,
        axesA_q0
);

parameter    ap_ST_fsm_state1 = 13'd1;
parameter    ap_ST_fsm_state2 = 13'd2;
parameter    ap_ST_fsm_state3 = 13'd4;
parameter    ap_ST_fsm_state4 = 13'd8;
parameter    ap_ST_fsm_state5 = 13'd16;
parameter    ap_ST_fsm_state6 = 13'd32;
parameter    ap_ST_fsm_state7 = 13'd64;
parameter    ap_ST_fsm_state8 = 13'd128;
parameter    ap_ST_fsm_pp0_stage0 = 13'd256;
parameter    ap_ST_fsm_pp0_stage1 = 13'd512;
parameter    ap_ST_fsm_pp0_stage2 = 13'd1024;
parameter    ap_ST_fsm_pp0_stage3 = 13'd2048;
parameter    ap_ST_fsm_state17 = 13'd4096;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] output_array_address0;
output   output_array_ce0;
output   output_array_we0;
output  [31:0] output_array_d0;
input  [31:0] output_array_q0;
output  [11:0] input_array_address0;
output   input_array_ce0;
input  [31:0] input_array_q0;
input  [63:0] input_ndim_read;
input  [63:0] input_numel_read;
output  [2:0] input_shape_address0;
output   input_shape_ce0;
input  [63:0] input_shape_q0;
output  [18:0] kernel_array_address0;
output   kernel_array_ce0;
input  [31:0] kernel_array_q0;
output  [2:0] kernel_shape_address0;
output   kernel_shape_ce0;
input  [63:0] kernel_shape_q0;
output  [2:0] kernel_shape_address1;
output   kernel_shape_ce1;
input  [63:0] kernel_shape_q1;
output  [11:0] bias_array_address0;
output   bias_array_ce0;
input  [31:0] bias_array_q0;
output  [18:0] fwork_address0;
output   fwork_ce0;
output   fwork_we0;
output  [31:0] fwork_d0;
input  [31:0] fwork_q0;
output  [18:0] fwork_address1;
output   fwork_ce1;
input  [31:0] fwork_q1;
output  [0:0] axesA_address0;
output   axesA_ce0;
output   axesA_we0;
output  [63:0] axesA_d0;
input  [63:0] axesA_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] output_array_address0;
reg output_array_ce0;
reg output_array_we0;
reg[31:0] output_array_d0;
reg[11:0] input_array_address0;
reg input_array_ce0;
reg[2:0] input_shape_address0;
reg input_shape_ce0;
reg[18:0] kernel_array_address0;
reg kernel_array_ce0;
reg[2:0] kernel_shape_address0;
reg kernel_shape_ce0;
reg kernel_shape_ce1;
reg[11:0] bias_array_address0;
reg bias_array_ce0;
reg[0:0] axesA_address0;
reg axesA_ce0;
reg axesA_we0;

(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] tmp_45_reg_214;
reg   [63:0] k_reg_224;
wire   [0:0] tmp_fu_277_p2;
reg   [0:0] tmp_reg_466;
wire   [0:0] icmp_fu_300_p2;
reg   [0:0] icmp_reg_470;
reg   [63:0] outcols_reg_490;
wire    ap_CS_fsm_state6;
wire  signed [19:0] tmp_80_fu_313_p1;
reg  signed [19:0] tmp_80_reg_495;
wire  signed [12:0] tmp_81_fu_317_p1;
reg  signed [12:0] tmp_81_reg_500;
reg   [63:0] innerdim_reg_505;
wire  signed [12:0] tmp_82_fu_321_p1;
reg  signed [12:0] tmp_82_reg_510;
wire   [127:0] bound_fu_333_p2;
reg   [127:0] bound_reg_515;
wire   [127:0] indvar_flatten_next_fu_344_p2;
reg   [127:0] indvar_flatten_next_reg_523;
wire    ap_CS_fsm_state7;
wire   [63:0] j_mid2_fu_355_p3;
reg   [63:0] j_mid2_reg_528;
wire   [0:0] exitcond_flatten_fu_339_p2;
wire   [63:0] outrowidx_mid2_v_v_fu_370_p3;
reg   [63:0] outrowidx_mid2_v_v_reg_533;
wire  signed [12:0] inneridx_mid2_fu_451_p2;
reg  signed [12:0] inneridx_mid2_reg_538;
wire   [19:0] tmp_84_fu_382_p1;
reg   [19:0] tmp_84_reg_543;
reg   [11:0] output_array_addr_reg_553;
wire    ap_CS_fsm_state8;
wire   [0:0] exitcond_fu_394_p2;
reg   [0:0] exitcond_reg_563;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state9_pp0_stage0_iter0;
wire    ap_block_state13_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_reg_563_pp0_iter1_reg;
wire   [63:0] k_4_fu_399_p2;
reg   [63:0] k_4_reg_567;
reg    ap_enable_reg_pp0_iter0;
reg   [31:0] input_array_load_reg_582;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state10_pp0_stage1_iter0;
wire    ap_block_state14_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [31:0] kernel_array_load_reg_587;
wire   [31:0] grp_fu_273_p2;
reg   [31:0] tmp_49_reg_592;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state12_pp0_stage3_iter0;
wire    ap_block_state16_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire   [31:0] grp_fu_267_p2;
reg    ap_enable_reg_pp0_iter1;
wire   [63:0] j_12_fu_438_p2;
wire    ap_CS_fsm_state17;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state9;
wire    ap_block_pp0_stage3_subdone;
wire    grp_k2c_dot_1_fu_235_ap_start;
wire    grp_k2c_dot_1_fu_235_ap_done;
wire    grp_k2c_dot_1_fu_235_ap_idle;
wire    grp_k2c_dot_1_fu_235_ap_ready;
wire   [11:0] grp_k2c_dot_1_fu_235_C_array_address0;
wire    grp_k2c_dot_1_fu_235_C_array_ce0;
wire    grp_k2c_dot_1_fu_235_C_array_we0;
wire   [31:0] grp_k2c_dot_1_fu_235_C_array_d0;
wire   [11:0] grp_k2c_dot_1_fu_235_Ar_array_address0;
wire    grp_k2c_dot_1_fu_235_Ar_array_ce0;
wire   [2:0] grp_k2c_dot_1_fu_235_Ar_shape_address0;
wire    grp_k2c_dot_1_fu_235_Ar_shape_ce0;
wire   [18:0] grp_k2c_dot_1_fu_235_B_array_address0;
wire    grp_k2c_dot_1_fu_235_B_array_ce0;
wire   [2:0] grp_k2c_dot_1_fu_235_B_shape_address0;
wire    grp_k2c_dot_1_fu_235_B_shape_ce0;
wire   [0:0] grp_k2c_dot_1_fu_235_axesA_address0;
wire    grp_k2c_dot_1_fu_235_axesA_ce0;
wire   [18:0] grp_k2c_dot_1_fu_235_fwork_address0;
wire    grp_k2c_dot_1_fu_235_fwork_ce0;
wire    grp_k2c_dot_1_fu_235_fwork_we0;
wire   [31:0] grp_k2c_dot_1_fu_235_fwork_d0;
wire   [18:0] grp_k2c_dot_1_fu_235_fwork_address1;
wire    grp_k2c_dot_1_fu_235_fwork_ce1;
wire    grp_k2c_bias_add_fu_255_ap_start;
wire    grp_k2c_bias_add_fu_255_ap_done;
wire    grp_k2c_bias_add_fu_255_ap_idle;
wire    grp_k2c_bias_add_fu_255_ap_ready;
wire   [11:0] grp_k2c_bias_add_fu_255_A_array_address0;
wire    grp_k2c_bias_add_fu_255_A_array_ce0;
wire    grp_k2c_bias_add_fu_255_A_array_we0;
wire   [31:0] grp_k2c_bias_add_fu_255_A_array_d0;
wire   [11:0] grp_k2c_bias_add_fu_255_b_array_address0;
wire    grp_k2c_bias_add_fu_255_b_array_ce0;
reg   [127:0] indvar_flatten_reg_181;
reg   [63:0] i_reg_192;
reg   [63:0] j_reg_203;
reg   [63:0] ap_phi_mux_k_phi_fu_228_p4;
wire    ap_block_pp0_stage0;
reg    grp_k2c_dot_1_fu_235_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg    grp_k2c_bias_add_fu_255_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire   [63:0] tmp_44_cast_fu_390_p1;
wire   [63:0] tmp_46_cast_fu_418_p1;
wire   [63:0] tmp_48_cast_fu_433_p1;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire   [62:0] tmp_79_fu_290_p4;
wire   [63:0] outrows2_fu_306_p3;
wire   [63:0] bound_fu_333_p0;
wire   [63:0] bound_fu_333_p1;
wire   [0:0] exitcond14_fu_350_p2;
wire   [63:0] i_s_fu_364_p2;
wire  signed [12:0] grp_fu_443_p3;
wire   [12:0] tmp_87_fu_409_p1;
(* use_dsp48 = "no" *) wire   [12:0] tmp_46_fu_413_p2;
wire  signed [19:0] tmp_86_fu_405_p1;
wire   [19:0] tmp_47_fu_423_p2;
wire   [19:0] tmp_48_fu_428_p2;
wire  signed [12:0] tmp_83_fu_378_p1;
wire   [12:0] grp_fu_443_p2;
reg    ap_block_state5_on_subcall_done;
reg   [12:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_state11_pp0_stage2_iter0;
wire    ap_block_state15_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [127:0] bound_fu_333_p00;
wire   [127:0] bound_fu_333_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 13'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_k2c_dot_1_fu_235_ap_start_reg = 1'b0;
#0 grp_k2c_bias_add_fu_255_ap_start_reg = 1'b0;
end

k2c_dot_1 grp_k2c_dot_1_fu_235(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_dot_1_fu_235_ap_start),
    .ap_done(grp_k2c_dot_1_fu_235_ap_done),
    .ap_idle(grp_k2c_dot_1_fu_235_ap_idle),
    .ap_ready(grp_k2c_dot_1_fu_235_ap_ready),
    .C_array_address0(grp_k2c_dot_1_fu_235_C_array_address0),
    .C_array_ce0(grp_k2c_dot_1_fu_235_C_array_ce0),
    .C_array_we0(grp_k2c_dot_1_fu_235_C_array_we0),
    .C_array_d0(grp_k2c_dot_1_fu_235_C_array_d0),
    .Ar_array_address0(grp_k2c_dot_1_fu_235_Ar_array_address0),
    .Ar_array_ce0(grp_k2c_dot_1_fu_235_Ar_array_ce0),
    .Ar_array_q0(input_array_q0),
    .Ar_ndim_read(input_ndim_read),
    .Ar_numel_read(input_numel_read),
    .Ar_shape_address0(grp_k2c_dot_1_fu_235_Ar_shape_address0),
    .Ar_shape_ce0(grp_k2c_dot_1_fu_235_Ar_shape_ce0),
    .Ar_shape_q0(input_shape_q0),
    .B_array_address0(grp_k2c_dot_1_fu_235_B_array_address0),
    .B_array_ce0(grp_k2c_dot_1_fu_235_B_array_ce0),
    .B_array_q0(kernel_array_q0),
    .B_shape_address0(grp_k2c_dot_1_fu_235_B_shape_address0),
    .B_shape_ce0(grp_k2c_dot_1_fu_235_B_shape_ce0),
    .B_shape_q0(kernel_shape_q0),
    .axesA_address0(grp_k2c_dot_1_fu_235_axesA_address0),
    .axesA_ce0(grp_k2c_dot_1_fu_235_axesA_ce0),
    .axesA_q0(axesA_q0),
    .fwork_address0(grp_k2c_dot_1_fu_235_fwork_address0),
    .fwork_ce0(grp_k2c_dot_1_fu_235_fwork_ce0),
    .fwork_we0(grp_k2c_dot_1_fu_235_fwork_we0),
    .fwork_d0(grp_k2c_dot_1_fu_235_fwork_d0),
    .fwork_q0(fwork_q0),
    .fwork_address1(grp_k2c_dot_1_fu_235_fwork_address1),
    .fwork_ce1(grp_k2c_dot_1_fu_235_fwork_ce1),
    .fwork_q1(fwork_q1)
);

k2c_bias_add grp_k2c_bias_add_fu_255(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_bias_add_fu_255_ap_start),
    .ap_done(grp_k2c_bias_add_fu_255_ap_done),
    .ap_idle(grp_k2c_bias_add_fu_255_ap_idle),
    .ap_ready(grp_k2c_bias_add_fu_255_ap_ready),
    .A_array_address0(grp_k2c_bias_add_fu_255_A_array_address0),
    .A_array_ce0(grp_k2c_bias_add_fu_255_A_array_ce0),
    .A_array_we0(grp_k2c_bias_add_fu_255_A_array_we0),
    .A_array_d0(grp_k2c_bias_add_fu_255_A_array_d0),
    .A_array_q0(output_array_q0),
    .A_numel_read(64'd100),
    .b_array_address0(grp_k2c_bias_add_fu_255_b_array_address0),
    .b_array_ce0(grp_k2c_bias_add_fu_255_b_array_ce0),
    .b_array_q0(bias_array_q0),
    .b_numel_read(64'd100)
);

face_classifier_cdEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_cdEe_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_45_reg_214),
    .din1(tmp_49_reg_592),
    .ce(1'b1),
    .dout(grp_fu_267_p2)
);

face_classifier_ceOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_ceOg_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(input_array_load_reg_582),
    .din1(kernel_array_load_reg_587),
    .ce(1'b1),
    .dout(grp_fu_273_p2)
);

face_classifier_chbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
face_classifier_chbi_U40(
    .din0(tmp_81_reg_500),
    .din1(tmp_83_fu_378_p1),
    .din2(grp_fu_443_p2),
    .dout(grp_fu_443_p3)
);

face_classifier_cibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
face_classifier_cibs_U41(
    .din0(tmp_82_reg_510),
    .din1(tmp_83_fu_378_p1),
    .dout(inneridx_mid2_fu_451_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state9);
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_bias_add_fu_255_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_k2c_bias_add_fu_255_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_bias_add_fu_255_ap_ready == 1'b1)) begin
            grp_k2c_bias_add_fu_255_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_dot_1_fu_235_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_k2c_dot_1_fu_235_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_dot_1_fu_235_ap_ready == 1'b1)) begin
            grp_k2c_dot_1_fu_235_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i_reg_192 <= outrowidx_mid2_v_v_reg_533;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        i_reg_192 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        indvar_flatten_reg_181 <= indvar_flatten_next_reg_523;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        indvar_flatten_reg_181 <= 128'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        j_reg_203 <= j_12_fu_438_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        j_reg_203 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_reg_563 == 1'd0))) begin
        k_reg_224 <= k_4_reg_567;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        k_reg_224 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_reg_563_pp0_iter1_reg == 1'd0))) begin
        tmp_45_reg_214 <= grp_fu_267_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_45_reg_214 <= bias_array_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        bound_reg_515 <= bound_fu_333_p2;
        innerdim_reg_505 <= kernel_shape_q1;
        outcols_reg_490 <= kernel_shape_q0;
        tmp_80_reg_495 <= tmp_80_fu_313_p1;
        tmp_81_reg_500 <= tmp_81_fu_317_p1;
        tmp_82_reg_510 <= tmp_82_fu_321_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_reg_563 <= exitcond_fu_394_p2;
        exitcond_reg_563_pp0_iter1_reg <= exitcond_reg_563;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_277_p2 == 1'd1))) begin
        icmp_reg_470 <= icmp_fu_300_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        indvar_flatten_next_reg_523 <= indvar_flatten_next_fu_344_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (exitcond_flatten_fu_339_p2 == 1'd0))) begin
        inneridx_mid2_reg_538 <= inneridx_mid2_fu_451_p2;
        j_mid2_reg_528 <= j_mid2_fu_355_p3;
        output_array_addr_reg_553 <= tmp_44_cast_fu_390_p1;
        outrowidx_mid2_v_v_reg_533 <= outrowidx_mid2_v_v_fu_370_p3;
        tmp_84_reg_543 <= tmp_84_fu_382_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (exitcond_reg_563 == 1'd0))) begin
        input_array_load_reg_582 <= input_array_q0;
        kernel_array_load_reg_587 <= kernel_array_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_4_reg_567 <= k_4_fu_399_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_reg_563 == 1'd0))) begin
        tmp_49_reg_592 <= grp_fu_273_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_reg_466 <= tmp_fu_277_p2;
    end
end

always @ (*) begin
    if ((exitcond_fu_394_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_reg_563 == 1'd0))) begin
        ap_phi_mux_k_phi_fu_228_p4 = k_4_reg_567;
    end else begin
        ap_phi_mux_k_phi_fu_228_p4 = k_reg_224;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        axesA_address0 = 1'd0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        axesA_address0 = grp_k2c_dot_1_fu_235_axesA_address0;
    end else begin
        axesA_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        axesA_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        axesA_ce0 = grp_k2c_dot_1_fu_235_axesA_ce0;
    end else begin
        axesA_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_277_p2 == 1'd0))) begin
        axesA_we0 = 1'b1;
    end else begin
        axesA_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        bias_array_address0 = j_mid2_fu_355_p3;
    end else if (((1'b1 == ap_CS_fsm_state5) & (tmp_reg_466 == 1'd0))) begin
        bias_array_address0 = grp_k2c_bias_add_fu_255_b_array_address0;
    end else begin
        bias_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        bias_array_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state5) & (tmp_reg_466 == 1'd0))) begin
        bias_array_ce0 = grp_k2c_bias_add_fu_255_b_array_ce0;
    end else begin
        bias_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_array_address0 = tmp_46_cast_fu_418_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        input_array_address0 = grp_k2c_dot_1_fu_235_Ar_array_address0;
    end else begin
        input_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        input_array_ce0 = grp_k2c_dot_1_fu_235_Ar_array_ce0;
    end else begin
        input_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        input_shape_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        input_shape_address0 = grp_k2c_dot_1_fu_235_Ar_shape_address0;
    end else begin
        input_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        input_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        input_shape_ce0 = grp_k2c_dot_1_fu_235_Ar_shape_ce0;
    end else begin
        input_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_array_address0 = tmp_48_cast_fu_433_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        kernel_array_address0 = grp_k2c_dot_1_fu_235_B_array_address0;
    end else begin
        kernel_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        kernel_array_ce0 = grp_k2c_dot_1_fu_235_B_array_ce0;
    end else begin
        kernel_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        kernel_shape_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        kernel_shape_address0 = grp_k2c_dot_1_fu_235_B_shape_address0;
    end else begin
        kernel_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        kernel_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        kernel_shape_ce0 = grp_k2c_dot_1_fu_235_B_shape_ce0;
    end else begin
        kernel_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        kernel_shape_ce1 = 1'b1;
    end else begin
        kernel_shape_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        output_array_address0 = output_array_addr_reg_553;
    end else if (((1'b1 == ap_CS_fsm_state5) & (tmp_reg_466 == 1'd0))) begin
        output_array_address0 = grp_k2c_bias_add_fu_255_A_array_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_array_address0 = grp_k2c_dot_1_fu_235_C_array_address0;
    end else begin
        output_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        output_array_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state5) & (tmp_reg_466 == 1'd0))) begin
        output_array_ce0 = grp_k2c_bias_add_fu_255_A_array_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_array_ce0 = grp_k2c_dot_1_fu_235_C_array_ce0;
    end else begin
        output_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        output_array_d0 = grp_fu_267_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        output_array_d0 = bias_array_q0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (tmp_reg_466 == 1'd0))) begin
        output_array_d0 = grp_k2c_bias_add_fu_255_A_array_d0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_array_d0 = grp_k2c_dot_1_fu_235_C_array_d0;
    end else begin
        output_array_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_reg_563_pp0_iter1_reg == 1'd0)))) begin
        output_array_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state5) & (tmp_reg_466 == 1'd0))) begin
        output_array_we0 = grp_k2c_bias_add_fu_255_A_array_we0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_array_we0 = grp_k2c_dot_1_fu_235_C_array_we0;
    end else begin
        output_array_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_277_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_277_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((grp_k2c_dot_1_fu_235_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (exitcond_flatten_fu_339_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_fu_394_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_fu_394_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((~((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b0)) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_on_subcall_done = ((grp_k2c_bias_add_fu_255_ap_done == 1'b0) & (tmp_reg_466 == 1'd0));
end

assign ap_block_state9_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign axesA_d0 = ($signed(input_ndim_read) + $signed(64'd18446744073709551615));

assign bound_fu_333_p0 = bound_fu_333_p00;

assign bound_fu_333_p00 = kernel_shape_q0;

assign bound_fu_333_p1 = bound_fu_333_p10;

assign bound_fu_333_p10 = outrows2_fu_306_p3;

assign bound_fu_333_p2 = (bound_fu_333_p0 * bound_fu_333_p1);

assign exitcond14_fu_350_p2 = ((j_reg_203 == outcols_reg_490) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_339_p2 = ((indvar_flatten_reg_181 == bound_reg_515) ? 1'b1 : 1'b0);

assign exitcond_fu_394_p2 = ((ap_phi_mux_k_phi_fu_228_p4 == innerdim_reg_505) ? 1'b1 : 1'b0);

assign fwork_address0 = grp_k2c_dot_1_fu_235_fwork_address0;

assign fwork_address1 = grp_k2c_dot_1_fu_235_fwork_address1;

assign fwork_ce0 = grp_k2c_dot_1_fu_235_fwork_ce0;

assign fwork_ce1 = grp_k2c_dot_1_fu_235_fwork_ce1;

assign fwork_d0 = grp_k2c_dot_1_fu_235_fwork_d0;

assign fwork_we0 = grp_k2c_dot_1_fu_235_fwork_we0;

assign grp_fu_443_p2 = j_mid2_fu_355_p3[12:0];

assign grp_k2c_bias_add_fu_255_ap_start = grp_k2c_bias_add_fu_255_ap_start_reg;

assign grp_k2c_dot_1_fu_235_ap_start = grp_k2c_dot_1_fu_235_ap_start_reg;

assign i_s_fu_364_p2 = (64'd1 + i_reg_192);

assign icmp_fu_300_p2 = ((tmp_79_fu_290_p4 != 63'd0) ? 1'b1 : 1'b0);

assign indvar_flatten_next_fu_344_p2 = (indvar_flatten_reg_181 + 128'd1);

assign j_12_fu_438_p2 = (j_mid2_reg_528 + 64'd1);

assign j_mid2_fu_355_p3 = ((exitcond14_fu_350_p2[0:0] === 1'b1) ? 64'd0 : j_reg_203);

assign k_4_fu_399_p2 = (ap_phi_mux_k_phi_fu_228_p4 + 64'd1);

assign kernel_shape_address1 = 64'd0;

assign outrowidx_mid2_v_v_fu_370_p3 = ((exitcond14_fu_350_p2[0:0] === 1'b1) ? i_s_fu_364_p2 : i_reg_192);

assign outrows2_fu_306_p3 = ((icmp_reg_470[0:0] === 1'b1) ? input_shape_q0 : 64'd1);

assign tmp_44_cast_fu_390_p1 = $unsigned(grp_fu_443_p3);

assign tmp_46_cast_fu_418_p1 = tmp_46_fu_413_p2;

assign tmp_46_fu_413_p2 = ($signed(tmp_87_fu_409_p1) + $signed(inneridx_mid2_reg_538));

assign tmp_47_fu_423_p2 = ($signed(tmp_80_reg_495) * $signed(tmp_86_fu_405_p1));

assign tmp_48_cast_fu_433_p1 = tmp_48_fu_428_p2;

assign tmp_48_fu_428_p2 = (tmp_47_fu_423_p2 + tmp_84_reg_543);

assign tmp_79_fu_290_p4 = {{input_ndim_read[63:1]}};

assign tmp_80_fu_313_p1 = kernel_shape_q0[19:0];

assign tmp_81_fu_317_p1 = kernel_shape_q0[12:0];

assign tmp_82_fu_321_p1 = kernel_shape_q1[12:0];

assign tmp_83_fu_378_p1 = outrowidx_mid2_v_v_fu_370_p3[12:0];

assign tmp_84_fu_382_p1 = j_mid2_fu_355_p3[19:0];

assign tmp_86_fu_405_p1 = ap_phi_mux_k_phi_fu_228_p4[19:0];

assign tmp_87_fu_409_p1 = ap_phi_mux_k_phi_fu_228_p4[12:0];

assign tmp_fu_277_p2 = ((input_ndim_read < 64'd3) ? 1'b1 : 1'b0);

endmodule //k2c_dense
