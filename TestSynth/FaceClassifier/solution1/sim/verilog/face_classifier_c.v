// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="face_classifier_c,hls_ip_2018_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu160-flgc2104-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.254295,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=2066,HLS_SYN_DSP=225,HLS_SYN_FF=95692,HLS_SYN_LUT=84503,HLS_VERSION=2018_2}" *)

module face_classifier_c (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        dense_input_input_array_address0,
        dense_input_input_array_ce0,
        dense_input_input_array_q0,
        dense_input_input_ndim,
        dense_input_input_numel,
        dense_input_input_shape_address0,
        dense_input_input_shape_ce0,
        dense_input_input_shape_q0,
        activation_3_output_array_address0,
        activation_3_output_array_ce0,
        activation_3_output_array_we0,
        activation_3_output_array_d0,
        activation_3_output_ndim,
        activation_3_output_ndim_ap_vld,
        activation_3_output_numel,
        activation_3_output_numel_ap_vld,
        activation_3_output_shape_address0,
        activation_3_output_shape_ce0,
        activation_3_output_shape_we0,
        activation_3_output_shape_d0,
        activation_3_output_shape_address1,
        activation_3_output_shape_ce1,
        activation_3_output_shape_we1,
        activation_3_output_shape_d1
);

parameter    ap_ST_fsm_state1 = 141'd1;
parameter    ap_ST_fsm_state2 = 141'd2;
parameter    ap_ST_fsm_state3 = 141'd4;
parameter    ap_ST_fsm_state4 = 141'd8;
parameter    ap_ST_fsm_state5 = 141'd16;
parameter    ap_ST_fsm_state6 = 141'd32;
parameter    ap_ST_fsm_state7 = 141'd64;
parameter    ap_ST_fsm_state8 = 141'd128;
parameter    ap_ST_fsm_state9 = 141'd256;
parameter    ap_ST_fsm_pp1_stage0 = 141'd512;
parameter    ap_ST_fsm_state12 = 141'd1024;
parameter    ap_ST_fsm_pp2_stage0 = 141'd2048;
parameter    ap_ST_fsm_state15 = 141'd4096;
parameter    ap_ST_fsm_state16 = 141'd8192;
parameter    ap_ST_fsm_state17 = 141'd16384;
parameter    ap_ST_fsm_state18 = 141'd32768;
parameter    ap_ST_fsm_state19 = 141'd65536;
parameter    ap_ST_fsm_state20 = 141'd131072;
parameter    ap_ST_fsm_pp4_stage0 = 141'd262144;
parameter    ap_ST_fsm_state23 = 141'd524288;
parameter    ap_ST_fsm_pp5_stage0 = 141'd1048576;
parameter    ap_ST_fsm_state26 = 141'd2097152;
parameter    ap_ST_fsm_pp6_stage0 = 141'd4194304;
parameter    ap_ST_fsm_state29 = 141'd8388608;
parameter    ap_ST_fsm_pp7_stage0 = 141'd16777216;
parameter    ap_ST_fsm_state32 = 141'd33554432;
parameter    ap_ST_fsm_state33 = 141'd67108864;
parameter    ap_ST_fsm_state34 = 141'd134217728;
parameter    ap_ST_fsm_state35 = 141'd268435456;
parameter    ap_ST_fsm_state36 = 141'd536870912;
parameter    ap_ST_fsm_state37 = 141'd1073741824;
parameter    ap_ST_fsm_state38 = 141'd2147483648;
parameter    ap_ST_fsm_pp9_stage0 = 141'd4294967296;
parameter    ap_ST_fsm_state41 = 141'd8589934592;
parameter    ap_ST_fsm_pp10_stage0 = 141'd17179869184;
parameter    ap_ST_fsm_state44 = 141'd34359738368;
parameter    ap_ST_fsm_state45 = 141'd68719476736;
parameter    ap_ST_fsm_state46 = 141'd137438953472;
parameter    ap_ST_fsm_state47 = 141'd274877906944;
parameter    ap_ST_fsm_state48 = 141'd549755813888;
parameter    ap_ST_fsm_state49 = 141'd1099511627776;
parameter    ap_ST_fsm_pp12_stage0 = 141'd2199023255552;
parameter    ap_ST_fsm_state52 = 141'd4398046511104;
parameter    ap_ST_fsm_pp13_stage0 = 141'd8796093022208;
parameter    ap_ST_fsm_state55 = 141'd17592186044416;
parameter    ap_ST_fsm_pp14_stage0 = 141'd35184372088832;
parameter    ap_ST_fsm_state58 = 141'd70368744177664;
parameter    ap_ST_fsm_pp15_stage0 = 141'd140737488355328;
parameter    ap_ST_fsm_state61 = 141'd281474976710656;
parameter    ap_ST_fsm_state62 = 141'd562949953421312;
parameter    ap_ST_fsm_state63 = 141'd1125899906842624;
parameter    ap_ST_fsm_state64 = 141'd2251799813685248;
parameter    ap_ST_fsm_state65 = 141'd4503599627370496;
parameter    ap_ST_fsm_state66 = 141'd9007199254740992;
parameter    ap_ST_fsm_state67 = 141'd18014398509481984;
parameter    ap_ST_fsm_pp17_stage0 = 141'd36028797018963968;
parameter    ap_ST_fsm_state70 = 141'd72057594037927936;
parameter    ap_ST_fsm_pp18_stage0 = 141'd144115188075855872;
parameter    ap_ST_fsm_state73 = 141'd288230376151711744;
parameter    ap_ST_fsm_state74 = 141'd576460752303423488;
parameter    ap_ST_fsm_state75 = 141'd1152921504606846976;
parameter    ap_ST_fsm_state76 = 141'd2305843009213693952;
parameter    ap_ST_fsm_state77 = 141'd4611686018427387904;
parameter    ap_ST_fsm_pp19_stage0 = 141'd9223372036854775808;
parameter    ap_ST_fsm_state113 = 141'd18446744073709551616;
parameter    ap_ST_fsm_pp20_stage0 = 141'd36893488147419103232;
parameter    ap_ST_fsm_state116 = 141'd73786976294838206464;
parameter    ap_ST_fsm_pp21_stage0 = 141'd147573952589676412928;
parameter    ap_ST_fsm_state119 = 141'd295147905179352825856;
parameter    ap_ST_fsm_pp22_stage0 = 141'd590295810358705651712;
parameter    ap_ST_fsm_state122 = 141'd1180591620717411303424;
parameter    ap_ST_fsm_pp23_stage0 = 141'd2361183241434822606848;
parameter    ap_ST_fsm_state125 = 141'd4722366482869645213696;
parameter    ap_ST_fsm_state126 = 141'd9444732965739290427392;
parameter    ap_ST_fsm_state127 = 141'd18889465931478580854784;
parameter    ap_ST_fsm_state128 = 141'd37778931862957161709568;
parameter    ap_ST_fsm_pp24_stage0 = 141'd75557863725914323419136;
parameter    ap_ST_fsm_state164 = 141'd151115727451828646838272;
parameter    ap_ST_fsm_pp25_stage0 = 141'd302231454903657293676544;
parameter    ap_ST_fsm_state167 = 141'd604462909807314587353088;
parameter    ap_ST_fsm_pp26_stage0 = 141'd1208925819614629174706176;
parameter    ap_ST_fsm_state170 = 141'd2417851639229258349412352;
parameter    ap_ST_fsm_pp27_stage0 = 141'd4835703278458516698824704;
parameter    ap_ST_fsm_state173 = 141'd9671406556917033397649408;
parameter    ap_ST_fsm_pp28_stage0 = 141'd19342813113834066795298816;
parameter    ap_ST_fsm_state176 = 141'd38685626227668133590597632;
parameter    ap_ST_fsm_state177 = 141'd77371252455336267181195264;
parameter    ap_ST_fsm_state178 = 141'd154742504910672534362390528;
parameter    ap_ST_fsm_state179 = 141'd309485009821345068724781056;
parameter    ap_ST_fsm_state180 = 141'd618970019642690137449562112;
parameter    ap_ST_fsm_state181 = 141'd1237940039285380274899124224;
parameter    ap_ST_fsm_state182 = 141'd2475880078570760549798248448;
parameter    ap_ST_fsm_state183 = 141'd4951760157141521099596496896;
parameter    ap_ST_fsm_state184 = 141'd9903520314283042199192993792;
parameter    ap_ST_fsm_state185 = 141'd19807040628566084398385987584;
parameter    ap_ST_fsm_state186 = 141'd39614081257132168796771975168;
parameter    ap_ST_fsm_state187 = 141'd79228162514264337593543950336;
parameter    ap_ST_fsm_state188 = 141'd158456325028528675187087900672;
parameter    ap_ST_fsm_state189 = 141'd316912650057057350374175801344;
parameter    ap_ST_fsm_state190 = 141'd633825300114114700748351602688;
parameter    ap_ST_fsm_state191 = 141'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state192 = 141'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state193 = 141'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state194 = 141'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state195 = 141'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state196 = 141'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state197 = 141'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state198 = 141'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state199 = 141'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state200 = 141'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state201 = 141'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state202 = 141'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state203 = 141'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state204 = 141'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state205 = 141'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state206 = 141'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state207 = 141'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state208 = 141'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state209 = 141'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state210 = 141'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state211 = 141'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state212 = 141'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state213 = 141'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state214 = 141'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state215 = 141'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state216 = 141'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state217 = 141'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state218 = 141'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state219 = 141'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state220 = 141'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state221 = 141'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state222 = 141'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state223 = 141'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state224 = 141'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state225 = 141'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state226 = 141'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state227 = 141'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state228 = 141'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state229 = 141'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state230 = 141'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state231 = 141'd1393796574908163946345982392040522594123776;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] dense_input_input_array_address0;
output   dense_input_input_array_ce0;
input  [31:0] dense_input_input_array_q0;
input  [63:0] dense_input_input_ndim;
input  [63:0] dense_input_input_numel;
output  [2:0] dense_input_input_shape_address0;
output   dense_input_input_shape_ce0;
input  [63:0] dense_input_input_shape_q0;
output  [11:0] activation_3_output_array_address0;
output   activation_3_output_array_ce0;
output   activation_3_output_array_we0;
output  [31:0] activation_3_output_array_d0;
output  [63:0] activation_3_output_ndim;
output   activation_3_output_ndim_ap_vld;
output  [63:0] activation_3_output_numel;
output   activation_3_output_numel_ap_vld;
output  [2:0] activation_3_output_shape_address0;
output   activation_3_output_shape_ce0;
output   activation_3_output_shape_we0;
output  [63:0] activation_3_output_shape_d0;
output  [2:0] activation_3_output_shape_address1;
output   activation_3_output_shape_ce1;
output   activation_3_output_shape_we1;
output  [63:0] activation_3_output_shape_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg activation_3_output_array_ce0;
reg activation_3_output_array_we0;
reg activation_3_output_ndim_ap_vld;
reg activation_3_output_numel_ap_vld;
reg[2:0] activation_3_output_shape_address0;
reg activation_3_output_shape_ce0;
reg activation_3_output_shape_we0;
reg[63:0] activation_3_output_shape_d0;
reg[2:0] activation_3_output_shape_address1;
reg activation_3_output_shape_ce1;
reg activation_3_output_shape_we1;
reg[63:0] activation_3_output_shape_d1;

(* fsm_encoding = "none" *) reg   [140:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] dense_output_numel;
reg   [11:0] dense_output_array_address0;
reg    dense_output_array_ce0;
reg    dense_output_array_we0;
reg   [31:0] dense_output_array_d0;
wire   [31:0] dense_output_array_q0;
wire   [18:0] face_classifier_c_de_address0;
reg    face_classifier_c_de_ce0;
wire   [31:0] face_classifier_c_de_q0;
reg   [18:0] dense_kernel_array_address0;
reg    dense_kernel_array_ce0;
reg    dense_kernel_array_we0;
reg   [31:0] dense_kernel_array_d0;
wire   [31:0] dense_kernel_array_q0;
wire   [6:0] dense_bias_array_address0;
reg    dense_bias_array_ce0;
wire   [31:0] dense_bias_array_q0;
reg   [11:0] dense_bias_array_0_address0;
reg    dense_bias_array_0_ce0;
reg    dense_bias_array_0_we0;
wire   [31:0] dense_bias_array_0_q0;
reg   [63:0] batch_normalization_1;
reg   [63:0] batch_normalization_3;
reg   [11:0] batch_normalization_23_address0;
reg    batch_normalization_23_ce0;
reg    batch_normalization_23_we0;
reg   [31:0] batch_normalization_23_d0;
wire   [31:0] batch_normalization_23_q0;
reg   [11:0] batch_normalization_23_address1;
reg    batch_normalization_23_ce1;
reg    batch_normalization_23_we1;
wire   [31:0] batch_normalization_23_q1;
wire   [6:0] batch_normalization_11_address0;
reg    batch_normalization_11_ce0;
wire   [31:0] batch_normalization_11_q0;
reg   [11:0] batch_normalization_22_address0;
reg    batch_normalization_22_ce0;
reg    batch_normalization_22_we0;
wire   [31:0] batch_normalization_22_q0;
wire   [6:0] batch_normalization_s_address0;
reg    batch_normalization_s_ce0;
wire   [31:0] batch_normalization_s_q0;
reg   [11:0] batch_normalization_18_address0;
reg    batch_normalization_18_ce0;
reg    batch_normalization_18_we0;
wire   [31:0] batch_normalization_18_q0;
wire   [6:0] batch_normalization_14_address0;
reg    batch_normalization_14_ce0;
wire   [31:0] batch_normalization_14_q0;
reg   [11:0] batch_normalization_21_address0;
reg    batch_normalization_21_ce0;
reg    batch_normalization_21_we0;
wire   [31:0] batch_normalization_21_q0;
wire   [6:0] batch_normalization_17_address0;
reg    batch_normalization_17_ce0;
wire   [31:0] batch_normalization_17_q0;
reg   [11:0] batch_normalization_19_address0;
reg    batch_normalization_19_ce0;
reg    batch_normalization_19_we0;
wire   [31:0] batch_normalization_19_q0;
reg   [63:0] dense_1_output_numel;
reg   [11:0] dense_1_output_array_address0;
reg    dense_1_output_array_ce0;
reg    dense_1_output_array_we0;
reg   [31:0] dense_1_output_array_d0;
wire   [31:0] dense_1_output_array_q0;
reg   [63:0] dense_1_kernel_ndim;
reg   [63:0] dense_1_kernel_numel;
wire   [9:0] dense_1_kernel_array_address0;
reg    dense_1_kernel_array_ce0;
wire   [31:0] dense_1_kernel_array_q0;
reg   [18:0] dense_1_kernel_array_1_address0;
reg    dense_1_kernel_array_1_ce0;
reg    dense_1_kernel_array_1_we0;
wire   [31:0] dense_1_kernel_array_1_q0;
reg   [63:0] dense_1_bias_numel;
wire   [3:0] dense_1_bias_array2_address0;
reg    dense_1_bias_array2_ce0;
wire   [31:0] dense_1_bias_array2_q0;
reg   [11:0] dense_1_bias_array_address0;
reg    dense_1_bias_array_ce0;
reg    dense_1_bias_array_we0;
wire   [31:0] dense_1_bias_array_q0;
reg   [0:0] batch_normalization_9;
reg   [11:0] batch_normalization_8_address0;
reg    batch_normalization_8_ce0;
reg    batch_normalization_8_we0;
reg   [31:0] batch_normalization_8_d0;
wire   [31:0] batch_normalization_8_q0;
reg   [11:0] batch_normalization_8_address1;
reg    batch_normalization_8_ce1;
reg    batch_normalization_8_we1;
wire   [31:0] batch_normalization_8_q1;
wire   [3:0] batch_normalization_29_address0;
reg    batch_normalization_29_ce0;
wire   [31:0] batch_normalization_29_q0;
reg   [11:0] batch_normalization_7_address0;
reg    batch_normalization_7_ce0;
reg    batch_normalization_7_we0;
wire   [31:0] batch_normalization_7_q0;
wire   [3:0] batch_normalization_20_address0;
reg    batch_normalization_20_ce0;
wire   [31:0] batch_normalization_20_q0;
reg   [11:0] batch_normalization_15_address0;
reg    batch_normalization_15_ce0;
reg    batch_normalization_15_we0;
wire   [31:0] batch_normalization_15_q0;
wire   [3:0] batch_normalization_32_address0;
reg    batch_normalization_32_ce0;
wire   [31:0] batch_normalization_32_q0;
reg   [11:0] batch_normalization_6_address0;
reg    batch_normalization_6_ce0;
reg    batch_normalization_6_we0;
wire   [31:0] batch_normalization_6_q0;
wire   [3:0] batch_normalization_35_address0;
reg    batch_normalization_35_ce0;
wire   [31:0] batch_normalization_35_q0;
reg   [11:0] batch_normalization_5_address0;
reg    batch_normalization_5_ce0;
reg    batch_normalization_5_we0;
wire   [31:0] batch_normalization_5_q0;
reg   [0:0] dense_2_output_ndim;
reg   [63:0] dense_2_output_numel;
reg   [11:0] dense_2_output_array_address0;
reg    dense_2_output_array_ce0;
reg    dense_2_output_array_we0;
reg   [31:0] dense_2_output_array_d0;
wire   [31:0] dense_2_output_array_q0;
reg   [11:0] dense_2_output_array_address1;
reg    dense_2_output_array_ce1;
reg    dense_2_output_array_we1;
reg   [31:0] dense_2_output_array_d1;
wire   [31:0] dense_2_output_array_q1;
reg   [63:0] dense_2_kernel_ndim;
reg   [6:0] dense_2_kernel_numel;
wire   [5:0] dense_2_kernel_array_address0;
reg    dense_2_kernel_array_ce0;
wire   [31:0] dense_2_kernel_array_q0;
reg   [11:0] dense_2_kernel_array_2_address0;
reg    dense_2_kernel_array_2_ce0;
reg    dense_2_kernel_array_2_we0;
wire   [31:0] dense_2_kernel_array_2_q0;
reg   [63:0] dense_2_bias_numel;
wire   [2:0] dense_2_bias_array7_address0;
reg    dense_2_bias_array7_ce0;
wire   [31:0] dense_2_bias_array7_q0;
reg   [11:0] dense_2_bias_array_address0;
reg    dense_2_bias_array_ce0;
reg    dense_2_bias_array_we0;
wire   [31:0] dense_2_bias_array_q0;
reg   [0:0] axesA_address0;
reg    axesA_ce0;
reg    axesA_we0;
reg   [63:0] axesA_d0;
wire   [63:0] axesA_q0;
reg   [2:0] dense_kernel_shape_address0;
reg    dense_kernel_shape_ce0;
reg    dense_kernel_shape_we0;
reg   [63:0] dense_kernel_shape_d0;
wire   [63:0] dense_kernel_shape_q0;
reg   [2:0] dense_kernel_shape_address1;
reg    dense_kernel_shape_ce1;
reg    dense_kernel_shape_we1;
wire   [63:0] dense_kernel_shape_q1;
reg   [2:0] dense_output_shape_address0;
reg    dense_output_shape_ce0;
reg    dense_output_shape_we0;
reg   [63:0] dense_output_shape_d0;
wire   [63:0] dense_output_shape_q0;
reg   [2:0] dense_output_shape_address1;
reg    dense_output_shape_ce1;
reg    dense_output_shape_we1;
reg   [2:0] batch_normalization_4_address0;
reg    batch_normalization_4_ce0;
reg    batch_normalization_4_we0;
reg   [8:0] batch_normalization_4_d0;
reg   [2:0] batch_normalization_4_address1;
reg    batch_normalization_4_ce1;
reg    batch_normalization_4_we1;
wire   [8:0] batch_normalization_4_q1;
reg   [2:0] activation_1_output_s_address0;
reg    activation_1_output_s_ce0;
reg    activation_1_output_s_we0;
wire   [8:0] activation_1_output_s_q0;
reg   [11:0] activation_1_output_1_address0;
reg    activation_1_output_1_ce0;
reg    activation_1_output_1_we0;
wire   [31:0] activation_1_output_1_q0;
reg   [2:0] dropout_2_output_sha_address0;
reg    dropout_2_output_sha_ce0;
reg    dropout_2_output_sha_we0;
wire   [63:0] dropout_2_output_sha_d0;
wire   [63:0] dropout_2_output_sha_q0;
reg   [11:0] dropout_2_output_arr_address0;
reg    dropout_2_output_arr_ce0;
reg    dropout_2_output_arr_we0;
wire   [31:0] dropout_2_output_arr_q0;
reg   [2:0] dense_1_kernel_shape_address0;
reg    dense_1_kernel_shape_ce0;
reg    dense_1_kernel_shape_we0;
reg   [63:0] dense_1_kernel_shape_d0;
wire   [63:0] dense_1_kernel_shape_q0;
reg   [2:0] dense_1_kernel_shape_address1;
reg    dense_1_kernel_shape_ce1;
reg    dense_1_kernel_shape_we1;
wire   [63:0] dense_1_kernel_shape_q1;
reg   [2:0] dense_1_output_shape_address0;
reg    dense_1_output_shape_ce0;
reg    dense_1_output_shape_we0;
reg   [63:0] dense_1_output_shape_d0;
wire   [63:0] dense_1_output_shape_q0;
reg   [2:0] dense_1_output_shape_address1;
reg    dense_1_output_shape_ce1;
reg    dense_1_output_shape_we1;
reg   [2:0] batch_normalization_12_address0;
reg    batch_normalization_12_ce0;
reg    batch_normalization_12_we0;
reg   [5:0] batch_normalization_12_d0;
reg   [2:0] batch_normalization_12_address1;
reg    batch_normalization_12_ce1;
reg    batch_normalization_12_we1;
wire   [5:0] batch_normalization_12_q1;
reg   [2:0] activation_2_output_s_address0;
reg    activation_2_output_s_ce0;
reg    activation_2_output_s_we0;
wire   [5:0] activation_2_output_s_q0;
reg   [11:0] activation_2_output_1_address0;
reg    activation_2_output_1_ce0;
reg    activation_2_output_1_we0;
wire   [31:0] activation_2_output_1_q0;
reg   [63:0] dropout_3_output_ndi;
reg   [4:0] dropout_3_output_num;
reg   [2:0] dropout_3_output_sha_address0;
reg    dropout_3_output_sha_ce0;
reg    dropout_3_output_sha_we0;
wire   [63:0] dropout_3_output_sha_d0;
wire   [63:0] dropout_3_output_sha_q0;
reg   [11:0] dropout_3_output_arr_address0;
reg    dropout_3_output_arr_ce0;
reg    dropout_3_output_arr_we0;
wire   [31:0] dropout_3_output_arr_q0;
reg   [2:0] dense_2_kernel_shape_address0;
reg    dense_2_kernel_shape_ce0;
reg    dense_2_kernel_shape_we0;
reg   [63:0] dense_2_kernel_shape_d0;
wire   [63:0] dense_2_kernel_shape_q0;
reg   [2:0] dense_2_kernel_shape_address1;
reg    dense_2_kernel_shape_ce1;
reg    dense_2_kernel_shape_we1;
wire   [63:0] dense_2_kernel_shape_q1;
reg   [2:0] dense_2_output_shape_address0;
reg    dense_2_output_shape_ce0;
reg    dense_2_output_shape_we0;
reg   [4:0] dense_2_output_shape_d0;
wire   [4:0] dense_2_output_shape_q0;
reg   [2:0] dense_2_output_shape_address1;
reg    dense_2_output_shape_ce1;
reg    dense_2_output_shape_we1;
wire   [4:0] dense_2_output_shape_q1;
reg   [18:0] j_1_reg_1480;
reg   [6:0] j_2_reg_1491;
reg   [6:0] j_4_reg_1524;
reg   [6:0] j_5_reg_1535;
reg   [6:0] j_6_reg_1546;
reg   [6:0] j_7_reg_1557;
reg   [9:0] j_9_reg_1579;
reg   [3:0] j_s_reg_1590;
reg   [3:0] j_11_reg_1623;
reg   [3:0] j_12_reg_1634;
reg   [3:0] j_13_reg_1645;
reg   [3:0] j_14_reg_1656;
reg   [5:0] j_16_reg_1678;
reg   [2:0] j_17_reg_1689;
reg   [11:0] i_reg_1711;
reg   [2:0] j_18_reg_1722;
reg   [11:0] j_19_reg_1733;
reg   [2:0] j_20_reg_1744;
reg   [11:0] j_21_reg_1755;
reg   [3:0] i_1_reg_1766;
reg   [2:0] j_22_reg_1777;
reg   [3:0] j_23_reg_1788;
reg   [2:0] j_24_reg_1799;
reg   [3:0] j_25_reg_1810;
wire   [31:0] grp_generic_tanh_float_s_fu_1933_ap_return;
reg   [31:0] reg_2021;
reg    ap_enable_reg_pp19_iter33;
wire    ap_block_state78_pp19_stage0_iter0;
wire    ap_block_state79_pp19_stage0_iter1;
wire    ap_block_state80_pp19_stage0_iter2;
wire    ap_block_state81_pp19_stage0_iter3;
wire    ap_block_state82_pp19_stage0_iter4;
wire    ap_block_state83_pp19_stage0_iter5;
wire    ap_block_state84_pp19_stage0_iter6;
wire    ap_block_state85_pp19_stage0_iter7;
wire    ap_block_state86_pp19_stage0_iter8;
wire    ap_block_state87_pp19_stage0_iter9;
wire    ap_block_state88_pp19_stage0_iter10;
wire    ap_block_state89_pp19_stage0_iter11;
wire    ap_block_state90_pp19_stage0_iter12;
wire    ap_block_state91_pp19_stage0_iter13;
wire    ap_block_state92_pp19_stage0_iter14;
wire    ap_block_state93_pp19_stage0_iter15;
wire    ap_block_state94_pp19_stage0_iter16;
wire    ap_block_state95_pp19_stage0_iter17;
wire    ap_block_state96_pp19_stage0_iter18;
wire    ap_block_state97_pp19_stage0_iter19;
wire    ap_block_state98_pp19_stage0_iter20;
wire    ap_block_state99_pp19_stage0_iter21;
wire    ap_block_state100_pp19_stage0_iter22;
wire    ap_block_state101_pp19_stage0_iter23;
wire    ap_block_state102_pp19_stage0_iter24;
wire    ap_block_state103_pp19_stage0_iter25;
wire    ap_block_state104_pp19_stage0_iter26;
wire    ap_block_state105_pp19_stage0_iter27;
wire    ap_block_state106_pp19_stage0_iter28;
wire    ap_block_state107_pp19_stage0_iter29;
wire    ap_block_state108_pp19_stage0_iter30;
wire    ap_block_state109_pp19_stage0_iter31;
wire    ap_block_state110_pp19_stage0_iter32;
wire    ap_block_state111_pp19_stage0_iter33;
wire    ap_block_state112_pp19_stage0_iter34;
wire    ap_block_pp19_stage0_11001;
reg   [0:0] exitcond1_reg_3614;
reg   [0:0] exitcond1_reg_3614_pp19_iter32_reg;
reg    ap_enable_reg_pp24_iter33;
wire    ap_block_state129_pp24_stage0_iter0;
wire    ap_block_state130_pp24_stage0_iter1;
wire    ap_block_state131_pp24_stage0_iter2;
wire    ap_block_state132_pp24_stage0_iter3;
wire    ap_block_state133_pp24_stage0_iter4;
wire    ap_block_state134_pp24_stage0_iter5;
wire    ap_block_state135_pp24_stage0_iter6;
wire    ap_block_state136_pp24_stage0_iter7;
wire    ap_block_state137_pp24_stage0_iter8;
wire    ap_block_state138_pp24_stage0_iter9;
wire    ap_block_state139_pp24_stage0_iter10;
wire    ap_block_state140_pp24_stage0_iter11;
wire    ap_block_state141_pp24_stage0_iter12;
wire    ap_block_state142_pp24_stage0_iter13;
wire    ap_block_state143_pp24_stage0_iter14;
wire    ap_block_state144_pp24_stage0_iter15;
wire    ap_block_state145_pp24_stage0_iter16;
wire    ap_block_state146_pp24_stage0_iter17;
wire    ap_block_state147_pp24_stage0_iter18;
wire    ap_block_state148_pp24_stage0_iter19;
wire    ap_block_state149_pp24_stage0_iter20;
wire    ap_block_state150_pp24_stage0_iter21;
wire    ap_block_state151_pp24_stage0_iter22;
wire    ap_block_state152_pp24_stage0_iter23;
wire    ap_block_state153_pp24_stage0_iter24;
wire    ap_block_state154_pp24_stage0_iter25;
wire    ap_block_state155_pp24_stage0_iter26;
wire    ap_block_state156_pp24_stage0_iter27;
wire    ap_block_state157_pp24_stage0_iter28;
wire    ap_block_state158_pp24_stage0_iter29;
wire    ap_block_state159_pp24_stage0_iter30;
wire    ap_block_state160_pp24_stage0_iter31;
wire    ap_block_state161_pp24_stage0_iter32;
wire    ap_block_state162_pp24_stage0_iter33;
wire    ap_block_state163_pp24_stage0_iter34;
wire    ap_block_pp24_stage0_11001;
reg   [0:0] exitcond25_reg_3725;
reg   [0:0] exitcond25_reg_3725_pp24_iter32_reg;
reg   [63:0] reg_2027;
wire    ap_CS_fsm_state125;
wire    ap_CS_fsm_state127;
wire   [31:0] grp_fu_1946_p2;
reg   [31:0] reg_2033;
wire    ap_CS_fsm_state186;
wire    ap_CS_fsm_state196;
wire    ap_CS_fsm_state200;
wire    ap_CS_fsm_state204;
wire    ap_CS_fsm_state208;
wire    ap_CS_fsm_state212;
wire    ap_CS_fsm_state216;
wire    ap_CS_fsm_state3;
wire   [6:0] j_26_fu_2052_p2;
wire    ap_CS_fsm_state4;
wire   [18:0] indvarinc_fu_2063_p2;
reg   [18:0] indvarinc_reg_3260;
wire    ap_CS_fsm_state6;
wire   [63:0] tmp_s_fu_2069_p1;
reg   [63:0] tmp_s_reg_3265;
wire   [0:0] tmp_55_fu_2074_p2;
reg   [0:0] tmp_55_reg_3275;
wire   [0:0] exitcond23_fu_2080_p2;
reg   [0:0] exitcond23_reg_3279;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state10_pp1_stage0_iter0;
wire    ap_block_state11_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [18:0] j_28_fu_2086_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] tmp_56_fu_2092_p1;
reg   [63:0] tmp_56_reg_3288;
wire   [0:0] exitcond22_fu_2097_p2;
reg   [0:0] exitcond22_reg_3298;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state13_pp2_stage0_iter0;
wire    ap_block_state14_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [6:0] j_29_fu_2103_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [63:0] tmp_58_fu_2109_p1;
reg   [63:0] tmp_58_reg_3307;
wire   [18:0] indvarinc1_fu_2114_p2;
wire    ap_CS_fsm_state16;
wire   [6:0] j_30_fu_2149_p2;
wire    ap_CS_fsm_state19;
wire   [0:0] exitcond20_fu_2160_p2;
reg   [0:0] exitcond20_reg_3333;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_state21_pp4_stage0_iter0;
wire    ap_block_state22_pp4_stage0_iter1;
wire    ap_block_pp4_stage0_11001;
wire   [6:0] j_31_fu_2166_p2;
reg    ap_enable_reg_pp4_iter0;
wire   [63:0] tmp_61_fu_2172_p1;
reg   [63:0] tmp_61_reg_3342;
wire   [0:0] exitcond19_fu_2177_p2;
reg   [0:0] exitcond19_reg_3352;
wire    ap_CS_fsm_pp5_stage0;
wire    ap_block_state24_pp5_stage0_iter0;
wire    ap_block_state25_pp5_stage0_iter1;
wire    ap_block_pp5_stage0_11001;
wire   [6:0] j_32_fu_2183_p2;
reg    ap_enable_reg_pp5_iter0;
wire   [63:0] tmp_62_fu_2189_p1;
reg   [63:0] tmp_62_reg_3361;
wire   [0:0] exitcond18_fu_2194_p2;
reg   [0:0] exitcond18_reg_3371;
wire    ap_CS_fsm_pp6_stage0;
wire    ap_block_state27_pp6_stage0_iter0;
wire    ap_block_state28_pp6_stage0_iter1;
wire    ap_block_pp6_stage0_11001;
wire   [6:0] j_33_fu_2200_p2;
reg    ap_enable_reg_pp6_iter0;
wire   [63:0] tmp_63_fu_2206_p1;
reg   [63:0] tmp_63_reg_3380;
wire   [0:0] exitcond17_fu_2211_p2;
reg   [0:0] exitcond17_reg_3390;
wire    ap_CS_fsm_pp7_stage0;
wire    ap_block_state30_pp7_stage0_iter0;
wire    ap_block_state31_pp7_stage0_iter1;
wire    ap_block_pp7_stage0_11001;
wire   [6:0] j_34_fu_2217_p2;
reg    ap_enable_reg_pp7_iter0;
wire   [63:0] tmp_64_fu_2223_p1;
reg   [63:0] tmp_64_reg_3399;
wire   [3:0] j_35_fu_2240_p2;
wire    ap_CS_fsm_state35;
wire   [0:0] exitcond15_fu_2263_p2;
reg   [0:0] exitcond15_reg_3417;
wire    ap_CS_fsm_pp9_stage0;
wire    ap_block_state39_pp9_stage0_iter0;
wire    ap_block_state40_pp9_stage0_iter1;
wire    ap_block_pp9_stage0_11001;
wire   [9:0] j_36_fu_2269_p2;
reg    ap_enable_reg_pp9_iter0;
wire   [63:0] tmp_66_fu_2275_p1;
reg   [63:0] tmp_66_reg_3426;
wire   [0:0] exitcond14_fu_2286_p2;
reg   [0:0] exitcond14_reg_3436;
wire    ap_CS_fsm_pp10_stage0;
wire    ap_block_state42_pp10_stage0_iter0;
wire    ap_block_state43_pp10_stage0_iter1;
wire    ap_block_pp10_stage0_11001;
wire   [3:0] j_37_fu_2292_p2;
reg    ap_enable_reg_pp10_iter0;
wire   [63:0] tmp_68_fu_2298_p1;
reg   [63:0] tmp_68_reg_3445;
wire   [10:0] indvarinc2_fu_2303_p2;
wire    ap_CS_fsm_state45;
wire   [3:0] j_38_fu_2332_p2;
wire    ap_CS_fsm_state48;
wire   [0:0] exitcond12_fu_2343_p2;
reg   [0:0] exitcond12_reg_3471;
wire    ap_CS_fsm_pp12_stage0;
wire    ap_block_state50_pp12_stage0_iter0;
wire    ap_block_state51_pp12_stage0_iter1;
wire    ap_block_pp12_stage0_11001;
wire   [3:0] j_39_fu_2349_p2;
reg    ap_enable_reg_pp12_iter0;
wire   [63:0] tmp_71_fu_2355_p1;
reg   [63:0] tmp_71_reg_3480;
wire   [0:0] exitcond11_fu_2360_p2;
reg   [0:0] exitcond11_reg_3490;
wire    ap_CS_fsm_pp13_stage0;
wire    ap_block_state53_pp13_stage0_iter0;
wire    ap_block_state54_pp13_stage0_iter1;
wire    ap_block_pp13_stage0_11001;
wire   [3:0] j_40_fu_2366_p2;
reg    ap_enable_reg_pp13_iter0;
wire   [63:0] tmp_72_fu_2372_p1;
reg   [63:0] tmp_72_reg_3499;
wire   [0:0] exitcond10_fu_2377_p2;
reg   [0:0] exitcond10_reg_3509;
wire    ap_CS_fsm_pp14_stage0;
wire    ap_block_state56_pp14_stage0_iter0;
wire    ap_block_state57_pp14_stage0_iter1;
wire    ap_block_pp14_stage0_11001;
wire   [3:0] j_41_fu_2383_p2;
reg    ap_enable_reg_pp14_iter0;
wire   [63:0] tmp_73_fu_2389_p1;
reg   [63:0] tmp_73_reg_3518;
wire   [0:0] exitcond9_fu_2394_p2;
reg   [0:0] exitcond9_reg_3528;
wire    ap_CS_fsm_pp15_stage0;
wire    ap_block_state59_pp15_stage0_iter0;
wire    ap_block_state60_pp15_stage0_iter1;
wire    ap_block_pp15_stage0_11001;
wire   [3:0] j_42_fu_2400_p2;
reg    ap_enable_reg_pp15_iter0;
wire   [63:0] tmp_74_fu_2406_p1;
reg   [63:0] tmp_74_reg_3537;
wire   [2:0] j_43_fu_2429_p2;
wire    ap_CS_fsm_state64;
wire   [0:0] exitcond7_fu_2452_p2;
reg   [0:0] exitcond7_reg_3555;
wire    ap_CS_fsm_pp17_stage0;
wire    ap_block_state68_pp17_stage0_iter0;
wire    ap_block_state69_pp17_stage0_iter1;
wire    ap_block_pp17_stage0_11001;
wire   [5:0] j_44_fu_2458_p2;
reg    ap_enable_reg_pp17_iter0;
wire   [63:0] tmp_76_fu_2464_p1;
reg   [63:0] tmp_76_reg_3564;
wire   [0:0] exitcond6_fu_2475_p2;
reg   [0:0] exitcond6_reg_3574;
wire    ap_CS_fsm_pp18_stage0;
wire    ap_block_state71_pp18_stage0_iter0;
wire    ap_block_state72_pp18_stage0_iter1;
wire    ap_block_pp18_stage0_11001;
wire   [2:0] j_45_fu_2481_p2;
reg    ap_enable_reg_pp18_iter0;
wire   [63:0] tmp_78_fu_2487_p1;
reg   [63:0] tmp_78_reg_3583;
wire   [6:0] indvarinc3_fu_2492_p2;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state76;
reg   [63:0] batch_normalization_53_reg_3606;
wire    ap_CS_fsm_state77;
wire    grp_k2c_batch_norm_fu_1907_ap_idle;
wire    grp_k2c_batch_norm_fu_1907_ap_ready;
wire    grp_k2c_batch_norm_fu_1907_ap_done;
wire   [0:0] exitcond1_fu_2523_p2;
wire    ap_CS_fsm_pp19_stage0;
reg   [0:0] exitcond1_reg_3614_pp19_iter1_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter2_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter3_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter4_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter5_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter6_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter7_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter8_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter9_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter10_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter11_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter12_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter13_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter14_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter15_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter16_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter17_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter18_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter19_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter20_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter21_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter22_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter23_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter24_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter25_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter26_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter27_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter28_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter29_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter30_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter31_reg;
reg   [0:0] exitcond1_reg_3614_pp19_iter33_reg;
wire   [11:0] i_40_fu_2528_p2;
reg    ap_enable_reg_pp19_iter0;
reg   [11:0] batch_normalization_54_reg_3623;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter1_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter2_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter3_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter4_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter5_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter6_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter7_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter8_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter9_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter10_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter11_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter12_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter13_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter14_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter15_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter16_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter17_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter18_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter19_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter20_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter21_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter22_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter23_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter24_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter25_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter26_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter27_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter28_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter29_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter30_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter31_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter32_reg;
reg   [11:0] batch_normalization_54_reg_3623_pp19_iter33_reg;
reg   [63:0] batch_normalization_56_reg_3629;
wire    ap_CS_fsm_state113;
wire   [0:0] exitcond5_fu_2538_p2;
reg   [0:0] exitcond5_reg_3634;
wire    ap_CS_fsm_pp20_stage0;
wire    ap_block_state114_pp20_stage0_iter0;
wire    ap_block_state115_pp20_stage0_iter1;
wire    ap_block_pp20_stage0_11001;
wire   [2:0] j_46_fu_2544_p2;
reg    ap_enable_reg_pp20_iter0;
wire   [63:0] tmp_83_fu_2550_p1;
reg   [63:0] tmp_83_reg_3643;
wire   [63:0] tmp_82_fu_2555_p1;
reg   [63:0] tmp_82_reg_3653;
wire    ap_CS_fsm_pp21_stage0;
wire    ap_block_state117_pp21_stage0_iter0;
wire    ap_block_state118_pp21_stage0_iter1;
wire    ap_block_pp21_stage0_11001;
wire   [0:0] tmp_84_fu_2560_p2;
reg   [0:0] tmp_84_reg_3658;
wire   [11:0] j_47_fu_2565_p2;
reg    ap_enable_reg_pp21_iter0;
wire   [0:0] exitcond4_fu_2571_p2;
reg   [0:0] exitcond4_reg_3672;
wire    ap_CS_fsm_pp22_stage0;
wire    ap_block_state120_pp22_stage0_iter0;
wire    ap_block_state121_pp22_stage0_iter1;
wire    ap_block_pp22_stage0_11001;
wire   [2:0] j_48_fu_2577_p2;
reg    ap_enable_reg_pp22_iter0;
wire   [63:0] tmp_86_fu_2583_p1;
reg   [63:0] tmp_86_reg_3681;
wire   [63:0] tmp_85_fu_2593_p1;
reg   [63:0] tmp_85_reg_3691;
wire    ap_CS_fsm_pp23_stage0;
wire    ap_block_state123_pp23_stage0_iter0;
wire    ap_block_state124_pp23_stage0_iter1;
wire    ap_block_pp23_stage0_11001;
wire   [0:0] tmp_87_fu_2598_p2;
reg   [0:0] tmp_87_reg_3696;
wire   [11:0] j_49_fu_2603_p2;
reg    ap_enable_reg_pp23_iter0;
wire   [0:0] exitcond25_fu_2624_p2;
wire    ap_CS_fsm_pp24_stage0;
reg   [0:0] exitcond25_reg_3725_pp24_iter1_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter2_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter3_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter4_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter5_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter6_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter7_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter8_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter9_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter10_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter11_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter12_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter13_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter14_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter15_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter16_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter17_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter18_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter19_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter20_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter21_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter22_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter23_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter24_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter25_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter26_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter27_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter28_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter29_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter30_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter31_reg;
reg   [0:0] exitcond25_reg_3725_pp24_iter33_reg;
wire   [3:0] i_41_fu_2630_p2;
reg    ap_enable_reg_pp24_iter0;
reg   [11:0] batch_normalization_61_reg_3734;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter1_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter2_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter3_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter4_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter5_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter6_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter7_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter8_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter9_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter10_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter11_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter12_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter13_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter14_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter15_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter16_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter17_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter18_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter19_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter20_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter21_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter22_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter23_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter24_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter25_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter26_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter27_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter28_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter29_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter30_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter31_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter32_reg;
reg   [11:0] batch_normalization_61_reg_3734_pp24_iter33_reg;
wire   [63:0] extLd2_fu_2645_p1;
reg   [63:0] extLd2_reg_3740;
wire    ap_CS_fsm_state164;
wire   [0:0] exitcond3_fu_2649_p2;
reg   [0:0] exitcond3_reg_3745;
wire    ap_CS_fsm_pp25_stage0;
wire    ap_block_state165_pp25_stage0_iter0;
wire    ap_block_state166_pp25_stage0_iter1;
wire    ap_block_pp25_stage0_11001;
wire   [2:0] j_50_fu_2655_p2;
reg    ap_enable_reg_pp25_iter0;
wire   [63:0] tmp_91_fu_2661_p1;
reg   [63:0] tmp_91_reg_3754;
wire   [0:0] exitcond24_fu_2666_p2;
reg   [0:0] exitcond24_reg_3764;
wire    ap_CS_fsm_pp26_stage0;
wire    ap_block_state168_pp26_stage0_iter0;
wire    ap_block_state169_pp26_stage0_iter1;
wire    ap_block_pp26_stage0_11001;
wire   [3:0] j_51_fu_2672_p2;
reg    ap_enable_reg_pp26_iter0;
wire   [63:0] tmp_90_fu_2678_p1;
reg   [63:0] tmp_90_reg_3773;
wire   [0:0] exitcond2_fu_2694_p2;
reg   [0:0] exitcond2_reg_3783;
wire    ap_CS_fsm_pp27_stage0;
wire    ap_block_state171_pp27_stage0_iter0;
wire    ap_block_state172_pp27_stage0_iter1;
wire    ap_block_pp27_stage0_11001;
wire   [2:0] j_52_fu_2700_p2;
reg    ap_enable_reg_pp27_iter0;
wire   [63:0] tmp_94_fu_2706_p1;
reg   [63:0] tmp_94_reg_3792;
wire   [0:0] exitcond26_fu_2716_p2;
reg   [0:0] exitcond26_reg_3802;
wire    ap_CS_fsm_pp28_stage0;
wire    ap_block_state174_pp28_stage0_iter0;
wire    ap_block_state175_pp28_stage0_iter1;
wire    ap_block_pp28_stage0_11001;
wire   [3:0] j_53_fu_2722_p2;
reg    ap_enable_reg_pp28_iter0;
wire   [63:0] tmp_93_fu_2728_p1;
reg   [63:0] tmp_93_reg_3811;
reg   [31:0] xmax_reg_3821;
wire    ap_CS_fsm_state179;
reg   [31:0] dense_2_output_array_4_reg_3829;
wire    ap_CS_fsm_state180;
wire   [0:0] tmp_25_fu_2810_p2;
reg   [0:0] tmp_25_reg_3835;
reg   [31:0] dense_2_output_array_6_reg_3840;
wire   [31:0] xmax_2_fu_2905_p3;
reg   [31:0] xmax_2_reg_3848;
wire    ap_CS_fsm_state181;
reg   [31:0] dense_2_output_array_8_reg_3853;
wire   [0:0] tmp_43_fu_2991_p2;
reg   [0:0] tmp_43_reg_3859;
reg   [31:0] dense_2_output_array_10_reg_3864;
wire   [31:0] xmax_4_fu_3086_p3;
reg   [31:0] xmax_4_reg_3872;
wire    ap_CS_fsm_state182;
reg   [31:0] dense_2_output_array_12_reg_3878;
wire   [0:0] grp_fu_2005_p2;
reg   [0:0] tmp_130_reg_3885;
wire   [31:0] xmax_5_fu_3175_p3;
wire    ap_CS_fsm_state183;
wire   [31:0] grp_fu_1950_p2;
reg   [31:0] tmp_99_1_reg_3900;
wire   [31:0] grp_fu_1954_p2;
reg   [31:0] tmp_99_2_reg_3905;
wire   [31:0] grp_fu_1958_p2;
reg   [31:0] tmp_99_3_reg_3910;
wire   [31:0] grp_fu_1962_p2;
reg   [31:0] tmp_99_4_reg_3915;
wire   [31:0] grp_fu_1966_p2;
reg   [31:0] tmp_99_5_reg_3920;
wire   [31:0] grp_fu_2010_p2;
reg   [31:0] tmp_125_reg_3925;
wire    ap_CS_fsm_state192;
reg   [31:0] tmp_100_1_reg_3932;
reg   [31:0] tmp_100_2_reg_3939;
reg   [31:0] tmp_100_3_reg_3946;
reg   [31:0] tmp_100_4_reg_3953;
reg   [31:0] tmp_100_5_reg_3960;
wire   [31:0] grp_fu_1995_p2;
reg   [31:0] sum_reg_3966;
wire    ap_CS_fsm_state224;
wire   [31:0] grp_fu_1971_p2;
reg   [31:0] tmp_126_reg_3976;
wire    ap_CS_fsm_state226;
wire   [31:0] grp_fu_1975_p2;
reg   [31:0] tmp_102_1_reg_3981;
wire   [31:0] grp_fu_1979_p2;
reg   [31:0] tmp_102_2_reg_3986;
wire   [31:0] grp_fu_1983_p2;
reg   [31:0] tmp_102_3_reg_3991;
wire   [31:0] grp_fu_1987_p2;
reg   [31:0] tmp_102_4_reg_3996;
wire   [31:0] grp_fu_1991_p2;
reg   [31:0] tmp_102_5_reg_4001;
reg   [63:0] dense_2_output_numel_2_reg_4006;
wire    ap_CS_fsm_state229;
wire  signed [63:0] tmp_96_fu_3226_p1;
reg  signed [63:0] tmp_96_reg_4011;
wire    ap_CS_fsm_state230;
wire   [31:0] j_54_fu_3236_p2;
reg   [31:0] j_54_reg_4019;
wire   [0:0] tmp_104_fu_3231_p2;
wire    ap_CS_fsm_state9;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state10;
reg    ap_enable_reg_pp1_iter1;
wire    ap_CS_fsm_state12;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state13;
reg    ap_enable_reg_pp2_iter1;
wire    ap_CS_fsm_state20;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state21;
reg    ap_enable_reg_pp4_iter1;
wire    ap_CS_fsm_state23;
wire    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state24;
reg    ap_enable_reg_pp5_iter1;
wire    ap_CS_fsm_state26;
wire    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state27;
reg    ap_enable_reg_pp6_iter1;
wire    ap_CS_fsm_state29;
wire    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_exit_iter0_state30;
reg    ap_enable_reg_pp7_iter1;
wire    ap_CS_fsm_state38;
wire    ap_block_pp9_stage0_subdone;
reg    ap_condition_pp9_exit_iter0_state39;
reg    ap_enable_reg_pp9_iter1;
wire    ap_CS_fsm_state41;
wire    ap_block_pp10_stage0_subdone;
reg    ap_condition_pp10_exit_iter0_state42;
reg    ap_enable_reg_pp10_iter1;
wire    ap_CS_fsm_state49;
wire    ap_block_pp12_stage0_subdone;
reg    ap_condition_pp12_exit_iter0_state50;
reg    ap_enable_reg_pp12_iter1;
wire    ap_CS_fsm_state52;
wire    ap_block_pp13_stage0_subdone;
reg    ap_condition_pp13_exit_iter0_state53;
reg    ap_enable_reg_pp13_iter1;
wire    ap_CS_fsm_state55;
wire    ap_block_pp14_stage0_subdone;
reg    ap_condition_pp14_exit_iter0_state56;
reg    ap_enable_reg_pp14_iter1;
wire    ap_CS_fsm_state58;
wire    ap_block_pp15_stage0_subdone;
reg    ap_condition_pp15_exit_iter0_state59;
reg    ap_enable_reg_pp15_iter1;
wire    ap_CS_fsm_state67;
wire    ap_block_pp17_stage0_subdone;
reg    ap_condition_pp17_exit_iter0_state68;
reg    ap_enable_reg_pp17_iter1;
wire    ap_CS_fsm_state70;
wire    ap_block_pp18_stage0_subdone;
reg    ap_condition_pp18_exit_iter0_state71;
reg    ap_enable_reg_pp18_iter1;
wire    ap_block_pp19_stage0_subdone;
reg    ap_condition_pp19_exit_iter0_state78;
reg    ap_enable_reg_pp19_iter1;
reg    ap_enable_reg_pp19_iter2;
reg    ap_enable_reg_pp19_iter3;
reg    ap_enable_reg_pp19_iter4;
reg    ap_enable_reg_pp19_iter5;
reg    ap_enable_reg_pp19_iter6;
reg    ap_enable_reg_pp19_iter7;
reg    ap_enable_reg_pp19_iter8;
reg    ap_enable_reg_pp19_iter9;
reg    ap_enable_reg_pp19_iter10;
reg    ap_enable_reg_pp19_iter11;
reg    ap_enable_reg_pp19_iter12;
reg    ap_enable_reg_pp19_iter13;
reg    ap_enable_reg_pp19_iter14;
reg    ap_enable_reg_pp19_iter15;
reg    ap_enable_reg_pp19_iter16;
reg    ap_enable_reg_pp19_iter17;
reg    ap_enable_reg_pp19_iter18;
reg    ap_enable_reg_pp19_iter19;
reg    ap_enable_reg_pp19_iter20;
reg    ap_enable_reg_pp19_iter21;
reg    ap_enable_reg_pp19_iter22;
reg    ap_enable_reg_pp19_iter23;
reg    ap_enable_reg_pp19_iter24;
reg    ap_enable_reg_pp19_iter25;
reg    ap_enable_reg_pp19_iter26;
reg    ap_enable_reg_pp19_iter27;
reg    ap_enable_reg_pp19_iter28;
reg    ap_enable_reg_pp19_iter29;
reg    ap_enable_reg_pp19_iter30;
reg    ap_enable_reg_pp19_iter31;
reg    ap_enable_reg_pp19_iter32;
reg    ap_enable_reg_pp19_iter34;
wire    ap_block_pp20_stage0_subdone;
reg    ap_condition_pp20_exit_iter0_state114;
reg    ap_enable_reg_pp20_iter1;
wire    ap_CS_fsm_state116;
wire    ap_block_pp21_stage0_subdone;
reg    ap_condition_pp21_exit_iter0_state117;
reg    ap_enable_reg_pp21_iter1;
wire    ap_CS_fsm_state119;
wire    ap_block_pp22_stage0_subdone;
reg    ap_condition_pp22_exit_iter0_state120;
reg    ap_enable_reg_pp22_iter1;
wire    ap_CS_fsm_state122;
wire    ap_block_pp23_stage0_subdone;
reg    ap_condition_pp23_exit_iter0_state123;
reg    ap_enable_reg_pp23_iter1;
wire    ap_CS_fsm_state128;
wire    ap_block_pp24_stage0_subdone;
reg    ap_condition_pp24_exit_iter0_state129;
reg    ap_enable_reg_pp24_iter1;
reg    ap_enable_reg_pp24_iter2;
reg    ap_enable_reg_pp24_iter3;
reg    ap_enable_reg_pp24_iter4;
reg    ap_enable_reg_pp24_iter5;
reg    ap_enable_reg_pp24_iter6;
reg    ap_enable_reg_pp24_iter7;
reg    ap_enable_reg_pp24_iter8;
reg    ap_enable_reg_pp24_iter9;
reg    ap_enable_reg_pp24_iter10;
reg    ap_enable_reg_pp24_iter11;
reg    ap_enable_reg_pp24_iter12;
reg    ap_enable_reg_pp24_iter13;
reg    ap_enable_reg_pp24_iter14;
reg    ap_enable_reg_pp24_iter15;
reg    ap_enable_reg_pp24_iter16;
reg    ap_enable_reg_pp24_iter17;
reg    ap_enable_reg_pp24_iter18;
reg    ap_enable_reg_pp24_iter19;
reg    ap_enable_reg_pp24_iter20;
reg    ap_enable_reg_pp24_iter21;
reg    ap_enable_reg_pp24_iter22;
reg    ap_enable_reg_pp24_iter23;
reg    ap_enable_reg_pp24_iter24;
reg    ap_enable_reg_pp24_iter25;
reg    ap_enable_reg_pp24_iter26;
reg    ap_enable_reg_pp24_iter27;
reg    ap_enable_reg_pp24_iter28;
reg    ap_enable_reg_pp24_iter29;
reg    ap_enable_reg_pp24_iter30;
reg    ap_enable_reg_pp24_iter31;
reg    ap_enable_reg_pp24_iter32;
reg    ap_enable_reg_pp24_iter34;
wire    ap_block_pp25_stage0_subdone;
reg    ap_condition_pp25_exit_iter0_state165;
reg    ap_enable_reg_pp25_iter1;
wire    ap_CS_fsm_state167;
wire    ap_block_pp26_stage0_subdone;
reg    ap_condition_pp26_exit_iter0_state168;
reg    ap_enable_reg_pp26_iter1;
wire    ap_CS_fsm_state170;
wire    ap_block_pp27_stage0_subdone;
reg    ap_condition_pp27_exit_iter0_state171;
reg    ap_enable_reg_pp27_iter1;
wire    ap_CS_fsm_state173;
wire    ap_block_pp28_stage0_subdone;
reg    ap_condition_pp28_exit_iter0_state174;
reg    ap_enable_reg_pp28_iter1;
reg   [18:0] dense_fwork_address0;
reg    dense_fwork_ce0;
reg    dense_fwork_we0;
reg   [31:0] dense_fwork_d0;
wire   [31:0] dense_fwork_q0;
reg    dense_fwork_ce1;
wire   [31:0] dense_fwork_q1;
reg   [10:0] dense_1_fwork_address0;
reg    dense_1_fwork_ce0;
reg    dense_1_fwork_we0;
reg   [31:0] dense_1_fwork_d0;
wire   [31:0] dense_1_fwork_q0;
reg    dense_1_fwork_ce1;
wire   [31:0] dense_1_fwork_q1;
reg   [6:0] dense_2_fwork_address0;
reg    dense_2_fwork_ce0;
reg    dense_2_fwork_we0;
reg   [31:0] dense_2_fwork_d0;
wire   [31:0] dense_2_fwork_q0;
reg    dense_2_fwork_ce1;
wire   [31:0] dense_2_fwork_q1;
wire    grp_k2c_dense_1_fu_1832_ap_start;
wire    grp_k2c_dense_1_fu_1832_ap_done;
wire    grp_k2c_dense_1_fu_1832_ap_idle;
wire    grp_k2c_dense_1_fu_1832_ap_ready;
wire   [11:0] grp_k2c_dense_1_fu_1832_output_array_address0;
wire    grp_k2c_dense_1_fu_1832_output_array_ce0;
wire    grp_k2c_dense_1_fu_1832_output_array_we0;
wire   [31:0] grp_k2c_dense_1_fu_1832_output_array_d0;
wire   [11:0] grp_k2c_dense_1_fu_1832_input_array_address0;
wire    grp_k2c_dense_1_fu_1832_input_array_ce0;
wire   [2:0] grp_k2c_dense_1_fu_1832_input_shape_address0;
wire    grp_k2c_dense_1_fu_1832_input_shape_ce0;
wire   [18:0] grp_k2c_dense_1_fu_1832_kernel_array_address0;
wire    grp_k2c_dense_1_fu_1832_kernel_array_ce0;
wire   [2:0] grp_k2c_dense_1_fu_1832_kernel_shape_address0;
wire    grp_k2c_dense_1_fu_1832_kernel_shape_ce0;
wire   [2:0] grp_k2c_dense_1_fu_1832_kernel_shape_address1;
wire    grp_k2c_dense_1_fu_1832_kernel_shape_ce1;
wire   [11:0] grp_k2c_dense_1_fu_1832_bias_array_address0;
wire    grp_k2c_dense_1_fu_1832_bias_array_ce0;
wire   [10:0] grp_k2c_dense_1_fu_1832_fwork_address0;
wire    grp_k2c_dense_1_fu_1832_fwork_ce0;
wire    grp_k2c_dense_1_fu_1832_fwork_we0;
wire   [31:0] grp_k2c_dense_1_fu_1832_fwork_d0;
wire   [10:0] grp_k2c_dense_1_fu_1832_fwork_address1;
wire    grp_k2c_dense_1_fu_1832_fwork_ce1;
wire   [0:0] grp_k2c_dense_1_fu_1832_axesA_address0;
wire    grp_k2c_dense_1_fu_1832_axesA_ce0;
wire    grp_k2c_dense_1_fu_1832_axesA_we0;
wire   [63:0] grp_k2c_dense_1_fu_1832_axesA_d0;
wire    grp_k2c_dense_fu_1857_ap_start;
wire    grp_k2c_dense_fu_1857_ap_done;
wire    grp_k2c_dense_fu_1857_ap_idle;
wire    grp_k2c_dense_fu_1857_ap_ready;
wire   [11:0] grp_k2c_dense_fu_1857_output_array_address0;
wire    grp_k2c_dense_fu_1857_output_array_ce0;
wire    grp_k2c_dense_fu_1857_output_array_we0;
wire   [31:0] grp_k2c_dense_fu_1857_output_array_d0;
wire   [11:0] grp_k2c_dense_fu_1857_input_array_address0;
wire    grp_k2c_dense_fu_1857_input_array_ce0;
wire   [2:0] grp_k2c_dense_fu_1857_input_shape_address0;
wire    grp_k2c_dense_fu_1857_input_shape_ce0;
wire   [18:0] grp_k2c_dense_fu_1857_kernel_array_address0;
wire    grp_k2c_dense_fu_1857_kernel_array_ce0;
wire   [2:0] grp_k2c_dense_fu_1857_kernel_shape_address0;
wire    grp_k2c_dense_fu_1857_kernel_shape_ce0;
wire   [2:0] grp_k2c_dense_fu_1857_kernel_shape_address1;
wire    grp_k2c_dense_fu_1857_kernel_shape_ce1;
wire   [11:0] grp_k2c_dense_fu_1857_bias_array_address0;
wire    grp_k2c_dense_fu_1857_bias_array_ce0;
wire   [18:0] grp_k2c_dense_fu_1857_fwork_address0;
wire    grp_k2c_dense_fu_1857_fwork_ce0;
wire    grp_k2c_dense_fu_1857_fwork_we0;
wire   [31:0] grp_k2c_dense_fu_1857_fwork_d0;
wire   [18:0] grp_k2c_dense_fu_1857_fwork_address1;
wire    grp_k2c_dense_fu_1857_fwork_ce1;
wire   [0:0] grp_k2c_dense_fu_1857_axesA_address0;
wire    grp_k2c_dense_fu_1857_axesA_ce0;
wire    grp_k2c_dense_fu_1857_axesA_we0;
wire   [63:0] grp_k2c_dense_fu_1857_axesA_d0;
wire    grp_k2c_dense2_fu_1878_ap_start;
wire    grp_k2c_dense2_fu_1878_ap_done;
wire    grp_k2c_dense2_fu_1878_ap_idle;
wire    grp_k2c_dense2_fu_1878_ap_ready;
wire   [6:0] grp_k2c_dense2_fu_1878_fwork_address0;
wire    grp_k2c_dense2_fu_1878_fwork_ce0;
wire    grp_k2c_dense2_fu_1878_fwork_we0;
wire   [31:0] grp_k2c_dense2_fu_1878_fwork_d0;
wire   [6:0] grp_k2c_dense2_fu_1878_fwork_address1;
wire    grp_k2c_dense2_fu_1878_fwork_ce1;
wire   [11:0] grp_k2c_dense2_fu_1878_dense_2_bias_array_address0;
wire    grp_k2c_dense2_fu_1878_dense_2_bias_array_ce0;
wire   [11:0] grp_k2c_dense2_fu_1878_dense_2_output_array_address0;
wire    grp_k2c_dense2_fu_1878_dense_2_output_array_ce0;
wire    grp_k2c_dense2_fu_1878_dense_2_output_array_we0;
wire   [31:0] grp_k2c_dense2_fu_1878_dense_2_output_array_d0;
wire   [11:0] grp_k2c_dense2_fu_1878_dropout_3_output_arr_address0;
wire    grp_k2c_dense2_fu_1878_dropout_3_output_arr_ce0;
wire   [11:0] grp_k2c_dense2_fu_1878_dense_2_kernel_array_2_address0;
wire    grp_k2c_dense2_fu_1878_dense_2_kernel_array_2_ce0;
wire   [2:0] grp_k2c_dense2_fu_1878_dropout_3_output_sha_address0;
wire    grp_k2c_dense2_fu_1878_dropout_3_output_sha_ce0;
wire   [2:0] grp_k2c_dense2_fu_1878_dense_2_kernel_shape_address0;
wire    grp_k2c_dense2_fu_1878_dense_2_kernel_shape_ce0;
wire   [2:0] grp_k2c_dense2_fu_1878_dense_2_kernel_shape_address1;
wire    grp_k2c_dense2_fu_1878_dense_2_kernel_shape_ce1;
wire    grp_k2c_batch_norm_fu_1907_ap_start;
wire   [11:0] grp_k2c_batch_norm_fu_1907_outputs_array_address0;
wire    grp_k2c_batch_norm_fu_1907_outputs_array_ce0;
wire    grp_k2c_batch_norm_fu_1907_outputs_array_we0;
wire   [31:0] grp_k2c_batch_norm_fu_1907_outputs_array_d0;
wire   [11:0] grp_k2c_batch_norm_fu_1907_inputs_array_address0;
wire    grp_k2c_batch_norm_fu_1907_inputs_array_ce0;
reg   [31:0] grp_k2c_batch_norm_fu_1907_inputs_array_q0;
reg   [63:0] grp_k2c_batch_norm_fu_1907_inputs_numel_read;
wire   [2:0] grp_k2c_batch_norm_fu_1907_inputs_shape_address0;
wire    grp_k2c_batch_norm_fu_1907_inputs_shape_ce0;
reg   [63:0] grp_k2c_batch_norm_fu_1907_inputs_shape_q0;
wire   [11:0] grp_k2c_batch_norm_fu_1907_mean_array_address0;
wire    grp_k2c_batch_norm_fu_1907_mean_array_ce0;
reg   [31:0] grp_k2c_batch_norm_fu_1907_mean_array_q0;
wire   [11:0] grp_k2c_batch_norm_fu_1907_stdev_array_address0;
wire    grp_k2c_batch_norm_fu_1907_stdev_array_ce0;
reg   [31:0] grp_k2c_batch_norm_fu_1907_stdev_array_q0;
wire   [11:0] grp_k2c_batch_norm_fu_1907_gamma_array_address0;
wire    grp_k2c_batch_norm_fu_1907_gamma_array_ce0;
reg   [31:0] grp_k2c_batch_norm_fu_1907_gamma_array_q0;
wire   [11:0] grp_k2c_batch_norm_fu_1907_beta_array_address0;
wire    grp_k2c_batch_norm_fu_1907_beta_array_ce0;
reg   [31:0] grp_k2c_batch_norm_fu_1907_beta_array_q0;
wire    grp_generic_tanh_float_s_fu_1933_ap_start;
wire    grp_generic_tanh_float_s_fu_1933_ap_done;
wire    grp_generic_tanh_float_s_fu_1933_ap_idle;
wire    grp_generic_tanh_float_s_fu_1933_ap_ready;
reg   [31:0] grp_generic_tanh_float_s_fu_1933_t_in;
reg   [6:0] j_reg_1458;
wire   [0:0] exitcond_fu_2046_p2;
reg   [18:0] invdar_reg_1469;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state5;
reg   [18:0] invdar1_reg_1502;
wire   [0:0] tmp_59_fu_2125_p2;
wire    ap_CS_fsm_state15;
reg   [6:0] j_3_reg_1513;
wire    ap_CS_fsm_state18;
wire   [0:0] exitcond21_fu_2143_p2;
reg   [3:0] j_8_reg_1568;
wire    ap_CS_fsm_state34;
wire   [0:0] exitcond16_fu_2234_p2;
reg   [10:0] invdar2_reg_1601;
wire   [0:0] tmp_69_fu_2314_p2;
wire    ap_CS_fsm_state44;
reg   [3:0] j_10_reg_1612;
wire    ap_CS_fsm_state47;
wire   [0:0] exitcond13_fu_2326_p2;
reg   [2:0] j_15_reg_1667;
wire    ap_CS_fsm_state63;
wire   [0:0] exitcond8_fu_2423_p2;
reg   [6:0] invdar3_reg_1700;
wire   [0:0] tmp_79_fu_2503_p2;
wire    ap_CS_fsm_state73;
reg  signed [31:0] j_27_reg_1821;
wire    ap_CS_fsm_state231;
reg    grp_k2c_dense_1_fu_1832_ap_start_reg;
wire    ap_CS_fsm_state126;
reg    grp_k2c_dense_fu_1857_ap_start_reg;
wire    ap_CS_fsm_state75;
reg    grp_k2c_dense2_fu_1878_ap_start_reg;
wire    ap_CS_fsm_state176;
wire    ap_CS_fsm_state177;
reg    grp_k2c_batch_norm_fu_1907_ap_start_reg;
reg    grp_generic_tanh_float_s_fu_1933_ap_start_reg;
wire    ap_block_pp19_stage0;
wire    ap_block_pp24_stage0;
wire   [63:0] tmp_fu_2058_p1;
wire    ap_block_pp1_stage0;
wire    ap_block_pp2_stage0;
wire   [63:0] tmp_57_fu_2120_p1;
wire   [63:0] tmp_60_fu_2155_p1;
wire    ap_block_pp4_stage0;
wire    ap_block_pp5_stage0;
wire    ap_block_pp6_stage0;
wire    ap_block_pp7_stage0;
wire   [63:0] tmp_65_fu_2246_p1;
wire    ap_block_pp9_stage0;
wire    ap_block_pp10_stage0;
wire   [63:0] tmp_67_fu_2309_p1;
wire   [63:0] tmp_70_fu_2338_p1;
wire    ap_block_pp12_stage0;
wire    ap_block_pp13_stage0;
wire    ap_block_pp14_stage0;
wire    ap_block_pp15_stage0;
wire   [63:0] tmp_75_fu_2435_p1;
wire    ap_block_pp17_stage0;
wire    ap_block_pp18_stage0;
wire   [63:0] tmp_77_fu_2498_p1;
wire   [63:0] i_cast_fu_2518_p1;
wire    ap_block_pp20_stage0;
wire    ap_block_pp21_stage0;
wire    ap_block_pp22_stage0;
wire    ap_block_pp23_stage0;
wire   [63:0] i_1_cast5_fu_2636_p1;
wire    ap_block_pp25_stage0;
wire    ap_block_pp26_stage0;
wire    ap_block_pp27_stage0;
wire    ap_block_pp28_stage0;
wire    ap_CS_fsm_state227;
wire    ap_CS_fsm_state228;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state178;
wire    ap_CS_fsm_state223;
wire    ap_CS_fsm_state225;
wire    ap_CS_fsm_state66;
wire  signed [63:0] extLd5_fu_3187_p1;
wire  signed [63:0] extLd6_fu_3192_p1;
wire  signed [63:0] extLd7_fu_3197_p1;
wire  signed [63:0] extLd8_fu_3216_p1;
wire  signed [63:0] extLd9_fu_3221_p1;
reg   [31:0] grp_fu_1946_p0;
reg   [31:0] grp_fu_1946_p1;
wire    ap_CS_fsm_state193;
wire    ap_CS_fsm_state197;
wire    ap_CS_fsm_state201;
wire    ap_CS_fsm_state205;
wire    ap_CS_fsm_state209;
wire    ap_CS_fsm_state213;
wire    ap_CS_fsm_state217;
reg   [31:0] grp_fu_2000_p0;
reg   [31:0] grp_fu_2000_p1;
wire   [31:0] xmax_1_fu_2816_p3;
wire   [31:0] xmax_3_fu_2997_p3;
reg   [31:0] grp_fu_2005_p1;
reg   [31:0] grp_fu_2010_p1;
wire    ap_CS_fsm_state187;
wire    ap_CS_fsm_state191;
wire    ap_CS_fsm_state195;
wire    ap_CS_fsm_state199;
wire    ap_CS_fsm_state203;
wire    ap_CS_fsm_state207;
wire   [31:0] dense_2_output_array_5_fu_2733_p1;
wire   [31:0] xmax_to_int_fu_2751_p1;
wire   [7:0] tmp_17_fu_2737_p4;
wire   [22:0] tmp_122_fu_2747_p1;
wire   [0:0] notrhs_fu_2774_p2;
wire   [0:0] notlhs_fu_2768_p2;
wire   [7:0] tmp_19_fu_2754_p4;
wire   [22:0] tmp_132_fu_2764_p1;
wire   [0:0] notrhs1_fu_2792_p2;
wire   [0:0] notlhs1_fu_2786_p2;
wire   [0:0] tmp_21_fu_2780_p2;
wire   [0:0] tmp_22_fu_2798_p2;
wire   [0:0] tmp_23_fu_2804_p2;
wire   [0:0] grp_fu_2000_p2;
wire   [31:0] dense_2_output_array_7_fu_2822_p1;
wire   [31:0] xmax_1_to_int_fu_2839_p1;
wire   [7:0] tmp_26_fu_2825_p4;
wire   [22:0] tmp_133_fu_2835_p1;
wire   [0:0] notrhs2_fu_2863_p2;
wire   [0:0] notlhs2_fu_2857_p2;
wire   [7:0] tmp_28_fu_2843_p4;
wire   [22:0] tmp_134_fu_2853_p1;
wire   [0:0] notrhs3_fu_2881_p2;
wire   [0:0] notlhs3_fu_2875_p2;
wire   [0:0] tmp_30_fu_2869_p2;
wire   [0:0] tmp_31_fu_2887_p2;
wire   [0:0] tmp_32_fu_2893_p2;
wire   [0:0] tmp_34_fu_2899_p2;
wire   [31:0] dense_2_output_array_9_fu_2913_p1;
wire   [31:0] xmax_2_to_int_fu_2931_p1;
wire   [7:0] tmp_35_fu_2917_p4;
wire   [22:0] tmp_135_fu_2927_p1;
wire   [0:0] notrhs4_fu_2955_p2;
wire   [0:0] notlhs4_fu_2949_p2;
wire   [7:0] tmp_37_fu_2935_p4;
wire   [22:0] tmp_136_fu_2945_p1;
wire   [0:0] notrhs5_fu_2973_p2;
wire   [0:0] notlhs5_fu_2967_p2;
wire   [0:0] tmp_39_fu_2961_p2;
wire   [0:0] tmp_40_fu_2979_p2;
wire   [0:0] tmp_41_fu_2985_p2;
wire   [31:0] dense_2_output_array_11_fu_3003_p1;
wire   [31:0] xmax_3_to_int_fu_3020_p1;
wire   [7:0] tmp_44_fu_3006_p4;
wire   [22:0] tmp_137_fu_3016_p1;
wire   [0:0] notrhs6_fu_3044_p2;
wire   [0:0] notlhs6_fu_3038_p2;
wire   [7:0] tmp_46_fu_3024_p4;
wire   [22:0] tmp_138_fu_3034_p1;
wire   [0:0] notrhs7_fu_3062_p2;
wire   [0:0] notlhs7_fu_3056_p2;
wire   [0:0] tmp_48_fu_3050_p2;
wire   [0:0] tmp_49_fu_3068_p2;
wire   [0:0] tmp_50_fu_3074_p2;
wire   [0:0] tmp_52_fu_3080_p2;
wire   [31:0] dense_2_output_array_1_fu_3094_p1;
wire   [31:0] xmax_4_to_int_fu_3111_p1;
wire   [7:0] tmp_53_fu_3097_p4;
wire   [22:0] tmp_139_fu_3107_p1;
wire   [0:0] notrhs8_fu_3134_p2;
wire   [0:0] notlhs8_fu_3128_p2;
wire   [7:0] tmp_120_fu_3114_p4;
wire   [22:0] tmp_140_fu_3124_p1;
wire   [0:0] notrhs9_fu_3152_p2;
wire   [0:0] notlhs9_fu_3146_p2;
wire   [0:0] tmp_123_fu_3140_p2;
wire   [0:0] tmp_128_fu_3158_p2;
wire   [0:0] tmp_129_fu_3164_p2;
wire   [0:0] tmp_131_fu_3170_p2;
reg   [1:0] grp_fu_1946_opcode;
reg   [140:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
reg    ap_idle_pp9;
wire    ap_enable_pp9;
reg    ap_idle_pp10;
wire    ap_enable_pp10;
reg    ap_idle_pp12;
wire    ap_enable_pp12;
reg    ap_idle_pp13;
wire    ap_enable_pp13;
reg    ap_idle_pp14;
wire    ap_enable_pp14;
reg    ap_idle_pp15;
wire    ap_enable_pp15;
reg    ap_idle_pp17;
wire    ap_enable_pp17;
reg    ap_idle_pp18;
wire    ap_enable_pp18;
reg    ap_idle_pp19;
wire    ap_enable_pp19;
reg    ap_idle_pp20;
wire    ap_enable_pp20;
reg    ap_idle_pp21;
wire    ap_enable_pp21;
reg    ap_idle_pp22;
wire    ap_enable_pp22;
reg    ap_idle_pp23;
wire    ap_enable_pp23;
reg    ap_idle_pp24;
wire    ap_enable_pp24;
reg    ap_idle_pp25;
wire    ap_enable_pp25;
reg    ap_idle_pp26;
wire    ap_enable_pp26;
reg    ap_idle_pp27;
wire    ap_enable_pp27;
reg    ap_idle_pp28;
wire    ap_enable_pp28;

// power-on initialization
initial begin
#0 ap_CS_fsm = 141'd1;
#0 dense_output_numel = 64'd0;
#0 batch_normalization_1 = 64'd0;
#0 batch_normalization_3 = 64'd0;
#0 dense_1_output_numel = 64'd0;
#0 dense_1_kernel_ndim = 64'd0;
#0 dense_1_kernel_numel = 64'd0;
#0 dense_1_bias_numel = 64'd0;
#0 batch_normalization_9 = 1'd0;
#0 dense_2_output_ndim = 1'd0;
#0 dense_2_output_numel = 64'd0;
#0 dense_2_kernel_ndim = 64'd0;
#0 dense_2_kernel_numel = 7'd0;
#0 dense_2_bias_numel = 64'd0;
#0 dropout_3_output_ndi = 64'd0;
#0 dropout_3_output_num = 5'd0;
#0 ap_enable_reg_pp19_iter33 = 1'b0;
#0 ap_enable_reg_pp24_iter33 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp9_iter0 = 1'b0;
#0 ap_enable_reg_pp10_iter0 = 1'b0;
#0 ap_enable_reg_pp12_iter0 = 1'b0;
#0 ap_enable_reg_pp13_iter0 = 1'b0;
#0 ap_enable_reg_pp14_iter0 = 1'b0;
#0 ap_enable_reg_pp15_iter0 = 1'b0;
#0 ap_enable_reg_pp17_iter0 = 1'b0;
#0 ap_enable_reg_pp18_iter0 = 1'b0;
#0 ap_enable_reg_pp19_iter0 = 1'b0;
#0 ap_enable_reg_pp20_iter0 = 1'b0;
#0 ap_enable_reg_pp21_iter0 = 1'b0;
#0 ap_enable_reg_pp22_iter0 = 1'b0;
#0 ap_enable_reg_pp23_iter0 = 1'b0;
#0 ap_enable_reg_pp24_iter0 = 1'b0;
#0 ap_enable_reg_pp25_iter0 = 1'b0;
#0 ap_enable_reg_pp26_iter0 = 1'b0;
#0 ap_enable_reg_pp27_iter0 = 1'b0;
#0 ap_enable_reg_pp28_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 ap_enable_reg_pp9_iter1 = 1'b0;
#0 ap_enable_reg_pp10_iter1 = 1'b0;
#0 ap_enable_reg_pp12_iter1 = 1'b0;
#0 ap_enable_reg_pp13_iter1 = 1'b0;
#0 ap_enable_reg_pp14_iter1 = 1'b0;
#0 ap_enable_reg_pp15_iter1 = 1'b0;
#0 ap_enable_reg_pp17_iter1 = 1'b0;
#0 ap_enable_reg_pp18_iter1 = 1'b0;
#0 ap_enable_reg_pp19_iter1 = 1'b0;
#0 ap_enable_reg_pp19_iter2 = 1'b0;
#0 ap_enable_reg_pp19_iter3 = 1'b0;
#0 ap_enable_reg_pp19_iter4 = 1'b0;
#0 ap_enable_reg_pp19_iter5 = 1'b0;
#0 ap_enable_reg_pp19_iter6 = 1'b0;
#0 ap_enable_reg_pp19_iter7 = 1'b0;
#0 ap_enable_reg_pp19_iter8 = 1'b0;
#0 ap_enable_reg_pp19_iter9 = 1'b0;
#0 ap_enable_reg_pp19_iter10 = 1'b0;
#0 ap_enable_reg_pp19_iter11 = 1'b0;
#0 ap_enable_reg_pp19_iter12 = 1'b0;
#0 ap_enable_reg_pp19_iter13 = 1'b0;
#0 ap_enable_reg_pp19_iter14 = 1'b0;
#0 ap_enable_reg_pp19_iter15 = 1'b0;
#0 ap_enable_reg_pp19_iter16 = 1'b0;
#0 ap_enable_reg_pp19_iter17 = 1'b0;
#0 ap_enable_reg_pp19_iter18 = 1'b0;
#0 ap_enable_reg_pp19_iter19 = 1'b0;
#0 ap_enable_reg_pp19_iter20 = 1'b0;
#0 ap_enable_reg_pp19_iter21 = 1'b0;
#0 ap_enable_reg_pp19_iter22 = 1'b0;
#0 ap_enable_reg_pp19_iter23 = 1'b0;
#0 ap_enable_reg_pp19_iter24 = 1'b0;
#0 ap_enable_reg_pp19_iter25 = 1'b0;
#0 ap_enable_reg_pp19_iter26 = 1'b0;
#0 ap_enable_reg_pp19_iter27 = 1'b0;
#0 ap_enable_reg_pp19_iter28 = 1'b0;
#0 ap_enable_reg_pp19_iter29 = 1'b0;
#0 ap_enable_reg_pp19_iter30 = 1'b0;
#0 ap_enable_reg_pp19_iter31 = 1'b0;
#0 ap_enable_reg_pp19_iter32 = 1'b0;
#0 ap_enable_reg_pp19_iter34 = 1'b0;
#0 ap_enable_reg_pp20_iter1 = 1'b0;
#0 ap_enable_reg_pp21_iter1 = 1'b0;
#0 ap_enable_reg_pp22_iter1 = 1'b0;
#0 ap_enable_reg_pp23_iter1 = 1'b0;
#0 ap_enable_reg_pp24_iter1 = 1'b0;
#0 ap_enable_reg_pp24_iter2 = 1'b0;
#0 ap_enable_reg_pp24_iter3 = 1'b0;
#0 ap_enable_reg_pp24_iter4 = 1'b0;
#0 ap_enable_reg_pp24_iter5 = 1'b0;
#0 ap_enable_reg_pp24_iter6 = 1'b0;
#0 ap_enable_reg_pp24_iter7 = 1'b0;
#0 ap_enable_reg_pp24_iter8 = 1'b0;
#0 ap_enable_reg_pp24_iter9 = 1'b0;
#0 ap_enable_reg_pp24_iter10 = 1'b0;
#0 ap_enable_reg_pp24_iter11 = 1'b0;
#0 ap_enable_reg_pp24_iter12 = 1'b0;
#0 ap_enable_reg_pp24_iter13 = 1'b0;
#0 ap_enable_reg_pp24_iter14 = 1'b0;
#0 ap_enable_reg_pp24_iter15 = 1'b0;
#0 ap_enable_reg_pp24_iter16 = 1'b0;
#0 ap_enable_reg_pp24_iter17 = 1'b0;
#0 ap_enable_reg_pp24_iter18 = 1'b0;
#0 ap_enable_reg_pp24_iter19 = 1'b0;
#0 ap_enable_reg_pp24_iter20 = 1'b0;
#0 ap_enable_reg_pp24_iter21 = 1'b0;
#0 ap_enable_reg_pp24_iter22 = 1'b0;
#0 ap_enable_reg_pp24_iter23 = 1'b0;
#0 ap_enable_reg_pp24_iter24 = 1'b0;
#0 ap_enable_reg_pp24_iter25 = 1'b0;
#0 ap_enable_reg_pp24_iter26 = 1'b0;
#0 ap_enable_reg_pp24_iter27 = 1'b0;
#0 ap_enable_reg_pp24_iter28 = 1'b0;
#0 ap_enable_reg_pp24_iter29 = 1'b0;
#0 ap_enable_reg_pp24_iter30 = 1'b0;
#0 ap_enable_reg_pp24_iter31 = 1'b0;
#0 ap_enable_reg_pp24_iter32 = 1'b0;
#0 ap_enable_reg_pp24_iter34 = 1'b0;
#0 ap_enable_reg_pp25_iter1 = 1'b0;
#0 ap_enable_reg_pp26_iter1 = 1'b0;
#0 ap_enable_reg_pp27_iter1 = 1'b0;
#0 ap_enable_reg_pp28_iter1 = 1'b0;
#0 grp_k2c_dense_1_fu_1832_ap_start_reg = 1'b0;
#0 grp_k2c_dense_fu_1857_ap_start_reg = 1'b0;
#0 grp_k2c_dense2_fu_1878_ap_start_reg = 1'b0;
#0 grp_k2c_batch_norm_fu_1907_ap_start_reg = 1'b0;
#0 grp_generic_tanh_float_s_fu_1933_ap_start_reg = 1'b0;
end

face_classifier_cBew #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
dense_output_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_output_array_address0),
    .ce0(dense_output_array_ce0),
    .we0(dense_output_array_we0),
    .d0(dense_output_array_d0),
    .q0(dense_output_array_q0)
);

face_classifier_cCeG #(
    .DataWidth( 32 ),
    .AddressRange( 262200 ),
    .AddressWidth( 19 ))
face_classifier_c_de_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(face_classifier_c_de_address0),
    .ce0(face_classifier_c_de_ce0),
    .q0(face_classifier_c_de_q0)
);

face_classifier_cDeQ #(
    .DataWidth( 32 ),
    .AddressRange( 262200 ),
    .AddressWidth( 19 ))
dense_kernel_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_kernel_array_address0),
    .ce0(dense_kernel_array_ce0),
    .we0(dense_kernel_array_we0),
    .d0(dense_kernel_array_d0),
    .q0(dense_kernel_array_q0)
);

face_classifier_cEe0 #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
dense_bias_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_bias_array_address0),
    .ce0(dense_bias_array_ce0),
    .q0(dense_bias_array_q0)
);

face_classifier_cBew #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
dense_bias_array_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_bias_array_0_address0),
    .ce0(dense_bias_array_0_ce0),
    .we0(dense_bias_array_0_we0),
    .d0(dense_bias_array_q0),
    .q0(dense_bias_array_0_q0)
);

face_classifier_cGfk #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
batch_normalization_23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_23_address0),
    .ce0(batch_normalization_23_ce0),
    .we0(batch_normalization_23_we0),
    .d0(batch_normalization_23_d0),
    .q0(batch_normalization_23_q0),
    .address1(batch_normalization_23_address1),
    .ce1(batch_normalization_23_ce1),
    .we1(batch_normalization_23_we1),
    .d1(reg_2021),
    .q1(batch_normalization_23_q1)
);

face_classifier_cHfu #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
batch_normalization_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_11_address0),
    .ce0(batch_normalization_11_ce0),
    .q0(batch_normalization_11_q0)
);

face_classifier_cBew #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
batch_normalization_22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_22_address0),
    .ce0(batch_normalization_22_ce0),
    .we0(batch_normalization_22_we0),
    .d0(batch_normalization_11_q0),
    .q0(batch_normalization_22_q0)
);

face_classifier_cJfO #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
batch_normalization_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_s_address0),
    .ce0(batch_normalization_s_ce0),
    .q0(batch_normalization_s_q0)
);

face_classifier_cBew #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
batch_normalization_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_18_address0),
    .ce0(batch_normalization_18_ce0),
    .we0(batch_normalization_18_we0),
    .d0(batch_normalization_s_q0),
    .q0(batch_normalization_18_q0)
);

face_classifier_cLf8 #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
batch_normalization_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_14_address0),
    .ce0(batch_normalization_14_ce0),
    .q0(batch_normalization_14_q0)
);

face_classifier_cBew #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
batch_normalization_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_21_address0),
    .ce0(batch_normalization_21_ce0),
    .we0(batch_normalization_21_we0),
    .d0(batch_normalization_14_q0),
    .q0(batch_normalization_21_q0)
);

face_classifier_cNgs #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
batch_normalization_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_17_address0),
    .ce0(batch_normalization_17_ce0),
    .q0(batch_normalization_17_q0)
);

face_classifier_cBew #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
batch_normalization_19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_19_address0),
    .ce0(batch_normalization_19_ce0),
    .we0(batch_normalization_19_we0),
    .d0(batch_normalization_17_q0),
    .q0(batch_normalization_19_q0)
);

face_classifier_cBew #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
dense_1_output_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_output_array_address0),
    .ce0(dense_1_output_array_ce0),
    .we0(dense_1_output_array_we0),
    .d0(dense_1_output_array_d0),
    .q0(dense_1_output_array_q0)
);

face_classifier_cQgW #(
    .DataWidth( 32 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
dense_1_kernel_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_kernel_array_address0),
    .ce0(dense_1_kernel_array_ce0),
    .q0(dense_1_kernel_array_q0)
);

face_classifier_cDeQ #(
    .DataWidth( 32 ),
    .AddressRange( 262200 ),
    .AddressWidth( 19 ))
dense_1_kernel_array_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_kernel_array_1_address0),
    .ce0(dense_1_kernel_array_1_ce0),
    .we0(dense_1_kernel_array_1_we0),
    .d0(dense_1_kernel_array_q0),
    .q0(dense_1_kernel_array_1_q0)
);

face_classifier_cShg #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_1_bias_array2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_bias_array2_address0),
    .ce0(dense_1_bias_array2_ce0),
    .q0(dense_1_bias_array2_q0)
);

face_classifier_cBew #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
dense_1_bias_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_bias_array_address0),
    .ce0(dense_1_bias_array_ce0),
    .we0(dense_1_bias_array_we0),
    .d0(dense_1_bias_array2_q0),
    .q0(dense_1_bias_array_q0)
);

face_classifier_cGfk #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
batch_normalization_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_8_address0),
    .ce0(batch_normalization_8_ce0),
    .we0(batch_normalization_8_we0),
    .d0(batch_normalization_8_d0),
    .q0(batch_normalization_8_q0),
    .address1(batch_normalization_8_address1),
    .ce1(batch_normalization_8_ce1),
    .we1(batch_normalization_8_we1),
    .d1(reg_2021),
    .q1(batch_normalization_8_q1)
);

face_classifier_cVhK #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
batch_normalization_29_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_29_address0),
    .ce0(batch_normalization_29_ce0),
    .q0(batch_normalization_29_q0)
);

face_classifier_cBew #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
batch_normalization_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_7_address0),
    .ce0(batch_normalization_7_ce0),
    .we0(batch_normalization_7_we0),
    .d0(batch_normalization_29_q0),
    .q0(batch_normalization_7_q0)
);

face_classifier_cXh4 #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
batch_normalization_20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_20_address0),
    .ce0(batch_normalization_20_ce0),
    .q0(batch_normalization_20_q0)
);

face_classifier_cBew #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
batch_normalization_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_15_address0),
    .ce0(batch_normalization_15_ce0),
    .we0(batch_normalization_15_we0),
    .d0(batch_normalization_20_q0),
    .q0(batch_normalization_15_q0)
);

face_classifier_cZio #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
batch_normalization_32_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_32_address0),
    .ce0(batch_normalization_32_ce0),
    .q0(batch_normalization_32_q0)
);

face_classifier_cBew #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
batch_normalization_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_6_address0),
    .ce0(batch_normalization_6_ce0),
    .we0(batch_normalization_6_we0),
    .d0(batch_normalization_32_q0),
    .q0(batch_normalization_6_q0)
);

face_classifier_c1iI #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
batch_normalization_35_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_35_address0),
    .ce0(batch_normalization_35_ce0),
    .q0(batch_normalization_35_q0)
);

face_classifier_cBew #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
batch_normalization_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_5_address0),
    .ce0(batch_normalization_5_ce0),
    .we0(batch_normalization_5_we0),
    .d0(batch_normalization_35_q0),
    .q0(batch_normalization_5_q0)
);

face_classifier_cGfk #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
dense_2_output_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_output_array_address0),
    .ce0(dense_2_output_array_ce0),
    .we0(dense_2_output_array_we0),
    .d0(dense_2_output_array_d0),
    .q0(dense_2_output_array_q0),
    .address1(dense_2_output_array_address1),
    .ce1(dense_2_output_array_ce1),
    .we1(dense_2_output_array_we1),
    .d1(dense_2_output_array_d1),
    .q1(dense_2_output_array_q1)
);

face_classifier_c4jc #(
    .DataWidth( 32 ),
    .AddressRange( 60 ),
    .AddressWidth( 6 ))
dense_2_kernel_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_kernel_array_address0),
    .ce0(dense_2_kernel_array_ce0),
    .q0(dense_2_kernel_array_q0)
);

face_classifier_cBew #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
dense_2_kernel_array_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_kernel_array_2_address0),
    .ce0(dense_2_kernel_array_2_ce0),
    .we0(dense_2_kernel_array_2_we0),
    .d0(dense_2_kernel_array_q0),
    .q0(dense_2_kernel_array_2_q0)
);

face_classifier_c6jw #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
dense_2_bias_array7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_bias_array7_address0),
    .ce0(dense_2_bias_array7_ce0),
    .q0(dense_2_bias_array7_q0)
);

face_classifier_cBew #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
dense_2_bias_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_bias_array_address0),
    .ce0(dense_2_bias_array_ce0),
    .we0(dense_2_bias_array_we0),
    .d0(dense_2_bias_array7_q0),
    .q0(dense_2_bias_array_q0)
);

face_classifier_c8jQ #(
    .DataWidth( 64 ),
    .AddressRange( 1 ),
    .AddressWidth( 1 ))
axesA_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(axesA_address0),
    .ce0(axesA_ce0),
    .we0(axesA_we0),
    .d0(axesA_d0),
    .q0(axesA_q0)
);

face_classifier_c9j0 #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dense_kernel_shape_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_kernel_shape_address0),
    .ce0(dense_kernel_shape_ce0),
    .we0(dense_kernel_shape_we0),
    .d0(dense_kernel_shape_d0),
    .q0(dense_kernel_shape_q0),
    .address1(dense_kernel_shape_address1),
    .ce1(dense_kernel_shape_ce1),
    .we1(dense_kernel_shape_we1),
    .d1(64'd1),
    .q1(dense_kernel_shape_q1)
);

face_classifier_cbak #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dense_output_shape_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_output_shape_address0),
    .ce0(dense_output_shape_ce0),
    .we0(dense_output_shape_we0),
    .d0(dense_output_shape_d0),
    .q0(dense_output_shape_q0),
    .address1(dense_output_shape_address1),
    .ce1(dense_output_shape_ce1),
    .we1(dense_output_shape_we1),
    .d1(64'd1)
);

face_classifier_cbbk #(
    .DataWidth( 9 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
batch_normalization_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_4_address0),
    .ce0(batch_normalization_4_ce0),
    .we0(batch_normalization_4_we0),
    .d0(batch_normalization_4_d0),
    .address1(batch_normalization_4_address1),
    .ce1(batch_normalization_4_ce1),
    .we1(batch_normalization_4_we1),
    .d1(9'd1),
    .q1(batch_normalization_4_q1)
);

face_classifier_cbck #(
    .DataWidth( 9 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
activation_1_output_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(activation_1_output_s_address0),
    .ce0(activation_1_output_s_ce0),
    .we0(activation_1_output_s_we0),
    .d0(batch_normalization_4_q1),
    .q0(activation_1_output_s_q0)
);

face_classifier_cBew #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
activation_1_output_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(activation_1_output_1_address0),
    .ce0(activation_1_output_1_ce0),
    .we0(activation_1_output_1_we0),
    .d0(batch_normalization_23_q1),
    .q0(activation_1_output_1_q0)
);

face_classifier_cbek #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dropout_2_output_sha_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dropout_2_output_sha_address0),
    .ce0(dropout_2_output_sha_ce0),
    .we0(dropout_2_output_sha_we0),
    .d0(dropout_2_output_sha_d0),
    .q0(dropout_2_output_sha_q0)
);

face_classifier_cBew #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
dropout_2_output_arr_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dropout_2_output_arr_address0),
    .ce0(dropout_2_output_arr_ce0),
    .we0(dropout_2_output_arr_we0),
    .d0(activation_1_output_1_q0),
    .q0(dropout_2_output_arr_q0)
);

face_classifier_c9j0 #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dense_1_kernel_shape_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_kernel_shape_address0),
    .ce0(dense_1_kernel_shape_ce0),
    .we0(dense_1_kernel_shape_we0),
    .d0(dense_1_kernel_shape_d0),
    .q0(dense_1_kernel_shape_q0),
    .address1(dense_1_kernel_shape_address1),
    .ce1(dense_1_kernel_shape_ce1),
    .we1(dense_1_kernel_shape_we1),
    .d1(64'd1),
    .q1(dense_1_kernel_shape_q1)
);

face_classifier_cbak #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dense_1_output_shape_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_output_shape_address0),
    .ce0(dense_1_output_shape_ce0),
    .we0(dense_1_output_shape_we0),
    .d0(dense_1_output_shape_d0),
    .q0(dense_1_output_shape_q0),
    .address1(dense_1_output_shape_address1),
    .ce1(dense_1_output_shape_ce1),
    .we1(dense_1_output_shape_we1),
    .d1(64'd1)
);

face_classifier_cbil #(
    .DataWidth( 6 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
batch_normalization_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_12_address0),
    .ce0(batch_normalization_12_ce0),
    .we0(batch_normalization_12_we0),
    .d0(batch_normalization_12_d0),
    .address1(batch_normalization_12_address1),
    .ce1(batch_normalization_12_ce1),
    .we1(batch_normalization_12_we1),
    .d1(6'd1),
    .q1(batch_normalization_12_q1)
);

face_classifier_cbjl #(
    .DataWidth( 6 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
activation_2_output_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(activation_2_output_s_address0),
    .ce0(activation_2_output_s_ce0),
    .we0(activation_2_output_s_we0),
    .d0(batch_normalization_12_q1),
    .q0(activation_2_output_s_q0)
);

face_classifier_cBew #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
activation_2_output_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(activation_2_output_1_address0),
    .ce0(activation_2_output_1_ce0),
    .we0(activation_2_output_1_we0),
    .d0(batch_normalization_8_q1),
    .q0(activation_2_output_1_q0)
);

face_classifier_cbek #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dropout_3_output_sha_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dropout_3_output_sha_address0),
    .ce0(dropout_3_output_sha_ce0),
    .we0(dropout_3_output_sha_we0),
    .d0(dropout_3_output_sha_d0),
    .q0(dropout_3_output_sha_q0)
);

face_classifier_cBew #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
dropout_3_output_arr_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dropout_3_output_arr_address0),
    .ce0(dropout_3_output_arr_ce0),
    .we0(dropout_3_output_arr_we0),
    .d0(activation_2_output_1_q0),
    .q0(dropout_3_output_arr_q0)
);

face_classifier_c9j0 #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dense_2_kernel_shape_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_kernel_shape_address0),
    .ce0(dense_2_kernel_shape_ce0),
    .we0(dense_2_kernel_shape_we0),
    .d0(dense_2_kernel_shape_d0),
    .q0(dense_2_kernel_shape_q0),
    .address1(dense_2_kernel_shape_address1),
    .ce1(dense_2_kernel_shape_ce1),
    .we1(dense_2_kernel_shape_we1),
    .d1(64'd1),
    .q1(dense_2_kernel_shape_q1)
);

face_classifier_cbom #(
    .DataWidth( 5 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dense_2_output_shape_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_output_shape_address0),
    .ce0(dense_2_output_shape_ce0),
    .we0(dense_2_output_shape_we0),
    .d0(dense_2_output_shape_d0),
    .q0(dense_2_output_shape_q0),
    .address1(dense_2_output_shape_address1),
    .ce1(dense_2_output_shape_ce1),
    .we1(dense_2_output_shape_we1),
    .d1(5'd1),
    .q1(dense_2_output_shape_q1)
);

face_classifier_cbpm #(
    .DataWidth( 32 ),
    .AddressRange( 264822 ),
    .AddressWidth( 19 ))
dense_fwork_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_fwork_address0),
    .ce0(dense_fwork_ce0),
    .we0(dense_fwork_we0),
    .d0(dense_fwork_d0),
    .q0(dense_fwork_q0),
    .address1(grp_k2c_dense_fu_1857_fwork_address1),
    .ce1(dense_fwork_ce1),
    .q1(dense_fwork_q1)
);

face_classifier_cbqm #(
    .DataWidth( 32 ),
    .AddressRange( 1100 ),
    .AddressWidth( 11 ))
dense_1_fwork_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_fwork_address0),
    .ce0(dense_1_fwork_ce0),
    .we0(dense_1_fwork_we0),
    .d0(dense_1_fwork_d0),
    .q0(dense_1_fwork_q0),
    .address1(grp_k2c_dense_1_fu_1832_fwork_address1),
    .ce1(dense_1_fwork_ce1),
    .q1(dense_1_fwork_q1)
);

face_classifier_cbrm #(
    .DataWidth( 32 ),
    .AddressRange( 70 ),
    .AddressWidth( 7 ))
dense_2_fwork_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_fwork_address0),
    .ce0(dense_2_fwork_ce0),
    .we0(dense_2_fwork_we0),
    .d0(dense_2_fwork_d0),
    .q0(dense_2_fwork_q0),
    .address1(grp_k2c_dense2_fu_1878_fwork_address1),
    .ce1(dense_2_fwork_ce1),
    .q1(dense_2_fwork_q1)
);

k2c_dense_1 grp_k2c_dense_1_fu_1832(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_dense_1_fu_1832_ap_start),
    .ap_done(grp_k2c_dense_1_fu_1832_ap_done),
    .ap_idle(grp_k2c_dense_1_fu_1832_ap_idle),
    .ap_ready(grp_k2c_dense_1_fu_1832_ap_ready),
    .output_array_address0(grp_k2c_dense_1_fu_1832_output_array_address0),
    .output_array_ce0(grp_k2c_dense_1_fu_1832_output_array_ce0),
    .output_array_we0(grp_k2c_dense_1_fu_1832_output_array_we0),
    .output_array_d0(grp_k2c_dense_1_fu_1832_output_array_d0),
    .output_array_q0(dense_1_output_array_q0),
    .output_numel_read(reg_2027),
    .input_array_address0(grp_k2c_dense_1_fu_1832_input_array_address0),
    .input_array_ce0(grp_k2c_dense_1_fu_1832_input_array_ce0),
    .input_array_q0(dropout_2_output_arr_q0),
    .input_ndim_read(batch_normalization_56_reg_3629),
    .input_numel_read(batch_normalization_53_reg_3606),
    .input_shape_address0(grp_k2c_dense_1_fu_1832_input_shape_address0),
    .input_shape_ce0(grp_k2c_dense_1_fu_1832_input_shape_ce0),
    .input_shape_q0(dropout_2_output_sha_q0),
    .kernel_array_address0(grp_k2c_dense_1_fu_1832_kernel_array_address0),
    .kernel_array_ce0(grp_k2c_dense_1_fu_1832_kernel_array_ce0),
    .kernel_array_q0(dense_1_kernel_array_1_q0),
    .kernel_ndim_read(dense_1_kernel_ndim),
    .kernel_numel_read(dense_1_kernel_numel),
    .kernel_shape_address0(grp_k2c_dense_1_fu_1832_kernel_shape_address0),
    .kernel_shape_ce0(grp_k2c_dense_1_fu_1832_kernel_shape_ce0),
    .kernel_shape_q0(dense_1_kernel_shape_q0),
    .kernel_shape_address1(grp_k2c_dense_1_fu_1832_kernel_shape_address1),
    .kernel_shape_ce1(grp_k2c_dense_1_fu_1832_kernel_shape_ce1),
    .kernel_shape_q1(dense_1_kernel_shape_q1),
    .bias_array_address0(grp_k2c_dense_1_fu_1832_bias_array_address0),
    .bias_array_ce0(grp_k2c_dense_1_fu_1832_bias_array_ce0),
    .bias_array_q0(dense_1_bias_array_q0),
    .bias_numel_read(dense_1_bias_numel),
    .fwork_address0(grp_k2c_dense_1_fu_1832_fwork_address0),
    .fwork_ce0(grp_k2c_dense_1_fu_1832_fwork_ce0),
    .fwork_we0(grp_k2c_dense_1_fu_1832_fwork_we0),
    .fwork_d0(grp_k2c_dense_1_fu_1832_fwork_d0),
    .fwork_q0(dense_1_fwork_q0),
    .fwork_address1(grp_k2c_dense_1_fu_1832_fwork_address1),
    .fwork_ce1(grp_k2c_dense_1_fu_1832_fwork_ce1),
    .fwork_q1(dense_1_fwork_q1),
    .axesA_address0(grp_k2c_dense_1_fu_1832_axesA_address0),
    .axesA_ce0(grp_k2c_dense_1_fu_1832_axesA_ce0),
    .axesA_we0(grp_k2c_dense_1_fu_1832_axesA_we0),
    .axesA_d0(grp_k2c_dense_1_fu_1832_axesA_d0),
    .axesA_q0(axesA_q0)
);

k2c_dense grp_k2c_dense_fu_1857(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_dense_fu_1857_ap_start),
    .ap_done(grp_k2c_dense_fu_1857_ap_done),
    .ap_idle(grp_k2c_dense_fu_1857_ap_idle),
    .ap_ready(grp_k2c_dense_fu_1857_ap_ready),
    .output_array_address0(grp_k2c_dense_fu_1857_output_array_address0),
    .output_array_ce0(grp_k2c_dense_fu_1857_output_array_ce0),
    .output_array_we0(grp_k2c_dense_fu_1857_output_array_we0),
    .output_array_d0(grp_k2c_dense_fu_1857_output_array_d0),
    .output_array_q0(dense_output_array_q0),
    .input_array_address0(grp_k2c_dense_fu_1857_input_array_address0),
    .input_array_ce0(grp_k2c_dense_fu_1857_input_array_ce0),
    .input_array_q0(dense_input_input_array_q0),
    .input_ndim_read(dense_input_input_ndim),
    .input_numel_read(dense_input_input_numel),
    .input_shape_address0(grp_k2c_dense_fu_1857_input_shape_address0),
    .input_shape_ce0(grp_k2c_dense_fu_1857_input_shape_ce0),
    .input_shape_q0(dense_input_input_shape_q0),
    .kernel_array_address0(grp_k2c_dense_fu_1857_kernel_array_address0),
    .kernel_array_ce0(grp_k2c_dense_fu_1857_kernel_array_ce0),
    .kernel_array_q0(dense_kernel_array_q0),
    .kernel_shape_address0(grp_k2c_dense_fu_1857_kernel_shape_address0),
    .kernel_shape_ce0(grp_k2c_dense_fu_1857_kernel_shape_ce0),
    .kernel_shape_q0(dense_kernel_shape_q0),
    .kernel_shape_address1(grp_k2c_dense_fu_1857_kernel_shape_address1),
    .kernel_shape_ce1(grp_k2c_dense_fu_1857_kernel_shape_ce1),
    .kernel_shape_q1(dense_kernel_shape_q1),
    .bias_array_address0(grp_k2c_dense_fu_1857_bias_array_address0),
    .bias_array_ce0(grp_k2c_dense_fu_1857_bias_array_ce0),
    .bias_array_q0(dense_bias_array_0_q0),
    .fwork_address0(grp_k2c_dense_fu_1857_fwork_address0),
    .fwork_ce0(grp_k2c_dense_fu_1857_fwork_ce0),
    .fwork_we0(grp_k2c_dense_fu_1857_fwork_we0),
    .fwork_d0(grp_k2c_dense_fu_1857_fwork_d0),
    .fwork_q0(dense_fwork_q0),
    .fwork_address1(grp_k2c_dense_fu_1857_fwork_address1),
    .fwork_ce1(grp_k2c_dense_fu_1857_fwork_ce1),
    .fwork_q1(dense_fwork_q1),
    .axesA_address0(grp_k2c_dense_fu_1857_axesA_address0),
    .axesA_ce0(grp_k2c_dense_fu_1857_axesA_ce0),
    .axesA_we0(grp_k2c_dense_fu_1857_axesA_we0),
    .axesA_d0(grp_k2c_dense_fu_1857_axesA_d0),
    .axesA_q0(axesA_q0)
);

k2c_dense2 grp_k2c_dense2_fu_1878(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_dense2_fu_1878_ap_start),
    .ap_done(grp_k2c_dense2_fu_1878_ap_done),
    .ap_idle(grp_k2c_dense2_fu_1878_ap_idle),
    .ap_ready(grp_k2c_dense2_fu_1878_ap_ready),
    .fwork_address0(grp_k2c_dense2_fu_1878_fwork_address0),
    .fwork_ce0(grp_k2c_dense2_fu_1878_fwork_ce0),
    .fwork_we0(grp_k2c_dense2_fu_1878_fwork_we0),
    .fwork_d0(grp_k2c_dense2_fu_1878_fwork_d0),
    .fwork_q0(dense_2_fwork_q0),
    .fwork_address1(grp_k2c_dense2_fu_1878_fwork_address1),
    .fwork_ce1(grp_k2c_dense2_fu_1878_fwork_ce1),
    .fwork_q1(dense_2_fwork_q1),
    .dropout_3_output_ndi(dropout_3_output_ndi),
    .dense_2_bias_array_address0(grp_k2c_dense2_fu_1878_dense_2_bias_array_address0),
    .dense_2_bias_array_ce0(grp_k2c_dense2_fu_1878_dense_2_bias_array_ce0),
    .dense_2_bias_array_q0(dense_2_bias_array_q0),
    .dense_2_output_array_address0(grp_k2c_dense2_fu_1878_dense_2_output_array_address0),
    .dense_2_output_array_ce0(grp_k2c_dense2_fu_1878_dense_2_output_array_ce0),
    .dense_2_output_array_we0(grp_k2c_dense2_fu_1878_dense_2_output_array_we0),
    .dense_2_output_array_d0(grp_k2c_dense2_fu_1878_dense_2_output_array_d0),
    .dense_2_output_array_q0(dense_2_output_array_q0),
    .dropout_3_output_arr_address0(grp_k2c_dense2_fu_1878_dropout_3_output_arr_address0),
    .dropout_3_output_arr_ce0(grp_k2c_dense2_fu_1878_dropout_3_output_arr_ce0),
    .dropout_3_output_arr_q0(dropout_3_output_arr_q0),
    .dense_2_kernel_array_2_address0(grp_k2c_dense2_fu_1878_dense_2_kernel_array_2_address0),
    .dense_2_kernel_array_2_ce0(grp_k2c_dense2_fu_1878_dense_2_kernel_array_2_ce0),
    .dense_2_kernel_array_2_q0(dense_2_kernel_array_2_q0),
    .dense_2_kernel_ndim(dense_2_kernel_ndim),
    .dropout_3_output_num(dropout_3_output_num),
    .dropout_3_output_sha_address0(grp_k2c_dense2_fu_1878_dropout_3_output_sha_address0),
    .dropout_3_output_sha_ce0(grp_k2c_dense2_fu_1878_dropout_3_output_sha_ce0),
    .dropout_3_output_sha_q0(dropout_3_output_sha_q0),
    .dense_2_kernel_numel(dense_2_kernel_numel),
    .dense_2_kernel_shape_address0(grp_k2c_dense2_fu_1878_dense_2_kernel_shape_address0),
    .dense_2_kernel_shape_ce0(grp_k2c_dense2_fu_1878_dense_2_kernel_shape_ce0),
    .dense_2_kernel_shape_q0(dense_2_kernel_shape_q0),
    .dense_2_kernel_shape_address1(grp_k2c_dense2_fu_1878_dense_2_kernel_shape_address1),
    .dense_2_kernel_shape_ce1(grp_k2c_dense2_fu_1878_dense_2_kernel_shape_ce1),
    .dense_2_kernel_shape_q1(dense_2_kernel_shape_q1),
    .dense_2_output_numel(dense_2_output_numel),
    .dense_2_bias_numel(dense_2_bias_numel)
);

k2c_batch_norm grp_k2c_batch_norm_fu_1907(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_batch_norm_fu_1907_ap_start),
    .ap_done(grp_k2c_batch_norm_fu_1907_ap_done),
    .ap_idle(grp_k2c_batch_norm_fu_1907_ap_idle),
    .ap_ready(grp_k2c_batch_norm_fu_1907_ap_ready),
    .outputs_array_address0(grp_k2c_batch_norm_fu_1907_outputs_array_address0),
    .outputs_array_ce0(grp_k2c_batch_norm_fu_1907_outputs_array_ce0),
    .outputs_array_we0(grp_k2c_batch_norm_fu_1907_outputs_array_we0),
    .outputs_array_d0(grp_k2c_batch_norm_fu_1907_outputs_array_d0),
    .inputs_array_address0(grp_k2c_batch_norm_fu_1907_inputs_array_address0),
    .inputs_array_ce0(grp_k2c_batch_norm_fu_1907_inputs_array_ce0),
    .inputs_array_q0(grp_k2c_batch_norm_fu_1907_inputs_array_q0),
    .inputs_numel_read(grp_k2c_batch_norm_fu_1907_inputs_numel_read),
    .inputs_shape_address0(grp_k2c_batch_norm_fu_1907_inputs_shape_address0),
    .inputs_shape_ce0(grp_k2c_batch_norm_fu_1907_inputs_shape_ce0),
    .inputs_shape_q0(grp_k2c_batch_norm_fu_1907_inputs_shape_q0),
    .mean_array_address0(grp_k2c_batch_norm_fu_1907_mean_array_address0),
    .mean_array_ce0(grp_k2c_batch_norm_fu_1907_mean_array_ce0),
    .mean_array_q0(grp_k2c_batch_norm_fu_1907_mean_array_q0),
    .stdev_array_address0(grp_k2c_batch_norm_fu_1907_stdev_array_address0),
    .stdev_array_ce0(grp_k2c_batch_norm_fu_1907_stdev_array_ce0),
    .stdev_array_q0(grp_k2c_batch_norm_fu_1907_stdev_array_q0),
    .gamma_array_address0(grp_k2c_batch_norm_fu_1907_gamma_array_address0),
    .gamma_array_ce0(grp_k2c_batch_norm_fu_1907_gamma_array_ce0),
    .gamma_array_q0(grp_k2c_batch_norm_fu_1907_gamma_array_q0),
    .beta_array_address0(grp_k2c_batch_norm_fu_1907_beta_array_address0),
    .beta_array_ce0(grp_k2c_batch_norm_fu_1907_beta_array_ce0),
    .beta_array_q0(grp_k2c_batch_norm_fu_1907_beta_array_q0)
);

generic_tanh_float_s grp_generic_tanh_float_s_fu_1933(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_tanh_float_s_fu_1933_ap_start),
    .ap_done(grp_generic_tanh_float_s_fu_1933_ap_done),
    .ap_idle(grp_generic_tanh_float_s_fu_1933_ap_idle),
    .ap_ready(grp_generic_tanh_float_s_fu_1933_ap_ready),
    .ap_ce(1'b1),
    .t_in(grp_generic_tanh_float_s_fu_1933_t_in),
    .ap_return(grp_generic_tanh_float_s_fu_1933_ap_return)
);

face_classifier_cqcK #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_cqcK_U168(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1946_p0),
    .din1(grp_fu_1946_p1),
    .opcode(grp_fu_1946_opcode),
    .ce(1'b1),
    .dout(grp_fu_1946_p2)
);

face_classifier_cjbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_cjbC_U169(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(dense_2_output_array_4_reg_3829),
    .din1(xmax_5_fu_3175_p3),
    .ce(1'b1),
    .dout(grp_fu_1950_p2)
);

face_classifier_cjbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_cjbC_U170(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(dense_2_output_array_6_reg_3840),
    .din1(xmax_5_fu_3175_p3),
    .ce(1'b1),
    .dout(grp_fu_1954_p2)
);

face_classifier_cjbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_cjbC_U171(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(dense_2_output_array_8_reg_3853),
    .din1(xmax_5_fu_3175_p3),
    .ce(1'b1),
    .dout(grp_fu_1958_p2)
);

face_classifier_cjbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_cjbC_U172(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(dense_2_output_array_10_reg_3864),
    .din1(xmax_5_fu_3175_p3),
    .ce(1'b1),
    .dout(grp_fu_1962_p2)
);

face_classifier_cjbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_cjbC_U173(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(dense_2_output_array_12_reg_3878),
    .din1(xmax_5_fu_3175_p3),
    .ce(1'b1),
    .dout(grp_fu_1966_p2)
);

face_classifier_ceOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_ceOg_U174(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_125_reg_3925),
    .din1(sum_reg_3966),
    .ce(1'b1),
    .dout(grp_fu_1971_p2)
);

face_classifier_ceOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_ceOg_U175(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_100_1_reg_3932),
    .din1(sum_reg_3966),
    .ce(1'b1),
    .dout(grp_fu_1975_p2)
);

face_classifier_ceOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_ceOg_U176(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_100_2_reg_3939),
    .din1(sum_reg_3966),
    .ce(1'b1),
    .dout(grp_fu_1979_p2)
);

face_classifier_ceOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_ceOg_U177(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_100_3_reg_3946),
    .din1(sum_reg_3966),
    .ce(1'b1),
    .dout(grp_fu_1983_p2)
);

face_classifier_ceOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_ceOg_U178(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_100_4_reg_3953),
    .din1(sum_reg_3966),
    .ce(1'b1),
    .dout(grp_fu_1987_p2)
);

face_classifier_ceOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_ceOg_U179(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_100_5_reg_3960),
    .din1(sum_reg_3966),
    .ce(1'b1),
    .dout(grp_fu_1991_p2)
);

face_classifier_ckbM #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_ckbM_U180(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd1065353216),
    .din1(reg_2033),
    .ce(1'b1),
    .dout(grp_fu_1995_p2)
);

face_classifier_ctde #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
face_classifier_ctde_U181(
    .din0(grp_fu_2000_p0),
    .din1(grp_fu_2000_p1),
    .opcode(5'd2),
    .dout(grp_fu_2000_p2)
);

face_classifier_ctde #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
face_classifier_ctde_U182(
    .din0(dense_2_output_array_q1),
    .din1(grp_fu_2005_p1),
    .opcode(5'd2),
    .dout(grp_fu_2005_p2)
);

face_classifier_cbsm #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_cbsm_U183(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(grp_fu_2010_p1),
    .ce(1'b1),
    .dout(grp_fu_2010_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp10_exit_iter0_state42) & (1'b1 == ap_CS_fsm_pp10_stage0) & (1'b0 == ap_block_pp10_stage0_subdone))) begin
            ap_enable_reg_pp10_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state41)) begin
            ap_enable_reg_pp10_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp10_exit_iter0_state42) & (1'b0 == ap_block_pp10_stage0_subdone))) begin
            ap_enable_reg_pp10_iter1 <= (1'b1 ^ ap_condition_pp10_exit_iter0_state42);
        end else if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter1 <= ap_enable_reg_pp10_iter0;
        end else if ((1'b1 == ap_CS_fsm_state41)) begin
            ap_enable_reg_pp10_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp12_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp12_exit_iter0_state50) & (1'b1 == ap_CS_fsm_pp12_stage0) & (1'b0 == ap_block_pp12_stage0_subdone))) begin
            ap_enable_reg_pp12_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state49)) begin
            ap_enable_reg_pp12_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp12_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp12_exit_iter0_state50) & (1'b0 == ap_block_pp12_stage0_subdone))) begin
            ap_enable_reg_pp12_iter1 <= (1'b1 ^ ap_condition_pp12_exit_iter0_state50);
        end else if ((1'b0 == ap_block_pp12_stage0_subdone)) begin
            ap_enable_reg_pp12_iter1 <= ap_enable_reg_pp12_iter0;
        end else if ((1'b1 == ap_CS_fsm_state49)) begin
            ap_enable_reg_pp12_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp13_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp13_exit_iter0_state53) & (1'b1 == ap_CS_fsm_pp13_stage0) & (1'b0 == ap_block_pp13_stage0_subdone))) begin
            ap_enable_reg_pp13_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state52)) begin
            ap_enable_reg_pp13_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp13_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp13_exit_iter0_state53) & (1'b0 == ap_block_pp13_stage0_subdone))) begin
            ap_enable_reg_pp13_iter1 <= (1'b1 ^ ap_condition_pp13_exit_iter0_state53);
        end else if ((1'b0 == ap_block_pp13_stage0_subdone)) begin
            ap_enable_reg_pp13_iter1 <= ap_enable_reg_pp13_iter0;
        end else if ((1'b1 == ap_CS_fsm_state52)) begin
            ap_enable_reg_pp13_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp14_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp14_stage0_subdone) & (1'b1 == ap_condition_pp14_exit_iter0_state56) & (1'b1 == ap_CS_fsm_pp14_stage0))) begin
            ap_enable_reg_pp14_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state55)) begin
            ap_enable_reg_pp14_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp14_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp14_stage0_subdone) & (1'b1 == ap_condition_pp14_exit_iter0_state56))) begin
            ap_enable_reg_pp14_iter1 <= (1'b1 ^ ap_condition_pp14_exit_iter0_state56);
        end else if ((1'b0 == ap_block_pp14_stage0_subdone)) begin
            ap_enable_reg_pp14_iter1 <= ap_enable_reg_pp14_iter0;
        end else if ((1'b1 == ap_CS_fsm_state55)) begin
            ap_enable_reg_pp14_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp15_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp15_stage0_subdone) & (1'b1 == ap_condition_pp15_exit_iter0_state59) & (1'b1 == ap_CS_fsm_pp15_stage0))) begin
            ap_enable_reg_pp15_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state58)) begin
            ap_enable_reg_pp15_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp15_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp15_stage0_subdone) & (1'b1 == ap_condition_pp15_exit_iter0_state59))) begin
            ap_enable_reg_pp15_iter1 <= (1'b1 ^ ap_condition_pp15_exit_iter0_state59);
        end else if ((1'b0 == ap_block_pp15_stage0_subdone)) begin
            ap_enable_reg_pp15_iter1 <= ap_enable_reg_pp15_iter0;
        end else if ((1'b1 == ap_CS_fsm_state58)) begin
            ap_enable_reg_pp15_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp17_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp17_stage0_subdone) & (1'b1 == ap_condition_pp17_exit_iter0_state68) & (1'b1 == ap_CS_fsm_pp17_stage0))) begin
            ap_enable_reg_pp17_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state67)) begin
            ap_enable_reg_pp17_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp17_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp17_stage0_subdone) & (1'b1 == ap_condition_pp17_exit_iter0_state68))) begin
            ap_enable_reg_pp17_iter1 <= (1'b1 ^ ap_condition_pp17_exit_iter0_state68);
        end else if ((1'b0 == ap_block_pp17_stage0_subdone)) begin
            ap_enable_reg_pp17_iter1 <= ap_enable_reg_pp17_iter0;
        end else if ((1'b1 == ap_CS_fsm_state67)) begin
            ap_enable_reg_pp17_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp18_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp18_stage0_subdone) & (1'b1 == ap_condition_pp18_exit_iter0_state71) & (1'b1 == ap_CS_fsm_pp18_stage0))) begin
            ap_enable_reg_pp18_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state70)) begin
            ap_enable_reg_pp18_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp18_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp18_stage0_subdone) & (1'b1 == ap_condition_pp18_exit_iter0_state71))) begin
            ap_enable_reg_pp18_iter1 <= (1'b1 ^ ap_condition_pp18_exit_iter0_state71);
        end else if ((1'b0 == ap_block_pp18_stage0_subdone)) begin
            ap_enable_reg_pp18_iter1 <= ap_enable_reg_pp18_iter0;
        end else if ((1'b1 == ap_CS_fsm_state70)) begin
            ap_enable_reg_pp18_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp19_stage0_subdone) & (1'b1 == ap_condition_pp19_exit_iter0_state78) & (1'b1 == ap_CS_fsm_pp19_stage0))) begin
            ap_enable_reg_pp19_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state77) & (grp_k2c_batch_norm_fu_1907_ap_done == 1'b1))) begin
            ap_enable_reg_pp19_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp19_exit_iter0_state78)) begin
                ap_enable_reg_pp19_iter1 <= (1'b1 ^ ap_condition_pp19_exit_iter0_state78);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp19_iter1 <= ap_enable_reg_pp19_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter10 <= ap_enable_reg_pp19_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter11 <= ap_enable_reg_pp19_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter12 <= ap_enable_reg_pp19_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter13 <= ap_enable_reg_pp19_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter14 <= ap_enable_reg_pp19_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter15 <= ap_enable_reg_pp19_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter16 <= ap_enable_reg_pp19_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter17 <= ap_enable_reg_pp19_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter18 <= ap_enable_reg_pp19_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter19 <= ap_enable_reg_pp19_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter2 <= ap_enable_reg_pp19_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter20 <= ap_enable_reg_pp19_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter21 <= ap_enable_reg_pp19_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter22 <= ap_enable_reg_pp19_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter23 <= ap_enable_reg_pp19_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter24 <= ap_enable_reg_pp19_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter25 <= ap_enable_reg_pp19_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter26 <= ap_enable_reg_pp19_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter27 <= ap_enable_reg_pp19_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter28 <= ap_enable_reg_pp19_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter29 <= ap_enable_reg_pp19_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter3 <= ap_enable_reg_pp19_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter30 <= ap_enable_reg_pp19_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter31 <= ap_enable_reg_pp19_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter32 <= ap_enable_reg_pp19_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter33 <= ap_enable_reg_pp19_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter34 <= ap_enable_reg_pp19_iter33;
        end else if (((1'b1 == ap_CS_fsm_state77) & (grp_k2c_batch_norm_fu_1907_ap_done == 1'b1))) begin
            ap_enable_reg_pp19_iter34 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter4 <= ap_enable_reg_pp19_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter5 <= ap_enable_reg_pp19_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter6 <= ap_enable_reg_pp19_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter7 <= ap_enable_reg_pp19_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter8 <= ap_enable_reg_pp19_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter9 <= ap_enable_reg_pp19_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state10) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state10) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state10);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp20_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp20_stage0_subdone) & (1'b1 == ap_condition_pp20_exit_iter0_state114) & (1'b1 == ap_CS_fsm_pp20_stage0))) begin
            ap_enable_reg_pp20_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state113)) begin
            ap_enable_reg_pp20_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp20_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp20_stage0_subdone) & (1'b1 == ap_condition_pp20_exit_iter0_state114))) begin
            ap_enable_reg_pp20_iter1 <= (1'b1 ^ ap_condition_pp20_exit_iter0_state114);
        end else if ((1'b0 == ap_block_pp20_stage0_subdone)) begin
            ap_enable_reg_pp20_iter1 <= ap_enable_reg_pp20_iter0;
        end else if ((1'b1 == ap_CS_fsm_state113)) begin
            ap_enable_reg_pp20_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp21_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp21_stage0_subdone) & (1'b1 == ap_condition_pp21_exit_iter0_state117) & (1'b1 == ap_CS_fsm_pp21_stage0))) begin
            ap_enable_reg_pp21_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state116)) begin
            ap_enable_reg_pp21_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp21_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp21_stage0_subdone) & (1'b1 == ap_condition_pp21_exit_iter0_state117))) begin
            ap_enable_reg_pp21_iter1 <= (1'b1 ^ ap_condition_pp21_exit_iter0_state117);
        end else if ((1'b0 == ap_block_pp21_stage0_subdone)) begin
            ap_enable_reg_pp21_iter1 <= ap_enable_reg_pp21_iter0;
        end else if ((1'b1 == ap_CS_fsm_state116)) begin
            ap_enable_reg_pp21_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp22_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp22_stage0_subdone) & (1'b1 == ap_condition_pp22_exit_iter0_state120) & (1'b1 == ap_CS_fsm_pp22_stage0))) begin
            ap_enable_reg_pp22_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state119)) begin
            ap_enable_reg_pp22_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp22_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp22_stage0_subdone) & (1'b1 == ap_condition_pp22_exit_iter0_state120))) begin
            ap_enable_reg_pp22_iter1 <= (1'b1 ^ ap_condition_pp22_exit_iter0_state120);
        end else if ((1'b0 == ap_block_pp22_stage0_subdone)) begin
            ap_enable_reg_pp22_iter1 <= ap_enable_reg_pp22_iter0;
        end else if ((1'b1 == ap_CS_fsm_state119)) begin
            ap_enable_reg_pp22_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp23_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp23_stage0_subdone) & (1'b1 == ap_condition_pp23_exit_iter0_state123) & (1'b1 == ap_CS_fsm_pp23_stage0))) begin
            ap_enable_reg_pp23_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state122)) begin
            ap_enable_reg_pp23_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp23_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp23_stage0_subdone) & (1'b1 == ap_condition_pp23_exit_iter0_state123))) begin
            ap_enable_reg_pp23_iter1 <= (1'b1 ^ ap_condition_pp23_exit_iter0_state123);
        end else if ((1'b0 == ap_block_pp23_stage0_subdone)) begin
            ap_enable_reg_pp23_iter1 <= ap_enable_reg_pp23_iter0;
        end else if ((1'b1 == ap_CS_fsm_state122)) begin
            ap_enable_reg_pp23_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp24_stage0_subdone) & (1'b1 == ap_condition_pp24_exit_iter0_state129) & (1'b1 == ap_CS_fsm_pp24_stage0))) begin
            ap_enable_reg_pp24_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state128) & (grp_k2c_batch_norm_fu_1907_ap_done == 1'b1))) begin
            ap_enable_reg_pp24_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp24_exit_iter0_state129)) begin
                ap_enable_reg_pp24_iter1 <= (1'b1 ^ ap_condition_pp24_exit_iter0_state129);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp24_iter1 <= ap_enable_reg_pp24_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter10 <= ap_enable_reg_pp24_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter11 <= ap_enable_reg_pp24_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter12 <= ap_enable_reg_pp24_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter13 <= ap_enable_reg_pp24_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter14 <= ap_enable_reg_pp24_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter15 <= ap_enable_reg_pp24_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter16 <= ap_enable_reg_pp24_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter17 <= ap_enable_reg_pp24_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter18 <= ap_enable_reg_pp24_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter19 <= ap_enable_reg_pp24_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter2 <= ap_enable_reg_pp24_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter20 <= ap_enable_reg_pp24_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter21 <= ap_enable_reg_pp24_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter22 <= ap_enable_reg_pp24_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter23 <= ap_enable_reg_pp24_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter24 <= ap_enable_reg_pp24_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter25 <= ap_enable_reg_pp24_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter26 <= ap_enable_reg_pp24_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter27 <= ap_enable_reg_pp24_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter28 <= ap_enable_reg_pp24_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter29 <= ap_enable_reg_pp24_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter3 <= ap_enable_reg_pp24_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter30 <= ap_enable_reg_pp24_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter31 <= ap_enable_reg_pp24_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter32 <= ap_enable_reg_pp24_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter33 <= ap_enable_reg_pp24_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter34 <= ap_enable_reg_pp24_iter33;
        end else if (((1'b1 == ap_CS_fsm_state128) & (grp_k2c_batch_norm_fu_1907_ap_done == 1'b1))) begin
            ap_enable_reg_pp24_iter34 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter4 <= ap_enable_reg_pp24_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter5 <= ap_enable_reg_pp24_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter6 <= ap_enable_reg_pp24_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter7 <= ap_enable_reg_pp24_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter8 <= ap_enable_reg_pp24_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter9 <= ap_enable_reg_pp24_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp25_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp25_stage0_subdone) & (1'b1 == ap_condition_pp25_exit_iter0_state165) & (1'b1 == ap_CS_fsm_pp25_stage0))) begin
            ap_enable_reg_pp25_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state164)) begin
            ap_enable_reg_pp25_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp25_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp25_stage0_subdone) & (1'b1 == ap_condition_pp25_exit_iter0_state165))) begin
            ap_enable_reg_pp25_iter1 <= (1'b1 ^ ap_condition_pp25_exit_iter0_state165);
        end else if ((1'b0 == ap_block_pp25_stage0_subdone)) begin
            ap_enable_reg_pp25_iter1 <= ap_enable_reg_pp25_iter0;
        end else if ((1'b1 == ap_CS_fsm_state164)) begin
            ap_enable_reg_pp25_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp26_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp26_stage0_subdone) & (1'b1 == ap_condition_pp26_exit_iter0_state168) & (1'b1 == ap_CS_fsm_pp26_stage0))) begin
            ap_enable_reg_pp26_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state167)) begin
            ap_enable_reg_pp26_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp26_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp26_stage0_subdone) & (1'b1 == ap_condition_pp26_exit_iter0_state168))) begin
            ap_enable_reg_pp26_iter1 <= (1'b1 ^ ap_condition_pp26_exit_iter0_state168);
        end else if ((1'b0 == ap_block_pp26_stage0_subdone)) begin
            ap_enable_reg_pp26_iter1 <= ap_enable_reg_pp26_iter0;
        end else if ((1'b1 == ap_CS_fsm_state167)) begin
            ap_enable_reg_pp26_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp27_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp27_stage0_subdone) & (1'b1 == ap_condition_pp27_exit_iter0_state171) & (1'b1 == ap_CS_fsm_pp27_stage0))) begin
            ap_enable_reg_pp27_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state170)) begin
            ap_enable_reg_pp27_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp27_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp27_stage0_subdone) & (1'b1 == ap_condition_pp27_exit_iter0_state171))) begin
            ap_enable_reg_pp27_iter1 <= (1'b1 ^ ap_condition_pp27_exit_iter0_state171);
        end else if ((1'b0 == ap_block_pp27_stage0_subdone)) begin
            ap_enable_reg_pp27_iter1 <= ap_enable_reg_pp27_iter0;
        end else if ((1'b1 == ap_CS_fsm_state170)) begin
            ap_enable_reg_pp27_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp28_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp28_stage0_subdone) & (1'b1 == ap_condition_pp28_exit_iter0_state174) & (1'b1 == ap_CS_fsm_pp28_stage0))) begin
            ap_enable_reg_pp28_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state173)) begin
            ap_enable_reg_pp28_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp28_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp28_stage0_subdone) & (1'b1 == ap_condition_pp28_exit_iter0_state174))) begin
            ap_enable_reg_pp28_iter1 <= (1'b1 ^ ap_condition_pp28_exit_iter0_state174);
        end else if ((1'b0 == ap_block_pp28_stage0_subdone)) begin
            ap_enable_reg_pp28_iter1 <= ap_enable_reg_pp28_iter0;
        end else if ((1'b1 == ap_CS_fsm_state173)) begin
            ap_enable_reg_pp28_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state13) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state13) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state13);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_condition_pp4_exit_iter0_state21) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp4_exit_iter0_state21) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state21);
        end else if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp5_exit_iter0_state24) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp5_exit_iter0_state24) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state24);
        end else if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            ap_enable_reg_pp5_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp6_exit_iter0_state27) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state26)) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp6_exit_iter0_state27) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
            ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state27);
        end else if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
        end else if ((1'b1 == ap_CS_fsm_state26)) begin
            ap_enable_reg_pp6_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp7_exit_iter0_state30) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state29)) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp7_exit_iter0_state30) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
            ap_enable_reg_pp7_iter1 <= (1'b1 ^ ap_condition_pp7_exit_iter0_state30);
        end else if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
        end else if ((1'b1 == ap_CS_fsm_state29)) begin
            ap_enable_reg_pp7_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp9_exit_iter0_state39) & (1'b1 == ap_CS_fsm_pp9_stage0) & (1'b0 == ap_block_pp9_stage0_subdone))) begin
            ap_enable_reg_pp9_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state38)) begin
            ap_enable_reg_pp9_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp9_exit_iter0_state39) & (1'b0 == ap_block_pp9_stage0_subdone))) begin
            ap_enable_reg_pp9_iter1 <= (1'b1 ^ ap_condition_pp9_exit_iter0_state39);
        end else if ((1'b0 == ap_block_pp9_stage0_subdone)) begin
            ap_enable_reg_pp9_iter1 <= ap_enable_reg_pp9_iter0;
        end else if ((1'b1 == ap_CS_fsm_state38)) begin
            ap_enable_reg_pp9_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_tanh_float_s_fu_1933_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp24_stage0_11001) & (exitcond25_fu_2624_p2 == 1'd0) & (ap_enable_reg_pp24_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp24_stage0)) | ((1'b0 == ap_block_pp19_stage0_11001) & (exitcond1_fu_2523_p2 == 1'd0) & (ap_enable_reg_pp19_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp19_stage0)))) begin
            grp_generic_tanh_float_s_fu_1933_ap_start_reg <= 1'b1;
        end else if ((grp_generic_tanh_float_s_fu_1933_ap_ready == 1'b1)) begin
            grp_generic_tanh_float_s_fu_1933_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_batch_norm_fu_1907_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state76))) begin
            grp_k2c_batch_norm_fu_1907_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_batch_norm_fu_1907_ap_ready == 1'b1)) begin
            grp_k2c_batch_norm_fu_1907_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_dense2_fu_1878_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state176)) begin
            grp_k2c_dense2_fu_1878_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_dense2_fu_1878_ap_ready == 1'b1)) begin
            grp_k2c_dense2_fu_1878_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_dense_1_fu_1832_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state125)) begin
            grp_k2c_dense_1_fu_1832_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_dense_1_fu_1832_ap_ready == 1'b1)) begin
            grp_k2c_dense_1_fu_1832_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_dense_fu_1857_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state74) & (tmp_79_fu_2503_p2 == 1'd1))) begin
            grp_k2c_dense_fu_1857_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_dense_fu_1857_ap_ready == 1'b1)) begin
            grp_k2c_dense_fu_1857_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp24_stage0_11001) & (exitcond25_fu_2624_p2 == 1'd0) & (ap_enable_reg_pp24_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp24_stage0))) begin
        i_1_reg_1766 <= i_41_fu_2630_p2;
    end else if (((1'b1 == ap_CS_fsm_state128) & (grp_k2c_batch_norm_fu_1907_ap_done == 1'b1))) begin
        i_1_reg_1766 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp19_stage0_11001) & (exitcond1_fu_2523_p2 == 1'd0) & (ap_enable_reg_pp19_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp19_stage0))) begin
        i_reg_1711 <= i_40_fu_2528_p2;
    end else if (((1'b1 == ap_CS_fsm_state77) & (grp_k2c_batch_norm_fu_1907_ap_done == 1'b1))) begin
        i_reg_1711 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        invdar1_reg_1502 <= 19'd0;
    end else if (((tmp_59_fu_2125_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        invdar1_reg_1502 <= indvarinc1_fu_2114_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        invdar2_reg_1601 <= 11'd0;
    end else if (((tmp_69_fu_2314_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45))) begin
        invdar2_reg_1601 <= indvarinc2_fu_2303_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        invdar3_reg_1700 <= 7'd0;
    end else if (((tmp_79_fu_2503_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state74))) begin
        invdar3_reg_1700 <= indvarinc3_fu_2492_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        invdar_reg_1469 <= 19'd0;
    end else if (((tmp_55_reg_3275 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        invdar_reg_1469 <= indvarinc_reg_3260;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond13_fu_2326_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state48))) begin
        j_10_reg_1612 <= j_38_fu_2332_p2;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        j_10_reg_1612 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        j_11_reg_1623 <= 4'd0;
    end else if (((exitcond12_fu_2343_p2 == 1'd0) & (ap_enable_reg_pp12_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp12_stage0) & (1'b0 == ap_block_pp12_stage0_11001))) begin
        j_11_reg_1623 <= j_39_fu_2349_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        j_12_reg_1634 <= 4'd0;
    end else if (((exitcond11_fu_2360_p2 == 1'd0) & (ap_enable_reg_pp13_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp13_stage0) & (1'b0 == ap_block_pp13_stage0_11001))) begin
        j_12_reg_1634 <= j_40_fu_2366_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        j_13_reg_1645 <= 4'd0;
    end else if (((exitcond10_fu_2377_p2 == 1'd0) & (ap_enable_reg_pp14_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp14_stage0) & (1'b0 == ap_block_pp14_stage0_11001))) begin
        j_13_reg_1645 <= j_41_fu_2383_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        j_14_reg_1656 <= 4'd0;
    end else if (((exitcond9_fu_2394_p2 == 1'd0) & (ap_enable_reg_pp15_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp15_stage0) & (1'b0 == ap_block_pp15_stage0_11001))) begin
        j_14_reg_1656 <= j_42_fu_2400_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_fu_2423_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state64))) begin
        j_15_reg_1667 <= j_43_fu_2429_p2;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        j_15_reg_1667 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_fu_2452_p2 == 1'd0) & (ap_enable_reg_pp17_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp17_stage0) & (1'b0 == ap_block_pp17_stage0_11001))) begin
        j_16_reg_1678 <= j_44_fu_2458_p2;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        j_16_reg_1678 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_2475_p2 == 1'd0) & (ap_enable_reg_pp18_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp18_stage0) & (1'b0 == ap_block_pp18_stage0_11001))) begin
        j_17_reg_1689 <= j_45_fu_2481_p2;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        j_17_reg_1689 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_2538_p2 == 1'd0) & (ap_enable_reg_pp20_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp20_stage0) & (1'b0 == ap_block_pp20_stage0_11001))) begin
        j_18_reg_1722 <= j_46_fu_2544_p2;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        j_18_reg_1722 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state116)) begin
        j_19_reg_1733 <= 12'd0;
    end else if (((ap_enable_reg_pp21_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp21_stage0) & (tmp_84_fu_2560_p2 == 1'd1) & (1'b0 == ap_block_pp21_stage0_11001))) begin
        j_19_reg_1733 <= j_47_fu_2565_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond23_fu_2080_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j_1_reg_1480 <= j_28_fu_2086_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        j_1_reg_1480 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        j_20_reg_1744 <= 3'd0;
    end else if (((exitcond4_fu_2571_p2 == 1'd0) & (ap_enable_reg_pp22_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp22_stage0) & (1'b0 == ap_block_pp22_stage0_11001))) begin
        j_20_reg_1744 <= j_48_fu_2577_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state122)) begin
        j_21_reg_1755 <= 12'd0;
    end else if (((ap_enable_reg_pp23_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp23_stage0) & (1'b0 == ap_block_pp23_stage0_11001) & (tmp_87_fu_2598_p2 == 1'd1))) begin
        j_21_reg_1755 <= j_49_fu_2603_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_2649_p2 == 1'd0) & (ap_enable_reg_pp25_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp25_stage0) & (1'b0 == ap_block_pp25_stage0_11001))) begin
        j_22_reg_1777 <= j_50_fu_2655_p2;
    end else if ((1'b1 == ap_CS_fsm_state164)) begin
        j_22_reg_1777 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state167)) begin
        j_23_reg_1788 <= 4'd0;
    end else if (((exitcond24_fu_2666_p2 == 1'd0) & (ap_enable_reg_pp26_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp26_stage0) & (1'b0 == ap_block_pp26_stage0_11001))) begin
        j_23_reg_1788 <= j_51_fu_2672_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_2694_p2 == 1'd0) & (ap_enable_reg_pp27_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp27_stage0) & (1'b0 == ap_block_pp27_stage0_11001))) begin
        j_24_reg_1799 <= j_52_fu_2700_p2;
    end else if ((1'b1 == ap_CS_fsm_state170)) begin
        j_24_reg_1799 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state173)) begin
        j_25_reg_1810 <= 4'd0;
    end else if (((exitcond26_fu_2716_p2 == 1'd0) & (ap_enable_reg_pp28_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp28_stage0) & (1'b0 == ap_block_pp28_stage0_11001))) begin
        j_25_reg_1810 <= j_53_fu_2722_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state229)) begin
        j_27_reg_1821 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state231)) begin
        j_27_reg_1821 <= j_54_reg_4019;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        j_2_reg_1491 <= 7'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond22_fu_2097_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        j_2_reg_1491 <= j_29_fu_2103_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond21_fu_2143_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        j_3_reg_1513 <= j_30_fu_2149_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        j_3_reg_1513 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        j_4_reg_1524 <= 7'd0;
    end else if (((exitcond20_fu_2160_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        j_4_reg_1524 <= j_31_fu_2166_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        j_5_reg_1535 <= 7'd0;
    end else if (((exitcond19_fu_2177_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        j_5_reg_1535 <= j_32_fu_2183_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        j_6_reg_1546 <= 7'd0;
    end else if (((exitcond18_fu_2194_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        j_6_reg_1546 <= j_33_fu_2200_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        j_7_reg_1557 <= 7'd0;
    end else if (((exitcond17_fu_2211_p2 == 1'd0) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        j_7_reg_1557 <= j_34_fu_2217_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond16_fu_2234_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state35))) begin
        j_8_reg_1568 <= j_35_fu_2240_p2;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        j_8_reg_1568 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond15_fu_2263_p2 == 1'd0) & (ap_enable_reg_pp9_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp9_stage0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        j_9_reg_1579 <= j_36_fu_2269_p2;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        j_9_reg_1579 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_2046_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        j_reg_1458 <= j_26_fu_2052_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        j_reg_1458 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond14_fu_2286_p2 == 1'd0) & (ap_enable_reg_pp10_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp10_stage0) & (1'b0 == ap_block_pp10_stage0_11001))) begin
        j_s_reg_1590 <= j_37_fu_2292_p2;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        j_s_reg_1590 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (tmp_59_fu_2125_p2 == 1'd1))) begin
        batch_normalization_1[0] <= 1'b1;
        batch_normalization_3[2] <= 1'b1;
batch_normalization_3[5] <= 1'b1;
batch_normalization_3[6] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state77) & (grp_k2c_batch_norm_fu_1907_ap_done == 1'b1))) begin
        batch_normalization_53_reg_3606[2] <= batch_normalization_3[2];
batch_normalization_53_reg_3606[6 : 5] <= batch_normalization_3[6 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp19_stage0_11001) & (exitcond1_fu_2523_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp19_stage0))) begin
        batch_normalization_54_reg_3623 <= i_cast_fu_2518_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp19_stage0_11001)) begin
        batch_normalization_54_reg_3623_pp19_iter10_reg <= batch_normalization_54_reg_3623_pp19_iter9_reg;
        batch_normalization_54_reg_3623_pp19_iter11_reg <= batch_normalization_54_reg_3623_pp19_iter10_reg;
        batch_normalization_54_reg_3623_pp19_iter12_reg <= batch_normalization_54_reg_3623_pp19_iter11_reg;
        batch_normalization_54_reg_3623_pp19_iter13_reg <= batch_normalization_54_reg_3623_pp19_iter12_reg;
        batch_normalization_54_reg_3623_pp19_iter14_reg <= batch_normalization_54_reg_3623_pp19_iter13_reg;
        batch_normalization_54_reg_3623_pp19_iter15_reg <= batch_normalization_54_reg_3623_pp19_iter14_reg;
        batch_normalization_54_reg_3623_pp19_iter16_reg <= batch_normalization_54_reg_3623_pp19_iter15_reg;
        batch_normalization_54_reg_3623_pp19_iter17_reg <= batch_normalization_54_reg_3623_pp19_iter16_reg;
        batch_normalization_54_reg_3623_pp19_iter18_reg <= batch_normalization_54_reg_3623_pp19_iter17_reg;
        batch_normalization_54_reg_3623_pp19_iter19_reg <= batch_normalization_54_reg_3623_pp19_iter18_reg;
        batch_normalization_54_reg_3623_pp19_iter20_reg <= batch_normalization_54_reg_3623_pp19_iter19_reg;
        batch_normalization_54_reg_3623_pp19_iter21_reg <= batch_normalization_54_reg_3623_pp19_iter20_reg;
        batch_normalization_54_reg_3623_pp19_iter22_reg <= batch_normalization_54_reg_3623_pp19_iter21_reg;
        batch_normalization_54_reg_3623_pp19_iter23_reg <= batch_normalization_54_reg_3623_pp19_iter22_reg;
        batch_normalization_54_reg_3623_pp19_iter24_reg <= batch_normalization_54_reg_3623_pp19_iter23_reg;
        batch_normalization_54_reg_3623_pp19_iter25_reg <= batch_normalization_54_reg_3623_pp19_iter24_reg;
        batch_normalization_54_reg_3623_pp19_iter26_reg <= batch_normalization_54_reg_3623_pp19_iter25_reg;
        batch_normalization_54_reg_3623_pp19_iter27_reg <= batch_normalization_54_reg_3623_pp19_iter26_reg;
        batch_normalization_54_reg_3623_pp19_iter28_reg <= batch_normalization_54_reg_3623_pp19_iter27_reg;
        batch_normalization_54_reg_3623_pp19_iter29_reg <= batch_normalization_54_reg_3623_pp19_iter28_reg;
        batch_normalization_54_reg_3623_pp19_iter2_reg <= batch_normalization_54_reg_3623_pp19_iter1_reg;
        batch_normalization_54_reg_3623_pp19_iter30_reg <= batch_normalization_54_reg_3623_pp19_iter29_reg;
        batch_normalization_54_reg_3623_pp19_iter31_reg <= batch_normalization_54_reg_3623_pp19_iter30_reg;
        batch_normalization_54_reg_3623_pp19_iter32_reg <= batch_normalization_54_reg_3623_pp19_iter31_reg;
        batch_normalization_54_reg_3623_pp19_iter33_reg <= batch_normalization_54_reg_3623_pp19_iter32_reg;
        batch_normalization_54_reg_3623_pp19_iter3_reg <= batch_normalization_54_reg_3623_pp19_iter2_reg;
        batch_normalization_54_reg_3623_pp19_iter4_reg <= batch_normalization_54_reg_3623_pp19_iter3_reg;
        batch_normalization_54_reg_3623_pp19_iter5_reg <= batch_normalization_54_reg_3623_pp19_iter4_reg;
        batch_normalization_54_reg_3623_pp19_iter6_reg <= batch_normalization_54_reg_3623_pp19_iter5_reg;
        batch_normalization_54_reg_3623_pp19_iter7_reg <= batch_normalization_54_reg_3623_pp19_iter6_reg;
        batch_normalization_54_reg_3623_pp19_iter8_reg <= batch_normalization_54_reg_3623_pp19_iter7_reg;
        batch_normalization_54_reg_3623_pp19_iter9_reg <= batch_normalization_54_reg_3623_pp19_iter8_reg;
        exitcond1_reg_3614_pp19_iter10_reg <= exitcond1_reg_3614_pp19_iter9_reg;
        exitcond1_reg_3614_pp19_iter11_reg <= exitcond1_reg_3614_pp19_iter10_reg;
        exitcond1_reg_3614_pp19_iter12_reg <= exitcond1_reg_3614_pp19_iter11_reg;
        exitcond1_reg_3614_pp19_iter13_reg <= exitcond1_reg_3614_pp19_iter12_reg;
        exitcond1_reg_3614_pp19_iter14_reg <= exitcond1_reg_3614_pp19_iter13_reg;
        exitcond1_reg_3614_pp19_iter15_reg <= exitcond1_reg_3614_pp19_iter14_reg;
        exitcond1_reg_3614_pp19_iter16_reg <= exitcond1_reg_3614_pp19_iter15_reg;
        exitcond1_reg_3614_pp19_iter17_reg <= exitcond1_reg_3614_pp19_iter16_reg;
        exitcond1_reg_3614_pp19_iter18_reg <= exitcond1_reg_3614_pp19_iter17_reg;
        exitcond1_reg_3614_pp19_iter19_reg <= exitcond1_reg_3614_pp19_iter18_reg;
        exitcond1_reg_3614_pp19_iter20_reg <= exitcond1_reg_3614_pp19_iter19_reg;
        exitcond1_reg_3614_pp19_iter21_reg <= exitcond1_reg_3614_pp19_iter20_reg;
        exitcond1_reg_3614_pp19_iter22_reg <= exitcond1_reg_3614_pp19_iter21_reg;
        exitcond1_reg_3614_pp19_iter23_reg <= exitcond1_reg_3614_pp19_iter22_reg;
        exitcond1_reg_3614_pp19_iter24_reg <= exitcond1_reg_3614_pp19_iter23_reg;
        exitcond1_reg_3614_pp19_iter25_reg <= exitcond1_reg_3614_pp19_iter24_reg;
        exitcond1_reg_3614_pp19_iter26_reg <= exitcond1_reg_3614_pp19_iter25_reg;
        exitcond1_reg_3614_pp19_iter27_reg <= exitcond1_reg_3614_pp19_iter26_reg;
        exitcond1_reg_3614_pp19_iter28_reg <= exitcond1_reg_3614_pp19_iter27_reg;
        exitcond1_reg_3614_pp19_iter29_reg <= exitcond1_reg_3614_pp19_iter28_reg;
        exitcond1_reg_3614_pp19_iter2_reg <= exitcond1_reg_3614_pp19_iter1_reg;
        exitcond1_reg_3614_pp19_iter30_reg <= exitcond1_reg_3614_pp19_iter29_reg;
        exitcond1_reg_3614_pp19_iter31_reg <= exitcond1_reg_3614_pp19_iter30_reg;
        exitcond1_reg_3614_pp19_iter32_reg <= exitcond1_reg_3614_pp19_iter31_reg;
        exitcond1_reg_3614_pp19_iter33_reg <= exitcond1_reg_3614_pp19_iter32_reg;
        exitcond1_reg_3614_pp19_iter3_reg <= exitcond1_reg_3614_pp19_iter2_reg;
        exitcond1_reg_3614_pp19_iter4_reg <= exitcond1_reg_3614_pp19_iter3_reg;
        exitcond1_reg_3614_pp19_iter5_reg <= exitcond1_reg_3614_pp19_iter4_reg;
        exitcond1_reg_3614_pp19_iter6_reg <= exitcond1_reg_3614_pp19_iter5_reg;
        exitcond1_reg_3614_pp19_iter7_reg <= exitcond1_reg_3614_pp19_iter6_reg;
        exitcond1_reg_3614_pp19_iter8_reg <= exitcond1_reg_3614_pp19_iter7_reg;
        exitcond1_reg_3614_pp19_iter9_reg <= exitcond1_reg_3614_pp19_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp19_stage0_11001) & (1'b1 == ap_CS_fsm_pp19_stage0))) begin
        batch_normalization_54_reg_3623_pp19_iter1_reg <= batch_normalization_54_reg_3623;
        exitcond1_reg_3614 <= exitcond1_fu_2523_p2;
        exitcond1_reg_3614_pp19_iter1_reg <= exitcond1_reg_3614;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        batch_normalization_56_reg_3629[0] <= batch_normalization_1[0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp24_stage0_11001) & (exitcond25_fu_2624_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp24_stage0))) begin
        batch_normalization_61_reg_3734[3 : 0] <= i_1_cast5_fu_2636_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp24_stage0_11001)) begin
        batch_normalization_61_reg_3734_pp24_iter10_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter9_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter11_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter10_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter12_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter11_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter13_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter12_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter14_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter13_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter15_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter14_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter16_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter15_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter17_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter16_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter18_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter17_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter19_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter18_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter20_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter19_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter21_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter20_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter22_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter21_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter23_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter22_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter24_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter23_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter25_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter24_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter26_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter25_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter27_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter26_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter28_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter27_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter29_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter28_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter2_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter1_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter30_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter29_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter31_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter30_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter32_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter31_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter33_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter32_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter3_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter2_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter4_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter3_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter5_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter4_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter6_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter5_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter7_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter6_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter8_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter7_reg[3 : 0];
        batch_normalization_61_reg_3734_pp24_iter9_reg[3 : 0] <= batch_normalization_61_reg_3734_pp24_iter8_reg[3 : 0];
        exitcond25_reg_3725_pp24_iter10_reg <= exitcond25_reg_3725_pp24_iter9_reg;
        exitcond25_reg_3725_pp24_iter11_reg <= exitcond25_reg_3725_pp24_iter10_reg;
        exitcond25_reg_3725_pp24_iter12_reg <= exitcond25_reg_3725_pp24_iter11_reg;
        exitcond25_reg_3725_pp24_iter13_reg <= exitcond25_reg_3725_pp24_iter12_reg;
        exitcond25_reg_3725_pp24_iter14_reg <= exitcond25_reg_3725_pp24_iter13_reg;
        exitcond25_reg_3725_pp24_iter15_reg <= exitcond25_reg_3725_pp24_iter14_reg;
        exitcond25_reg_3725_pp24_iter16_reg <= exitcond25_reg_3725_pp24_iter15_reg;
        exitcond25_reg_3725_pp24_iter17_reg <= exitcond25_reg_3725_pp24_iter16_reg;
        exitcond25_reg_3725_pp24_iter18_reg <= exitcond25_reg_3725_pp24_iter17_reg;
        exitcond25_reg_3725_pp24_iter19_reg <= exitcond25_reg_3725_pp24_iter18_reg;
        exitcond25_reg_3725_pp24_iter20_reg <= exitcond25_reg_3725_pp24_iter19_reg;
        exitcond25_reg_3725_pp24_iter21_reg <= exitcond25_reg_3725_pp24_iter20_reg;
        exitcond25_reg_3725_pp24_iter22_reg <= exitcond25_reg_3725_pp24_iter21_reg;
        exitcond25_reg_3725_pp24_iter23_reg <= exitcond25_reg_3725_pp24_iter22_reg;
        exitcond25_reg_3725_pp24_iter24_reg <= exitcond25_reg_3725_pp24_iter23_reg;
        exitcond25_reg_3725_pp24_iter25_reg <= exitcond25_reg_3725_pp24_iter24_reg;
        exitcond25_reg_3725_pp24_iter26_reg <= exitcond25_reg_3725_pp24_iter25_reg;
        exitcond25_reg_3725_pp24_iter27_reg <= exitcond25_reg_3725_pp24_iter26_reg;
        exitcond25_reg_3725_pp24_iter28_reg <= exitcond25_reg_3725_pp24_iter27_reg;
        exitcond25_reg_3725_pp24_iter29_reg <= exitcond25_reg_3725_pp24_iter28_reg;
        exitcond25_reg_3725_pp24_iter2_reg <= exitcond25_reg_3725_pp24_iter1_reg;
        exitcond25_reg_3725_pp24_iter30_reg <= exitcond25_reg_3725_pp24_iter29_reg;
        exitcond25_reg_3725_pp24_iter31_reg <= exitcond25_reg_3725_pp24_iter30_reg;
        exitcond25_reg_3725_pp24_iter32_reg <= exitcond25_reg_3725_pp24_iter31_reg;
        exitcond25_reg_3725_pp24_iter33_reg <= exitcond25_reg_3725_pp24_iter32_reg;
        exitcond25_reg_3725_pp24_iter3_reg <= exitcond25_reg_3725_pp24_iter2_reg;
        exitcond25_reg_3725_pp24_iter4_reg <= exitcond25_reg_3725_pp24_iter3_reg;
        exitcond25_reg_3725_pp24_iter5_reg <= exitcond25_reg_3725_pp24_iter4_reg;
        exitcond25_reg_3725_pp24_iter6_reg <= exitcond25_reg_3725_pp24_iter5_reg;
        exitcond25_reg_3725_pp24_iter7_reg <= exitcond25_reg_3725_pp24_iter6_reg;
        exitcond25_reg_3725_pp24_iter8_reg <= exitcond25_reg_3725_pp24_iter7_reg;
        exitcond25_reg_3725_pp24_iter9_reg <= exitcond25_reg_3725_pp24_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp24_stage0_11001) & (1'b1 == ap_CS_fsm_pp24_stage0))) begin
        batch_normalization_61_reg_3734_pp24_iter1_reg[3 : 0] <= batch_normalization_61_reg_3734[3 : 0];
        exitcond25_reg_3725 <= exitcond25_fu_2624_p2;
        exitcond25_reg_3725_pp24_iter1_reg <= exitcond25_reg_3725;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (tmp_69_fu_2314_p2 == 1'd1))) begin
        batch_normalization_9 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        dense_1_bias_numel[1] <= 1'b1;
dense_1_bias_numel[3] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        dense_1_kernel_ndim[1] <= 1'b1;
        dense_1_kernel_numel[3] <= 1'b1;
dense_1_kernel_numel[5] <= 1'b1;
dense_1_kernel_numel[6] <= 1'b1;
dense_1_kernel_numel[7] <= 1'b1;
dense_1_kernel_numel[8] <= 1'b1;
dense_1_kernel_numel[9] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        dense_1_output_numel[1] <= 1'b1;
dense_1_output_numel[3] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        dense_2_bias_numel[1] <= 1'b1;
dense_2_bias_numel[2] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        dense_2_kernel_ndim[1] <= 1'b1;
        dense_2_kernel_numel[2] <= 1'b1;
dense_2_kernel_numel[3] <= 1'b1;
dense_2_kernel_numel[4] <= 1'b1;
dense_2_kernel_numel[5] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state181)) begin
        dense_2_output_array_10_reg_3864 <= dense_2_output_array_q0;
        dense_2_output_array_8_reg_3853 <= dense_2_output_array_q1;
        tmp_43_reg_3859 <= tmp_43_fu_2991_p2;
        xmax_2_reg_3848 <= xmax_2_fu_2905_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state182)) begin
        dense_2_output_array_12_reg_3878 <= dense_2_output_array_q1;
        tmp_130_reg_3885 <= grp_fu_2005_p2;
        xmax_4_reg_3872 <= xmax_4_fu_3086_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state180)) begin
        dense_2_output_array_4_reg_3829 <= dense_2_output_array_q0;
        dense_2_output_array_6_reg_3840 <= dense_2_output_array_q1;
        tmp_25_reg_3835 <= tmp_25_fu_2810_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        dense_2_output_ndim <= 1'd1;
        dense_2_output_numel[1] <= 1'b1;
dense_2_output_numel[2] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state229)) begin
        dense_2_output_numel_2_reg_4006[2 : 1] <= dense_2_output_numel[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        dense_output_numel[2] <= 1'b1;
dense_output_numel[5] <= 1'b1;
dense_output_numel[6] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state170)) begin
        dropout_3_output_ndi[0] <= extLd2_reg_3740[0];
        dropout_3_output_num[1] <= 1'b1;
dropout_3_output_num[3] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp14_stage0) & (1'b0 == ap_block_pp14_stage0_11001))) begin
        exitcond10_reg_3509 <= exitcond10_fu_2377_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp13_stage0) & (1'b0 == ap_block_pp13_stage0_11001))) begin
        exitcond11_reg_3490 <= exitcond11_fu_2360_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp12_stage0) & (1'b0 == ap_block_pp12_stage0_11001))) begin
        exitcond12_reg_3471 <= exitcond12_fu_2343_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp10_stage0) & (1'b0 == ap_block_pp10_stage0_11001))) begin
        exitcond14_reg_3436 <= exitcond14_fu_2286_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp9_stage0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        exitcond15_reg_3417 <= exitcond15_fu_2263_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        exitcond17_reg_3390 <= exitcond17_fu_2211_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        exitcond18_reg_3371 <= exitcond18_fu_2194_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        exitcond19_reg_3352 <= exitcond19_fu_2177_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        exitcond20_reg_3333 <= exitcond20_fu_2160_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond22_reg_3298 <= exitcond22_fu_2097_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond23_reg_3279 <= exitcond23_fu_2080_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp26_stage0) & (1'b0 == ap_block_pp26_stage0_11001))) begin
        exitcond24_reg_3764 <= exitcond24_fu_2666_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp28_stage0) & (1'b0 == ap_block_pp28_stage0_11001))) begin
        exitcond26_reg_3802 <= exitcond26_fu_2716_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp27_stage0) & (1'b0 == ap_block_pp27_stage0_11001))) begin
        exitcond2_reg_3783 <= exitcond2_fu_2694_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp25_stage0) & (1'b0 == ap_block_pp25_stage0_11001))) begin
        exitcond3_reg_3745 <= exitcond3_fu_2649_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp22_stage0) & (1'b0 == ap_block_pp22_stage0_11001))) begin
        exitcond4_reg_3672 <= exitcond4_fu_2571_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp20_stage0) & (1'b0 == ap_block_pp20_stage0_11001))) begin
        exitcond5_reg_3634 <= exitcond5_fu_2538_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp18_stage0) & (1'b0 == ap_block_pp18_stage0_11001))) begin
        exitcond6_reg_3574 <= exitcond6_fu_2475_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp17_stage0) & (1'b0 == ap_block_pp17_stage0_11001))) begin
        exitcond7_reg_3555 <= exitcond7_fu_2452_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp15_stage0) & (1'b0 == ap_block_pp15_stage0_11001))) begin
        exitcond9_reg_3528 <= exitcond9_fu_2394_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state164)) begin
        extLd2_reg_3740[0] <= extLd2_fu_2645_p1[0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        indvarinc_reg_3260 <= indvarinc_fu_2063_p2;
        tmp_55_reg_3275 <= tmp_55_fu_2074_p2;
        tmp_s_reg_3265[18 : 0] <= tmp_s_fu_2069_p1[18 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state230)) begin
        j_54_reg_4019 <= j_54_fu_3236_p2;
        tmp_96_reg_4011 <= tmp_96_fu_3226_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp24_stage0_11001) & (exitcond25_reg_3725_pp24_iter32_reg == 1'd0) & (ap_enable_reg_pp24_iter33 == 1'b1)) | ((1'b0 == ap_block_pp19_stage0_11001) & (exitcond1_reg_3614_pp19_iter32_reg == 1'd0) & (ap_enable_reg_pp19_iter33 == 1'b1)))) begin
        reg_2021 <= grp_generic_tanh_float_s_fu_1933_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state125))) begin
        reg_2027[1] <= dense_1_output_numel[1];
reg_2027[3] <= dense_1_output_numel[3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state216) | (1'b1 == ap_CS_fsm_state212) | (1'b1 == ap_CS_fsm_state208) | (1'b1 == ap_CS_fsm_state204) | (1'b1 == ap_CS_fsm_state200) | (1'b1 == ap_CS_fsm_state196) | (1'b1 == ap_CS_fsm_state186))) begin
        reg_2033 <= grp_fu_1946_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state224)) begin
        sum_reg_3966 <= grp_fu_1995_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state196)) begin
        tmp_100_1_reg_3932 <= grp_fu_2010_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state200)) begin
        tmp_100_2_reg_3939 <= grp_fu_2010_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state204)) begin
        tmp_100_3_reg_3946 <= grp_fu_2010_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state208)) begin
        tmp_100_4_reg_3953 <= grp_fu_2010_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state212)) begin
        tmp_100_5_reg_3960 <= grp_fu_2010_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state226)) begin
        tmp_102_1_reg_3981 <= grp_fu_1975_p2;
        tmp_102_2_reg_3986 <= grp_fu_1979_p2;
        tmp_102_3_reg_3991 <= grp_fu_1983_p2;
        tmp_102_4_reg_3996 <= grp_fu_1987_p2;
        tmp_102_5_reg_4001 <= grp_fu_1991_p2;
        tmp_126_reg_3976 <= grp_fu_1971_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state192)) begin
        tmp_125_reg_3925 <= grp_fu_2010_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond23_fu_2080_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_56_reg_3288[18 : 0] <= tmp_56_fu_2092_p1[18 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond22_fu_2097_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_58_reg_3307[6 : 0] <= tmp_58_fu_2109_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond20_fu_2160_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        tmp_61_reg_3342[6 : 0] <= tmp_61_fu_2172_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond19_fu_2177_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        tmp_62_reg_3361[6 : 0] <= tmp_62_fu_2189_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond18_fu_2194_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        tmp_63_reg_3380[6 : 0] <= tmp_63_fu_2206_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond17_fu_2211_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        tmp_64_reg_3399[6 : 0] <= tmp_64_fu_2223_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond15_fu_2263_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp9_stage0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        tmp_66_reg_3426[9 : 0] <= tmp_66_fu_2275_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond14_fu_2286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp10_stage0) & (1'b0 == ap_block_pp10_stage0_11001))) begin
        tmp_68_reg_3445[3 : 0] <= tmp_68_fu_2298_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond12_fu_2343_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp12_stage0) & (1'b0 == ap_block_pp12_stage0_11001))) begin
        tmp_71_reg_3480[3 : 0] <= tmp_71_fu_2355_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond11_fu_2360_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp13_stage0) & (1'b0 == ap_block_pp13_stage0_11001))) begin
        tmp_72_reg_3499[3 : 0] <= tmp_72_fu_2372_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond10_fu_2377_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp14_stage0) & (1'b0 == ap_block_pp14_stage0_11001))) begin
        tmp_73_reg_3518[3 : 0] <= tmp_73_fu_2389_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond9_fu_2394_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp15_stage0) & (1'b0 == ap_block_pp15_stage0_11001))) begin
        tmp_74_reg_3537[3 : 0] <= tmp_74_fu_2406_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_fu_2452_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp17_stage0) & (1'b0 == ap_block_pp17_stage0_11001))) begin
        tmp_76_reg_3564[5 : 0] <= tmp_76_fu_2464_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_2475_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp18_stage0) & (1'b0 == ap_block_pp18_stage0_11001))) begin
        tmp_78_reg_3583[2 : 0] <= tmp_78_fu_2487_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp21_stage0) & (1'b0 == ap_block_pp21_stage0_11001))) begin
        tmp_82_reg_3653[11 : 0] <= tmp_82_fu_2555_p1[11 : 0];
        tmp_84_reg_3658 <= tmp_84_fu_2560_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_2538_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp20_stage0) & (1'b0 == ap_block_pp20_stage0_11001))) begin
        tmp_83_reg_3643[2 : 0] <= tmp_83_fu_2550_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp23_stage0) & (1'b0 == ap_block_pp23_stage0_11001))) begin
        tmp_85_reg_3691[11 : 0] <= tmp_85_fu_2593_p1[11 : 0];
        tmp_87_reg_3696 <= tmp_87_fu_2598_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_2571_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp22_stage0) & (1'b0 == ap_block_pp22_stage0_11001))) begin
        tmp_86_reg_3681[2 : 0] <= tmp_86_fu_2583_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond24_fu_2666_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp26_stage0) & (1'b0 == ap_block_pp26_stage0_11001))) begin
        tmp_90_reg_3773[3 : 0] <= tmp_90_fu_2678_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_2649_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp25_stage0) & (1'b0 == ap_block_pp25_stage0_11001))) begin
        tmp_91_reg_3754[2 : 0] <= tmp_91_fu_2661_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond26_fu_2716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp28_stage0) & (1'b0 == ap_block_pp28_stage0_11001))) begin
        tmp_93_reg_3811[3 : 0] <= tmp_93_fu_2728_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_2694_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp27_stage0) & (1'b0 == ap_block_pp27_stage0_11001))) begin
        tmp_94_reg_3792[2 : 0] <= tmp_94_fu_2706_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state186)) begin
        tmp_99_1_reg_3900 <= grp_fu_1950_p2;
        tmp_99_2_reg_3905 <= grp_fu_1954_p2;
        tmp_99_3_reg_3910 <= grp_fu_1958_p2;
        tmp_99_4_reg_3915 <= grp_fu_1962_p2;
        tmp_99_5_reg_3920 <= grp_fu_1966_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state179)) begin
        xmax_reg_3821 <= dense_2_output_array_q0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp23_stage0) & (ap_enable_reg_pp23_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp23_stage0))) begin
        activation_1_output_1_address0 = tmp_85_fu_2593_p1;
    end else if (((1'b0 == ap_block_pp21_stage0) & (ap_enable_reg_pp21_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp21_stage0))) begin
        activation_1_output_1_address0 = tmp_82_reg_3653;
    end else begin
        activation_1_output_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp23_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp23_stage0) & (1'b0 == ap_block_pp23_stage0_11001)) | ((ap_enable_reg_pp21_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp21_stage0) & (1'b0 == ap_block_pp21_stage0_11001)))) begin
        activation_1_output_1_ce0 = 1'b1;
    end else begin
        activation_1_output_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp21_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp21_stage0) & (tmp_84_reg_3658 == 1'd1) & (1'b0 == ap_block_pp21_stage0_11001))) begin
        activation_1_output_1_we0 = 1'b1;
    end else begin
        activation_1_output_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp22_stage0) & (ap_enable_reg_pp22_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp22_stage0))) begin
        activation_1_output_s_address0 = tmp_86_fu_2583_p1;
    end else if (((1'b0 == ap_block_pp20_stage0) & (ap_enable_reg_pp20_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp20_stage0))) begin
        activation_1_output_s_address0 = tmp_83_reg_3643;
    end else begin
        activation_1_output_s_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp22_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp22_stage0) & (1'b0 == ap_block_pp22_stage0_11001)) | ((ap_enable_reg_pp20_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp20_stage0) & (1'b0 == ap_block_pp20_stage0_11001)))) begin
        activation_1_output_s_ce0 = 1'b1;
    end else begin
        activation_1_output_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5_reg_3634 == 1'd0) & (ap_enable_reg_pp20_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp20_stage0) & (1'b0 == ap_block_pp20_stage0_11001))) begin
        activation_1_output_s_we0 = 1'b1;
    end else begin
        activation_1_output_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp28_stage0) & (ap_enable_reg_pp28_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp28_stage0))) begin
        activation_2_output_1_address0 = tmp_93_fu_2728_p1;
    end else if (((1'b0 == ap_block_pp26_stage0) & (ap_enable_reg_pp26_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp26_stage0))) begin
        activation_2_output_1_address0 = tmp_90_reg_3773;
    end else begin
        activation_2_output_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp28_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp28_stage0) & (1'b0 == ap_block_pp28_stage0_11001)) | ((ap_enable_reg_pp26_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp26_stage0) & (1'b0 == ap_block_pp26_stage0_11001)))) begin
        activation_2_output_1_ce0 = 1'b1;
    end else begin
        activation_2_output_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond24_reg_3764 == 1'd0) & (ap_enable_reg_pp26_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp26_stage0) & (1'b0 == ap_block_pp26_stage0_11001))) begin
        activation_2_output_1_we0 = 1'b1;
    end else begin
        activation_2_output_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp27_stage0) & (ap_enable_reg_pp27_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp27_stage0))) begin
        activation_2_output_s_address0 = tmp_94_fu_2706_p1;
    end else if (((1'b0 == ap_block_pp25_stage0) & (ap_enable_reg_pp25_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp25_stage0))) begin
        activation_2_output_s_address0 = tmp_91_reg_3754;
    end else begin
        activation_2_output_s_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp27_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp27_stage0) & (1'b0 == ap_block_pp27_stage0_11001)) | ((ap_enable_reg_pp25_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp25_stage0) & (1'b0 == ap_block_pp25_stage0_11001)))) begin
        activation_2_output_s_ce0 = 1'b1;
    end else begin
        activation_2_output_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond3_reg_3745 == 1'd0) & (ap_enable_reg_pp25_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp25_stage0) & (1'b0 == ap_block_pp25_stage0_11001))) begin
        activation_2_output_s_we0 = 1'b1;
    end else begin
        activation_2_output_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state231)) begin
        activation_3_output_array_ce0 = 1'b1;
    end else begin
        activation_3_output_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state231)) begin
        activation_3_output_array_we0 = 1'b1;
    end else begin
        activation_3_output_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state229)) begin
        activation_3_output_ndim_ap_vld = 1'b1;
    end else begin
        activation_3_output_ndim_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state229)) begin
        activation_3_output_numel_ap_vld = 1'b1;
    end else begin
        activation_3_output_numel_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state229)) begin
        activation_3_output_shape_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state228)) begin
        activation_3_output_shape_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state227)) begin
        activation_3_output_shape_address0 = 64'd0;
    end else begin
        activation_3_output_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state229)) begin
        activation_3_output_shape_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state228)) begin
        activation_3_output_shape_address1 = 64'd2;
    end else begin
        activation_3_output_shape_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state228) | (1'b1 == ap_CS_fsm_state227) | (1'b1 == ap_CS_fsm_state229))) begin
        activation_3_output_shape_ce0 = 1'b1;
    end else begin
        activation_3_output_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state228) | (1'b1 == ap_CS_fsm_state229))) begin
        activation_3_output_shape_ce1 = 1'b1;
    end else begin
        activation_3_output_shape_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state229)) begin
        activation_3_output_shape_d0 = extLd9_fu_3221_p1;
    end else if ((1'b1 == ap_CS_fsm_state228)) begin
        activation_3_output_shape_d0 = extLd6_fu_3192_p1;
    end else if ((1'b1 == ap_CS_fsm_state227)) begin
        activation_3_output_shape_d0 = extLd5_fu_3187_p1;
    end else begin
        activation_3_output_shape_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state229)) begin
        activation_3_output_shape_d1 = extLd8_fu_3216_p1;
    end else if ((1'b1 == ap_CS_fsm_state228)) begin
        activation_3_output_shape_d1 = extLd7_fu_3197_p1;
    end else begin
        activation_3_output_shape_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state228) | (1'b1 == ap_CS_fsm_state227) | (1'b1 == ap_CS_fsm_state229))) begin
        activation_3_output_shape_we0 = 1'b1;
    end else begin
        activation_3_output_shape_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state228) | (1'b1 == ap_CS_fsm_state229))) begin
        activation_3_output_shape_we1 = 1'b1;
    end else begin
        activation_3_output_shape_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond14_fu_2286_p2 == 1'd1)) begin
        ap_condition_pp10_exit_iter0_state42 = 1'b1;
    end else begin
        ap_condition_pp10_exit_iter0_state42 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond12_fu_2343_p2 == 1'd1)) begin
        ap_condition_pp12_exit_iter0_state50 = 1'b1;
    end else begin
        ap_condition_pp12_exit_iter0_state50 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond11_fu_2360_p2 == 1'd1)) begin
        ap_condition_pp13_exit_iter0_state53 = 1'b1;
    end else begin
        ap_condition_pp13_exit_iter0_state53 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond10_fu_2377_p2 == 1'd1)) begin
        ap_condition_pp14_exit_iter0_state56 = 1'b1;
    end else begin
        ap_condition_pp14_exit_iter0_state56 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond9_fu_2394_p2 == 1'd1)) begin
        ap_condition_pp15_exit_iter0_state59 = 1'b1;
    end else begin
        ap_condition_pp15_exit_iter0_state59 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond7_fu_2452_p2 == 1'd1)) begin
        ap_condition_pp17_exit_iter0_state68 = 1'b1;
    end else begin
        ap_condition_pp17_exit_iter0_state68 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond6_fu_2475_p2 == 1'd1)) begin
        ap_condition_pp18_exit_iter0_state71 = 1'b1;
    end else begin
        ap_condition_pp18_exit_iter0_state71 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond1_fu_2523_p2 == 1'd1)) begin
        ap_condition_pp19_exit_iter0_state78 = 1'b1;
    end else begin
        ap_condition_pp19_exit_iter0_state78 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond23_fu_2080_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond5_fu_2538_p2 == 1'd1)) begin
        ap_condition_pp20_exit_iter0_state114 = 1'b1;
    end else begin
        ap_condition_pp20_exit_iter0_state114 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_84_fu_2560_p2 == 1'd0)) begin
        ap_condition_pp21_exit_iter0_state117 = 1'b1;
    end else begin
        ap_condition_pp21_exit_iter0_state117 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond4_fu_2571_p2 == 1'd1)) begin
        ap_condition_pp22_exit_iter0_state120 = 1'b1;
    end else begin
        ap_condition_pp22_exit_iter0_state120 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_87_fu_2598_p2 == 1'd0)) begin
        ap_condition_pp23_exit_iter0_state123 = 1'b1;
    end else begin
        ap_condition_pp23_exit_iter0_state123 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond25_fu_2624_p2 == 1'd1)) begin
        ap_condition_pp24_exit_iter0_state129 = 1'b1;
    end else begin
        ap_condition_pp24_exit_iter0_state129 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond3_fu_2649_p2 == 1'd1)) begin
        ap_condition_pp25_exit_iter0_state165 = 1'b1;
    end else begin
        ap_condition_pp25_exit_iter0_state165 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond24_fu_2666_p2 == 1'd1)) begin
        ap_condition_pp26_exit_iter0_state168 = 1'b1;
    end else begin
        ap_condition_pp26_exit_iter0_state168 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond2_fu_2694_p2 == 1'd1)) begin
        ap_condition_pp27_exit_iter0_state171 = 1'b1;
    end else begin
        ap_condition_pp27_exit_iter0_state171 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond26_fu_2716_p2 == 1'd1)) begin
        ap_condition_pp28_exit_iter0_state174 = 1'b1;
    end else begin
        ap_condition_pp28_exit_iter0_state174 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond22_fu_2097_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state13 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state13 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond20_fu_2160_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state21 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state21 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond19_fu_2177_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state24 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state24 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond18_fu_2194_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state27 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state27 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond17_fu_2211_p2 == 1'd1)) begin
        ap_condition_pp7_exit_iter0_state30 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter0_state30 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond15_fu_2263_p2 == 1'd1)) begin
        ap_condition_pp9_exit_iter0_state39 = 1'b1;
    end else begin
        ap_condition_pp9_exit_iter0_state39 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_104_fu_3231_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state230))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp10_iter1 == 1'b0) & (ap_enable_reg_pp10_iter0 == 1'b0))) begin
        ap_idle_pp10 = 1'b1;
    end else begin
        ap_idle_pp10 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp12_iter1 == 1'b0) & (ap_enable_reg_pp12_iter0 == 1'b0))) begin
        ap_idle_pp12 = 1'b1;
    end else begin
        ap_idle_pp12 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp13_iter1 == 1'b0) & (ap_enable_reg_pp13_iter0 == 1'b0))) begin
        ap_idle_pp13 = 1'b1;
    end else begin
        ap_idle_pp13 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp14_iter1 == 1'b0) & (ap_enable_reg_pp14_iter0 == 1'b0))) begin
        ap_idle_pp14 = 1'b1;
    end else begin
        ap_idle_pp14 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp15_iter1 == 1'b0) & (ap_enable_reg_pp15_iter0 == 1'b0))) begin
        ap_idle_pp15 = 1'b1;
    end else begin
        ap_idle_pp15 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp17_iter1 == 1'b0) & (ap_enable_reg_pp17_iter0 == 1'b0))) begin
        ap_idle_pp17 = 1'b1;
    end else begin
        ap_idle_pp17 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp18_iter1 == 1'b0) & (ap_enable_reg_pp18_iter0 == 1'b0))) begin
        ap_idle_pp18 = 1'b1;
    end else begin
        ap_idle_pp18 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp19_iter33 == 1'b0) & (ap_enable_reg_pp19_iter34 == 1'b0) & (ap_enable_reg_pp19_iter32 == 1'b0) & (ap_enable_reg_pp19_iter31 == 1'b0) & (ap_enable_reg_pp19_iter30 == 1'b0) & (ap_enable_reg_pp19_iter29 == 1'b0) & (ap_enable_reg_pp19_iter28 == 1'b0) & (ap_enable_reg_pp19_iter27 == 1'b0) & (ap_enable_reg_pp19_iter26 == 1'b0) & (ap_enable_reg_pp19_iter25 == 1'b0) & (ap_enable_reg_pp19_iter24 == 1'b0) & (ap_enable_reg_pp19_iter23 == 1'b0) & (ap_enable_reg_pp19_iter22 == 1'b0) & (ap_enable_reg_pp19_iter21 == 1'b0) & (ap_enable_reg_pp19_iter20 == 1'b0) & (ap_enable_reg_pp19_iter19 == 1'b0) & (ap_enable_reg_pp19_iter18 == 1'b0) & (ap_enable_reg_pp19_iter17 == 1'b0) & (ap_enable_reg_pp19_iter16 == 1'b0) & (ap_enable_reg_pp19_iter15 == 1'b0) & (ap_enable_reg_pp19_iter14 == 1'b0) & (ap_enable_reg_pp19_iter13 == 1'b0) & (ap_enable_reg_pp19_iter12 == 1'b0) & (ap_enable_reg_pp19_iter11 == 1'b0) & (ap_enable_reg_pp19_iter10 == 1'b0) & (ap_enable_reg_pp19_iter9 == 1'b0) & (ap_enable_reg_pp19_iter8 == 1'b0) & (ap_enable_reg_pp19_iter7 == 1'b0) & (ap_enable_reg_pp19_iter6 == 1'b0) & (ap_enable_reg_pp19_iter5 == 1'b0) & (ap_enable_reg_pp19_iter4 == 1'b0) & (ap_enable_reg_pp19_iter3 == 1'b0) & (ap_enable_reg_pp19_iter2 == 1'b0) & (ap_enable_reg_pp19_iter1 == 1'b0) & (ap_enable_reg_pp19_iter0 == 1'b0))) begin
        ap_idle_pp19 = 1'b1;
    end else begin
        ap_idle_pp19 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp20_iter1 == 1'b0) & (ap_enable_reg_pp20_iter0 == 1'b0))) begin
        ap_idle_pp20 = 1'b1;
    end else begin
        ap_idle_pp20 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp21_iter1 == 1'b0) & (ap_enable_reg_pp21_iter0 == 1'b0))) begin
        ap_idle_pp21 = 1'b1;
    end else begin
        ap_idle_pp21 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp22_iter1 == 1'b0) & (ap_enable_reg_pp22_iter0 == 1'b0))) begin
        ap_idle_pp22 = 1'b1;
    end else begin
        ap_idle_pp22 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp23_iter1 == 1'b0) & (ap_enable_reg_pp23_iter0 == 1'b0))) begin
        ap_idle_pp23 = 1'b1;
    end else begin
        ap_idle_pp23 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp24_iter33 == 1'b0) & (ap_enable_reg_pp24_iter34 == 1'b0) & (ap_enable_reg_pp24_iter32 == 1'b0) & (ap_enable_reg_pp24_iter31 == 1'b0) & (ap_enable_reg_pp24_iter30 == 1'b0) & (ap_enable_reg_pp24_iter29 == 1'b0) & (ap_enable_reg_pp24_iter28 == 1'b0) & (ap_enable_reg_pp24_iter27 == 1'b0) & (ap_enable_reg_pp24_iter26 == 1'b0) & (ap_enable_reg_pp24_iter25 == 1'b0) & (ap_enable_reg_pp24_iter24 == 1'b0) & (ap_enable_reg_pp24_iter23 == 1'b0) & (ap_enable_reg_pp24_iter22 == 1'b0) & (ap_enable_reg_pp24_iter21 == 1'b0) & (ap_enable_reg_pp24_iter20 == 1'b0) & (ap_enable_reg_pp24_iter19 == 1'b0) & (ap_enable_reg_pp24_iter18 == 1'b0) & (ap_enable_reg_pp24_iter17 == 1'b0) & (ap_enable_reg_pp24_iter16 == 1'b0) & (ap_enable_reg_pp24_iter15 == 1'b0) & (ap_enable_reg_pp24_iter14 == 1'b0) & (ap_enable_reg_pp24_iter13 == 1'b0) & (ap_enable_reg_pp24_iter12 == 1'b0) & (ap_enable_reg_pp24_iter11 == 1'b0) & (ap_enable_reg_pp24_iter10 == 1'b0) & (ap_enable_reg_pp24_iter9 == 1'b0) & (ap_enable_reg_pp24_iter8 == 1'b0) & (ap_enable_reg_pp24_iter7 == 1'b0) & (ap_enable_reg_pp24_iter6 == 1'b0) & (ap_enable_reg_pp24_iter5 == 1'b0) & (ap_enable_reg_pp24_iter4 == 1'b0) & (ap_enable_reg_pp24_iter3 == 1'b0) & (ap_enable_reg_pp24_iter2 == 1'b0) & (ap_enable_reg_pp24_iter1 == 1'b0) & (ap_enable_reg_pp24_iter0 == 1'b0))) begin
        ap_idle_pp24 = 1'b1;
    end else begin
        ap_idle_pp24 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp25_iter1 == 1'b0) & (ap_enable_reg_pp25_iter0 == 1'b0))) begin
        ap_idle_pp25 = 1'b1;
    end else begin
        ap_idle_pp25 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp26_iter1 == 1'b0) & (ap_enable_reg_pp26_iter0 == 1'b0))) begin
        ap_idle_pp26 = 1'b1;
    end else begin
        ap_idle_pp26 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp27_iter1 == 1'b0) & (ap_enable_reg_pp27_iter0 == 1'b0))) begin
        ap_idle_pp27 = 1'b1;
    end else begin
        ap_idle_pp27 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp28_iter1 == 1'b0) & (ap_enable_reg_pp28_iter0 == 1'b0))) begin
        ap_idle_pp28 = 1'b1;
    end else begin
        ap_idle_pp28 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp9_iter1 == 1'b0) & (ap_enable_reg_pp9_iter0 == 1'b0))) begin
        ap_idle_pp9 = 1'b1;
    end else begin
        ap_idle_pp9 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_104_fu_3231_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state230))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        axesA_address0 = grp_k2c_dense_fu_1857_axesA_address0;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        axesA_address0 = grp_k2c_dense_1_fu_1832_axesA_address0;
    end else begin
        axesA_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        axesA_ce0 = grp_k2c_dense_fu_1857_axesA_ce0;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        axesA_ce0 = grp_k2c_dense_1_fu_1832_axesA_ce0;
    end else begin
        axesA_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        axesA_d0 = grp_k2c_dense_fu_1857_axesA_d0;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        axesA_d0 = grp_k2c_dense_1_fu_1832_axesA_d0;
    end else begin
        axesA_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        axesA_we0 = grp_k2c_dense_fu_1857_axesA_we0;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        axesA_we0 = grp_k2c_dense_1_fu_1832_axesA_we0;
    end else begin
        axesA_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        batch_normalization_11_ce0 = 1'b1;
    end else begin
        batch_normalization_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        batch_normalization_12_address0 = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        batch_normalization_12_address0 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        batch_normalization_12_address0 = 3'd0;
    end else begin
        batch_normalization_12_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp25_stage0) & (ap_enable_reg_pp25_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp25_stage0))) begin
        batch_normalization_12_address1 = tmp_91_fu_2661_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        batch_normalization_12_address1 = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        batch_normalization_12_address1 = 3'd2;
    end else begin
        batch_normalization_12_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45))) begin
        batch_normalization_12_ce0 = 1'b1;
    end else begin
        batch_normalization_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state47) | ((ap_enable_reg_pp25_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp25_stage0) & (1'b0 == ap_block_pp25_stage0_11001)))) begin
        batch_normalization_12_ce1 = 1'b1;
    end else begin
        batch_normalization_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state47))) begin
        batch_normalization_12_d0 = 6'd1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        batch_normalization_12_d0 = 6'd10;
    end else begin
        batch_normalization_12_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state47) | ((1'b1 == ap_CS_fsm_state45) & (tmp_69_fu_2314_p2 == 1'd1)))) begin
        batch_normalization_12_we0 = 1'b1;
    end else begin
        batch_normalization_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state47))) begin
        batch_normalization_12_we1 = 1'b1;
    end else begin
        batch_normalization_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        batch_normalization_14_ce0 = 1'b1;
    end else begin
        batch_normalization_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp13_stage0) & (ap_enable_reg_pp13_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp13_stage0))) begin
        batch_normalization_15_address0 = tmp_72_reg_3499;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        batch_normalization_15_address0 = grp_k2c_batch_norm_fu_1907_stdev_array_address0;
    end else begin
        batch_normalization_15_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp13_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp13_stage0) & (1'b0 == ap_block_pp13_stage0_11001))) begin
        batch_normalization_15_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        batch_normalization_15_ce0 = grp_k2c_batch_norm_fu_1907_stdev_array_ce0;
    end else begin
        batch_normalization_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond11_reg_3490 == 1'd0) & (ap_enable_reg_pp13_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp13_stage0) & (1'b0 == ap_block_pp13_stage0_11001))) begin
        batch_normalization_15_we0 = 1'b1;
    end else begin
        batch_normalization_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        batch_normalization_17_ce0 = 1'b1;
    end else begin
        batch_normalization_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        batch_normalization_18_address0 = tmp_62_reg_3361;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        batch_normalization_18_address0 = grp_k2c_batch_norm_fu_1907_stdev_array_address0;
    end else begin
        batch_normalization_18_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        batch_normalization_18_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        batch_normalization_18_ce0 = grp_k2c_batch_norm_fu_1907_stdev_array_ce0;
    end else begin
        batch_normalization_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond19_reg_3352 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        batch_normalization_18_we0 = 1'b1;
    end else begin
        batch_normalization_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        batch_normalization_19_address0 = tmp_64_reg_3399;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        batch_normalization_19_address0 = grp_k2c_batch_norm_fu_1907_beta_array_address0;
    end else begin
        batch_normalization_19_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        batch_normalization_19_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        batch_normalization_19_ce0 = grp_k2c_batch_norm_fu_1907_beta_array_ce0;
    end else begin
        batch_normalization_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond17_reg_3390 == 1'd0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        batch_normalization_19_we0 = 1'b1;
    end else begin
        batch_normalization_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp13_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp13_stage0) & (1'b0 == ap_block_pp13_stage0_11001))) begin
        batch_normalization_20_ce0 = 1'b1;
    end else begin
        batch_normalization_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        batch_normalization_21_address0 = tmp_63_reg_3380;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        batch_normalization_21_address0 = grp_k2c_batch_norm_fu_1907_gamma_array_address0;
    end else begin
        batch_normalization_21_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        batch_normalization_21_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        batch_normalization_21_ce0 = grp_k2c_batch_norm_fu_1907_gamma_array_ce0;
    end else begin
        batch_normalization_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond18_reg_3371 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        batch_normalization_21_we0 = 1'b1;
    end else begin
        batch_normalization_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        batch_normalization_22_address0 = tmp_61_reg_3342;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        batch_normalization_22_address0 = grp_k2c_batch_norm_fu_1907_mean_array_address0;
    end else begin
        batch_normalization_22_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        batch_normalization_22_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        batch_normalization_22_ce0 = grp_k2c_batch_norm_fu_1907_mean_array_ce0;
    end else begin
        batch_normalization_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond20_reg_3333 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        batch_normalization_22_we0 = 1'b1;
    end else begin
        batch_normalization_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp19_stage0) & (ap_enable_reg_pp19_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp19_stage0))) begin
        batch_normalization_23_address0 = i_cast_fu_2518_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        batch_normalization_23_address0 = tmp_60_fu_2155_p1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        batch_normalization_23_address0 = grp_k2c_batch_norm_fu_1907_outputs_array_address0;
    end else begin
        batch_normalization_23_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp21_stage0) & (ap_enable_reg_pp21_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp21_stage0))) begin
        batch_normalization_23_address1 = tmp_82_fu_2555_p1;
    end else if (((1'b0 == ap_block_pp19_stage0) & (ap_enable_reg_pp19_iter34 == 1'b1))) begin
        batch_normalization_23_address1 = batch_normalization_54_reg_3623_pp19_iter33_reg;
    end else begin
        batch_normalization_23_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | ((1'b0 == ap_block_pp19_stage0_11001) & (ap_enable_reg_pp19_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp19_stage0)))) begin
        batch_normalization_23_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        batch_normalization_23_ce0 = grp_k2c_batch_norm_fu_1907_outputs_array_ce0;
    end else begin
        batch_normalization_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp19_stage0_11001) & (ap_enable_reg_pp19_iter34 == 1'b1)) | ((ap_enable_reg_pp21_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp21_stage0) & (1'b0 == ap_block_pp21_stage0_11001)))) begin
        batch_normalization_23_ce1 = 1'b1;
    end else begin
        batch_normalization_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        batch_normalization_23_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        batch_normalization_23_d0 = grp_k2c_batch_norm_fu_1907_outputs_array_d0;
    end else begin
        batch_normalization_23_d0 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond21_fu_2143_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        batch_normalization_23_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        batch_normalization_23_we0 = grp_k2c_batch_norm_fu_1907_outputs_array_we0;
    end else begin
        batch_normalization_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp19_stage0_11001) & (exitcond1_reg_3614_pp19_iter33_reg == 1'd0) & (ap_enable_reg_pp19_iter34 == 1'b1))) begin
        batch_normalization_23_we1 = 1'b1;
    end else begin
        batch_normalization_23_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp12_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp12_stage0) & (1'b0 == ap_block_pp12_stage0_11001))) begin
        batch_normalization_29_ce0 = 1'b1;
    end else begin
        batch_normalization_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp14_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp14_stage0) & (1'b0 == ap_block_pp14_stage0_11001))) begin
        batch_normalization_32_ce0 = 1'b1;
    end else begin
        batch_normalization_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp15_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp15_stage0) & (1'b0 == ap_block_pp15_stage0_11001))) begin
        batch_normalization_35_ce0 = 1'b1;
    end else begin
        batch_normalization_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        batch_normalization_4_address0 = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        batch_normalization_4_address0 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        batch_normalization_4_address0 = 3'd0;
    end else begin
        batch_normalization_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp20_stage0) & (ap_enable_reg_pp20_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp20_stage0))) begin
        batch_normalization_4_address1 = tmp_83_fu_2550_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        batch_normalization_4_address1 = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        batch_normalization_4_address1 = 3'd2;
    end else begin
        batch_normalization_4_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18))) begin
        batch_normalization_4_ce0 = 1'b1;
    end else begin
        batch_normalization_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | ((ap_enable_reg_pp20_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp20_stage0) & (1'b0 == ap_block_pp20_stage0_11001)))) begin
        batch_normalization_4_ce1 = 1'b1;
    end else begin
        batch_normalization_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18))) begin
        batch_normalization_4_d0 = 9'd1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        batch_normalization_4_d0 = 9'd100;
    end else begin
        batch_normalization_4_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_CS_fsm_state16) & (tmp_59_fu_2125_p2 == 1'd1)))) begin
        batch_normalization_4_we0 = 1'b1;
    end else begin
        batch_normalization_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18))) begin
        batch_normalization_4_we1 = 1'b1;
    end else begin
        batch_normalization_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp15_stage0) & (ap_enable_reg_pp15_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp15_stage0))) begin
        batch_normalization_5_address0 = tmp_74_reg_3537;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        batch_normalization_5_address0 = grp_k2c_batch_norm_fu_1907_beta_array_address0;
    end else begin
        batch_normalization_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp15_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp15_stage0) & (1'b0 == ap_block_pp15_stage0_11001))) begin
        batch_normalization_5_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        batch_normalization_5_ce0 = grp_k2c_batch_norm_fu_1907_beta_array_ce0;
    end else begin
        batch_normalization_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond9_reg_3528 == 1'd0) & (ap_enable_reg_pp15_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp15_stage0) & (1'b0 == ap_block_pp15_stage0_11001))) begin
        batch_normalization_5_we0 = 1'b1;
    end else begin
        batch_normalization_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp14_stage0) & (ap_enable_reg_pp14_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp14_stage0))) begin
        batch_normalization_6_address0 = tmp_73_reg_3518;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        batch_normalization_6_address0 = grp_k2c_batch_norm_fu_1907_gamma_array_address0;
    end else begin
        batch_normalization_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp14_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp14_stage0) & (1'b0 == ap_block_pp14_stage0_11001))) begin
        batch_normalization_6_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        batch_normalization_6_ce0 = grp_k2c_batch_norm_fu_1907_gamma_array_ce0;
    end else begin
        batch_normalization_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond10_reg_3509 == 1'd0) & (ap_enable_reg_pp14_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp14_stage0) & (1'b0 == ap_block_pp14_stage0_11001))) begin
        batch_normalization_6_we0 = 1'b1;
    end else begin
        batch_normalization_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp12_stage0) & (ap_enable_reg_pp12_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp12_stage0))) begin
        batch_normalization_7_address0 = tmp_71_reg_3480;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        batch_normalization_7_address0 = grp_k2c_batch_norm_fu_1907_mean_array_address0;
    end else begin
        batch_normalization_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp12_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp12_stage0) & (1'b0 == ap_block_pp12_stage0_11001))) begin
        batch_normalization_7_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        batch_normalization_7_ce0 = grp_k2c_batch_norm_fu_1907_mean_array_ce0;
    end else begin
        batch_normalization_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond12_reg_3471 == 1'd0) & (ap_enable_reg_pp12_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp12_stage0) & (1'b0 == ap_block_pp12_stage0_11001))) begin
        batch_normalization_7_we0 = 1'b1;
    end else begin
        batch_normalization_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp24_stage0) & (ap_enable_reg_pp24_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp24_stage0))) begin
        batch_normalization_8_address0 = i_1_cast5_fu_2636_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        batch_normalization_8_address0 = tmp_70_fu_2338_p1;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        batch_normalization_8_address0 = grp_k2c_batch_norm_fu_1907_outputs_array_address0;
    end else begin
        batch_normalization_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp26_stage0) & (ap_enable_reg_pp26_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp26_stage0))) begin
        batch_normalization_8_address1 = tmp_90_fu_2678_p1;
    end else if (((1'b0 == ap_block_pp24_stage0) & (ap_enable_reg_pp24_iter34 == 1'b1))) begin
        batch_normalization_8_address1 = batch_normalization_61_reg_3734_pp24_iter33_reg;
    end else begin
        batch_normalization_8_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | ((1'b0 == ap_block_pp24_stage0_11001) & (ap_enable_reg_pp24_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp24_stage0)))) begin
        batch_normalization_8_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        batch_normalization_8_ce0 = grp_k2c_batch_norm_fu_1907_outputs_array_ce0;
    end else begin
        batch_normalization_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp24_stage0_11001) & (ap_enable_reg_pp24_iter34 == 1'b1)) | ((ap_enable_reg_pp26_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp26_stage0) & (1'b0 == ap_block_pp26_stage0_11001)))) begin
        batch_normalization_8_ce1 = 1'b1;
    end else begin
        batch_normalization_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        batch_normalization_8_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        batch_normalization_8_d0 = grp_k2c_batch_norm_fu_1907_outputs_array_d0;
    end else begin
        batch_normalization_8_d0 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond13_fu_2326_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state48))) begin
        batch_normalization_8_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        batch_normalization_8_we0 = grp_k2c_batch_norm_fu_1907_outputs_array_we0;
    end else begin
        batch_normalization_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp24_stage0_11001) & (exitcond25_reg_3725_pp24_iter33_reg == 1'd0) & (ap_enable_reg_pp24_iter34 == 1'b1))) begin
        batch_normalization_8_we1 = 1'b1;
    end else begin
        batch_normalization_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        batch_normalization_s_ce0 = 1'b1;
    end else begin
        batch_normalization_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp10_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp10_stage0) & (1'b0 == ap_block_pp10_stage0_11001))) begin
        dense_1_bias_array2_ce0 = 1'b1;
    end else begin
        dense_1_bias_array2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp10_stage0) & (ap_enable_reg_pp10_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp10_stage0))) begin
        dense_1_bias_array_address0 = tmp_68_reg_3445;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        dense_1_bias_array_address0 = grp_k2c_dense_1_fu_1832_bias_array_address0;
    end else begin
        dense_1_bias_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp10_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp10_stage0) & (1'b0 == ap_block_pp10_stage0_11001))) begin
        dense_1_bias_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        dense_1_bias_array_ce0 = grp_k2c_dense_1_fu_1832_bias_array_ce0;
    end else begin
        dense_1_bias_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond14_reg_3436 == 1'd0) & (ap_enable_reg_pp10_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp10_stage0) & (1'b0 == ap_block_pp10_stage0_11001))) begin
        dense_1_bias_array_we0 = 1'b1;
    end else begin
        dense_1_bias_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        dense_1_fwork_address0 = tmp_67_fu_2309_p1;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        dense_1_fwork_address0 = grp_k2c_dense_1_fu_1832_fwork_address0;
    end else begin
        dense_1_fwork_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        dense_1_fwork_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        dense_1_fwork_ce0 = grp_k2c_dense_1_fu_1832_fwork_ce0;
    end else begin
        dense_1_fwork_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state126)) begin
        dense_1_fwork_ce1 = grp_k2c_dense_1_fu_1832_fwork_ce1;
    end else begin
        dense_1_fwork_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        dense_1_fwork_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        dense_1_fwork_d0 = grp_k2c_dense_1_fu_1832_fwork_d0;
    end else begin
        dense_1_fwork_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        dense_1_fwork_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        dense_1_fwork_we0 = grp_k2c_dense_1_fu_1832_fwork_we0;
    end else begin
        dense_1_fwork_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp9_stage0) & (ap_enable_reg_pp9_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp9_stage0))) begin
        dense_1_kernel_array_1_address0 = tmp_66_reg_3426;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        dense_1_kernel_array_1_address0 = grp_k2c_dense_1_fu_1832_kernel_array_address0;
    end else begin
        dense_1_kernel_array_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp9_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp9_stage0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        dense_1_kernel_array_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        dense_1_kernel_array_1_ce0 = grp_k2c_dense_1_fu_1832_kernel_array_ce0;
    end else begin
        dense_1_kernel_array_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond15_reg_3417 == 1'd0) & (ap_enable_reg_pp9_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp9_stage0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        dense_1_kernel_array_1_we0 = 1'b1;
    end else begin
        dense_1_kernel_array_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp9_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp9_stage0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        dense_1_kernel_array_ce0 = 1'b1;
    end else begin
        dense_1_kernel_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        dense_1_kernel_shape_address0 = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        dense_1_kernel_shape_address0 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        dense_1_kernel_shape_address0 = 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        dense_1_kernel_shape_address0 = grp_k2c_dense_1_fu_1832_kernel_shape_address0;
    end else begin
        dense_1_kernel_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        dense_1_kernel_shape_address1 = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        dense_1_kernel_shape_address1 = 3'd2;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        dense_1_kernel_shape_address1 = grp_k2c_dense_1_fu_1832_kernel_shape_address1;
    end else begin
        dense_1_kernel_shape_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state38))) begin
        dense_1_kernel_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        dense_1_kernel_shape_ce0 = grp_k2c_dense_1_fu_1832_kernel_shape_ce0;
    end else begin
        dense_1_kernel_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        dense_1_kernel_shape_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        dense_1_kernel_shape_ce1 = grp_k2c_dense_1_fu_1832_kernel_shape_ce1;
    end else begin
        dense_1_kernel_shape_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        dense_1_kernel_shape_d0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        dense_1_kernel_shape_d0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        dense_1_kernel_shape_d0 = 64'd100;
    end else begin
        dense_1_kernel_shape_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state38))) begin
        dense_1_kernel_shape_we0 = 1'b1;
    end else begin
        dense_1_kernel_shape_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        dense_1_kernel_shape_we1 = 1'b1;
    end else begin
        dense_1_kernel_shape_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        dense_1_output_array_address0 = tmp_65_fu_2246_p1;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        dense_1_output_array_address0 = grp_k2c_batch_norm_fu_1907_inputs_array_address0;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        dense_1_output_array_address0 = grp_k2c_dense_1_fu_1832_output_array_address0;
    end else begin
        dense_1_output_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        dense_1_output_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        dense_1_output_array_ce0 = grp_k2c_batch_norm_fu_1907_inputs_array_ce0;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        dense_1_output_array_ce0 = grp_k2c_dense_1_fu_1832_output_array_ce0;
    end else begin
        dense_1_output_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        dense_1_output_array_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        dense_1_output_array_d0 = grp_k2c_dense_1_fu_1832_output_array_d0;
    end else begin
        dense_1_output_array_d0 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond16_fu_2234_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state35))) begin
        dense_1_output_array_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        dense_1_output_array_we0 = grp_k2c_dense_1_fu_1832_output_array_we0;
    end else begin
        dense_1_output_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        dense_1_output_shape_address0 = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        dense_1_output_shape_address0 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        dense_1_output_shape_address0 = 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        dense_1_output_shape_address0 = grp_k2c_batch_norm_fu_1907_inputs_shape_address0;
    end else begin
        dense_1_output_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        dense_1_output_shape_address1 = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        dense_1_output_shape_address1 = 3'd2;
    end else begin
        dense_1_output_shape_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state34))) begin
        dense_1_output_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        dense_1_output_shape_ce0 = grp_k2c_batch_norm_fu_1907_inputs_shape_ce0;
    end else begin
        dense_1_output_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34))) begin
        dense_1_output_shape_ce1 = 1'b1;
    end else begin
        dense_1_output_shape_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34))) begin
        dense_1_output_shape_d0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        dense_1_output_shape_d0 = 64'd10;
    end else begin
        dense_1_output_shape_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state34))) begin
        dense_1_output_shape_we0 = 1'b1;
    end else begin
        dense_1_output_shape_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34))) begin
        dense_1_output_shape_we1 = 1'b1;
    end else begin
        dense_1_output_shape_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp18_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp18_stage0) & (1'b0 == ap_block_pp18_stage0_11001))) begin
        dense_2_bias_array7_ce0 = 1'b1;
    end else begin
        dense_2_bias_array7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp18_stage0) & (ap_enable_reg_pp18_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp18_stage0))) begin
        dense_2_bias_array_address0 = tmp_78_reg_3583;
    end else if ((1'b1 == ap_CS_fsm_state177)) begin
        dense_2_bias_array_address0 = grp_k2c_dense2_fu_1878_dense_2_bias_array_address0;
    end else begin
        dense_2_bias_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp18_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp18_stage0) & (1'b0 == ap_block_pp18_stage0_11001))) begin
        dense_2_bias_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state177)) begin
        dense_2_bias_array_ce0 = grp_k2c_dense2_fu_1878_dense_2_bias_array_ce0;
    end else begin
        dense_2_bias_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond6_reg_3574 == 1'd0) & (ap_enable_reg_pp18_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp18_stage0) & (1'b0 == ap_block_pp18_stage0_11001))) begin
        dense_2_bias_array_we0 = 1'b1;
    end else begin
        dense_2_bias_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        dense_2_fwork_address0 = tmp_77_fu_2498_p1;
    end else if ((1'b1 == ap_CS_fsm_state177)) begin
        dense_2_fwork_address0 = grp_k2c_dense2_fu_1878_fwork_address0;
    end else begin
        dense_2_fwork_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        dense_2_fwork_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state177)) begin
        dense_2_fwork_ce0 = grp_k2c_dense2_fu_1878_fwork_ce0;
    end else begin
        dense_2_fwork_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state177)) begin
        dense_2_fwork_ce1 = grp_k2c_dense2_fu_1878_fwork_ce1;
    end else begin
        dense_2_fwork_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        dense_2_fwork_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state177)) begin
        dense_2_fwork_d0 = grp_k2c_dense2_fu_1878_fwork_d0;
    end else begin
        dense_2_fwork_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        dense_2_fwork_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state177)) begin
        dense_2_fwork_we0 = grp_k2c_dense2_fu_1878_fwork_we0;
    end else begin
        dense_2_fwork_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp17_stage0) & (ap_enable_reg_pp17_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp17_stage0))) begin
        dense_2_kernel_array_2_address0 = tmp_76_reg_3564;
    end else if ((1'b1 == ap_CS_fsm_state177)) begin
        dense_2_kernel_array_2_address0 = grp_k2c_dense2_fu_1878_dense_2_kernel_array_2_address0;
    end else begin
        dense_2_kernel_array_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp17_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp17_stage0) & (1'b0 == ap_block_pp17_stage0_11001))) begin
        dense_2_kernel_array_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state177)) begin
        dense_2_kernel_array_2_ce0 = grp_k2c_dense2_fu_1878_dense_2_kernel_array_2_ce0;
    end else begin
        dense_2_kernel_array_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond7_reg_3555 == 1'd0) & (ap_enable_reg_pp17_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp17_stage0) & (1'b0 == ap_block_pp17_stage0_11001))) begin
        dense_2_kernel_array_2_we0 = 1'b1;
    end else begin
        dense_2_kernel_array_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp17_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp17_stage0) & (1'b0 == ap_block_pp17_stage0_11001))) begin
        dense_2_kernel_array_ce0 = 1'b1;
    end else begin
        dense_2_kernel_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        dense_2_kernel_shape_address0 = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        dense_2_kernel_shape_address0 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        dense_2_kernel_shape_address0 = 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state177)) begin
        dense_2_kernel_shape_address0 = grp_k2c_dense2_fu_1878_dense_2_kernel_shape_address0;
    end else begin
        dense_2_kernel_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        dense_2_kernel_shape_address1 = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        dense_2_kernel_shape_address1 = 3'd2;
    end else if ((1'b1 == ap_CS_fsm_state177)) begin
        dense_2_kernel_shape_address1 = grp_k2c_dense2_fu_1878_dense_2_kernel_shape_address1;
    end else begin
        dense_2_kernel_shape_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state67))) begin
        dense_2_kernel_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state177)) begin
        dense_2_kernel_shape_ce0 = grp_k2c_dense2_fu_1878_dense_2_kernel_shape_ce0;
    end else begin
        dense_2_kernel_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state67))) begin
        dense_2_kernel_shape_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state177)) begin
        dense_2_kernel_shape_ce1 = grp_k2c_dense2_fu_1878_dense_2_kernel_shape_ce1;
    end else begin
        dense_2_kernel_shape_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        dense_2_kernel_shape_d0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        dense_2_kernel_shape_d0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        dense_2_kernel_shape_d0 = 64'd10;
    end else begin
        dense_2_kernel_shape_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state67))) begin
        dense_2_kernel_shape_we0 = 1'b1;
    end else begin
        dense_2_kernel_shape_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state67))) begin
        dense_2_kernel_shape_we1 = 1'b1;
    end else begin
        dense_2_kernel_shape_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state230)) begin
        dense_2_output_array_address0 = tmp_96_fu_3226_p1;
    end else if ((1'b1 == ap_CS_fsm_state228)) begin
        dense_2_output_array_address0 = 12'd2;
    end else if ((1'b1 == ap_CS_fsm_state225)) begin
        dense_2_output_array_address0 = 12'd3;
    end else if (((1'b1 == ap_CS_fsm_state229) | (1'b1 == ap_CS_fsm_state180))) begin
        dense_2_output_array_address0 = 12'd4;
    end else if (((1'b1 == ap_CS_fsm_state224) | (1'b1 == ap_CS_fsm_state179))) begin
        dense_2_output_array_address0 = 12'd1;
    end else if (((1'b1 == ap_CS_fsm_state178) | (1'b1 == ap_CS_fsm_state227))) begin
        dense_2_output_array_address0 = 12'd0;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        dense_2_output_array_address0 = tmp_75_fu_2435_p1;
    end else if ((1'b1 == ap_CS_fsm_state177)) begin
        dense_2_output_array_address0 = grp_k2c_dense2_fu_1878_dense_2_output_array_address0;
    end else begin
        dense_2_output_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state227)) begin
        dense_2_output_array_address1 = 12'd1;
    end else if ((1'b1 == ap_CS_fsm_state225)) begin
        dense_2_output_array_address1 = 12'd4;
    end else if ((1'b1 == ap_CS_fsm_state223)) begin
        dense_2_output_array_address1 = 12'd0;
    end else if (((1'b1 == ap_CS_fsm_state229) | (1'b1 == ap_CS_fsm_state181))) begin
        dense_2_output_array_address1 = 12'd5;
    end else if (((1'b1 == ap_CS_fsm_state228) | (1'b1 == ap_CS_fsm_state180))) begin
        dense_2_output_array_address1 = 12'd3;
    end else if (((1'b1 == ap_CS_fsm_state224) | (1'b1 == ap_CS_fsm_state179))) begin
        dense_2_output_array_address1 = 12'd2;
    end else begin
        dense_2_output_array_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state225) | (1'b1 == ap_CS_fsm_state178) | (1'b1 == ap_CS_fsm_state228) | (1'b1 == ap_CS_fsm_state227) | (1'b1 == ap_CS_fsm_state230) | (1'b1 == ap_CS_fsm_state229) | (1'b1 == ap_CS_fsm_state224) | (1'b1 == ap_CS_fsm_state180) | (1'b1 == ap_CS_fsm_state179) | (1'b1 == ap_CS_fsm_state64))) begin
        dense_2_output_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state177)) begin
        dense_2_output_array_ce0 = grp_k2c_dense2_fu_1878_dense_2_output_array_ce0;
    end else begin
        dense_2_output_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state225) | (1'b1 == ap_CS_fsm_state223) | (1'b1 == ap_CS_fsm_state228) | (1'b1 == ap_CS_fsm_state227) | (1'b1 == ap_CS_fsm_state229) | (1'b1 == ap_CS_fsm_state224) | (1'b1 == ap_CS_fsm_state181) | (1'b1 == ap_CS_fsm_state180) | (1'b1 == ap_CS_fsm_state179))) begin
        dense_2_output_array_ce1 = 1'b1;
    end else begin
        dense_2_output_array_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state229)) begin
        dense_2_output_array_d0 = tmp_102_4_reg_3996;
    end else if ((1'b1 == ap_CS_fsm_state228)) begin
        dense_2_output_array_d0 = tmp_102_2_reg_3986;
    end else if ((1'b1 == ap_CS_fsm_state227)) begin
        dense_2_output_array_d0 = tmp_126_reg_3976;
    end else if ((1'b1 == ap_CS_fsm_state225)) begin
        dense_2_output_array_d0 = tmp_100_3_reg_3946;
    end else if ((1'b1 == ap_CS_fsm_state224)) begin
        dense_2_output_array_d0 = tmp_100_1_reg_3932;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        dense_2_output_array_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state177)) begin
        dense_2_output_array_d0 = grp_k2c_dense2_fu_1878_dense_2_output_array_d0;
    end else begin
        dense_2_output_array_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state229)) begin
        dense_2_output_array_d1 = tmp_102_5_reg_4001;
    end else if ((1'b1 == ap_CS_fsm_state228)) begin
        dense_2_output_array_d1 = tmp_102_3_reg_3991;
    end else if ((1'b1 == ap_CS_fsm_state227)) begin
        dense_2_output_array_d1 = tmp_102_1_reg_3981;
    end else if ((1'b1 == ap_CS_fsm_state225)) begin
        dense_2_output_array_d1 = tmp_100_4_reg_3953;
    end else if ((1'b1 == ap_CS_fsm_state224)) begin
        dense_2_output_array_d1 = tmp_100_2_reg_3939;
    end else if ((1'b1 == ap_CS_fsm_state223)) begin
        dense_2_output_array_d1 = tmp_125_reg_3925;
    end else begin
        dense_2_output_array_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state225) | (1'b1 == ap_CS_fsm_state228) | (1'b1 == ap_CS_fsm_state227) | (1'b1 == ap_CS_fsm_state229) | (1'b1 == ap_CS_fsm_state224) | ((exitcond8_fu_2423_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state64)))) begin
        dense_2_output_array_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state177)) begin
        dense_2_output_array_we0 = grp_k2c_dense2_fu_1878_dense_2_output_array_we0;
    end else begin
        dense_2_output_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state225) | (1'b1 == ap_CS_fsm_state223) | (1'b1 == ap_CS_fsm_state228) | (1'b1 == ap_CS_fsm_state227) | (1'b1 == ap_CS_fsm_state229) | (1'b1 == ap_CS_fsm_state224))) begin
        dense_2_output_array_we1 = 1'b1;
    end else begin
        dense_2_output_array_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state228)) begin
        dense_2_output_shape_address0 = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        dense_2_output_shape_address0 = 3'd4;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state227))) begin
        dense_2_output_shape_address0 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        dense_2_output_shape_address0 = 3'd0;
    end else begin
        dense_2_output_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state228)) begin
        dense_2_output_shape_address1 = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state226)) begin
        dense_2_output_shape_address1 = 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        dense_2_output_shape_address1 = 3'd3;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state227))) begin
        dense_2_output_shape_address1 = 3'd2;
    end else begin
        dense_2_output_shape_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state228) | (1'b1 == ap_CS_fsm_state227) | (1'b1 == ap_CS_fsm_state63))) begin
        dense_2_output_shape_ce0 = 1'b1;
    end else begin
        dense_2_output_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state228) | (1'b1 == ap_CS_fsm_state227) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state226))) begin
        dense_2_output_shape_ce1 = 1'b1;
    end else begin
        dense_2_output_shape_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state63))) begin
        dense_2_output_shape_d0 = 5'd1;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        dense_2_output_shape_d0 = 5'd6;
    end else begin
        dense_2_output_shape_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state63))) begin
        dense_2_output_shape_we0 = 1'b1;
    end else begin
        dense_2_output_shape_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state63))) begin
        dense_2_output_shape_we1 = 1'b1;
    end else begin
        dense_2_output_shape_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        dense_bias_array_0_address0 = tmp_58_reg_3307;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_bias_array_0_address0 = grp_k2c_dense_fu_1857_bias_array_address0;
    end else begin
        dense_bias_array_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        dense_bias_array_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_bias_array_0_ce0 = grp_k2c_dense_fu_1857_bias_array_ce0;
    end else begin
        dense_bias_array_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond22_reg_3298 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        dense_bias_array_0_we0 = 1'b1;
    end else begin
        dense_bias_array_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        dense_bias_array_ce0 = 1'b1;
    end else begin
        dense_bias_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        dense_fwork_address0 = tmp_57_fu_2120_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_fwork_address0 = grp_k2c_dense_fu_1857_fwork_address0;
    end else begin
        dense_fwork_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        dense_fwork_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_fwork_ce0 = grp_k2c_dense_fu_1857_fwork_ce0;
    end else begin
        dense_fwork_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_fwork_ce1 = grp_k2c_dense_fu_1857_fwork_ce1;
    end else begin
        dense_fwork_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        dense_fwork_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_fwork_d0 = grp_k2c_dense_fu_1857_fwork_d0;
    end else begin
        dense_fwork_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        dense_fwork_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_fwork_we0 = grp_k2c_dense_fu_1857_fwork_we0;
    end else begin
        dense_fwork_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        dense_kernel_array_address0 = tmp_56_reg_3288;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        dense_kernel_array_address0 = tmp_56_fu_2092_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dense_kernel_array_address0 = tmp_s_reg_3265;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_kernel_array_address0 = grp_k2c_dense_fu_1857_kernel_array_address0;
    end else begin
        dense_kernel_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        dense_kernel_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_kernel_array_ce0 = grp_k2c_dense_fu_1857_kernel_array_ce0;
    end else begin
        dense_kernel_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        dense_kernel_array_d0 = dense_kernel_array_q0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dense_kernel_array_d0 = face_classifier_c_de_q0;
    end else begin
        dense_kernel_array_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp1_stage0_11001) & (exitcond23_reg_3279 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        dense_kernel_array_we0 = 1'b1;
    end else begin
        dense_kernel_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dense_kernel_shape_address0 = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        dense_kernel_shape_address0 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dense_kernel_shape_address0 = 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_kernel_shape_address0 = grp_k2c_dense_fu_1857_kernel_shape_address0;
    end else begin
        dense_kernel_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dense_kernel_shape_address1 = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        dense_kernel_shape_address1 = 3'd2;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_kernel_shape_address1 = grp_k2c_dense_fu_1857_kernel_shape_address1;
    end else begin
        dense_kernel_shape_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9))) begin
        dense_kernel_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_kernel_shape_ce0 = grp_k2c_dense_fu_1857_kernel_shape_ce0;
    end else begin
        dense_kernel_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        dense_kernel_shape_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_kernel_shape_ce1 = grp_k2c_dense_fu_1857_kernel_shape_ce1;
    end else begin
        dense_kernel_shape_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dense_kernel_shape_d0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        dense_kernel_shape_d0 = 64'd100;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dense_kernel_shape_d0 = 64'd2622;
    end else begin
        dense_kernel_shape_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | ((tmp_55_reg_3275 == 1'd1) & (1'b1 == ap_CS_fsm_state7)))) begin
        dense_kernel_shape_we0 = 1'b1;
    end else begin
        dense_kernel_shape_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        dense_kernel_shape_we1 = 1'b1;
    end else begin
        dense_kernel_shape_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dense_output_array_address0 = tmp_fu_2058_p1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        dense_output_array_address0 = grp_k2c_batch_norm_fu_1907_inputs_array_address0;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_output_array_address0 = grp_k2c_dense_fu_1857_output_array_address0;
    end else begin
        dense_output_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dense_output_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        dense_output_array_ce0 = grp_k2c_batch_norm_fu_1907_inputs_array_ce0;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_output_array_ce0 = grp_k2c_dense_fu_1857_output_array_ce0;
    end else begin
        dense_output_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dense_output_array_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_output_array_d0 = grp_k2c_dense_fu_1857_output_array_d0;
    end else begin
        dense_output_array_d0 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond_fu_2046_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        dense_output_array_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_output_array_we0 = grp_k2c_dense_fu_1857_output_array_we0;
    end else begin
        dense_output_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        dense_output_shape_address0 = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        dense_output_shape_address0 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        dense_output_shape_address0 = 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        dense_output_shape_address0 = grp_k2c_batch_norm_fu_1907_inputs_shape_address0;
    end else begin
        dense_output_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        dense_output_shape_address1 = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        dense_output_shape_address1 = 3'd2;
    end else begin
        dense_output_shape_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        dense_output_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        dense_output_shape_ce0 = grp_k2c_batch_norm_fu_1907_inputs_shape_ce0;
    end else begin
        dense_output_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        dense_output_shape_ce1 = 1'b1;
    end else begin
        dense_output_shape_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        dense_output_shape_d0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        dense_output_shape_d0 = 64'd100;
    end else begin
        dense_output_shape_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        dense_output_shape_we0 = 1'b1;
    end else begin
        dense_output_shape_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        dense_output_shape_we1 = 1'b1;
    end else begin
        dense_output_shape_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp23_stage0) & (ap_enable_reg_pp23_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp23_stage0))) begin
        dropout_2_output_arr_address0 = tmp_85_reg_3691;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        dropout_2_output_arr_address0 = grp_k2c_dense_1_fu_1832_input_array_address0;
    end else begin
        dropout_2_output_arr_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp23_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp23_stage0) & (1'b0 == ap_block_pp23_stage0_11001))) begin
        dropout_2_output_arr_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        dropout_2_output_arr_ce0 = grp_k2c_dense_1_fu_1832_input_array_ce0;
    end else begin
        dropout_2_output_arr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp23_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp23_stage0) & (1'b0 == ap_block_pp23_stage0_11001) & (tmp_87_reg_3696 == 1'd1))) begin
        dropout_2_output_arr_we0 = 1'b1;
    end else begin
        dropout_2_output_arr_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp22_stage0) & (ap_enable_reg_pp22_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp22_stage0))) begin
        dropout_2_output_sha_address0 = tmp_86_reg_3681;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        dropout_2_output_sha_address0 = grp_k2c_dense_1_fu_1832_input_shape_address0;
    end else begin
        dropout_2_output_sha_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp22_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp22_stage0) & (1'b0 == ap_block_pp22_stage0_11001))) begin
        dropout_2_output_sha_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        dropout_2_output_sha_ce0 = grp_k2c_dense_1_fu_1832_input_shape_ce0;
    end else begin
        dropout_2_output_sha_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond4_reg_3672 == 1'd0) & (ap_enable_reg_pp22_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp22_stage0) & (1'b0 == ap_block_pp22_stage0_11001))) begin
        dropout_2_output_sha_we0 = 1'b1;
    end else begin
        dropout_2_output_sha_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp28_stage0) & (ap_enable_reg_pp28_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp28_stage0))) begin
        dropout_3_output_arr_address0 = tmp_93_reg_3811;
    end else if ((1'b1 == ap_CS_fsm_state177)) begin
        dropout_3_output_arr_address0 = grp_k2c_dense2_fu_1878_dropout_3_output_arr_address0;
    end else begin
        dropout_3_output_arr_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp28_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp28_stage0) & (1'b0 == ap_block_pp28_stage0_11001))) begin
        dropout_3_output_arr_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state177)) begin
        dropout_3_output_arr_ce0 = grp_k2c_dense2_fu_1878_dropout_3_output_arr_ce0;
    end else begin
        dropout_3_output_arr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond26_reg_3802 == 1'd0) & (ap_enable_reg_pp28_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp28_stage0) & (1'b0 == ap_block_pp28_stage0_11001))) begin
        dropout_3_output_arr_we0 = 1'b1;
    end else begin
        dropout_3_output_arr_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp27_stage0) & (ap_enable_reg_pp27_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp27_stage0))) begin
        dropout_3_output_sha_address0 = tmp_94_reg_3792;
    end else if ((1'b1 == ap_CS_fsm_state177)) begin
        dropout_3_output_sha_address0 = grp_k2c_dense2_fu_1878_dropout_3_output_sha_address0;
    end else begin
        dropout_3_output_sha_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp27_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp27_stage0) & (1'b0 == ap_block_pp27_stage0_11001))) begin
        dropout_3_output_sha_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state177)) begin
        dropout_3_output_sha_ce0 = grp_k2c_dense2_fu_1878_dropout_3_output_sha_ce0;
    end else begin
        dropout_3_output_sha_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_reg_3783 == 1'd0) & (ap_enable_reg_pp27_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp27_stage0) & (1'b0 == ap_block_pp27_stage0_11001))) begin
        dropout_3_output_sha_we0 = 1'b1;
    end else begin
        dropout_3_output_sha_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        face_classifier_c_de_ce0 = 1'b1;
    end else begin
        face_classifier_c_de_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state183)) begin
        grp_fu_1946_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state213) | (1'b1 == ap_CS_fsm_state209) | (1'b1 == ap_CS_fsm_state205) | (1'b1 == ap_CS_fsm_state201) | (1'b1 == ap_CS_fsm_state197) | (1'b1 == ap_CS_fsm_state193))) begin
        grp_fu_1946_opcode = 2'd0;
    end else begin
        grp_fu_1946_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state213) | (1'b1 == ap_CS_fsm_state209) | (1'b1 == ap_CS_fsm_state205) | (1'b1 == ap_CS_fsm_state201) | (1'b1 == ap_CS_fsm_state197))) begin
        grp_fu_1946_p0 = reg_2033;
    end else if ((1'b1 == ap_CS_fsm_state193)) begin
        grp_fu_1946_p0 = tmp_125_reg_3925;
    end else if ((1'b1 == ap_CS_fsm_state183)) begin
        grp_fu_1946_p0 = xmax_reg_3821;
    end else begin
        grp_fu_1946_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state213)) begin
        grp_fu_1946_p1 = tmp_100_5_reg_3960;
    end else if ((1'b1 == ap_CS_fsm_state209)) begin
        grp_fu_1946_p1 = tmp_100_4_reg_3953;
    end else if ((1'b1 == ap_CS_fsm_state205)) begin
        grp_fu_1946_p1 = tmp_100_3_reg_3946;
    end else if ((1'b1 == ap_CS_fsm_state201)) begin
        grp_fu_1946_p1 = tmp_100_2_reg_3939;
    end else if ((1'b1 == ap_CS_fsm_state197)) begin
        grp_fu_1946_p1 = tmp_100_1_reg_3932;
    end else if ((1'b1 == ap_CS_fsm_state193)) begin
        grp_fu_1946_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state183)) begin
        grp_fu_1946_p1 = xmax_5_fu_3175_p3;
    end else begin
        grp_fu_1946_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state182)) begin
        grp_fu_2000_p0 = dense_2_output_array_10_reg_3864;
    end else if ((1'b1 == ap_CS_fsm_state181)) begin
        grp_fu_2000_p0 = dense_2_output_array_6_reg_3840;
    end else if ((1'b1 == ap_CS_fsm_state180)) begin
        grp_fu_2000_p0 = dense_2_output_array_q0;
    end else begin
        grp_fu_2000_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state182)) begin
        grp_fu_2000_p1 = xmax_3_fu_2997_p3;
    end else if ((1'b1 == ap_CS_fsm_state181)) begin
        grp_fu_2000_p1 = xmax_1_fu_2816_p3;
    end else if ((1'b1 == ap_CS_fsm_state180)) begin
        grp_fu_2000_p1 = xmax_reg_3821;
    end else begin
        grp_fu_2000_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state182)) begin
        grp_fu_2005_p1 = xmax_4_fu_3086_p3;
    end else if ((1'b1 == ap_CS_fsm_state181)) begin
        grp_fu_2005_p1 = xmax_2_fu_2905_p3;
    end else begin
        grp_fu_2005_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state207)) begin
        grp_fu_2010_p1 = tmp_99_5_reg_3920;
    end else if ((1'b1 == ap_CS_fsm_state203)) begin
        grp_fu_2010_p1 = tmp_99_4_reg_3915;
    end else if ((1'b1 == ap_CS_fsm_state199)) begin
        grp_fu_2010_p1 = tmp_99_3_reg_3910;
    end else if ((1'b1 == ap_CS_fsm_state195)) begin
        grp_fu_2010_p1 = tmp_99_2_reg_3905;
    end else if ((1'b1 == ap_CS_fsm_state191)) begin
        grp_fu_2010_p1 = tmp_99_1_reg_3900;
    end else if ((1'b1 == ap_CS_fsm_state187)) begin
        grp_fu_2010_p1 = reg_2033;
    end else begin
        grp_fu_2010_p1 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond25_reg_3725 == 1'd0) & (1'b0 == ap_block_pp24_stage0) & (ap_enable_reg_pp24_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp24_stage0))) begin
        grp_generic_tanh_float_s_fu_1933_t_in = batch_normalization_8_q0;
    end else if (((exitcond1_reg_3614 == 1'd0) & (1'b0 == ap_block_pp19_stage0) & (ap_enable_reg_pp19_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp19_stage0))) begin
        grp_generic_tanh_float_s_fu_1933_t_in = batch_normalization_23_q0;
    end else begin
        grp_generic_tanh_float_s_fu_1933_t_in = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        grp_k2c_batch_norm_fu_1907_beta_array_q0 = batch_normalization_5_q0;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_k2c_batch_norm_fu_1907_beta_array_q0 = batch_normalization_19_q0;
    end else begin
        grp_k2c_batch_norm_fu_1907_beta_array_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        grp_k2c_batch_norm_fu_1907_gamma_array_q0 = batch_normalization_6_q0;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_k2c_batch_norm_fu_1907_gamma_array_q0 = batch_normalization_21_q0;
    end else begin
        grp_k2c_batch_norm_fu_1907_gamma_array_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        grp_k2c_batch_norm_fu_1907_inputs_array_q0 = dense_1_output_array_q0;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_k2c_batch_norm_fu_1907_inputs_array_q0 = dense_output_array_q0;
    end else begin
        grp_k2c_batch_norm_fu_1907_inputs_array_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        grp_k2c_batch_norm_fu_1907_inputs_numel_read = reg_2027;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_k2c_batch_norm_fu_1907_inputs_numel_read = dense_output_numel;
    end else begin
        grp_k2c_batch_norm_fu_1907_inputs_numel_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        grp_k2c_batch_norm_fu_1907_inputs_shape_q0 = dense_1_output_shape_q0;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_k2c_batch_norm_fu_1907_inputs_shape_q0 = dense_output_shape_q0;
    end else begin
        grp_k2c_batch_norm_fu_1907_inputs_shape_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        grp_k2c_batch_norm_fu_1907_mean_array_q0 = batch_normalization_7_q0;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_k2c_batch_norm_fu_1907_mean_array_q0 = batch_normalization_22_q0;
    end else begin
        grp_k2c_batch_norm_fu_1907_mean_array_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        grp_k2c_batch_norm_fu_1907_stdev_array_q0 = batch_normalization_15_q0;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_k2c_batch_norm_fu_1907_stdev_array_q0 = batch_normalization_18_q0;
    end else begin
        grp_k2c_batch_norm_fu_1907_stdev_array_q0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((exitcond_fu_2046_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((tmp_55_reg_3275 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((exitcond23_fu_2080_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((exitcond23_fu_2080_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((exitcond22_fu_2097_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((exitcond22_fu_2097_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (tmp_59_fu_2125_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((exitcond21_fu_2143_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((exitcond20_fu_2160_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((exitcond20_fu_2160_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if (~((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone) & (exitcond19_fu_2177_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone) & (exitcond19_fu_2177_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if (~((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone) & (exitcond18_fu_2194_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone) & (exitcond18_fu_2194_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_pp7_stage0;
        end
        ap_ST_fsm_pp7_stage0 : begin
            if (~((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone) & (exitcond17_fu_2211_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if (((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone) & (exitcond17_fu_2211_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            if (((exitcond16_fu_2234_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_pp9_stage0;
        end
        ap_ST_fsm_pp9_stage0 : begin
            if (~((ap_enable_reg_pp9_iter0 == 1'b1) & (1'b0 == ap_block_pp9_stage0_subdone) & (exitcond15_fu_2263_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage0;
            end else if (((ap_enable_reg_pp9_iter0 == 1'b1) & (1'b0 == ap_block_pp9_stage0_subdone) & (exitcond15_fu_2263_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage0;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_pp10_stage0;
        end
        ap_ST_fsm_pp10_stage0 : begin
            if (~((ap_enable_reg_pp10_iter0 == 1'b1) & (1'b0 == ap_block_pp10_stage0_subdone) & (exitcond14_fu_2286_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp10_stage0;
            end else if (((ap_enable_reg_pp10_iter0 == 1'b1) & (1'b0 == ap_block_pp10_stage0_subdone) & (exitcond14_fu_2286_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp10_stage0;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            if (((1'b1 == ap_CS_fsm_state45) & (tmp_69_fu_2314_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            if (((exitcond13_fu_2326_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_pp12_stage0;
        end
        ap_ST_fsm_pp12_stage0 : begin
            if (~((ap_enable_reg_pp12_iter0 == 1'b1) & (1'b0 == ap_block_pp12_stage0_subdone) & (exitcond12_fu_2343_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp12_stage0;
            end else if (((ap_enable_reg_pp12_iter0 == 1'b1) & (1'b0 == ap_block_pp12_stage0_subdone) & (exitcond12_fu_2343_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp12_stage0;
            end
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_pp13_stage0;
        end
        ap_ST_fsm_pp13_stage0 : begin
            if (~((ap_enable_reg_pp13_iter0 == 1'b1) & (1'b0 == ap_block_pp13_stage0_subdone) & (exitcond11_fu_2360_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp13_stage0;
            end else if (((ap_enable_reg_pp13_iter0 == 1'b1) & (1'b0 == ap_block_pp13_stage0_subdone) & (exitcond11_fu_2360_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp13_stage0;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_pp14_stage0;
        end
        ap_ST_fsm_pp14_stage0 : begin
            if (~((1'b0 == ap_block_pp14_stage0_subdone) & (ap_enable_reg_pp14_iter0 == 1'b1) & (exitcond10_fu_2377_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp14_stage0;
            end else if (((1'b0 == ap_block_pp14_stage0_subdone) & (ap_enable_reg_pp14_iter0 == 1'b1) & (exitcond10_fu_2377_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp14_stage0;
            end
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_pp15_stage0;
        end
        ap_ST_fsm_pp15_stage0 : begin
            if (~((1'b0 == ap_block_pp15_stage0_subdone) & (ap_enable_reg_pp15_iter0 == 1'b1) & (exitcond9_fu_2394_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp15_stage0;
            end else if (((1'b0 == ap_block_pp15_stage0_subdone) & (ap_enable_reg_pp15_iter0 == 1'b1) & (exitcond9_fu_2394_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp15_stage0;
            end
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            if (((exitcond8_fu_2423_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state64))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_pp17_stage0;
        end
        ap_ST_fsm_pp17_stage0 : begin
            if (~((1'b0 == ap_block_pp17_stage0_subdone) & (ap_enable_reg_pp17_iter0 == 1'b1) & (exitcond7_fu_2452_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp17_stage0;
            end else if (((1'b0 == ap_block_pp17_stage0_subdone) & (ap_enable_reg_pp17_iter0 == 1'b1) & (exitcond7_fu_2452_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp17_stage0;
            end
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_pp18_stage0;
        end
        ap_ST_fsm_pp18_stage0 : begin
            if (~((1'b0 == ap_block_pp18_stage0_subdone) & (ap_enable_reg_pp18_iter0 == 1'b1) & (exitcond6_fu_2475_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp18_stage0;
            end else if (((1'b0 == ap_block_pp18_stage0_subdone) & (ap_enable_reg_pp18_iter0 == 1'b1) & (exitcond6_fu_2475_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp18_stage0;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            if (((1'b1 == ap_CS_fsm_state74) & (tmp_79_fu_2503_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end
        end
        ap_ST_fsm_state75 : begin
            if (((grp_k2c_dense_fu_1857_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state75))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            if (((1'b1 == ap_CS_fsm_state77) & (grp_k2c_batch_norm_fu_1907_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp19_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end
        end
        ap_ST_fsm_pp19_stage0 : begin
            if ((~((ap_enable_reg_pp19_iter1 == 1'b0) & (1'b0 == ap_block_pp19_stage0_subdone) & (ap_enable_reg_pp19_iter0 == 1'b1) & (exitcond1_fu_2523_p2 == 1'd1)) & ~((ap_enable_reg_pp19_iter33 == 1'b0) & (1'b0 == ap_block_pp19_stage0_subdone) & (ap_enable_reg_pp19_iter34 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp19_stage0;
            end else if ((((ap_enable_reg_pp19_iter33 == 1'b0) & (1'b0 == ap_block_pp19_stage0_subdone) & (ap_enable_reg_pp19_iter34 == 1'b1)) | ((ap_enable_reg_pp19_iter1 == 1'b0) & (1'b0 == ap_block_pp19_stage0_subdone) & (ap_enable_reg_pp19_iter0 == 1'b1) & (exitcond1_fu_2523_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state113;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp19_stage0;
            end
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_pp20_stage0;
        end
        ap_ST_fsm_pp20_stage0 : begin
            if (~((1'b0 == ap_block_pp20_stage0_subdone) & (ap_enable_reg_pp20_iter0 == 1'b1) & (exitcond5_fu_2538_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp20_stage0;
            end else if (((1'b0 == ap_block_pp20_stage0_subdone) & (ap_enable_reg_pp20_iter0 == 1'b1) & (exitcond5_fu_2538_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state116;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp20_stage0;
            end
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_pp21_stage0;
        end
        ap_ST_fsm_pp21_stage0 : begin
            if (~((tmp_84_fu_2560_p2 == 1'd0) & (1'b0 == ap_block_pp21_stage0_subdone) & (ap_enable_reg_pp21_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp21_stage0;
            end else if (((tmp_84_fu_2560_p2 == 1'd0) & (1'b0 == ap_block_pp21_stage0_subdone) & (ap_enable_reg_pp21_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state119;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp21_stage0;
            end
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_pp22_stage0;
        end
        ap_ST_fsm_pp22_stage0 : begin
            if (~((1'b0 == ap_block_pp22_stage0_subdone) & (ap_enable_reg_pp22_iter0 == 1'b1) & (exitcond4_fu_2571_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp22_stage0;
            end else if (((1'b0 == ap_block_pp22_stage0_subdone) & (ap_enable_reg_pp22_iter0 == 1'b1) & (exitcond4_fu_2571_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state122;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp22_stage0;
            end
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_pp23_stage0;
        end
        ap_ST_fsm_pp23_stage0 : begin
            if (~((tmp_87_fu_2598_p2 == 1'd0) & (1'b0 == ap_block_pp23_stage0_subdone) & (ap_enable_reg_pp23_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp23_stage0;
            end else if (((tmp_87_fu_2598_p2 == 1'd0) & (1'b0 == ap_block_pp23_stage0_subdone) & (ap_enable_reg_pp23_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state125;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp23_stage0;
            end
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            if (((grp_k2c_dense_1_fu_1832_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state126))) begin
                ap_NS_fsm = ap_ST_fsm_state127;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state126;
            end
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            if (((1'b1 == ap_CS_fsm_state128) & (grp_k2c_batch_norm_fu_1907_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp24_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state128;
            end
        end
        ap_ST_fsm_pp24_stage0 : begin
            if ((~((ap_enable_reg_pp24_iter1 == 1'b0) & (1'b0 == ap_block_pp24_stage0_subdone) & (ap_enable_reg_pp24_iter0 == 1'b1) & (exitcond25_fu_2624_p2 == 1'd1)) & ~((ap_enable_reg_pp24_iter33 == 1'b0) & (1'b0 == ap_block_pp24_stage0_subdone) & (ap_enable_reg_pp24_iter34 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp24_stage0;
            end else if ((((ap_enable_reg_pp24_iter33 == 1'b0) & (1'b0 == ap_block_pp24_stage0_subdone) & (ap_enable_reg_pp24_iter34 == 1'b1)) | ((ap_enable_reg_pp24_iter1 == 1'b0) & (1'b0 == ap_block_pp24_stage0_subdone) & (ap_enable_reg_pp24_iter0 == 1'b1) & (exitcond25_fu_2624_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state164;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp24_stage0;
            end
        end
        ap_ST_fsm_state164 : begin
            ap_NS_fsm = ap_ST_fsm_pp25_stage0;
        end
        ap_ST_fsm_pp25_stage0 : begin
            if (~((1'b0 == ap_block_pp25_stage0_subdone) & (ap_enable_reg_pp25_iter0 == 1'b1) & (exitcond3_fu_2649_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp25_stage0;
            end else if (((1'b0 == ap_block_pp25_stage0_subdone) & (ap_enable_reg_pp25_iter0 == 1'b1) & (exitcond3_fu_2649_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state167;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp25_stage0;
            end
        end
        ap_ST_fsm_state167 : begin
            ap_NS_fsm = ap_ST_fsm_pp26_stage0;
        end
        ap_ST_fsm_pp26_stage0 : begin
            if (~((1'b0 == ap_block_pp26_stage0_subdone) & (ap_enable_reg_pp26_iter0 == 1'b1) & (exitcond24_fu_2666_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp26_stage0;
            end else if (((1'b0 == ap_block_pp26_stage0_subdone) & (ap_enable_reg_pp26_iter0 == 1'b1) & (exitcond24_fu_2666_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state170;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp26_stage0;
            end
        end
        ap_ST_fsm_state170 : begin
            ap_NS_fsm = ap_ST_fsm_pp27_stage0;
        end
        ap_ST_fsm_pp27_stage0 : begin
            if (~((1'b0 == ap_block_pp27_stage0_subdone) & (ap_enable_reg_pp27_iter0 == 1'b1) & (exitcond2_fu_2694_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp27_stage0;
            end else if (((1'b0 == ap_block_pp27_stage0_subdone) & (ap_enable_reg_pp27_iter0 == 1'b1) & (exitcond2_fu_2694_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state173;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp27_stage0;
            end
        end
        ap_ST_fsm_state173 : begin
            ap_NS_fsm = ap_ST_fsm_pp28_stage0;
        end
        ap_ST_fsm_pp28_stage0 : begin
            if (~((1'b0 == ap_block_pp28_stage0_subdone) & (ap_enable_reg_pp28_iter0 == 1'b1) & (exitcond26_fu_2716_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp28_stage0;
            end else if (((1'b0 == ap_block_pp28_stage0_subdone) & (ap_enable_reg_pp28_iter0 == 1'b1) & (exitcond26_fu_2716_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state176;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp28_stage0;
            end
        end
        ap_ST_fsm_state176 : begin
            ap_NS_fsm = ap_ST_fsm_state177;
        end
        ap_ST_fsm_state177 : begin
            if (((grp_k2c_dense2_fu_1878_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state177))) begin
                ap_NS_fsm = ap_ST_fsm_state178;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state177;
            end
        end
        ap_ST_fsm_state178 : begin
            ap_NS_fsm = ap_ST_fsm_state179;
        end
        ap_ST_fsm_state179 : begin
            ap_NS_fsm = ap_ST_fsm_state180;
        end
        ap_ST_fsm_state180 : begin
            ap_NS_fsm = ap_ST_fsm_state181;
        end
        ap_ST_fsm_state181 : begin
            ap_NS_fsm = ap_ST_fsm_state182;
        end
        ap_ST_fsm_state182 : begin
            ap_NS_fsm = ap_ST_fsm_state183;
        end
        ap_ST_fsm_state183 : begin
            ap_NS_fsm = ap_ST_fsm_state184;
        end
        ap_ST_fsm_state184 : begin
            ap_NS_fsm = ap_ST_fsm_state185;
        end
        ap_ST_fsm_state185 : begin
            ap_NS_fsm = ap_ST_fsm_state186;
        end
        ap_ST_fsm_state186 : begin
            ap_NS_fsm = ap_ST_fsm_state187;
        end
        ap_ST_fsm_state187 : begin
            ap_NS_fsm = ap_ST_fsm_state188;
        end
        ap_ST_fsm_state188 : begin
            ap_NS_fsm = ap_ST_fsm_state189;
        end
        ap_ST_fsm_state189 : begin
            ap_NS_fsm = ap_ST_fsm_state190;
        end
        ap_ST_fsm_state190 : begin
            ap_NS_fsm = ap_ST_fsm_state191;
        end
        ap_ST_fsm_state191 : begin
            ap_NS_fsm = ap_ST_fsm_state192;
        end
        ap_ST_fsm_state192 : begin
            ap_NS_fsm = ap_ST_fsm_state193;
        end
        ap_ST_fsm_state193 : begin
            ap_NS_fsm = ap_ST_fsm_state194;
        end
        ap_ST_fsm_state194 : begin
            ap_NS_fsm = ap_ST_fsm_state195;
        end
        ap_ST_fsm_state195 : begin
            ap_NS_fsm = ap_ST_fsm_state196;
        end
        ap_ST_fsm_state196 : begin
            ap_NS_fsm = ap_ST_fsm_state197;
        end
        ap_ST_fsm_state197 : begin
            ap_NS_fsm = ap_ST_fsm_state198;
        end
        ap_ST_fsm_state198 : begin
            ap_NS_fsm = ap_ST_fsm_state199;
        end
        ap_ST_fsm_state199 : begin
            ap_NS_fsm = ap_ST_fsm_state200;
        end
        ap_ST_fsm_state200 : begin
            ap_NS_fsm = ap_ST_fsm_state201;
        end
        ap_ST_fsm_state201 : begin
            ap_NS_fsm = ap_ST_fsm_state202;
        end
        ap_ST_fsm_state202 : begin
            ap_NS_fsm = ap_ST_fsm_state203;
        end
        ap_ST_fsm_state203 : begin
            ap_NS_fsm = ap_ST_fsm_state204;
        end
        ap_ST_fsm_state204 : begin
            ap_NS_fsm = ap_ST_fsm_state205;
        end
        ap_ST_fsm_state205 : begin
            ap_NS_fsm = ap_ST_fsm_state206;
        end
        ap_ST_fsm_state206 : begin
            ap_NS_fsm = ap_ST_fsm_state207;
        end
        ap_ST_fsm_state207 : begin
            ap_NS_fsm = ap_ST_fsm_state208;
        end
        ap_ST_fsm_state208 : begin
            ap_NS_fsm = ap_ST_fsm_state209;
        end
        ap_ST_fsm_state209 : begin
            ap_NS_fsm = ap_ST_fsm_state210;
        end
        ap_ST_fsm_state210 : begin
            ap_NS_fsm = ap_ST_fsm_state211;
        end
        ap_ST_fsm_state211 : begin
            ap_NS_fsm = ap_ST_fsm_state212;
        end
        ap_ST_fsm_state212 : begin
            ap_NS_fsm = ap_ST_fsm_state213;
        end
        ap_ST_fsm_state213 : begin
            ap_NS_fsm = ap_ST_fsm_state214;
        end
        ap_ST_fsm_state214 : begin
            ap_NS_fsm = ap_ST_fsm_state215;
        end
        ap_ST_fsm_state215 : begin
            ap_NS_fsm = ap_ST_fsm_state216;
        end
        ap_ST_fsm_state216 : begin
            ap_NS_fsm = ap_ST_fsm_state217;
        end
        ap_ST_fsm_state217 : begin
            ap_NS_fsm = ap_ST_fsm_state218;
        end
        ap_ST_fsm_state218 : begin
            ap_NS_fsm = ap_ST_fsm_state219;
        end
        ap_ST_fsm_state219 : begin
            ap_NS_fsm = ap_ST_fsm_state220;
        end
        ap_ST_fsm_state220 : begin
            ap_NS_fsm = ap_ST_fsm_state221;
        end
        ap_ST_fsm_state221 : begin
            ap_NS_fsm = ap_ST_fsm_state222;
        end
        ap_ST_fsm_state222 : begin
            ap_NS_fsm = ap_ST_fsm_state223;
        end
        ap_ST_fsm_state223 : begin
            ap_NS_fsm = ap_ST_fsm_state224;
        end
        ap_ST_fsm_state224 : begin
            ap_NS_fsm = ap_ST_fsm_state225;
        end
        ap_ST_fsm_state225 : begin
            ap_NS_fsm = ap_ST_fsm_state226;
        end
        ap_ST_fsm_state226 : begin
            ap_NS_fsm = ap_ST_fsm_state227;
        end
        ap_ST_fsm_state227 : begin
            ap_NS_fsm = ap_ST_fsm_state228;
        end
        ap_ST_fsm_state228 : begin
            ap_NS_fsm = ap_ST_fsm_state229;
        end
        ap_ST_fsm_state229 : begin
            ap_NS_fsm = ap_ST_fsm_state230;
        end
        ap_ST_fsm_state230 : begin
            if (((tmp_104_fu_3231_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state230))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state231;
            end
        end
        ap_ST_fsm_state231 : begin
            ap_NS_fsm = ap_ST_fsm_state230;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign activation_3_output_array_address0 = tmp_96_reg_4011;

assign activation_3_output_array_d0 = dense_2_output_array_q0;

assign activation_3_output_ndim = dense_2_output_ndim;

assign activation_3_output_numel = dense_2_output_numel;

assign ap_CS_fsm_pp10_stage0 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_pp12_stage0 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_pp13_stage0 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_pp14_stage0 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_pp15_stage0 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_pp17_stage0 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_pp18_stage0 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_pp19_stage0 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp20_stage0 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_pp21_stage0 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_pp22_stage0 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_pp23_stage0 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_pp24_stage0 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_pp25_stage0 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_pp26_stage0 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_pp27_stage0 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_pp28_stage0 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp9_stage0 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state164 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state167 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state170 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state173 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state176 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state177 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state178 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state179 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state180 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state181 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state182 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state183 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state186 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state187 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state191 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state192 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state193 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state195 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state196 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state197 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state199 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state200 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state201 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state203 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state204 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state205 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state207 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state208 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state209 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state212 = ap_CS_fsm[32'd121];

assign ap_CS_fsm_state213 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state216 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state217 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state223 = ap_CS_fsm[32'd132];

assign ap_CS_fsm_state224 = ap_CS_fsm[32'd133];

assign ap_CS_fsm_state225 = ap_CS_fsm[32'd134];

assign ap_CS_fsm_state226 = ap_CS_fsm[32'd135];

assign ap_CS_fsm_state227 = ap_CS_fsm[32'd136];

assign ap_CS_fsm_state228 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state229 = ap_CS_fsm[32'd138];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state230 = ap_CS_fsm[32'd139];

assign ap_CS_fsm_state231 = ap_CS_fsm[32'd140];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp10_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp10_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp10_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp12_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp12_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp12_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp13_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp13_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp13_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp14_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp14_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp14_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp15_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp15_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp15_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp17_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp17_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp17_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp18_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp18_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp18_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp19_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp19_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp19_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp20_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp20_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp20_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp21_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp21_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp21_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp22_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp22_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp22_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp23_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp23_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp23_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp24_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp24_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp24_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp25_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp25_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp25_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp26_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp26_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp26_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp27_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp27_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp27_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp28_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp28_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp28_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp9_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp9_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp9_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state100_pp19_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp19_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp19_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp19_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp19_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp19_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp19_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp19_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp19_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp19_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state110_pp19_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp19_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp19_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state114_pp20_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state115_pp20_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state117_pp21_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state118_pp21_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state120_pp22_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state121_pp22_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state123_pp23_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state124_pp23_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state129_pp24_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state130_pp24_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state131_pp24_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state132_pp24_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state133_pp24_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state134_pp24_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state135_pp24_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state136_pp24_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state137_pp24_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state138_pp24_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state139_pp24_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state140_pp24_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state141_pp24_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state142_pp24_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state143_pp24_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state144_pp24_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state145_pp24_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state146_pp24_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state147_pp24_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state148_pp24_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state149_pp24_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state150_pp24_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state151_pp24_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state152_pp24_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state153_pp24_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state154_pp24_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state155_pp24_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state156_pp24_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state157_pp24_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state158_pp24_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state159_pp24_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state160_pp24_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state161_pp24_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state162_pp24_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state163_pp24_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state165_pp25_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state166_pp25_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state168_pp26_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state169_pp26_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state171_pp27_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state172_pp27_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state174_pp28_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state175_pp28_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp9_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp9_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp10_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp10_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp12_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp12_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp13_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp13_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp14_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp14_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp15_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp15_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp17_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp17_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp18_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp18_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp19_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp19_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp19_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp19_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp19_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp19_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp19_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp19_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp19_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp19_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp19_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp19_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp19_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp19_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp19_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp19_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp19_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp19_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp19_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp19_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp19_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp19_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp10 = (ap_idle_pp10 ^ 1'b1);

assign ap_enable_pp12 = (ap_idle_pp12 ^ 1'b1);

assign ap_enable_pp13 = (ap_idle_pp13 ^ 1'b1);

assign ap_enable_pp14 = (ap_idle_pp14 ^ 1'b1);

assign ap_enable_pp15 = (ap_idle_pp15 ^ 1'b1);

assign ap_enable_pp17 = (ap_idle_pp17 ^ 1'b1);

assign ap_enable_pp18 = (ap_idle_pp18 ^ 1'b1);

assign ap_enable_pp19 = (ap_idle_pp19 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp20 = (ap_idle_pp20 ^ 1'b1);

assign ap_enable_pp21 = (ap_idle_pp21 ^ 1'b1);

assign ap_enable_pp22 = (ap_idle_pp22 ^ 1'b1);

assign ap_enable_pp23 = (ap_idle_pp23 ^ 1'b1);

assign ap_enable_pp24 = (ap_idle_pp24 ^ 1'b1);

assign ap_enable_pp25 = (ap_idle_pp25 ^ 1'b1);

assign ap_enable_pp26 = (ap_idle_pp26 ^ 1'b1);

assign ap_enable_pp27 = (ap_idle_pp27 ^ 1'b1);

assign ap_enable_pp28 = (ap_idle_pp28 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

assign ap_enable_pp9 = (ap_idle_pp9 ^ 1'b1);

assign batch_normalization_11_address0 = tmp_61_fu_2172_p1;

assign batch_normalization_14_address0 = tmp_63_fu_2206_p1;

assign batch_normalization_17_address0 = tmp_64_fu_2223_p1;

assign batch_normalization_20_address0 = tmp_72_fu_2372_p1;

assign batch_normalization_29_address0 = tmp_71_fu_2355_p1;

assign batch_normalization_32_address0 = tmp_73_fu_2389_p1;

assign batch_normalization_35_address0 = tmp_74_fu_2406_p1;

assign batch_normalization_s_address0 = tmp_62_fu_2189_p1;

assign dense_1_bias_array2_address0 = tmp_68_fu_2298_p1;

assign dense_1_kernel_array_address0 = tmp_66_fu_2275_p1;

assign dense_2_bias_array7_address0 = tmp_78_fu_2487_p1;

assign dense_2_kernel_array_address0 = tmp_76_fu_2464_p1;

assign dense_2_output_array_11_fu_3003_p1 = dense_2_output_array_10_reg_3864;

assign dense_2_output_array_1_fu_3094_p1 = dense_2_output_array_12_reg_3878;

assign dense_2_output_array_5_fu_2733_p1 = dense_2_output_array_q0;

assign dense_2_output_array_7_fu_2822_p1 = dense_2_output_array_6_reg_3840;

assign dense_2_output_array_9_fu_2913_p1 = dense_2_output_array_q1;

assign dense_bias_array_address0 = tmp_58_fu_2109_p1;

assign dense_input_input_array_address0 = grp_k2c_dense_fu_1857_input_array_address0;

assign dense_input_input_array_ce0 = grp_k2c_dense_fu_1857_input_array_ce0;

assign dense_input_input_shape_address0 = grp_k2c_dense_fu_1857_input_shape_address0;

assign dense_input_input_shape_ce0 = grp_k2c_dense_fu_1857_input_shape_ce0;

assign dropout_2_output_sha_d0 = $signed(activation_1_output_s_q0);

assign dropout_3_output_sha_d0 = $signed(activation_2_output_s_q0);

assign exitcond10_fu_2377_p2 = ((j_13_reg_1645 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond11_fu_2360_p2 = ((j_12_reg_1634 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond12_fu_2343_p2 = ((j_11_reg_1623 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond13_fu_2326_p2 = ((j_10_reg_1612 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond14_fu_2286_p2 = ((j_s_reg_1590 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond15_fu_2263_p2 = ((j_9_reg_1579 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond16_fu_2234_p2 = ((j_8_reg_1568 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond17_fu_2211_p2 = ((j_7_reg_1557 == 7'd100) ? 1'b1 : 1'b0);

assign exitcond18_fu_2194_p2 = ((j_6_reg_1546 == 7'd100) ? 1'b1 : 1'b0);

assign exitcond19_fu_2177_p2 = ((j_5_reg_1535 == 7'd100) ? 1'b1 : 1'b0);

assign exitcond1_fu_2523_p2 = ((i_cast_fu_2518_p1 == batch_normalization_53_reg_3606) ? 1'b1 : 1'b0);

assign exitcond20_fu_2160_p2 = ((j_4_reg_1524 == 7'd100) ? 1'b1 : 1'b0);

assign exitcond21_fu_2143_p2 = ((j_3_reg_1513 == 7'd100) ? 1'b1 : 1'b0);

assign exitcond22_fu_2097_p2 = ((j_2_reg_1491 == 7'd100) ? 1'b1 : 1'b0);

assign exitcond23_fu_2080_p2 = ((j_1_reg_1480 == 19'd262200) ? 1'b1 : 1'b0);

assign exitcond24_fu_2666_p2 = ((j_23_reg_1788 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond25_fu_2624_p2 = ((i_1_reg_1766 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond26_fu_2716_p2 = ((j_25_reg_1810 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond2_fu_2694_p2 = ((j_24_reg_1799 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond3_fu_2649_p2 = ((j_22_reg_1777 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond4_fu_2571_p2 = ((j_20_reg_1744 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond5_fu_2538_p2 = ((j_18_reg_1722 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond6_fu_2475_p2 = ((j_17_reg_1689 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond7_fu_2452_p2 = ((j_16_reg_1678 == 6'd60) ? 1'b1 : 1'b0);

assign exitcond8_fu_2423_p2 = ((j_15_reg_1667 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond9_fu_2394_p2 = ((j_14_reg_1656 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond_fu_2046_p2 = ((j_reg_1458 == 7'd100) ? 1'b1 : 1'b0);

assign extLd2_fu_2645_p1 = batch_normalization_9;

assign extLd5_fu_3187_p1 = $signed(dense_2_output_shape_q1);

assign extLd6_fu_3192_p1 = $signed(dense_2_output_shape_q0);

assign extLd7_fu_3197_p1 = $signed(dense_2_output_shape_q1);

assign extLd8_fu_3216_p1 = $signed(dense_2_output_shape_q0);

assign extLd9_fu_3221_p1 = $signed(dense_2_output_shape_q1);

assign face_classifier_c_de_address0 = tmp_s_fu_2069_p1;

assign grp_generic_tanh_float_s_fu_1933_ap_start = grp_generic_tanh_float_s_fu_1933_ap_start_reg;

assign grp_k2c_batch_norm_fu_1907_ap_start = grp_k2c_batch_norm_fu_1907_ap_start_reg;

assign grp_k2c_dense2_fu_1878_ap_start = grp_k2c_dense2_fu_1878_ap_start_reg;

assign grp_k2c_dense_1_fu_1832_ap_start = grp_k2c_dense_1_fu_1832_ap_start_reg;

assign grp_k2c_dense_fu_1857_ap_start = grp_k2c_dense_fu_1857_ap_start_reg;

assign i_1_cast5_fu_2636_p1 = i_1_reg_1766;

assign i_40_fu_2528_p2 = (i_reg_1711 + 12'd1);

assign i_41_fu_2630_p2 = (i_1_reg_1766 + 4'd1);

assign i_cast_fu_2518_p1 = i_reg_1711;

assign indvarinc1_fu_2114_p2 = (invdar1_reg_1502 + 19'd1);

assign indvarinc2_fu_2303_p2 = (invdar2_reg_1601 + 11'd1);

assign indvarinc3_fu_2492_p2 = (invdar3_reg_1700 + 7'd1);

assign indvarinc_fu_2063_p2 = (invdar_reg_1469 + 19'd1);

assign j_26_fu_2052_p2 = (j_reg_1458 + 7'd1);

assign j_28_fu_2086_p2 = (j_1_reg_1480 + 19'd1);

assign j_29_fu_2103_p2 = (j_2_reg_1491 + 7'd1);

assign j_30_fu_2149_p2 = (j_3_reg_1513 + 7'd1);

assign j_31_fu_2166_p2 = (j_4_reg_1524 + 7'd1);

assign j_32_fu_2183_p2 = (j_5_reg_1535 + 7'd1);

assign j_33_fu_2200_p2 = (j_6_reg_1546 + 7'd1);

assign j_34_fu_2217_p2 = (j_7_reg_1557 + 7'd1);

assign j_35_fu_2240_p2 = (j_8_reg_1568 + 4'd1);

assign j_36_fu_2269_p2 = (j_9_reg_1579 + 10'd1);

assign j_37_fu_2292_p2 = (j_s_reg_1590 + 4'd1);

assign j_38_fu_2332_p2 = (j_10_reg_1612 + 4'd1);

assign j_39_fu_2349_p2 = (j_11_reg_1623 + 4'd1);

assign j_40_fu_2366_p2 = (j_12_reg_1634 + 4'd1);

assign j_41_fu_2383_p2 = (j_13_reg_1645 + 4'd1);

assign j_42_fu_2400_p2 = (j_14_reg_1656 + 4'd1);

assign j_43_fu_2429_p2 = (j_15_reg_1667 + 3'd1);

assign j_44_fu_2458_p2 = (j_16_reg_1678 + 6'd1);

assign j_45_fu_2481_p2 = (j_17_reg_1689 + 3'd1);

assign j_46_fu_2544_p2 = (j_18_reg_1722 + 3'd1);

assign j_47_fu_2565_p2 = (j_19_reg_1733 + 12'd1);

assign j_48_fu_2577_p2 = (j_20_reg_1744 + 3'd1);

assign j_49_fu_2603_p2 = (j_21_reg_1755 + 12'd1);

assign j_50_fu_2655_p2 = (j_22_reg_1777 + 3'd1);

assign j_51_fu_2672_p2 = (j_23_reg_1788 + 4'd1);

assign j_52_fu_2700_p2 = (j_24_reg_1799 + 3'd1);

assign j_53_fu_2722_p2 = (j_25_reg_1810 + 4'd1);

assign j_54_fu_3236_p2 = ($signed(j_27_reg_1821) + $signed(32'd1));

assign notlhs1_fu_2786_p2 = ((tmp_19_fu_2754_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs2_fu_2857_p2 = ((tmp_26_fu_2825_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs3_fu_2875_p2 = ((tmp_28_fu_2843_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs4_fu_2949_p2 = ((tmp_35_fu_2917_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs5_fu_2967_p2 = ((tmp_37_fu_2935_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs6_fu_3038_p2 = ((tmp_44_fu_3006_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs7_fu_3056_p2 = ((tmp_46_fu_3024_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs8_fu_3128_p2 = ((tmp_53_fu_3097_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs9_fu_3146_p2 = ((tmp_120_fu_3114_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs_fu_2768_p2 = ((tmp_17_fu_2737_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs1_fu_2792_p2 = ((tmp_132_fu_2764_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs2_fu_2863_p2 = ((tmp_133_fu_2835_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs3_fu_2881_p2 = ((tmp_134_fu_2853_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs4_fu_2955_p2 = ((tmp_135_fu_2927_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs5_fu_2973_p2 = ((tmp_136_fu_2945_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs6_fu_3044_p2 = ((tmp_137_fu_3016_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs7_fu_3062_p2 = ((tmp_138_fu_3034_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs8_fu_3134_p2 = ((tmp_139_fu_3107_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs9_fu_3152_p2 = ((tmp_140_fu_3124_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_2774_p2 = ((tmp_122_fu_2747_p1 == 23'd0) ? 1'b1 : 1'b0);

assign tmp_104_fu_3231_p2 = ((tmp_96_fu_3226_p1 < dense_2_output_numel_2_reg_4006) ? 1'b1 : 1'b0);

assign tmp_120_fu_3114_p4 = {{xmax_4_to_int_fu_3111_p1[30:23]}};

assign tmp_122_fu_2747_p1 = dense_2_output_array_5_fu_2733_p1[22:0];

assign tmp_123_fu_3140_p2 = (notrhs8_fu_3134_p2 | notlhs8_fu_3128_p2);

assign tmp_128_fu_3158_p2 = (notrhs9_fu_3152_p2 | notlhs9_fu_3146_p2);

assign tmp_129_fu_3164_p2 = (tmp_128_fu_3158_p2 & tmp_123_fu_3140_p2);

assign tmp_131_fu_3170_p2 = (tmp_130_reg_3885 & tmp_129_fu_3164_p2);

assign tmp_132_fu_2764_p1 = xmax_to_int_fu_2751_p1[22:0];

assign tmp_133_fu_2835_p1 = dense_2_output_array_7_fu_2822_p1[22:0];

assign tmp_134_fu_2853_p1 = xmax_1_to_int_fu_2839_p1[22:0];

assign tmp_135_fu_2927_p1 = dense_2_output_array_9_fu_2913_p1[22:0];

assign tmp_136_fu_2945_p1 = xmax_2_to_int_fu_2931_p1[22:0];

assign tmp_137_fu_3016_p1 = dense_2_output_array_11_fu_3003_p1[22:0];

assign tmp_138_fu_3034_p1 = xmax_3_to_int_fu_3020_p1[22:0];

assign tmp_139_fu_3107_p1 = dense_2_output_array_1_fu_3094_p1[22:0];

assign tmp_140_fu_3124_p1 = xmax_4_to_int_fu_3111_p1[22:0];

assign tmp_17_fu_2737_p4 = {{dense_2_output_array_5_fu_2733_p1[30:23]}};

assign tmp_19_fu_2754_p4 = {{xmax_to_int_fu_2751_p1[30:23]}};

assign tmp_21_fu_2780_p2 = (notrhs_fu_2774_p2 | notlhs_fu_2768_p2);

assign tmp_22_fu_2798_p2 = (notrhs1_fu_2792_p2 | notlhs1_fu_2786_p2);

assign tmp_23_fu_2804_p2 = (tmp_22_fu_2798_p2 & tmp_21_fu_2780_p2);

assign tmp_25_fu_2810_p2 = (tmp_23_fu_2804_p2 & grp_fu_2000_p2);

assign tmp_26_fu_2825_p4 = {{dense_2_output_array_7_fu_2822_p1[30:23]}};

assign tmp_28_fu_2843_p4 = {{xmax_1_to_int_fu_2839_p1[30:23]}};

assign tmp_30_fu_2869_p2 = (notrhs2_fu_2863_p2 | notlhs2_fu_2857_p2);

assign tmp_31_fu_2887_p2 = (notrhs3_fu_2881_p2 | notlhs3_fu_2875_p2);

assign tmp_32_fu_2893_p2 = (tmp_31_fu_2887_p2 & tmp_30_fu_2869_p2);

assign tmp_34_fu_2899_p2 = (tmp_32_fu_2893_p2 & grp_fu_2000_p2);

assign tmp_35_fu_2917_p4 = {{dense_2_output_array_9_fu_2913_p1[30:23]}};

assign tmp_37_fu_2935_p4 = {{xmax_2_to_int_fu_2931_p1[30:23]}};

assign tmp_39_fu_2961_p2 = (notrhs4_fu_2955_p2 | notlhs4_fu_2949_p2);

assign tmp_40_fu_2979_p2 = (notrhs5_fu_2973_p2 | notlhs5_fu_2967_p2);

assign tmp_41_fu_2985_p2 = (tmp_40_fu_2979_p2 & tmp_39_fu_2961_p2);

assign tmp_43_fu_2991_p2 = (tmp_41_fu_2985_p2 & grp_fu_2005_p2);

assign tmp_44_fu_3006_p4 = {{dense_2_output_array_11_fu_3003_p1[30:23]}};

assign tmp_46_fu_3024_p4 = {{xmax_3_to_int_fu_3020_p1[30:23]}};

assign tmp_48_fu_3050_p2 = (notrhs6_fu_3044_p2 | notlhs6_fu_3038_p2);

assign tmp_49_fu_3068_p2 = (notrhs7_fu_3062_p2 | notlhs7_fu_3056_p2);

assign tmp_50_fu_3074_p2 = (tmp_49_fu_3068_p2 & tmp_48_fu_3050_p2);

assign tmp_52_fu_3080_p2 = (tmp_50_fu_3074_p2 & grp_fu_2000_p2);

assign tmp_53_fu_3097_p4 = {{dense_2_output_array_1_fu_3094_p1[30:23]}};

assign tmp_55_fu_2074_p2 = ((invdar_reg_1469 == 19'd262199) ? 1'b1 : 1'b0);

assign tmp_56_fu_2092_p1 = j_1_reg_1480;

assign tmp_57_fu_2120_p1 = invdar1_reg_1502;

assign tmp_58_fu_2109_p1 = j_2_reg_1491;

assign tmp_59_fu_2125_p2 = ((invdar1_reg_1502 == 19'd264821) ? 1'b1 : 1'b0);

assign tmp_60_fu_2155_p1 = j_3_reg_1513;

assign tmp_61_fu_2172_p1 = j_4_reg_1524;

assign tmp_62_fu_2189_p1 = j_5_reg_1535;

assign tmp_63_fu_2206_p1 = j_6_reg_1546;

assign tmp_64_fu_2223_p1 = j_7_reg_1557;

assign tmp_65_fu_2246_p1 = j_8_reg_1568;

assign tmp_66_fu_2275_p1 = j_9_reg_1579;

assign tmp_67_fu_2309_p1 = invdar2_reg_1601;

assign tmp_68_fu_2298_p1 = j_s_reg_1590;

assign tmp_69_fu_2314_p2 = ((invdar2_reg_1601 == 11'd1099) ? 1'b1 : 1'b0);

assign tmp_70_fu_2338_p1 = j_10_reg_1612;

assign tmp_71_fu_2355_p1 = j_11_reg_1623;

assign tmp_72_fu_2372_p1 = j_12_reg_1634;

assign tmp_73_fu_2389_p1 = j_13_reg_1645;

assign tmp_74_fu_2406_p1 = j_14_reg_1656;

assign tmp_75_fu_2435_p1 = j_15_reg_1667;

assign tmp_76_fu_2464_p1 = j_16_reg_1678;

assign tmp_77_fu_2498_p1 = invdar3_reg_1700;

assign tmp_78_fu_2487_p1 = j_17_reg_1689;

assign tmp_79_fu_2503_p2 = ((invdar3_reg_1700 == 7'd69) ? 1'b1 : 1'b0);

assign tmp_82_fu_2555_p1 = j_19_reg_1733;

assign tmp_83_fu_2550_p1 = j_18_reg_1722;

assign tmp_84_fu_2560_p2 = ((tmp_82_fu_2555_p1 < batch_normalization_53_reg_3606) ? 1'b1 : 1'b0);

assign tmp_85_fu_2593_p1 = j_21_reg_1755;

assign tmp_86_fu_2583_p1 = j_20_reg_1744;

assign tmp_87_fu_2598_p2 = ((tmp_85_fu_2593_p1 < batch_normalization_53_reg_3606) ? 1'b1 : 1'b0);

assign tmp_90_fu_2678_p1 = j_23_reg_1788;

assign tmp_91_fu_2661_p1 = j_22_reg_1777;

assign tmp_93_fu_2728_p1 = j_25_reg_1810;

assign tmp_94_fu_2706_p1 = j_24_reg_1799;

assign tmp_96_fu_3226_p1 = j_27_reg_1821;

assign tmp_fu_2058_p1 = j_reg_1458;

assign tmp_s_fu_2069_p1 = invdar_reg_1469;

assign xmax_1_fu_2816_p3 = ((tmp_25_reg_3835[0:0] === 1'b1) ? dense_2_output_array_4_reg_3829 : xmax_reg_3821);

assign xmax_1_to_int_fu_2839_p1 = xmax_1_fu_2816_p3;

assign xmax_2_fu_2905_p3 = ((tmp_34_fu_2899_p2[0:0] === 1'b1) ? dense_2_output_array_6_reg_3840 : xmax_1_fu_2816_p3);

assign xmax_2_to_int_fu_2931_p1 = xmax_2_fu_2905_p3;

assign xmax_3_fu_2997_p3 = ((tmp_43_reg_3859[0:0] === 1'b1) ? dense_2_output_array_8_reg_3853 : xmax_2_reg_3848);

assign xmax_3_to_int_fu_3020_p1 = xmax_3_fu_2997_p3;

assign xmax_4_fu_3086_p3 = ((tmp_52_fu_3080_p2[0:0] === 1'b1) ? dense_2_output_array_10_reg_3864 : xmax_3_fu_2997_p3);

assign xmax_4_to_int_fu_3111_p1 = xmax_4_reg_3872;

assign xmax_5_fu_3175_p3 = ((tmp_131_fu_3170_p2[0:0] === 1'b1) ? dense_2_output_array_12_reg_3878 : xmax_4_reg_3872);

assign xmax_to_int_fu_2751_p1 = xmax_reg_3821;

always @ (posedge ap_clk) begin
    dense_output_numel[1:0] <= 2'b00;
    dense_output_numel[4:3] <= 2'b00;
    dense_output_numel[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    batch_normalization_1[63:1] <= 63'b000000000000000000000000000000000000000000000000000000000000000;
    batch_normalization_3[1:0] <= 2'b00;
    batch_normalization_3[4:3] <= 2'b00;
    batch_normalization_3[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    dense_1_output_numel[0] <= 1'b0;
    dense_1_output_numel[2:2] <= 1'b0;
    dense_1_output_numel[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    dense_1_kernel_ndim[0] <= 1'b0;
    dense_1_kernel_ndim[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    dense_1_kernel_numel[2:0] <= 3'b000;
    dense_1_kernel_numel[4:4] <= 1'b0;
    dense_1_kernel_numel[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    dense_1_bias_numel[0] <= 1'b0;
    dense_1_bias_numel[2:2] <= 1'b0;
    dense_1_bias_numel[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    dense_2_output_numel[0] <= 1'b0;
    dense_2_output_numel[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    dense_2_kernel_ndim[0] <= 1'b0;
    dense_2_kernel_ndim[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    dense_2_kernel_numel[1:0] <= 2'b00;
    dense_2_kernel_numel[6] <= 1'b0;
    dense_2_bias_numel[0] <= 1'b0;
    dense_2_bias_numel[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    dropout_3_output_ndi[63:1] <= 63'b000000000000000000000000000000000000000000000000000000000000000;
    dropout_3_output_num[0] <= 1'b0;
    dropout_3_output_num[2:2] <= 1'b0;
    dropout_3_output_num[4] <= 1'b0;
    reg_2027[0] <= 1'b0;
    reg_2027[2:2] <= 1'b0;
    reg_2027[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_s_reg_3265[63:19] <= 45'b000000000000000000000000000000000000000000000;
    tmp_56_reg_3288[63:19] <= 45'b000000000000000000000000000000000000000000000;
    tmp_58_reg_3307[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    tmp_61_reg_3342[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    tmp_62_reg_3361[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    tmp_63_reg_3380[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    tmp_64_reg_3399[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    tmp_66_reg_3426[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    tmp_68_reg_3445[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_71_reg_3480[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_72_reg_3499[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_73_reg_3518[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_74_reg_3537[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_76_reg_3564[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_78_reg_3583[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    batch_normalization_53_reg_3606[1:0] <= 2'b00;
    batch_normalization_53_reg_3606[4:3] <= 2'b00;
    batch_normalization_53_reg_3606[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    batch_normalization_56_reg_3629[63:1] <= 63'b000000000000000000000000000000000000000000000000000000000000000;
    tmp_83_reg_3643[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    tmp_82_reg_3653[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    tmp_86_reg_3681[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    tmp_85_reg_3691[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    batch_normalization_61_reg_3734[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter1_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter2_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter3_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter4_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter5_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter6_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter7_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter8_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter9_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter10_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter11_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter12_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter13_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter14_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter15_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter16_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter17_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter18_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter19_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter20_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter21_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter22_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter23_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter24_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter25_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter26_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter27_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter28_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter29_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter30_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter31_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter32_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3734_pp24_iter33_reg[11:4] <= 8'b00000000;
    extLd2_reg_3740[63:1] <= 63'b000000000000000000000000000000000000000000000000000000000000000;
    tmp_91_reg_3754[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    tmp_90_reg_3773[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_94_reg_3792[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    tmp_93_reg_3811[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    dense_2_output_numel_2_reg_4006[0] <= 1'b0;
    dense_2_output_numel_2_reg_4006[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
end

endmodule //face_classifier_c
