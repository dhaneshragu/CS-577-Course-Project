-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity generic_tanh_float_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    t_in : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of generic_tanh_float_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_40000000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    constant ap_const_lv32_41B00000 : STD_LOGIC_VECTOR (31 downto 0) := "01000001101100000000000000000000";
    constant ap_const_lv64_BFF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_48 : STD_LOGIC_VECTOR (7 downto 0) := "01001000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_60 : STD_LOGIC_VECTOR (7 downto 0) := "01100000";
    constant ap_const_lv32_7FFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "01111111111111111111111111111111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal expx_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_109_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_160 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_344 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_344_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_348 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_348_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_352 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_352_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_356 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_356_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_reg_360 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_reg_360_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_126_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_165 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_344_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_348_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_352_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_356_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_reg_360_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_339 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_339_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_339_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_339_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_339_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_339_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_221_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_344_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_344_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_344_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_fu_227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_348_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_348_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_348_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_352_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_352_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_352_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_139_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_356_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_356_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_356_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_fu_245_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_reg_360_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_reg_360_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_reg_360_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_2_fu_262_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_2_reg_364 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_fu_284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_370 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_370_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_370_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_44_fu_290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_44_reg_374 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_44_reg_374_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_44_reg_374_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal resultf_fu_121_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_378 : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_378_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_378_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_378_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_378_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_fu_155_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_reg_383 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_reg_383_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_reg_383_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_reg_383_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_reg_383_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_exp_generic_double_s_fu_89_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_121_i_reg_388 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_60_fu_306_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_fu_311_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_exp_generic_double_s_fu_89_ap_start : STD_LOGIC;
    signal grp_exp_generic_double_s_fu_89_ap_done : STD_LOGIC;
    signal grp_exp_generic_double_s_fu_89_ap_idle : STD_LOGIC;
    signal grp_exp_generic_double_s_fu_89_ap_ready : STD_LOGIC;
    signal grp_exp_generic_double_s_fu_89_ap_ce : STD_LOGIC;
    signal ap_predicate_op43_call_state2 : BOOLEAN;
    signal ap_phi_mux_expx_phi_fu_62_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_123_i_fu_131_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_expx_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_expx_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_expx_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_expx_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_resultf_4_phi_fu_76_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter4_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter5_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter6_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_2_fu_115_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_exp_generic_double_s_fu_89_ap_start_reg : STD_LOGIC := '0';
    signal ap_predicate_op43_call_state2_state1 : BOOLEAN;
    signal xd_fu_135_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_100_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_59_fu_257_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal abst_in_fu_211_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_100_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_100_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_126_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_122_i_fu_144_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal loc_V_1_fu_193_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Val2_s_fu_171_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_199_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_9_fu_203_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_fu_183_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_55_fu_233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_fu_150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_117_neg_fu_251_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_1_fu_104_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_fu_270_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_2_fu_274_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_118_to_int_fu_296_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_118_neg_fu_300_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_122_to_int_fu_318_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_122_neg_fu_322_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_64_fu_328_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_100_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal grp_fu_126_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to5 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_300 : BOOLEAN;
    signal ap_condition_307 : BOOLEAN;
    signal ap_condition_68 : BOOLEAN;
    signal ap_condition_346 : BOOLEAN;
    signal ap_condition_324 : BOOLEAN;
    signal ap_condition_130 : BOOLEAN;
    signal ap_condition_113 : BOOLEAN;
    signal ap_condition_282 : BOOLEAN;
    signal ap_condition_79 : BOOLEAN;
    signal ap_condition_200 : BOOLEAN;
    signal ap_condition_173 : BOOLEAN;
    signal ap_condition_518 : BOOLEAN;
    signal ap_condition_25 : BOOLEAN;
    signal ap_condition_653 : BOOLEAN;

    component exp_generic_double_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        x : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component face_classifier_cibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component face_classifier_cbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component face_classifier_cpcA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component face_classifier_ccud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component face_classifier_cjbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component face_classifier_cqcK IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component face_classifier_crcU IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component face_classifier_csc4 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component face_classifier_ctde IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_exp_generic_double_s_fu_89 : component exp_generic_double_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_exp_generic_double_s_fu_89_ap_start,
        ap_done => grp_exp_generic_double_s_fu_89_ap_done,
        ap_idle => grp_exp_generic_double_s_fu_89_ap_idle,
        ap_ready => grp_exp_generic_double_s_fu_89_ap_ready,
        ap_ce => grp_exp_generic_double_s_fu_89_ap_ce,
        x => xd_fu_135_p1,
        ap_return => grp_exp_generic_double_s_fu_89_ap_return);

    face_classifier_cibs_U67 : component face_classifier_cibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_100_p0,
        din1 => grp_fu_100_p1,
        opcode => grp_fu_100_opcode,
        dout => grp_fu_100_p2);

    face_classifier_cbkb_U68 : component face_classifier_cbkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => abst_in_fu_211_p1,
        din1 => abst_in_fu_211_p1,
        dout => x_1_fu_104_p2);

    face_classifier_cbkb_U69 : component face_classifier_cbkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => ap_phi_mux_expx_phi_fu_62_p6,
        din1 => ap_const_lv32_40000000,
        dout => grp_fu_109_p2);

    face_classifier_cpcA_U70 : component face_classifier_cpcA
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_3F800000,
        din1 => reg_165,
        dout => resultf_2_fu_115_p2);

    face_classifier_ccud_U71 : component face_classifier_ccud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => abst_in_fu_211_p1,
        din1 => grp_fu_100_p2,
        dout => resultf_fu_121_p2);

    face_classifier_cjbC_U72 : component face_classifier_cjbC
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_126_p0,
        din1 => reg_160,
        ce => grp_fu_126_ce,
        dout => grp_fu_126_p2);

    face_classifier_cqcK_U73 : component face_classifier_cqcK
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_122_i_fu_144_p2,
        dout => tmp_123_i_fu_131_p1);

    face_classifier_crcU_U74 : component face_classifier_crcU
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => x_2_reg_364,
        dout => xd_fu_135_p1);

    face_classifier_csc4_U75 : component face_classifier_csc4
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => abst_in_fu_211_p1,
        din1 => ap_const_lv32_41B00000,
        opcode => ap_const_lv5_4,
        dout => tmp_18_fu_139_p2);

    face_classifier_ctde_U76 : component face_classifier_ctde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        din0 => tmp_121_i_reg_388,
        din1 => ap_const_lv64_BFF0000000000000,
        dout => tmp_122_i_fu_144_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    grp_exp_generic_double_s_fu_89_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_exp_generic_double_s_fu_89_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_predicate_op43_call_state2_state1 = ap_const_boolean_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_exp_generic_double_s_fu_89_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_exp_generic_double_s_fu_89_ap_ready = ap_const_logic_1)) then 
                    grp_exp_generic_double_s_fu_89_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_expx_reg_58_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_68)) then
                if ((ap_const_boolean_1 = ap_condition_307)) then 
                    ap_phi_reg_pp0_iter1_expx_reg_58 <= x_2_fu_262_p3;
                elsif ((ap_const_boolean_1 = ap_condition_300)) then 
                    ap_phi_reg_pp0_iter1_expx_reg_58 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_expx_reg_58 <= ap_phi_reg_pp0_iter0_expx_reg_58;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_resultf_4_reg_72_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_68)) then
                if ((ap_const_boolean_1 = ap_condition_346)) then 
                    ap_phi_reg_pp0_iter1_resultf_4_reg_72 <= ap_const_lv32_3F800000;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_resultf_4_reg_72 <= ap_phi_reg_pp0_iter0_resultf_4_reg_72;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter6_resultf_4_reg_72_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_113)) then
                if ((tmp_s_reg_344_pp0_iter4_reg = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter6_resultf_4_reg_72 <= p_1_fu_311_p3;
                elsif ((ap_const_boolean_1 = ap_condition_130)) then 
                    ap_phi_reg_pp0_iter6_resultf_4_reg_72 <= grp_fu_126_p2;
                elsif ((ap_const_boolean_1 = ap_condition_324)) then 
                    ap_phi_reg_pp0_iter6_resultf_4_reg_72 <= resultf_reg_378_pp0_iter4_reg;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter6_resultf_4_reg_72 <= ap_phi_reg_pp0_iter5_resultf_4_reg_72;
                end if;
            end if; 
        end if;
    end process;

    expx_reg_58_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_79)) then
                if ((ap_const_boolean_1 = ap_condition_282)) then 
                    expx_reg_58 <= tmp_123_i_fu_131_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    expx_reg_58 <= ap_phi_reg_pp0_iter3_expx_reg_58;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter2_expx_reg_58 <= ap_phi_reg_pp0_iter1_expx_reg_58;
                ap_phi_reg_pp0_iter2_resultf_4_reg_72 <= ap_phi_reg_pp0_iter1_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter3_expx_reg_58 <= ap_phi_reg_pp0_iter2_expx_reg_58;
                ap_phi_reg_pp0_iter3_resultf_4_reg_72 <= ap_phi_reg_pp0_iter2_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter4_resultf_4_reg_72 <= ap_phi_reg_pp0_iter3_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter5_resultf_4_reg_72 <= ap_phi_reg_pp0_iter4_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_54_fu_227_p2 = ap_const_lv1_0) and (tmp_s_fu_221_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                or_cond_reg_352 <= or_cond_fu_239_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                or_cond_reg_352_pp0_iter1_reg <= or_cond_reg_352;
                p_Result_s_reg_339 <= p_Val2_s_fu_171_p1(31 downto 31);
                p_Result_s_reg_339_pp0_iter1_reg <= p_Result_s_reg_339;
                resultf_reg_378_pp0_iter1_reg <= resultf_reg_378;
                tmp_18_reg_356_pp0_iter1_reg <= tmp_18_reg_356;
                tmp_53_reg_383_pp0_iter1_reg <= tmp_53_reg_383;
                tmp_54_reg_348_pp0_iter1_reg <= tmp_54_reg_348;
                tmp_58_reg_360_pp0_iter1_reg <= tmp_58_reg_360;
                tmp_i_44_reg_374_pp0_iter1_reg <= tmp_i_44_reg_374;
                tmp_i_reg_370_pp0_iter1_reg <= tmp_i_reg_370;
                tmp_s_reg_344 <= tmp_s_fu_221_p2;
                tmp_s_reg_344_pp0_iter1_reg <= tmp_s_reg_344;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                or_cond_reg_352_pp0_iter2_reg <= or_cond_reg_352_pp0_iter1_reg;
                or_cond_reg_352_pp0_iter3_reg <= or_cond_reg_352_pp0_iter2_reg;
                or_cond_reg_352_pp0_iter4_reg <= or_cond_reg_352_pp0_iter3_reg;
                or_cond_reg_352_pp0_iter5_reg <= or_cond_reg_352_pp0_iter4_reg;
                p_Result_s_reg_339_pp0_iter2_reg <= p_Result_s_reg_339_pp0_iter1_reg;
                p_Result_s_reg_339_pp0_iter3_reg <= p_Result_s_reg_339_pp0_iter2_reg;
                p_Result_s_reg_339_pp0_iter4_reg <= p_Result_s_reg_339_pp0_iter3_reg;
                p_Result_s_reg_339_pp0_iter5_reg <= p_Result_s_reg_339_pp0_iter4_reg;
                resultf_reg_378_pp0_iter2_reg <= resultf_reg_378_pp0_iter1_reg;
                resultf_reg_378_pp0_iter3_reg <= resultf_reg_378_pp0_iter2_reg;
                resultf_reg_378_pp0_iter4_reg <= resultf_reg_378_pp0_iter3_reg;
                tmp_18_reg_356_pp0_iter2_reg <= tmp_18_reg_356_pp0_iter1_reg;
                tmp_18_reg_356_pp0_iter3_reg <= tmp_18_reg_356_pp0_iter2_reg;
                tmp_18_reg_356_pp0_iter4_reg <= tmp_18_reg_356_pp0_iter3_reg;
                tmp_18_reg_356_pp0_iter5_reg <= tmp_18_reg_356_pp0_iter4_reg;
                tmp_53_reg_383_pp0_iter2_reg <= tmp_53_reg_383_pp0_iter1_reg;
                tmp_53_reg_383_pp0_iter3_reg <= tmp_53_reg_383_pp0_iter2_reg;
                tmp_53_reg_383_pp0_iter4_reg <= tmp_53_reg_383_pp0_iter3_reg;
                tmp_54_reg_348_pp0_iter2_reg <= tmp_54_reg_348_pp0_iter1_reg;
                tmp_54_reg_348_pp0_iter3_reg <= tmp_54_reg_348_pp0_iter2_reg;
                tmp_54_reg_348_pp0_iter4_reg <= tmp_54_reg_348_pp0_iter3_reg;
                tmp_54_reg_348_pp0_iter5_reg <= tmp_54_reg_348_pp0_iter4_reg;
                tmp_58_reg_360_pp0_iter2_reg <= tmp_58_reg_360_pp0_iter1_reg;
                tmp_58_reg_360_pp0_iter3_reg <= tmp_58_reg_360_pp0_iter2_reg;
                tmp_58_reg_360_pp0_iter4_reg <= tmp_58_reg_360_pp0_iter3_reg;
                tmp_58_reg_360_pp0_iter5_reg <= tmp_58_reg_360_pp0_iter4_reg;
                tmp_i_44_reg_374_pp0_iter2_reg <= tmp_i_44_reg_374_pp0_iter1_reg;
                tmp_i_reg_370_pp0_iter2_reg <= tmp_i_reg_370_pp0_iter1_reg;
                tmp_s_reg_344_pp0_iter2_reg <= tmp_s_reg_344_pp0_iter1_reg;
                tmp_s_reg_344_pp0_iter3_reg <= tmp_s_reg_344_pp0_iter2_reg;
                tmp_s_reg_344_pp0_iter4_reg <= tmp_s_reg_344_pp0_iter3_reg;
                tmp_s_reg_344_pp0_iter5_reg <= tmp_s_reg_344_pp0_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_18_reg_356_pp0_iter2_reg = ap_const_lv1_1) and (tmp_58_reg_360_pp0_iter2_reg = ap_const_lv1_0) and (or_cond_reg_352_pp0_iter2_reg = ap_const_lv1_0) and (tmp_54_reg_348_pp0_iter2_reg = ap_const_lv1_0) and (tmp_s_reg_344_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((tmp_58_reg_360_pp0_iter2_reg = ap_const_lv1_1) and (tmp_18_reg_356_pp0_iter2_reg = ap_const_lv1_1) and (or_cond_reg_352_pp0_iter2_reg = ap_const_lv1_0) and (tmp_54_reg_348_pp0_iter2_reg = ap_const_lv1_0) and (tmp_s_reg_344_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then
                reg_160 <= grp_fu_109_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_58_reg_360_pp0_iter4_reg = ap_const_lv1_1) and (tmp_18_reg_356_pp0_iter4_reg = ap_const_lv1_1) and (or_cond_reg_352_pp0_iter4_reg = ap_const_lv1_0) and (tmp_54_reg_348_pp0_iter4_reg = ap_const_lv1_0) and (tmp_s_reg_344_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((tmp_18_reg_356_pp0_iter4_reg = ap_const_lv1_1) and (tmp_58_reg_360_pp0_iter4_reg = ap_const_lv1_0) and (or_cond_reg_352_pp0_iter4_reg = ap_const_lv1_0) and (tmp_54_reg_348_pp0_iter4_reg = ap_const_lv1_0) and (tmp_s_reg_344_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)))) then
                reg_165 <= grp_fu_126_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (((or_cond_fu_239_p2 = ap_const_lv1_1) and (tmp_s_fu_221_p2 = ap_const_lv1_0)) or ((tmp_54_fu_227_p2 = ap_const_lv1_1) and (tmp_s_fu_221_p2 = ap_const_lv1_0))))) then
                resultf_reg_378 <= resultf_fu_121_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_18_reg_356_pp0_iter1_reg = ap_const_lv1_1) and (tmp_i_44_reg_374_pp0_iter1_reg = ap_const_lv1_0) and (tmp_i_reg_370_pp0_iter1_reg = ap_const_lv1_0) and (or_cond_reg_352_pp0_iter1_reg = ap_const_lv1_0) and (tmp_54_reg_348_pp0_iter1_reg = ap_const_lv1_0) and (tmp_s_reg_344_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_121_i_reg_388 <= grp_exp_generic_double_s_fu_89_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_fu_239_p2 = ap_const_lv1_0) and (tmp_54_fu_227_p2 = ap_const_lv1_0) and (tmp_s_fu_221_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_18_reg_356 <= tmp_18_fu_139_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_fu_221_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_53_reg_383 <= tmp_53_fu_155_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_fu_221_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_54_reg_348 <= tmp_54_fu_227_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_18_fu_139_p2 = ap_const_lv1_1) and (or_cond_fu_239_p2 = ap_const_lv1_0) and (tmp_54_fu_227_p2 = ap_const_lv1_0) and (tmp_s_fu_221_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_58_reg_360 <= tmp_58_fu_245_p2;
                tmp_i_reg_370 <= tmp_i_fu_284_p2;
                x_2_reg_364 <= x_2_fu_262_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_18_fu_139_p2 = ap_const_lv1_1) and (tmp_i_fu_284_p2 = ap_const_lv1_0) and (or_cond_fu_239_p2 = ap_const_lv1_0) and (tmp_54_fu_227_p2 = ap_const_lv1_0) and (tmp_s_fu_221_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_i_44_reg_374 <= tmp_i_44_fu_290_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    abst_in_fu_211_p1 <= p_Result_9_fu_203_p3;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_00001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_00001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_113_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001, ap_ce)
    begin
                ap_condition_113 <= ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1));
    end process;


    ap_condition_130_assign_proc : process(tmp_s_reg_344_pp0_iter4_reg, tmp_54_reg_348_pp0_iter4_reg, or_cond_reg_352_pp0_iter4_reg, tmp_18_reg_356_pp0_iter4_reg, tmp_58_reg_360_pp0_iter4_reg)
    begin
                ap_condition_130 <= ((tmp_58_reg_360_pp0_iter4_reg = ap_const_lv1_1) and (tmp_18_reg_356_pp0_iter4_reg = ap_const_lv1_1) and (or_cond_reg_352_pp0_iter4_reg = ap_const_lv1_0) and (tmp_54_reg_348_pp0_iter4_reg = ap_const_lv1_0) and (tmp_s_reg_344_pp0_iter4_reg = ap_const_lv1_0));
    end process;


    ap_condition_173_assign_proc : process(tmp_s_fu_221_p2, tmp_54_fu_227_p2, or_cond_fu_239_p2, tmp_18_fu_139_p2)
    begin
                ap_condition_173 <= ((tmp_18_fu_139_p2 = ap_const_lv1_1) and (or_cond_fu_239_p2 = ap_const_lv1_0) and (tmp_54_fu_227_p2 = ap_const_lv1_0) and (tmp_s_fu_221_p2 = ap_const_lv1_0));
    end process;


    ap_condition_200_assign_proc : process(tmp_s_fu_221_p2, tmp_54_fu_227_p2, or_cond_fu_239_p2)
    begin
                ap_condition_200 <= (((or_cond_fu_239_p2 = ap_const_lv1_1) and (tmp_s_fu_221_p2 = ap_const_lv1_0)) or ((tmp_54_fu_227_p2 = ap_const_lv1_1) and (tmp_s_fu_221_p2 = ap_const_lv1_0)));
    end process;


    ap_condition_25_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
                ap_condition_25 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_282_assign_proc : process(tmp_s_reg_344_pp0_iter2_reg, tmp_54_reg_348_pp0_iter2_reg, or_cond_reg_352_pp0_iter2_reg, tmp_18_reg_356_pp0_iter2_reg, tmp_i_reg_370_pp0_iter2_reg, tmp_i_44_reg_374_pp0_iter2_reg)
    begin
                ap_condition_282 <= ((tmp_18_reg_356_pp0_iter2_reg = ap_const_lv1_1) and (or_cond_reg_352_pp0_iter2_reg = ap_const_lv1_0) and (tmp_54_reg_348_pp0_iter2_reg = ap_const_lv1_0) and (tmp_i_44_reg_374_pp0_iter2_reg = ap_const_lv1_0) and (tmp_i_reg_370_pp0_iter2_reg = ap_const_lv1_0) and (tmp_s_reg_344_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_condition_300_assign_proc : process(tmp_s_fu_221_p2, tmp_54_fu_227_p2, or_cond_fu_239_p2, tmp_18_fu_139_p2, tmp_i_fu_284_p2)
    begin
                ap_condition_300 <= ((tmp_i_fu_284_p2 = ap_const_lv1_1) and (tmp_18_fu_139_p2 = ap_const_lv1_1) and (or_cond_fu_239_p2 = ap_const_lv1_0) and (tmp_54_fu_227_p2 = ap_const_lv1_0) and (tmp_s_fu_221_p2 = ap_const_lv1_0));
    end process;


    ap_condition_307_assign_proc : process(tmp_s_fu_221_p2, tmp_54_fu_227_p2, or_cond_fu_239_p2, tmp_18_fu_139_p2, tmp_i_fu_284_p2, tmp_i_44_fu_290_p2)
    begin
                ap_condition_307 <= ((tmp_i_44_fu_290_p2 = ap_const_lv1_1) and (tmp_18_fu_139_p2 = ap_const_lv1_1) and (tmp_i_fu_284_p2 = ap_const_lv1_0) and (or_cond_fu_239_p2 = ap_const_lv1_0) and (tmp_54_fu_227_p2 = ap_const_lv1_0) and (tmp_s_fu_221_p2 = ap_const_lv1_0));
    end process;


    ap_condition_324_assign_proc : process(tmp_s_reg_344_pp0_iter4_reg, tmp_54_reg_348_pp0_iter4_reg, or_cond_reg_352_pp0_iter4_reg)
    begin
                ap_condition_324 <= (((or_cond_reg_352_pp0_iter4_reg = ap_const_lv1_1) and (tmp_s_reg_344_pp0_iter4_reg = ap_const_lv1_0)) or ((tmp_54_reg_348_pp0_iter4_reg = ap_const_lv1_1) and (tmp_s_reg_344_pp0_iter4_reg = ap_const_lv1_0)));
    end process;


    ap_condition_346_assign_proc : process(tmp_s_fu_221_p2, tmp_54_fu_227_p2, or_cond_fu_239_p2, tmp_18_fu_139_p2)
    begin
                ap_condition_346 <= ((tmp_18_fu_139_p2 = ap_const_lv1_0) and (or_cond_fu_239_p2 = ap_const_lv1_0) and (tmp_54_fu_227_p2 = ap_const_lv1_0) and (tmp_s_fu_221_p2 = ap_const_lv1_0));
    end process;


    ap_condition_518_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_00001)
    begin
                ap_condition_518 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_653_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, tmp_s_reg_344_pp0_iter3_reg, tmp_54_reg_348_pp0_iter3_reg, or_cond_reg_352_pp0_iter3_reg, tmp_18_reg_356_pp0_iter3_reg)
    begin
                ap_condition_653 <= ((tmp_18_reg_356_pp0_iter3_reg = ap_const_lv1_1) and (or_cond_reg_352_pp0_iter3_reg = ap_const_lv1_0) and (tmp_54_reg_348_pp0_iter3_reg = ap_const_lv1_0) and (tmp_s_reg_344_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1));
    end process;


    ap_condition_68_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
                ap_condition_68 <= ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_79_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, ap_ce)
    begin
                ap_condition_79 <= ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to5_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to5 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_expx_phi_fu_62_p6_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, tmp_s_reg_344_pp0_iter2_reg, tmp_54_reg_348_pp0_iter2_reg, or_cond_reg_352_pp0_iter2_reg, tmp_18_reg_356_pp0_iter2_reg, tmp_i_reg_370_pp0_iter2_reg, tmp_i_44_reg_374_pp0_iter2_reg, tmp_123_i_fu_131_p1, ap_phi_reg_pp0_iter3_expx_reg_58)
    begin
        if (((tmp_18_reg_356_pp0_iter2_reg = ap_const_lv1_1) and (or_cond_reg_352_pp0_iter2_reg = ap_const_lv1_0) and (tmp_54_reg_348_pp0_iter2_reg = ap_const_lv1_0) and (tmp_i_44_reg_374_pp0_iter2_reg = ap_const_lv1_0) and (tmp_i_reg_370_pp0_iter2_reg = ap_const_lv1_0) and (tmp_s_reg_344_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_phi_mux_expx_phi_fu_62_p6 <= tmp_123_i_fu_131_p1;
        else 
            ap_phi_mux_expx_phi_fu_62_p6 <= ap_phi_reg_pp0_iter3_expx_reg_58;
        end if; 
    end process;


    ap_phi_mux_resultf_4_phi_fu_76_p10_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter6, tmp_s_reg_344_pp0_iter5_reg, tmp_54_reg_348_pp0_iter5_reg, or_cond_reg_352_pp0_iter5_reg, tmp_18_reg_356_pp0_iter5_reg, tmp_58_reg_360_pp0_iter5_reg, ap_phi_reg_pp0_iter6_resultf_4_reg_72, resultf_2_fu_115_p2)
    begin
        if (((tmp_18_reg_356_pp0_iter5_reg = ap_const_lv1_1) and (tmp_58_reg_360_pp0_iter5_reg = ap_const_lv1_0) and (or_cond_reg_352_pp0_iter5_reg = ap_const_lv1_0) and (tmp_54_reg_348_pp0_iter5_reg = ap_const_lv1_0) and (tmp_s_reg_344_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            ap_phi_mux_resultf_4_phi_fu_76_p10 <= resultf_2_fu_115_p2;
        else 
            ap_phi_mux_resultf_4_phi_fu_76_p10 <= ap_phi_reg_pp0_iter6_resultf_4_reg_72;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_expx_reg_58 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_resultf_4_reg_72 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op43_call_state2_assign_proc : process(tmp_s_reg_344, tmp_54_reg_348, or_cond_reg_352, tmp_18_reg_356, tmp_i_reg_370, tmp_i_44_reg_374)
    begin
                ap_predicate_op43_call_state2 <= ((tmp_18_reg_356 = ap_const_lv1_1) and (or_cond_reg_352 = ap_const_lv1_0) and (tmp_54_reg_348 = ap_const_lv1_0) and (tmp_i_44_reg_374 = ap_const_lv1_0) and (tmp_i_reg_370 = ap_const_lv1_0) and (tmp_s_reg_344 = ap_const_lv1_0));
    end process;


    ap_predicate_op43_call_state2_state1_assign_proc : process(tmp_s_fu_221_p2, tmp_54_fu_227_p2, or_cond_fu_239_p2, tmp_18_fu_139_p2, tmp_i_fu_284_p2, tmp_i_44_fu_290_p2)
    begin
                ap_predicate_op43_call_state2_state1 <= ((tmp_18_fu_139_p2 = ap_const_lv1_1) and (tmp_i_44_fu_290_p2 = ap_const_lv1_0) and (tmp_i_fu_284_p2 = ap_const_lv1_0) and (or_cond_fu_239_p2 = ap_const_lv1_0) and (tmp_54_fu_227_p2 = ap_const_lv1_0) and (tmp_s_fu_221_p2 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to5)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to5 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= 
        tmp_64_fu_328_p1 when (p_Result_s_reg_339_pp0_iter5_reg(0) = '1') else 
        ap_phi_mux_resultf_4_phi_fu_76_p10;

    grp_exp_generic_double_s_fu_89_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_exp_generic_double_s_fu_89_ap_ce <= ap_const_logic_1;
        else 
            grp_exp_generic_double_s_fu_89_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_exp_generic_double_s_fu_89_ap_start <= grp_exp_generic_double_s_fu_89_ap_start_reg;

    grp_fu_100_opcode_assign_proc : process(ap_condition_200, ap_condition_173, ap_condition_518)
    begin
        if ((ap_const_boolean_1 = ap_condition_518)) then
            if ((ap_const_boolean_1 = ap_condition_173)) then 
                grp_fu_100_opcode <= ap_const_lv2_1;
            elsif ((ap_const_boolean_1 = ap_condition_200)) then 
                grp_fu_100_opcode <= ap_const_lv2_0;
            else 
                grp_fu_100_opcode <= "XX";
            end if;
        else 
            grp_fu_100_opcode <= "XX";
        end if; 
    end process;


    grp_fu_100_p0_assign_proc : process(tmp_59_fu_257_p1, abst_in_fu_211_p1, ap_condition_200, ap_condition_173, ap_condition_25)
    begin
        if ((ap_const_boolean_1 = ap_condition_25)) then
            if ((ap_const_boolean_1 = ap_condition_200)) then 
                grp_fu_100_p0 <= abst_in_fu_211_p1;
            elsif ((ap_const_boolean_1 = ap_condition_173)) then 
                grp_fu_100_p0 <= tmp_59_fu_257_p1;
            else 
                grp_fu_100_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_100_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_100_p1_assign_proc : process(abst_in_fu_211_p1, ap_condition_200, ap_condition_173, ap_condition_25)
    begin
        if ((ap_const_boolean_1 = ap_condition_25)) then
            if ((ap_const_boolean_1 = ap_condition_200)) then 
                grp_fu_100_p1 <= ap_const_lv32_3F800000;
            elsif ((ap_const_boolean_1 = ap_condition_173)) then 
                grp_fu_100_p1 <= abst_in_fu_211_p1;
            else 
                grp_fu_100_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_100_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_126_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_126_ce <= ap_const_logic_1;
        else 
            grp_fu_126_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_126_p0_assign_proc : process(tmp_58_reg_360_pp0_iter3_reg, tmp_60_fu_306_p1, ap_condition_653)
    begin
        if ((ap_const_boolean_1 = ap_condition_653)) then
            if ((tmp_58_reg_360_pp0_iter3_reg = ap_const_lv1_1)) then 
                grp_fu_126_p0 <= tmp_60_fu_306_p1;
            elsif ((tmp_58_reg_360_pp0_iter3_reg = ap_const_lv1_0)) then 
                grp_fu_126_p0 <= ap_const_lv32_40000000;
            else 
                grp_fu_126_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_126_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    loc_V_1_fu_193_p1 <= p_Val2_s_fu_171_p1(23 - 1 downto 0);
    loc_V_2_fu_274_p4 <= p_Val2_3_fu_270_p1(30 downto 23);
    loc_V_fu_183_p4 <= p_Val2_s_fu_171_p1(30 downto 23);
    or_cond_fu_239_p2 <= (tmp_56_fu_150_p2 and tmp_55_fu_233_p2);
    p_1_fu_311_p3 <= 
        ap_const_lv32_3F800000 when (tmp_53_reg_383_pp0_iter4_reg(0) = '1') else 
        ap_const_lv32_7FFFFFFF;
    p_Result_9_fu_203_p3 <= (ap_const_lv1_0 & tmp_fu_199_p1);
    p_Val2_3_fu_270_p1 <= x_2_fu_262_p3;
    p_Val2_s_fu_171_p1 <= t_in;
    tmp_117_neg_fu_251_p2 <= (p_Result_9_fu_203_p3 xor ap_const_lv32_80000000);
    tmp_118_neg_fu_300_p2 <= (tmp_118_to_int_fu_296_p1 xor ap_const_lv32_80000000);
    tmp_118_to_int_fu_296_p1 <= expx_reg_58;
    tmp_122_neg_fu_322_p2 <= (tmp_122_to_int_fu_318_p1 xor ap_const_lv32_80000000);
    tmp_122_to_int_fu_318_p1 <= ap_phi_mux_resultf_4_phi_fu_76_p10;
    tmp_53_fu_155_p2 <= "1" when (loc_V_1_fu_193_p1 = ap_const_lv23_0) else "0";
    tmp_54_fu_227_p2 <= "1" when (unsigned(loc_V_fu_183_p4) < unsigned(ap_const_lv8_48)) else "0";
    tmp_55_fu_233_p2 <= "1" when (loc_V_fu_183_p4 = ap_const_lv8_48) else "0";
    tmp_56_fu_150_p2 <= "1" when (loc_V_1_fu_193_p1 = ap_const_lv23_0) else "0";
    tmp_58_fu_245_p2 <= "1" when (unsigned(loc_V_fu_183_p4) < unsigned(ap_const_lv8_7F)) else "0";
    tmp_59_fu_257_p1 <= tmp_117_neg_fu_251_p2;
    tmp_60_fu_306_p1 <= tmp_118_neg_fu_300_p2;
    tmp_64_fu_328_p1 <= tmp_122_neg_fu_322_p2;
    tmp_fu_199_p1 <= p_Val2_s_fu_171_p1(31 - 1 downto 0);
    tmp_i_44_fu_290_p2 <= "1" when (unsigned(loc_V_2_fu_274_p4) < unsigned(ap_const_lv8_60)) else "0";
    tmp_i_fu_284_p2 <= "1" when (loc_V_2_fu_274_p4 = ap_const_lv8_0) else "0";
    tmp_s_fu_221_p2 <= "1" when (loc_V_fu_183_p4 = ap_const_lv8_FF) else "0";
    x_2_fu_262_p3 <= 
        grp_fu_100_p2 when (tmp_58_fu_245_p2(0) = '1') else 
        x_1_fu_104_p2;
end behav;
