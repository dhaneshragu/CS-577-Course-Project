// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="face_classifier_c,hls_ip_2018_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xa7a12tcsg325-1q,HLS_INPUT_CLOCK=100.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=84.608600,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=24618,HLS_SYN_DSP=152,HLS_SYN_FF=36160,HLS_SYN_LUT=45329,HLS_VERSION=2018_2}" *)

module face_classifier_c (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        dense_input_input_array_address0,
        dense_input_input_array_ce0,
        dense_input_input_array_q0,
        dense_input_input_ndim,
        dense_input_input_numel,
        dense_input_input_shape_address0,
        dense_input_input_shape_ce0,
        dense_input_input_shape_q0,
        activation_3_output_array_address0,
        activation_3_output_array_ce0,
        activation_3_output_array_we0,
        activation_3_output_array_d0,
        activation_3_output_ndim,
        activation_3_output_ndim_ap_vld,
        activation_3_output_numel,
        activation_3_output_numel_ap_vld,
        activation_3_output_shape_address0,
        activation_3_output_shape_ce0,
        activation_3_output_shape_we0,
        activation_3_output_shape_d0
);

parameter    ap_ST_fsm_state1 = 99'd1;
parameter    ap_ST_fsm_state2 = 99'd2;
parameter    ap_ST_fsm_state3 = 99'd4;
parameter    ap_ST_fsm_state4 = 99'd8;
parameter    ap_ST_fsm_state5 = 99'd16;
parameter    ap_ST_fsm_state6 = 99'd32;
parameter    ap_ST_fsm_state7 = 99'd64;
parameter    ap_ST_fsm_state8 = 99'd128;
parameter    ap_ST_fsm_state9 = 99'd256;
parameter    ap_ST_fsm_pp2_stage0 = 99'd512;
parameter    ap_ST_fsm_state12 = 99'd1024;
parameter    ap_ST_fsm_state13 = 99'd2048;
parameter    ap_ST_fsm_state14 = 99'd4096;
parameter    ap_ST_fsm_state15 = 99'd8192;
parameter    ap_ST_fsm_state16 = 99'd16384;
parameter    ap_ST_fsm_state17 = 99'd32768;
parameter    ap_ST_fsm_pp4_stage0 = 99'd65536;
parameter    ap_ST_fsm_state20 = 99'd131072;
parameter    ap_ST_fsm_pp5_stage0 = 99'd262144;
parameter    ap_ST_fsm_state23 = 99'd524288;
parameter    ap_ST_fsm_pp6_stage0 = 99'd1048576;
parameter    ap_ST_fsm_state26 = 99'd2097152;
parameter    ap_ST_fsm_pp7_stage0 = 99'd4194304;
parameter    ap_ST_fsm_state29 = 99'd8388608;
parameter    ap_ST_fsm_state30 = 99'd16777216;
parameter    ap_ST_fsm_state31 = 99'd33554432;
parameter    ap_ST_fsm_state32 = 99'd67108864;
parameter    ap_ST_fsm_state33 = 99'd134217728;
parameter    ap_ST_fsm_state34 = 99'd268435456;
parameter    ap_ST_fsm_state35 = 99'd536870912;
parameter    ap_ST_fsm_pp9_stage0 = 99'd1073741824;
parameter    ap_ST_fsm_state38 = 99'd2147483648;
parameter    ap_ST_fsm_pp10_stage0 = 99'd4294967296;
parameter    ap_ST_fsm_state41 = 99'd8589934592;
parameter    ap_ST_fsm_state42 = 99'd17179869184;
parameter    ap_ST_fsm_state43 = 99'd34359738368;
parameter    ap_ST_fsm_state44 = 99'd68719476736;
parameter    ap_ST_fsm_state45 = 99'd137438953472;
parameter    ap_ST_fsm_state46 = 99'd274877906944;
parameter    ap_ST_fsm_pp12_stage0 = 99'd549755813888;
parameter    ap_ST_fsm_state49 = 99'd1099511627776;
parameter    ap_ST_fsm_pp13_stage0 = 99'd2199023255552;
parameter    ap_ST_fsm_state52 = 99'd4398046511104;
parameter    ap_ST_fsm_pp14_stage0 = 99'd8796093022208;
parameter    ap_ST_fsm_state55 = 99'd17592186044416;
parameter    ap_ST_fsm_pp15_stage0 = 99'd35184372088832;
parameter    ap_ST_fsm_state58 = 99'd70368744177664;
parameter    ap_ST_fsm_state59 = 99'd140737488355328;
parameter    ap_ST_fsm_state60 = 99'd281474976710656;
parameter    ap_ST_fsm_state61 = 99'd562949953421312;
parameter    ap_ST_fsm_state62 = 99'd1125899906842624;
parameter    ap_ST_fsm_state63 = 99'd2251799813685248;
parameter    ap_ST_fsm_state64 = 99'd4503599627370496;
parameter    ap_ST_fsm_pp17_stage0 = 99'd9007199254740992;
parameter    ap_ST_fsm_state67 = 99'd18014398509481984;
parameter    ap_ST_fsm_pp18_stage0 = 99'd36028797018963968;
parameter    ap_ST_fsm_state70 = 99'd72057594037927936;
parameter    ap_ST_fsm_state71 = 99'd144115188075855872;
parameter    ap_ST_fsm_state72 = 99'd288230376151711744;
parameter    ap_ST_fsm_state73 = 99'd576460752303423488;
parameter    ap_ST_fsm_state74 = 99'd1152921504606846976;
parameter    ap_ST_fsm_pp19_stage0 = 99'd2305843009213693952;
parameter    ap_ST_fsm_state83 = 99'd4611686018427387904;
parameter    ap_ST_fsm_pp20_stage0 = 99'd9223372036854775808;
parameter    ap_ST_fsm_state86 = 99'd18446744073709551616;
parameter    ap_ST_fsm_pp21_stage0 = 99'd36893488147419103232;
parameter    ap_ST_fsm_state89 = 99'd73786976294838206464;
parameter    ap_ST_fsm_pp22_stage0 = 99'd147573952589676412928;
parameter    ap_ST_fsm_state92 = 99'd295147905179352825856;
parameter    ap_ST_fsm_pp23_stage0 = 99'd590295810358705651712;
parameter    ap_ST_fsm_state95 = 99'd1180591620717411303424;
parameter    ap_ST_fsm_state96 = 99'd2361183241434822606848;
parameter    ap_ST_fsm_state97 = 99'd4722366482869645213696;
parameter    ap_ST_fsm_state98 = 99'd9444732965739290427392;
parameter    ap_ST_fsm_pp24_stage0 = 99'd18889465931478580854784;
parameter    ap_ST_fsm_state107 = 99'd37778931862957161709568;
parameter    ap_ST_fsm_pp25_stage0 = 99'd75557863725914323419136;
parameter    ap_ST_fsm_state110 = 99'd151115727451828646838272;
parameter    ap_ST_fsm_pp26_stage0 = 99'd302231454903657293676544;
parameter    ap_ST_fsm_state113 = 99'd604462909807314587353088;
parameter    ap_ST_fsm_pp27_stage0 = 99'd1208925819614629174706176;
parameter    ap_ST_fsm_state116 = 99'd2417851639229258349412352;
parameter    ap_ST_fsm_pp28_stage0 = 99'd4835703278458516698824704;
parameter    ap_ST_fsm_state119 = 99'd9671406556917033397649408;
parameter    ap_ST_fsm_state120 = 99'd19342813113834066795298816;
parameter    ap_ST_fsm_state121 = 99'd38685626227668133590597632;
parameter    ap_ST_fsm_state122 = 99'd77371252455336267181195264;
parameter    ap_ST_fsm_state123 = 99'd154742504910672534362390528;
parameter    ap_ST_fsm_state124 = 99'd309485009821345068724781056;
parameter    ap_ST_fsm_state125 = 99'd618970019642690137449562112;
parameter    ap_ST_fsm_state126 = 99'd1237940039285380274899124224;
parameter    ap_ST_fsm_state127 = 99'd2475880078570760549798248448;
parameter    ap_ST_fsm_state128 = 99'd4951760157141521099596496896;
parameter    ap_ST_fsm_state129 = 99'd9903520314283042199192993792;
parameter    ap_ST_fsm_state130 = 99'd19807040628566084398385987584;
parameter    ap_ST_fsm_state131 = 99'd39614081257132168796771975168;
parameter    ap_ST_fsm_state132 = 99'd79228162514264337593543950336;
parameter    ap_ST_fsm_state133 = 99'd158456325028528675187087900672;
parameter    ap_ST_fsm_state134 = 99'd316912650057057350374175801344;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [18:0] dense_input_input_array_address0;
output   dense_input_input_array_ce0;
input  [31:0] dense_input_input_array_q0;
input  [63:0] dense_input_input_ndim;
input  [63:0] dense_input_input_numel;
output  [2:0] dense_input_input_shape_address0;
output   dense_input_input_shape_ce0;
input  [63:0] dense_input_input_shape_q0;
output  [18:0] activation_3_output_array_address0;
output   activation_3_output_array_ce0;
output   activation_3_output_array_we0;
output  [31:0] activation_3_output_array_d0;
output  [63:0] activation_3_output_ndim;
output   activation_3_output_ndim_ap_vld;
output  [63:0] activation_3_output_numel;
output   activation_3_output_numel_ap_vld;
output  [2:0] activation_3_output_shape_address0;
output   activation_3_output_shape_ce0;
output   activation_3_output_shape_we0;
output  [63:0] activation_3_output_shape_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg activation_3_output_array_ce0;
reg activation_3_output_array_we0;
reg activation_3_output_ndim_ap_vld;
reg activation_3_output_numel_ap_vld;
reg activation_3_output_shape_ce0;
reg activation_3_output_shape_we0;

(* fsm_encoding = "none" *) reg   [98:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] dense_output_ndim;
reg   [63:0] dense_output_numel;
reg   [18:0] dense_output_array_address0;
reg    dense_output_array_ce0;
reg    dense_output_array_we0;
reg   [31:0] dense_output_array_d0;
wire   [31:0] dense_output_array_q0;
reg   [18:0] dense_kernel_array_address0;
reg    dense_kernel_array_ce0;
reg    dense_kernel_array_we0;
wire   [31:0] dense_kernel_array_q0;
wire   [6:0] dense_bias_array_address0;
reg    dense_bias_array_ce0;
wire   [31:0] dense_bias_array_q0;
reg   [18:0] dense_bias_array_0_address0;
reg    dense_bias_array_0_ce0;
reg    dense_bias_array_0_we0;
wire   [31:0] dense_bias_array_0_q0;
reg   [63:0] batch_normalization_1;
reg   [63:0] batch_normalization_3;
reg   [18:0] batch_normalization_25_address0;
reg    batch_normalization_25_ce0;
reg    batch_normalization_25_we0;
reg   [31:0] batch_normalization_25_d0;
wire   [31:0] batch_normalization_25_q0;
reg   [18:0] batch_normalization_25_address1;
reg    batch_normalization_25_ce1;
reg    batch_normalization_25_we1;
wire   [31:0] batch_normalization_25_q1;
wire   [6:0] batch_normalization_11_address0;
reg    batch_normalization_11_ce0;
wire   [31:0] batch_normalization_11_q0;
reg   [18:0] batch_normalization_24_address0;
reg    batch_normalization_24_ce0;
reg    batch_normalization_24_we0;
wire   [31:0] batch_normalization_24_q0;
wire   [6:0] batch_normalization_s_address0;
reg    batch_normalization_s_ce0;
wire   [31:0] batch_normalization_s_q0;
reg   [18:0] batch_normalization_21_address0;
reg    batch_normalization_21_ce0;
reg    batch_normalization_21_we0;
wire   [31:0] batch_normalization_21_q0;
wire   [6:0] batch_normalization_14_address0;
reg    batch_normalization_14_ce0;
wire   [31:0] batch_normalization_14_q0;
reg   [18:0] batch_normalization_23_address0;
reg    batch_normalization_23_ce0;
reg    batch_normalization_23_we0;
wire   [31:0] batch_normalization_23_q0;
wire   [6:0] batch_normalization_17_address0;
reg    batch_normalization_17_ce0;
wire   [31:0] batch_normalization_17_q0;
reg   [18:0] batch_normalization_22_address0;
reg    batch_normalization_22_ce0;
reg    batch_normalization_22_we0;
wire   [31:0] batch_normalization_22_q0;
reg   [63:0] dense_1_output_ndim;
reg   [63:0] dense_1_output_numel;
reg   [18:0] dense_1_output_array_address0;
reg    dense_1_output_array_ce0;
reg    dense_1_output_array_we0;
reg   [31:0] dense_1_output_array_d0;
wire   [31:0] dense_1_output_array_q0;
reg   [63:0] dense_1_kernel_ndim;
reg   [63:0] dense_1_kernel_numel;
wire   [9:0] dense_1_kernel_array_address0;
reg    dense_1_kernel_array_ce0;
wire   [31:0] dense_1_kernel_array_q0;
reg   [18:0] dense_1_kernel_array_2_address0;
reg    dense_1_kernel_array_2_ce0;
reg    dense_1_kernel_array_2_we0;
wire   [31:0] dense_1_kernel_array_2_q0;
reg   [63:0] dense_1_bias_numel;
wire   [3:0] dense_1_bias_array1_address0;
reg    dense_1_bias_array1_ce0;
wire   [31:0] dense_1_bias_array1_q0;
reg   [18:0] dense_1_bias_array_address0;
reg    dense_1_bias_array_ce0;
reg    dense_1_bias_array_we0;
wire   [31:0] dense_1_bias_array_q0;
reg   [63:0] batch_normalization_9;
reg   [63:0] batch_normalization_12;
reg   [18:0] batch_normalization_8_address0;
reg    batch_normalization_8_ce0;
reg    batch_normalization_8_we0;
reg   [31:0] batch_normalization_8_d0;
wire   [31:0] batch_normalization_8_q0;
reg   [18:0] batch_normalization_8_address1;
reg    batch_normalization_8_ce1;
reg    batch_normalization_8_we1;
wire   [31:0] batch_normalization_8_q1;
wire   [3:0] batch_normalization_31_address0;
reg    batch_normalization_31_ce0;
wire   [31:0] batch_normalization_31_q0;
reg   [18:0] batch_normalization_7_address0;
reg    batch_normalization_7_ce0;
reg    batch_normalization_7_we0;
wire   [31:0] batch_normalization_7_q0;
wire   [3:0] batch_normalization_20_address0;
reg    batch_normalization_20_ce0;
wire   [31:0] batch_normalization_20_q0;
reg   [18:0] batch_normalization_18_address0;
reg    batch_normalization_18_ce0;
reg    batch_normalization_18_we0;
wire   [31:0] batch_normalization_18_q0;
wire   [3:0] batch_normalization_34_address0;
reg    batch_normalization_34_ce0;
wire   [31:0] batch_normalization_34_q0;
reg   [18:0] batch_normalization_6_address0;
reg    batch_normalization_6_ce0;
reg    batch_normalization_6_we0;
wire   [31:0] batch_normalization_6_q0;
wire   [3:0] batch_normalization_37_address0;
reg    batch_normalization_37_ce0;
wire   [31:0] batch_normalization_37_q0;
reg   [18:0] batch_normalization_5_address0;
reg    batch_normalization_5_ce0;
reg    batch_normalization_5_we0;
wire   [31:0] batch_normalization_5_q0;
reg   [0:0] dense_2_output_ndim;
reg   [63:0] dense_2_output_numel;
reg   [18:0] dense_2_output_array_address0;
reg    dense_2_output_array_ce0;
reg    dense_2_output_array_we0;
reg   [31:0] dense_2_output_array_d0;
wire   [31:0] dense_2_output_array_q0;
reg   [63:0] dense_2_kernel_ndim;
reg   [63:0] dense_2_kernel_numel;
wire   [5:0] dense_2_kernel_array_address0;
reg    dense_2_kernel_array_ce0;
wire   [31:0] dense_2_kernel_array_q0;
reg   [18:0] dense_2_kernel_array_1_address0;
reg    dense_2_kernel_array_1_ce0;
reg    dense_2_kernel_array_1_we0;
wire   [31:0] dense_2_kernel_array_1_q0;
reg   [63:0] dense_2_bias_numel;
wire   [2:0] dense_2_bias_array6_address0;
reg    dense_2_bias_array6_ce0;
wire   [31:0] dense_2_bias_array6_q0;
reg   [18:0] dense_2_bias_array_address0;
reg    dense_2_bias_array_ce0;
reg    dense_2_bias_array_we0;
wire   [31:0] dense_2_bias_array_q0;
reg   [2:0] dense_kernel_shape_address0;
reg    dense_kernel_shape_ce0;
reg    dense_kernel_shape_we0;
reg   [63:0] dense_kernel_shape_d0;
wire   [63:0] dense_kernel_shape_q0;
reg   [2:0] dense_kernel_shape_address1;
reg    dense_kernel_shape_ce1;
reg    dense_kernel_shape_we1;
wire   [63:0] dense_kernel_shape_q1;
reg   [2:0] dense_output_shape_address0;
reg    dense_output_shape_ce0;
reg    dense_output_shape_we0;
reg   [63:0] dense_output_shape_d0;
wire   [63:0] dense_output_shape_q0;
reg   [2:0] dense_output_shape_address1;
reg    dense_output_shape_ce1;
reg    dense_output_shape_we1;
reg   [2:0] batch_normalization_4_address0;
reg    batch_normalization_4_ce0;
reg    batch_normalization_4_we0;
reg   [8:0] batch_normalization_4_d0;
reg   [2:0] batch_normalization_4_address1;
reg    batch_normalization_4_ce1;
reg    batch_normalization_4_we1;
wire   [8:0] batch_normalization_4_q1;
reg   [2:0] activation_1_output_s_address0;
reg    activation_1_output_s_ce0;
reg    activation_1_output_s_we0;
wire   [8:0] activation_1_output_s_q0;
reg   [18:0] activation_1_output_1_address0;
reg    activation_1_output_1_ce0;
reg    activation_1_output_1_we0;
wire   [31:0] activation_1_output_1_q0;
reg   [2:0] dropout_2_output_sha_address0;
reg    dropout_2_output_sha_ce0;
reg    dropout_2_output_sha_we0;
wire   [63:0] dropout_2_output_sha_d0;
wire   [63:0] dropout_2_output_sha_q0;
reg   [18:0] dropout_2_output_arr_address0;
reg    dropout_2_output_arr_ce0;
reg    dropout_2_output_arr_we0;
wire   [31:0] dropout_2_output_arr_q0;
reg   [2:0] dense_1_kernel_shape_address0;
reg    dense_1_kernel_shape_ce0;
reg    dense_1_kernel_shape_we0;
reg   [63:0] dense_1_kernel_shape_d0;
wire   [63:0] dense_1_kernel_shape_q0;
reg   [2:0] dense_1_kernel_shape_address1;
reg    dense_1_kernel_shape_ce1;
reg    dense_1_kernel_shape_we1;
wire   [63:0] dense_1_kernel_shape_q1;
reg   [2:0] dense_1_output_shape_address0;
reg    dense_1_output_shape_ce0;
reg    dense_1_output_shape_we0;
reg   [63:0] dense_1_output_shape_d0;
wire   [63:0] dense_1_output_shape_q0;
reg   [2:0] dense_1_output_shape_address1;
reg    dense_1_output_shape_ce1;
reg    dense_1_output_shape_we1;
reg   [2:0] batch_normalization_15_address0;
reg    batch_normalization_15_ce0;
reg    batch_normalization_15_we0;
reg   [5:0] batch_normalization_15_d0;
reg   [2:0] batch_normalization_15_address1;
reg    batch_normalization_15_ce1;
reg    batch_normalization_15_we1;
wire   [5:0] batch_normalization_15_q1;
reg   [2:0] activation_2_output_s_address0;
reg    activation_2_output_s_ce0;
reg    activation_2_output_s_we0;
wire   [5:0] activation_2_output_s_q0;
reg   [18:0] activation_2_output_1_address0;
reg    activation_2_output_1_ce0;
reg    activation_2_output_1_we0;
wire   [31:0] activation_2_output_1_q0;
reg   [2:0] dropout_3_output_sha_address0;
reg    dropout_3_output_sha_ce0;
reg    dropout_3_output_sha_we0;
wire   [63:0] dropout_3_output_sha_d0;
wire   [63:0] dropout_3_output_sha_q0;
reg   [18:0] dropout_3_output_arr_address0;
reg    dropout_3_output_arr_ce0;
reg    dropout_3_output_arr_we0;
wire   [31:0] dropout_3_output_arr_q0;
reg   [2:0] dense_2_kernel_shape_address0;
reg    dense_2_kernel_shape_ce0;
reg    dense_2_kernel_shape_we0;
reg   [63:0] dense_2_kernel_shape_d0;
wire   [63:0] dense_2_kernel_shape_q0;
reg   [2:0] dense_2_kernel_shape_address1;
reg    dense_2_kernel_shape_ce1;
reg    dense_2_kernel_shape_we1;
wire   [63:0] dense_2_kernel_shape_q1;
reg   [2:0] dense_2_output_shape_address0;
reg    dense_2_output_shape_ce0;
reg    dense_2_output_shape_we0;
reg   [4:0] dense_2_output_shape_d0;
reg   [2:0] dense_2_output_shape_address1;
reg    dense_2_output_shape_ce1;
reg    dense_2_output_shape_we1;
wire   [4:0] dense_2_output_shape_q1;
reg   [6:0] j_2_reg_1379;
reg   [6:0] j_4_reg_1412;
reg   [6:0] j_5_reg_1423;
reg   [6:0] j_6_reg_1434;
reg   [6:0] j_7_reg_1445;
reg   [9:0] j_9_reg_1467;
reg   [3:0] j_s_reg_1478;
reg   [3:0] j_11_reg_1511;
reg   [3:0] j_12_reg_1522;
reg   [3:0] j_13_reg_1533;
reg   [3:0] j_14_reg_1544;
reg   [5:0] j_16_reg_1566;
reg   [2:0] j_17_reg_1577;
reg   [18:0] i_reg_1599;
reg   [2:0] j_18_reg_1610;
reg   [18:0] j_19_reg_1621;
reg   [2:0] j_20_reg_1632;
reg   [18:0] j_21_reg_1643;
reg   [18:0] i_1_reg_1654;
reg   [2:0] j_22_reg_1665;
reg   [18:0] j_23_reg_1676;
reg   [2:0] j_24_reg_1687;
reg   [18:0] j_25_reg_1698;
reg   [63:0] reg_1937;
wire    ap_CS_fsm_state95;
wire    ap_CS_fsm_state97;
reg   [63:0] reg_1943;
wire    ap_CS_fsm_state119;
wire    ap_CS_fsm_state129;
wire   [0:0] tmp_78_fu_2784_p2;
wire    ap_CS_fsm_state3;
wire   [6:0] j_28_fu_1966_p2;
wire    ap_CS_fsm_state4;
wire   [18:0] j_29_fu_1983_p2;
wire    ap_CS_fsm_state8;
wire   [0:0] exitcond22_fu_1994_p2;
reg   [0:0] exitcond22_reg_2870;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state10_pp2_stage0_iter0;
wire    ap_block_state11_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [6:0] j_30_fu_2000_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [63:0] tmp_35_fu_2006_p1;
reg   [63:0] tmp_35_reg_2879;
wire   [18:0] indvarinc_fu_2011_p2;
wire    ap_CS_fsm_state13;
wire   [6:0] j_31_fu_2046_p2;
wire    ap_CS_fsm_state16;
wire   [0:0] exitcond20_fu_2057_p2;
reg   [0:0] exitcond20_reg_2905;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_state18_pp4_stage0_iter0;
wire    ap_block_state19_pp4_stage0_iter1;
wire    ap_block_pp4_stage0_11001;
wire   [6:0] j_32_fu_2063_p2;
reg    ap_enable_reg_pp4_iter0;
wire   [63:0] tmp_37_fu_2069_p1;
reg   [63:0] tmp_37_reg_2914;
wire   [0:0] exitcond19_fu_2074_p2;
reg   [0:0] exitcond19_reg_2924;
wire    ap_CS_fsm_pp5_stage0;
wire    ap_block_state21_pp5_stage0_iter0;
wire    ap_block_state22_pp5_stage0_iter1;
wire    ap_block_pp5_stage0_11001;
wire   [6:0] j_33_fu_2080_p2;
reg    ap_enable_reg_pp5_iter0;
wire   [63:0] tmp_38_fu_2086_p1;
reg   [63:0] tmp_38_reg_2933;
wire   [0:0] exitcond18_fu_2091_p2;
reg   [0:0] exitcond18_reg_2943;
wire    ap_CS_fsm_pp6_stage0;
wire    ap_block_state24_pp6_stage0_iter0;
wire    ap_block_state25_pp6_stage0_iter1;
wire    ap_block_pp6_stage0_11001;
wire   [6:0] j_34_fu_2097_p2;
reg    ap_enable_reg_pp6_iter0;
wire   [63:0] tmp_39_fu_2103_p1;
reg   [63:0] tmp_39_reg_2952;
wire   [0:0] exitcond17_fu_2108_p2;
reg   [0:0] exitcond17_reg_2962;
wire    ap_CS_fsm_pp7_stage0;
wire    ap_block_state27_pp7_stage0_iter0;
wire    ap_block_state28_pp7_stage0_iter1;
wire    ap_block_pp7_stage0_11001;
wire   [6:0] j_35_fu_2114_p2;
reg    ap_enable_reg_pp7_iter0;
wire   [63:0] tmp_40_fu_2120_p1;
reg   [63:0] tmp_40_reg_2971;
wire   [3:0] j_36_fu_2143_p2;
wire    ap_CS_fsm_state32;
wire   [0:0] exitcond15_fu_2166_p2;
reg   [0:0] exitcond15_reg_2989;
wire    ap_CS_fsm_pp9_stage0;
wire    ap_block_state36_pp9_stage0_iter0;
wire    ap_block_state37_pp9_stage0_iter1;
wire    ap_block_pp9_stage0_11001;
wire   [9:0] j_37_fu_2172_p2;
reg    ap_enable_reg_pp9_iter0;
wire   [63:0] tmp_42_fu_2178_p1;
reg   [63:0] tmp_42_reg_2998;
wire   [0:0] exitcond14_fu_2189_p2;
reg   [0:0] exitcond14_reg_3008;
wire    ap_CS_fsm_pp10_stage0;
wire    ap_block_state39_pp10_stage0_iter0;
wire    ap_block_state40_pp10_stage0_iter1;
wire    ap_block_pp10_stage0_11001;
wire   [3:0] j_38_fu_2195_p2;
reg    ap_enable_reg_pp10_iter0;
wire   [63:0] tmp_45_fu_2201_p1;
reg   [63:0] tmp_45_reg_3017;
wire   [10:0] indvarinc1_fu_2206_p2;
wire    ap_CS_fsm_state42;
wire   [3:0] j_39_fu_2241_p2;
wire    ap_CS_fsm_state45;
wire   [0:0] exitcond12_fu_2252_p2;
reg   [0:0] exitcond12_reg_3043;
wire    ap_CS_fsm_pp12_stage0;
wire    ap_block_state47_pp12_stage0_iter0;
wire    ap_block_state48_pp12_stage0_iter1;
wire    ap_block_pp12_stage0_11001;
wire   [3:0] j_40_fu_2258_p2;
reg    ap_enable_reg_pp12_iter0;
wire   [63:0] tmp_47_fu_2264_p1;
reg   [63:0] tmp_47_reg_3052;
wire   [0:0] exitcond11_fu_2269_p2;
reg   [0:0] exitcond11_reg_3062;
wire    ap_CS_fsm_pp13_stage0;
wire    ap_block_state50_pp13_stage0_iter0;
wire    ap_block_state51_pp13_stage0_iter1;
wire    ap_block_pp13_stage0_11001;
wire   [3:0] j_41_fu_2275_p2;
reg    ap_enable_reg_pp13_iter0;
wire   [63:0] tmp_49_fu_2281_p1;
reg   [63:0] tmp_49_reg_3071;
wire   [0:0] exitcond10_fu_2286_p2;
reg   [0:0] exitcond10_reg_3081;
wire    ap_CS_fsm_pp14_stage0;
wire    ap_block_state53_pp14_stage0_iter0;
wire    ap_block_state54_pp14_stage0_iter1;
wire    ap_block_pp14_stage0_11001;
wire   [3:0] j_42_fu_2292_p2;
reg    ap_enable_reg_pp14_iter0;
wire   [63:0] tmp_51_fu_2298_p1;
reg   [63:0] tmp_51_reg_3090;
wire   [0:0] exitcond9_fu_2303_p2;
reg   [0:0] exitcond9_reg_3100;
wire    ap_CS_fsm_pp15_stage0;
wire    ap_block_state56_pp15_stage0_iter0;
wire    ap_block_state57_pp15_stage0_iter1;
wire    ap_block_pp15_stage0_11001;
wire   [3:0] j_43_fu_2309_p2;
reg    ap_enable_reg_pp15_iter0;
wire   [63:0] tmp_52_fu_2315_p1;
reg   [63:0] tmp_52_reg_3109;
wire   [2:0] j_44_fu_2338_p2;
wire    ap_CS_fsm_state61;
wire   [0:0] exitcond7_fu_2361_p2;
reg   [0:0] exitcond7_reg_3127;
wire    ap_CS_fsm_pp17_stage0;
wire    ap_block_state65_pp17_stage0_iter0;
wire    ap_block_state66_pp17_stage0_iter1;
wire    ap_block_pp17_stage0_11001;
wire   [5:0] j_45_fu_2367_p2;
reg    ap_enable_reg_pp17_iter0;
wire   [63:0] tmp_54_fu_2373_p1;
reg   [63:0] tmp_54_reg_3136;
wire   [0:0] exitcond6_fu_2384_p2;
reg   [0:0] exitcond6_reg_3146;
wire    ap_CS_fsm_pp18_stage0;
wire    ap_block_state68_pp18_stage0_iter0;
wire    ap_block_state69_pp18_stage0_iter1;
wire    ap_block_pp18_stage0_11001;
wire   [2:0] j_46_fu_2390_p2;
reg    ap_enable_reg_pp18_iter0;
wire   [63:0] tmp_55_fu_2396_p1;
reg   [63:0] tmp_55_reg_3155;
wire   [6:0] indvarinc2_fu_2401_p2;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state73;
reg   [63:0] batch_normalization_55_reg_3183;
wire    ap_CS_fsm_state74;
wire    grp_k2c_batch_norm_fu_1866_ap_idle;
wire    grp_k2c_batch_norm_fu_1866_ap_ready;
wire    grp_k2c_batch_norm_fu_1866_ap_done;
wire   [0:0] exitcond26_fu_2437_p2;
reg   [0:0] exitcond26_reg_3191;
wire    ap_CS_fsm_pp19_stage0;
wire    ap_block_state75_pp19_stage0_iter0;
wire    ap_block_state76_pp19_stage0_iter1;
wire    ap_block_state77_pp19_stage0_iter2;
wire    ap_block_state78_pp19_stage0_iter3;
wire    ap_block_state79_pp19_stage0_iter4;
wire    ap_block_state80_pp19_stage0_iter5;
wire    ap_block_state81_pp19_stage0_iter6;
wire    ap_block_state82_pp19_stage0_iter7;
wire    ap_block_pp19_stage0_11001;
reg   [0:0] exitcond26_reg_3191_pp19_iter1_reg;
reg   [0:0] exitcond26_reg_3191_pp19_iter2_reg;
reg   [0:0] exitcond26_reg_3191_pp19_iter3_reg;
reg   [0:0] exitcond26_reg_3191_pp19_iter4_reg;
reg   [0:0] exitcond26_reg_3191_pp19_iter5_reg;
reg   [0:0] exitcond26_reg_3191_pp19_iter6_reg;
wire   [18:0] i_39_fu_2442_p2;
reg    ap_enable_reg_pp19_iter0;
reg   [18:0] batch_normalization_56_reg_3200;
reg   [18:0] batch_normalization_56_reg_3200_pp19_iter1_reg;
reg   [18:0] batch_normalization_56_reg_3200_pp19_iter2_reg;
reg   [18:0] batch_normalization_56_reg_3200_pp19_iter3_reg;
reg   [18:0] batch_normalization_56_reg_3200_pp19_iter4_reg;
reg   [18:0] batch_normalization_56_reg_3200_pp19_iter5_reg;
reg   [18:0] batch_normalization_56_reg_3200_pp19_iter6_reg;
reg   [63:0] batch_normalization_58_reg_3206;
wire    ap_CS_fsm_state83;
wire   [0:0] exitcond5_fu_2452_p2;
reg   [0:0] exitcond5_reg_3211;
wire    ap_CS_fsm_pp20_stage0;
wire    ap_block_state84_pp20_stage0_iter0;
wire    ap_block_state85_pp20_stage0_iter1;
wire    ap_block_pp20_stage0_11001;
wire   [2:0] j_47_fu_2458_p2;
reg    ap_enable_reg_pp20_iter0;
wire   [63:0] tmp_60_fu_2464_p1;
reg   [63:0] tmp_60_reg_3220;
wire   [63:0] tmp_61_fu_2469_p1;
reg   [63:0] tmp_61_reg_3230;
wire    ap_CS_fsm_pp21_stage0;
wire    ap_block_state87_pp21_stage0_iter0;
wire    ap_block_state88_pp21_stage0_iter1;
wire    ap_block_pp21_stage0_11001;
wire   [0:0] tmp_62_fu_2474_p2;
reg   [0:0] tmp_62_reg_3235;
wire   [18:0] j_48_fu_2479_p2;
reg    ap_enable_reg_pp21_iter0;
wire   [0:0] exitcond4_fu_2485_p2;
reg   [0:0] exitcond4_reg_3249;
wire    ap_CS_fsm_pp22_stage0;
wire    ap_block_state90_pp22_stage0_iter0;
wire    ap_block_state91_pp22_stage0_iter1;
wire    ap_block_pp22_stage0_11001;
wire   [2:0] j_49_fu_2491_p2;
reg    ap_enable_reg_pp22_iter0;
wire   [63:0] tmp_63_fu_2497_p1;
reg   [63:0] tmp_63_reg_3258;
wire   [63:0] tmp_64_fu_2507_p1;
reg   [63:0] tmp_64_reg_3268;
wire    ap_CS_fsm_pp23_stage0;
wire    ap_block_state93_pp23_stage0_iter0;
wire    ap_block_state94_pp23_stage0_iter1;
wire    ap_block_pp23_stage0_11001;
wire   [0:0] tmp_65_fu_2512_p2;
reg   [0:0] tmp_65_reg_3273;
wire   [18:0] j_50_fu_2517_p2;
reg    ap_enable_reg_pp23_iter0;
reg   [63:0] batch_normalization_63_reg_3307;
wire    ap_CS_fsm_state98;
wire   [0:0] exitcond25_fu_2552_p2;
reg   [0:0] exitcond25_reg_3315;
wire    ap_CS_fsm_pp24_stage0;
wire    ap_block_state99_pp24_stage0_iter0;
wire    ap_block_state100_pp24_stage0_iter1;
wire    ap_block_state101_pp24_stage0_iter2;
wire    ap_block_state102_pp24_stage0_iter3;
wire    ap_block_state103_pp24_stage0_iter4;
wire    ap_block_state104_pp24_stage0_iter5;
wire    ap_block_state105_pp24_stage0_iter6;
wire    ap_block_state106_pp24_stage0_iter7;
wire    ap_block_pp24_stage0_11001;
reg   [0:0] exitcond25_reg_3315_pp24_iter1_reg;
reg   [0:0] exitcond25_reg_3315_pp24_iter2_reg;
reg   [0:0] exitcond25_reg_3315_pp24_iter3_reg;
reg   [0:0] exitcond25_reg_3315_pp24_iter4_reg;
reg   [0:0] exitcond25_reg_3315_pp24_iter5_reg;
reg   [0:0] exitcond25_reg_3315_pp24_iter6_reg;
wire   [18:0] i_40_fu_2557_p2;
reg    ap_enable_reg_pp24_iter0;
reg   [18:0] batch_normalization_64_reg_3324;
reg   [18:0] batch_normalization_64_reg_3324_pp24_iter1_reg;
reg   [18:0] batch_normalization_64_reg_3324_pp24_iter2_reg;
reg   [18:0] batch_normalization_64_reg_3324_pp24_iter3_reg;
reg   [18:0] batch_normalization_64_reg_3324_pp24_iter4_reg;
reg   [18:0] batch_normalization_64_reg_3324_pp24_iter5_reg;
reg   [18:0] batch_normalization_64_reg_3324_pp24_iter6_reg;
reg   [63:0] batch_normalization_66_reg_3330;
wire    ap_CS_fsm_state107;
wire   [0:0] exitcond3_fu_2567_p2;
reg   [0:0] exitcond3_reg_3335;
wire    ap_CS_fsm_pp25_stage0;
wire    ap_block_state108_pp25_stage0_iter0;
wire    ap_block_state109_pp25_stage0_iter1;
wire    ap_block_pp25_stage0_11001;
wire   [2:0] j_51_fu_2573_p2;
reg    ap_enable_reg_pp25_iter0;
wire   [63:0] tmp_68_fu_2579_p1;
reg   [63:0] tmp_68_reg_3344;
wire   [63:0] tmp_69_fu_2584_p1;
reg   [63:0] tmp_69_reg_3354;
wire    ap_CS_fsm_pp26_stage0;
wire    ap_block_state111_pp26_stage0_iter0;
wire    ap_block_state112_pp26_stage0_iter1;
wire    ap_block_pp26_stage0_11001;
wire   [0:0] tmp_70_fu_2589_p2;
reg   [0:0] tmp_70_reg_3359;
wire   [18:0] j_52_fu_2594_p2;
reg    ap_enable_reg_pp26_iter0;
wire   [0:0] exitcond2_fu_2600_p2;
reg   [0:0] exitcond2_reg_3373;
wire    ap_CS_fsm_pp27_stage0;
wire    ap_block_state114_pp27_stage0_iter0;
wire    ap_block_state115_pp27_stage0_iter1;
wire    ap_block_pp27_stage0_11001;
wire   [2:0] j_53_fu_2606_p2;
reg    ap_enable_reg_pp27_iter0;
wire   [63:0] tmp_71_fu_2612_p1;
reg   [63:0] tmp_71_reg_3382;
wire   [63:0] tmp_72_fu_2622_p1;
reg   [63:0] tmp_72_reg_3392;
wire    ap_CS_fsm_pp28_stage0;
wire    ap_block_state117_pp28_stage0_iter0;
wire    ap_block_state118_pp28_stage0_iter1;
wire    ap_block_pp28_stage0_11001;
wire   [0:0] tmp_73_fu_2627_p2;
reg   [0:0] tmp_73_reg_3397;
wire   [18:0] j_54_fu_2632_p2;
reg    ap_enable_reg_pp28_iter0;
wire    ap_CS_fsm_state122;
wire    ap_CS_fsm_state123;
wire   [0:0] exitcond1_fu_2658_p2;
wire   [2:0] i_41_fu_2664_p2;
reg   [2:0] i_41_reg_3439;
wire   [31:0] xmax_1_fu_2754_p3;
wire    ap_CS_fsm_state124;
wire   [2:0] i_42_fu_2773_p2;
reg   [2:0] i_42_reg_3452;
wire    ap_CS_fsm_state125;
reg   [18:0] dense_2_output_array_3_reg_3457;
wire   [0:0] tmp_75_fu_2767_p2;
wire   [31:0] tmp_77_fu_1918_p2;
reg   [31:0] tmp_77_reg_3462;
wire    ap_CS_fsm_state126;
wire   [31:0] grp_fu_1893_p2;
wire    ap_CS_fsm_state127;
wire   [31:0] grp_fu_1906_p2;
reg   [31:0] sum_1_reg_3472;
wire    ap_CS_fsm_state128;
wire   [2:0] i_43_fu_2790_p2;
reg   [2:0] i_43_reg_3480;
reg   [18:0] dense_2_output_array_5_reg_3485;
wire   [2:0] j_55_fu_2811_p2;
reg   [2:0] j_55_reg_3493;
wire    ap_CS_fsm_state131;
wire   [63:0] tmp_80_fu_2817_p1;
reg   [63:0] tmp_80_reg_3498;
wire   [0:0] exitcond_fu_2805_p2;
wire  signed [63:0] tmp_81_fu_2827_p1;
reg  signed [63:0] tmp_81_reg_3508;
wire    ap_CS_fsm_state133;
wire   [31:0] j_56_fu_2838_p2;
reg   [31:0] j_56_reg_3516;
wire   [0:0] tmp_82_fu_2832_p2;
wire    ap_CS_fsm_state9;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state10;
reg    ap_enable_reg_pp2_iter1;
wire    ap_CS_fsm_state17;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state18;
reg    ap_enable_reg_pp4_iter1;
wire    ap_CS_fsm_state20;
wire    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state21;
reg    ap_enable_reg_pp5_iter1;
wire    ap_CS_fsm_state23;
wire    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state24;
reg    ap_enable_reg_pp6_iter1;
wire    ap_CS_fsm_state26;
wire    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_exit_iter0_state27;
reg    ap_enable_reg_pp7_iter1;
wire    ap_CS_fsm_state35;
wire    ap_block_pp9_stage0_subdone;
reg    ap_condition_pp9_exit_iter0_state36;
reg    ap_enable_reg_pp9_iter1;
wire    ap_CS_fsm_state38;
wire    ap_block_pp10_stage0_subdone;
reg    ap_condition_pp10_exit_iter0_state39;
reg    ap_enable_reg_pp10_iter1;
wire    ap_CS_fsm_state46;
wire    ap_block_pp12_stage0_subdone;
reg    ap_condition_pp12_exit_iter0_state47;
reg    ap_enable_reg_pp12_iter1;
wire    ap_CS_fsm_state49;
wire    ap_block_pp13_stage0_subdone;
reg    ap_condition_pp13_exit_iter0_state50;
reg    ap_enable_reg_pp13_iter1;
wire    ap_CS_fsm_state52;
wire    ap_block_pp14_stage0_subdone;
reg    ap_condition_pp14_exit_iter0_state53;
reg    ap_enable_reg_pp14_iter1;
wire    ap_CS_fsm_state55;
wire    ap_block_pp15_stage0_subdone;
reg    ap_condition_pp15_exit_iter0_state56;
reg    ap_enable_reg_pp15_iter1;
wire    ap_CS_fsm_state64;
wire    ap_block_pp17_stage0_subdone;
reg    ap_condition_pp17_exit_iter0_state65;
reg    ap_enable_reg_pp17_iter1;
wire    ap_CS_fsm_state67;
wire    ap_block_pp18_stage0_subdone;
reg    ap_condition_pp18_exit_iter0_state68;
reg    ap_enable_reg_pp18_iter1;
wire    ap_block_pp19_stage0_subdone;
reg    ap_condition_pp19_exit_iter0_state75;
reg    ap_enable_reg_pp19_iter1;
reg    ap_enable_reg_pp19_iter2;
reg    ap_enable_reg_pp19_iter3;
reg    ap_enable_reg_pp19_iter4;
reg    ap_enable_reg_pp19_iter5;
reg    ap_enable_reg_pp19_iter6;
reg    ap_enable_reg_pp19_iter7;
wire    ap_block_pp20_stage0_subdone;
reg    ap_condition_pp20_exit_iter0_state84;
reg    ap_enable_reg_pp20_iter1;
wire    ap_CS_fsm_state86;
wire    ap_block_pp21_stage0_subdone;
reg    ap_condition_pp21_exit_iter0_state87;
reg    ap_enable_reg_pp21_iter1;
wire    ap_CS_fsm_state89;
wire    ap_block_pp22_stage0_subdone;
reg    ap_condition_pp22_exit_iter0_state90;
reg    ap_enable_reg_pp22_iter1;
wire    ap_CS_fsm_state92;
wire    ap_block_pp23_stage0_subdone;
reg    ap_condition_pp23_exit_iter0_state93;
reg    ap_enable_reg_pp23_iter1;
wire    ap_block_pp24_stage0_subdone;
reg    ap_condition_pp24_exit_iter0_state99;
reg    ap_enable_reg_pp24_iter1;
reg    ap_enable_reg_pp24_iter2;
reg    ap_enable_reg_pp24_iter3;
reg    ap_enable_reg_pp24_iter4;
reg    ap_enable_reg_pp24_iter5;
reg    ap_enable_reg_pp24_iter6;
reg    ap_enable_reg_pp24_iter7;
wire    ap_block_pp25_stage0_subdone;
reg    ap_condition_pp25_exit_iter0_state108;
reg    ap_enable_reg_pp25_iter1;
wire    ap_CS_fsm_state110;
wire    ap_block_pp26_stage0_subdone;
reg    ap_condition_pp26_exit_iter0_state111;
reg    ap_enable_reg_pp26_iter1;
wire    ap_CS_fsm_state113;
wire    ap_block_pp27_stage0_subdone;
reg    ap_condition_pp27_exit_iter0_state114;
reg    ap_enable_reg_pp27_iter1;
wire    ap_CS_fsm_state116;
wire    ap_block_pp28_stage0_subdone;
reg    ap_condition_pp28_exit_iter0_state117;
reg    ap_enable_reg_pp28_iter1;
reg   [18:0] dense_fwork_address0;
reg    dense_fwork_ce0;
reg    dense_fwork_we0;
reg   [31:0] dense_fwork_d0;
wire   [31:0] dense_fwork_q0;
reg    dense_fwork_ce1;
wire   [31:0] dense_fwork_q1;
reg   [10:0] dense_1_fwork_address0;
reg    dense_1_fwork_ce0;
reg    dense_1_fwork_we0;
reg   [31:0] dense_1_fwork_d0;
wire   [31:0] dense_1_fwork_q0;
reg    dense_1_fwork_ce1;
wire   [31:0] dense_1_fwork_q1;
reg   [6:0] dense_2_fwork_address0;
reg    dense_2_fwork_ce0;
reg    dense_2_fwork_we0;
reg   [31:0] dense_2_fwork_d0;
wire   [31:0] dense_2_fwork_q0;
reg    dense_2_fwork_ce1;
wire   [31:0] dense_2_fwork_q1;
wire    grp_k2c_dense_1_fu_1786_ap_start;
wire    grp_k2c_dense_1_fu_1786_ap_done;
wire    grp_k2c_dense_1_fu_1786_ap_idle;
wire    grp_k2c_dense_1_fu_1786_ap_ready;
wire   [18:0] grp_k2c_dense_1_fu_1786_output_array_address0;
wire    grp_k2c_dense_1_fu_1786_output_array_ce0;
wire    grp_k2c_dense_1_fu_1786_output_array_we0;
wire   [31:0] grp_k2c_dense_1_fu_1786_output_array_d0;
wire   [18:0] grp_k2c_dense_1_fu_1786_input_array_address0;
wire    grp_k2c_dense_1_fu_1786_input_array_ce0;
wire   [2:0] grp_k2c_dense_1_fu_1786_input_shape_address0;
wire    grp_k2c_dense_1_fu_1786_input_shape_ce0;
wire   [18:0] grp_k2c_dense_1_fu_1786_kernel_array_address0;
wire    grp_k2c_dense_1_fu_1786_kernel_array_ce0;
wire   [2:0] grp_k2c_dense_1_fu_1786_kernel_shape_address0;
wire    grp_k2c_dense_1_fu_1786_kernel_shape_ce0;
wire   [2:0] grp_k2c_dense_1_fu_1786_kernel_shape_address1;
wire    grp_k2c_dense_1_fu_1786_kernel_shape_ce1;
wire   [18:0] grp_k2c_dense_1_fu_1786_bias_array_address0;
wire    grp_k2c_dense_1_fu_1786_bias_array_ce0;
wire   [6:0] grp_k2c_dense_1_fu_1786_fwork_address0;
wire    grp_k2c_dense_1_fu_1786_fwork_ce0;
wire    grp_k2c_dense_1_fu_1786_fwork_we0;
wire   [31:0] grp_k2c_dense_1_fu_1786_fwork_d0;
wire   [6:0] grp_k2c_dense_1_fu_1786_fwork_address1;
wire    grp_k2c_dense_1_fu_1786_fwork_ce1;
wire    grp_k2c_dense_2_fu_1809_ap_start;
wire    grp_k2c_dense_2_fu_1809_ap_done;
wire    grp_k2c_dense_2_fu_1809_ap_idle;
wire    grp_k2c_dense_2_fu_1809_ap_ready;
wire   [18:0] grp_k2c_dense_2_fu_1809_output_array_address0;
wire    grp_k2c_dense_2_fu_1809_output_array_ce0;
wire    grp_k2c_dense_2_fu_1809_output_array_we0;
wire   [31:0] grp_k2c_dense_2_fu_1809_output_array_d0;
wire   [18:0] grp_k2c_dense_2_fu_1809_input_array_address0;
wire    grp_k2c_dense_2_fu_1809_input_array_ce0;
wire   [2:0] grp_k2c_dense_2_fu_1809_input_shape_address0;
wire    grp_k2c_dense_2_fu_1809_input_shape_ce0;
wire   [18:0] grp_k2c_dense_2_fu_1809_kernel_array_address0;
wire    grp_k2c_dense_2_fu_1809_kernel_array_ce0;
wire   [2:0] grp_k2c_dense_2_fu_1809_kernel_shape_address0;
wire    grp_k2c_dense_2_fu_1809_kernel_shape_ce0;
wire   [2:0] grp_k2c_dense_2_fu_1809_kernel_shape_address1;
wire    grp_k2c_dense_2_fu_1809_kernel_shape_ce1;
wire   [18:0] grp_k2c_dense_2_fu_1809_bias_array_address0;
wire    grp_k2c_dense_2_fu_1809_bias_array_ce0;
wire   [10:0] grp_k2c_dense_2_fu_1809_fwork_address0;
wire    grp_k2c_dense_2_fu_1809_fwork_ce0;
wire    grp_k2c_dense_2_fu_1809_fwork_we0;
wire   [31:0] grp_k2c_dense_2_fu_1809_fwork_d0;
wire   [10:0] grp_k2c_dense_2_fu_1809_fwork_address1;
wire    grp_k2c_dense_2_fu_1809_fwork_ce1;
wire    grp_k2c_dense_fu_1832_ap_start;
wire    grp_k2c_dense_fu_1832_ap_done;
wire    grp_k2c_dense_fu_1832_ap_idle;
wire    grp_k2c_dense_fu_1832_ap_ready;
wire   [18:0] grp_k2c_dense_fu_1832_output_array_address0;
wire    grp_k2c_dense_fu_1832_output_array_ce0;
wire    grp_k2c_dense_fu_1832_output_array_we0;
wire   [31:0] grp_k2c_dense_fu_1832_output_array_d0;
wire   [18:0] grp_k2c_dense_fu_1832_input_array_address0;
wire    grp_k2c_dense_fu_1832_input_array_ce0;
wire   [2:0] grp_k2c_dense_fu_1832_input_shape_address0;
wire    grp_k2c_dense_fu_1832_input_shape_ce0;
wire   [18:0] grp_k2c_dense_fu_1832_kernel_array_address0;
wire    grp_k2c_dense_fu_1832_kernel_array_ce0;
wire   [2:0] grp_k2c_dense_fu_1832_kernel_shape_address0;
wire    grp_k2c_dense_fu_1832_kernel_shape_ce0;
wire   [2:0] grp_k2c_dense_fu_1832_kernel_shape_address1;
wire    grp_k2c_dense_fu_1832_kernel_shape_ce1;
wire   [18:0] grp_k2c_dense_fu_1832_bias_array_address0;
wire    grp_k2c_dense_fu_1832_bias_array_ce0;
wire   [18:0] grp_k2c_dense_fu_1832_fwork_address0;
wire    grp_k2c_dense_fu_1832_fwork_ce0;
wire    grp_k2c_dense_fu_1832_fwork_we0;
wire   [31:0] grp_k2c_dense_fu_1832_fwork_d0;
wire   [18:0] grp_k2c_dense_fu_1832_fwork_address1;
wire    grp_k2c_dense_fu_1832_fwork_ce1;
wire    grp_generic_tanh_float_s_fu_1851_ap_start;
wire    grp_generic_tanh_float_s_fu_1851_ap_done;
wire    grp_generic_tanh_float_s_fu_1851_ap_idle;
wire    grp_generic_tanh_float_s_fu_1851_ap_ready;
reg   [31:0] grp_generic_tanh_float_s_fu_1851_t_in;
wire   [31:0] grp_generic_tanh_float_s_fu_1851_ap_return;
wire    grp_k2c_batch_norm_fu_1866_ap_start;
wire   [18:0] grp_k2c_batch_norm_fu_1866_outputs_array_address0;
wire    grp_k2c_batch_norm_fu_1866_outputs_array_ce0;
wire    grp_k2c_batch_norm_fu_1866_outputs_array_we0;
wire   [31:0] grp_k2c_batch_norm_fu_1866_outputs_array_d0;
wire   [18:0] grp_k2c_batch_norm_fu_1866_inputs_array_address0;
wire    grp_k2c_batch_norm_fu_1866_inputs_array_ce0;
reg   [31:0] grp_k2c_batch_norm_fu_1866_inputs_array_q0;
reg   [63:0] grp_k2c_batch_norm_fu_1866_inputs_ndim_read;
reg   [63:0] grp_k2c_batch_norm_fu_1866_inputs_numel_read;
wire   [2:0] grp_k2c_batch_norm_fu_1866_inputs_shape_address0;
wire    grp_k2c_batch_norm_fu_1866_inputs_shape_ce0;
reg   [63:0] grp_k2c_batch_norm_fu_1866_inputs_shape_q0;
wire   [18:0] grp_k2c_batch_norm_fu_1866_mean_array_address0;
wire    grp_k2c_batch_norm_fu_1866_mean_array_ce0;
reg   [31:0] grp_k2c_batch_norm_fu_1866_mean_array_q0;
wire   [18:0] grp_k2c_batch_norm_fu_1866_stdev_array_address0;
wire    grp_k2c_batch_norm_fu_1866_stdev_array_ce0;
reg   [31:0] grp_k2c_batch_norm_fu_1866_stdev_array_q0;
wire   [18:0] grp_k2c_batch_norm_fu_1866_gamma_array_address0;
wire    grp_k2c_batch_norm_fu_1866_gamma_array_ce0;
reg   [31:0] grp_k2c_batch_norm_fu_1866_gamma_array_q0;
wire   [18:0] grp_k2c_batch_norm_fu_1866_beta_array_address0;
wire    grp_k2c_batch_norm_fu_1866_beta_array_ce0;
reg   [31:0] grp_k2c_batch_norm_fu_1866_beta_array_q0;
reg   [6:0] j_reg_1357;
wire   [0:0] exitcond24_fu_1960_p2;
reg   [18:0] j_1_reg_1368;
wire    ap_CS_fsm_state7;
wire   [0:0] exitcond23_fu_1977_p2;
reg   [18:0] invdar_reg_1390;
wire   [0:0] tmp_34_fu_2022_p2;
wire    ap_CS_fsm_state12;
reg   [6:0] j_3_reg_1401;
wire    ap_CS_fsm_state15;
wire   [0:0] exitcond21_fu_2040_p2;
reg   [3:0] j_8_reg_1456;
wire    ap_CS_fsm_state31;
wire   [0:0] exitcond16_fu_2137_p2;
reg   [10:0] invdar1_reg_1489;
wire   [0:0] tmp_44_fu_2217_p2;
wire    ap_CS_fsm_state41;
reg   [3:0] j_10_reg_1500;
wire    ap_CS_fsm_state44;
wire   [0:0] exitcond13_fu_2235_p2;
reg   [2:0] j_15_reg_1555;
wire    ap_CS_fsm_state60;
wire   [0:0] exitcond8_fu_2332_p2;
reg   [6:0] invdar2_reg_1588;
wire   [0:0] tmp_57_fu_2412_p2;
wire    ap_CS_fsm_state70;
reg   [2:0] i_2_reg_1709;
reg   [31:0] xmax1_reg_1720;
reg   [2:0] i_3_reg_1730;
reg   [31:0] sum_reg_1741;
reg   [2:0] i_4_reg_1753;
wire    ap_CS_fsm_state130;
reg   [2:0] j_26_reg_1764;
wire    ap_CS_fsm_state132;
reg  signed [31:0] j_27_reg_1775;
wire    ap_CS_fsm_state134;
reg    grp_k2c_dense_1_fu_1786_ap_start_reg;
wire    ap_CS_fsm_state120;
reg    grp_k2c_dense_2_fu_1809_ap_start_reg;
wire    ap_CS_fsm_state96;
reg    grp_k2c_dense_fu_1832_ap_start_reg;
wire    ap_CS_fsm_state72;
reg    grp_generic_tanh_float_s_fu_1851_ap_start_reg;
wire    ap_block_pp19_stage0;
wire    ap_block_pp24_stage0;
reg    grp_k2c_batch_norm_fu_1866_ap_start_reg;
wire   [63:0] tmp_fu_1972_p1;
wire   [63:0] tmp_s_fu_1989_p1;
wire    ap_block_pp2_stage0;
wire   [63:0] tmp_33_fu_2017_p1;
wire   [63:0] tmp_36_fu_2052_p1;
wire    ap_block_pp4_stage0;
wire    ap_block_pp5_stage0;
wire    ap_block_pp6_stage0;
wire    ap_block_pp7_stage0;
wire   [63:0] tmp_41_fu_2149_p1;
wire    ap_block_pp9_stage0;
wire    ap_block_pp10_stage0;
wire   [63:0] tmp_43_fu_2212_p1;
wire   [63:0] tmp_46_fu_2247_p1;
wire    ap_block_pp12_stage0;
wire    ap_block_pp13_stage0;
wire    ap_block_pp14_stage0;
wire    ap_block_pp15_stage0;
wire   [63:0] tmp_53_fu_2344_p1;
wire    ap_block_pp17_stage0;
wire    ap_block_pp18_stage0;
wire   [63:0] tmp_56_fu_2407_p1;
wire   [63:0] i_cast_fu_2432_p1;
wire    ap_block_pp20_stage0;
wire    ap_block_pp21_stage0;
wire    ap_block_pp22_stage0;
wire    ap_block_pp23_stage0;
wire   [63:0] i_1_cast_fu_2547_p1;
wire    ap_block_pp25_stage0;
wire    ap_block_pp26_stage0;
wire    ap_block_pp27_stage0;
wire    ap_block_pp28_stage0;
wire   [63:0] i_2_cast_fu_2653_p1;
wire   [63:0] i_3_cast_fu_2762_p1;
wire   [63:0] i_4_cast_fu_2779_p1;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state121;
wire   [31:0] tmp_79_fu_1900_p2;
wire    ap_CS_fsm_state63;
reg   [31:0] grp_fu_1893_p0;
reg   [31:0] grp_fu_1893_p1;
wire   [31:0] xmax_2_to_int_fu_2670_p1;
wire   [31:0] xmax1_to_int_fu_2688_p1;
wire   [7:0] tmp_5_fu_2674_p4;
wire   [22:0] tmp_92_fu_2684_p1;
wire   [0:0] notrhs_fu_2712_p2;
wire   [0:0] notlhs_fu_2706_p2;
wire   [7:0] tmp_7_fu_2692_p4;
wire   [22:0] tmp_93_fu_2702_p1;
wire   [0:0] notrhs1_fu_2730_p2;
wire   [0:0] notlhs1_fu_2724_p2;
wire   [0:0] tmp_9_fu_2718_p2;
wire   [0:0] tmp_10_fu_2736_p2;
wire   [0:0] tmp_11_fu_2742_p2;
wire   [0:0] tmp_12_fu_1912_p2;
wire   [0:0] tmp_13_fu_2748_p2;
reg   [1:0] grp_fu_1893_opcode;
reg   [98:0] ap_NS_fsm;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
reg    ap_idle_pp9;
wire    ap_enable_pp9;
reg    ap_idle_pp10;
wire    ap_enable_pp10;
reg    ap_idle_pp12;
wire    ap_enable_pp12;
reg    ap_idle_pp13;
wire    ap_enable_pp13;
reg    ap_idle_pp14;
wire    ap_enable_pp14;
reg    ap_idle_pp15;
wire    ap_enable_pp15;
reg    ap_idle_pp17;
wire    ap_enable_pp17;
reg    ap_idle_pp18;
wire    ap_enable_pp18;
reg    ap_idle_pp19;
wire    ap_enable_pp19;
reg    ap_idle_pp20;
wire    ap_enable_pp20;
reg    ap_idle_pp21;
wire    ap_enable_pp21;
reg    ap_idle_pp22;
wire    ap_enable_pp22;
reg    ap_idle_pp23;
wire    ap_enable_pp23;
reg    ap_idle_pp24;
wire    ap_enable_pp24;
reg    ap_idle_pp25;
wire    ap_enable_pp25;
reg    ap_idle_pp26;
wire    ap_enable_pp26;
reg    ap_idle_pp27;
wire    ap_enable_pp27;
reg    ap_idle_pp28;
wire    ap_enable_pp28;

// power-on initialization
initial begin
#0 ap_CS_fsm = 99'd1;
#0 dense_output_ndim = 64'd0;
#0 dense_output_numel = 64'd0;
#0 batch_normalization_1 = 64'd0;
#0 batch_normalization_3 = 64'd0;
#0 dense_1_output_ndim = 64'd0;
#0 dense_1_output_numel = 64'd0;
#0 dense_1_kernel_ndim = 64'd0;
#0 dense_1_kernel_numel = 64'd0;
#0 dense_1_bias_numel = 64'd0;
#0 batch_normalization_9 = 64'd0;
#0 batch_normalization_12 = 64'd0;
#0 dense_2_output_ndim = 1'd0;
#0 dense_2_output_numel = 64'd0;
#0 dense_2_kernel_ndim = 64'd0;
#0 dense_2_kernel_numel = 64'd0;
#0 dense_2_bias_numel = 64'd0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp9_iter0 = 1'b0;
#0 ap_enable_reg_pp10_iter0 = 1'b0;
#0 ap_enable_reg_pp12_iter0 = 1'b0;
#0 ap_enable_reg_pp13_iter0 = 1'b0;
#0 ap_enable_reg_pp14_iter0 = 1'b0;
#0 ap_enable_reg_pp15_iter0 = 1'b0;
#0 ap_enable_reg_pp17_iter0 = 1'b0;
#0 ap_enable_reg_pp18_iter0 = 1'b0;
#0 ap_enable_reg_pp19_iter0 = 1'b0;
#0 ap_enable_reg_pp20_iter0 = 1'b0;
#0 ap_enable_reg_pp21_iter0 = 1'b0;
#0 ap_enable_reg_pp22_iter0 = 1'b0;
#0 ap_enable_reg_pp23_iter0 = 1'b0;
#0 ap_enable_reg_pp24_iter0 = 1'b0;
#0 ap_enable_reg_pp25_iter0 = 1'b0;
#0 ap_enable_reg_pp26_iter0 = 1'b0;
#0 ap_enable_reg_pp27_iter0 = 1'b0;
#0 ap_enable_reg_pp28_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 ap_enable_reg_pp9_iter1 = 1'b0;
#0 ap_enable_reg_pp10_iter1 = 1'b0;
#0 ap_enable_reg_pp12_iter1 = 1'b0;
#0 ap_enable_reg_pp13_iter1 = 1'b0;
#0 ap_enable_reg_pp14_iter1 = 1'b0;
#0 ap_enable_reg_pp15_iter1 = 1'b0;
#0 ap_enable_reg_pp17_iter1 = 1'b0;
#0 ap_enable_reg_pp18_iter1 = 1'b0;
#0 ap_enable_reg_pp19_iter1 = 1'b0;
#0 ap_enable_reg_pp19_iter2 = 1'b0;
#0 ap_enable_reg_pp19_iter3 = 1'b0;
#0 ap_enable_reg_pp19_iter4 = 1'b0;
#0 ap_enable_reg_pp19_iter5 = 1'b0;
#0 ap_enable_reg_pp19_iter6 = 1'b0;
#0 ap_enable_reg_pp19_iter7 = 1'b0;
#0 ap_enable_reg_pp20_iter1 = 1'b0;
#0 ap_enable_reg_pp21_iter1 = 1'b0;
#0 ap_enable_reg_pp22_iter1 = 1'b0;
#0 ap_enable_reg_pp23_iter1 = 1'b0;
#0 ap_enable_reg_pp24_iter1 = 1'b0;
#0 ap_enable_reg_pp24_iter2 = 1'b0;
#0 ap_enable_reg_pp24_iter3 = 1'b0;
#0 ap_enable_reg_pp24_iter4 = 1'b0;
#0 ap_enable_reg_pp24_iter5 = 1'b0;
#0 ap_enable_reg_pp24_iter6 = 1'b0;
#0 ap_enable_reg_pp24_iter7 = 1'b0;
#0 ap_enable_reg_pp25_iter1 = 1'b0;
#0 ap_enable_reg_pp26_iter1 = 1'b0;
#0 ap_enable_reg_pp27_iter1 = 1'b0;
#0 ap_enable_reg_pp28_iter1 = 1'b0;
#0 grp_k2c_dense_1_fu_1786_ap_start_reg = 1'b0;
#0 grp_k2c_dense_2_fu_1809_ap_start_reg = 1'b0;
#0 grp_k2c_dense_fu_1832_ap_start_reg = 1'b0;
#0 grp_generic_tanh_float_s_fu_1851_ap_start_reg = 1'b0;
#0 grp_k2c_batch_norm_fu_1866_ap_start_reg = 1'b0;
end

face_classifier_cwdI #(
    .DataWidth( 32 ),
    .AddressRange( 300000 ),
    .AddressWidth( 19 ))
dense_output_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_output_array_address0),
    .ce0(dense_output_array_ce0),
    .we0(dense_output_array_we0),
    .d0(dense_output_array_d0),
    .q0(dense_output_array_q0)
);

face_classifier_cwdI #(
    .DataWidth( 32 ),
    .AddressRange( 300000 ),
    .AddressWidth( 19 ))
dense_kernel_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_kernel_array_address0),
    .ce0(dense_kernel_array_ce0),
    .we0(dense_kernel_array_we0),
    .d0(32'd0),
    .q0(dense_kernel_array_q0)
);

face_classifier_cyd2 #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
dense_bias_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_bias_array_address0),
    .ce0(dense_bias_array_ce0),
    .q0(dense_bias_array_q0)
);

face_classifier_cwdI #(
    .DataWidth( 32 ),
    .AddressRange( 300000 ),
    .AddressWidth( 19 ))
dense_bias_array_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_bias_array_0_address0),
    .ce0(dense_bias_array_0_ce0),
    .we0(dense_bias_array_0_we0),
    .d0(dense_bias_array_q0),
    .q0(dense_bias_array_0_q0)
);

face_classifier_cAem #(
    .DataWidth( 32 ),
    .AddressRange( 300000 ),
    .AddressWidth( 19 ))
batch_normalization_25_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_25_address0),
    .ce0(batch_normalization_25_ce0),
    .we0(batch_normalization_25_we0),
    .d0(batch_normalization_25_d0),
    .q0(batch_normalization_25_q0),
    .address1(batch_normalization_25_address1),
    .ce1(batch_normalization_25_ce1),
    .we1(batch_normalization_25_we1),
    .d1(grp_generic_tanh_float_s_fu_1851_ap_return),
    .q1(batch_normalization_25_q1)
);

face_classifier_cBew #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
batch_normalization_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_11_address0),
    .ce0(batch_normalization_11_ce0),
    .q0(batch_normalization_11_q0)
);

face_classifier_cwdI #(
    .DataWidth( 32 ),
    .AddressRange( 300000 ),
    .AddressWidth( 19 ))
batch_normalization_24_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_24_address0),
    .ce0(batch_normalization_24_ce0),
    .we0(batch_normalization_24_we0),
    .d0(batch_normalization_11_q0),
    .q0(batch_normalization_24_q0)
);

face_classifier_cDeQ #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
batch_normalization_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_s_address0),
    .ce0(batch_normalization_s_ce0),
    .q0(batch_normalization_s_q0)
);

face_classifier_cwdI #(
    .DataWidth( 32 ),
    .AddressRange( 300000 ),
    .AddressWidth( 19 ))
batch_normalization_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_21_address0),
    .ce0(batch_normalization_21_ce0),
    .we0(batch_normalization_21_we0),
    .d0(batch_normalization_s_q0),
    .q0(batch_normalization_21_q0)
);

face_classifier_cFfa #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
batch_normalization_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_14_address0),
    .ce0(batch_normalization_14_ce0),
    .q0(batch_normalization_14_q0)
);

face_classifier_cwdI #(
    .DataWidth( 32 ),
    .AddressRange( 300000 ),
    .AddressWidth( 19 ))
batch_normalization_23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_23_address0),
    .ce0(batch_normalization_23_ce0),
    .we0(batch_normalization_23_we0),
    .d0(batch_normalization_14_q0),
    .q0(batch_normalization_23_q0)
);

face_classifier_cHfu #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
batch_normalization_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_17_address0),
    .ce0(batch_normalization_17_ce0),
    .q0(batch_normalization_17_q0)
);

face_classifier_cwdI #(
    .DataWidth( 32 ),
    .AddressRange( 300000 ),
    .AddressWidth( 19 ))
batch_normalization_22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_22_address0),
    .ce0(batch_normalization_22_ce0),
    .we0(batch_normalization_22_we0),
    .d0(batch_normalization_17_q0),
    .q0(batch_normalization_22_q0)
);

face_classifier_cwdI #(
    .DataWidth( 32 ),
    .AddressRange( 300000 ),
    .AddressWidth( 19 ))
dense_1_output_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_output_array_address0),
    .ce0(dense_1_output_array_ce0),
    .we0(dense_1_output_array_we0),
    .d0(dense_1_output_array_d0),
    .q0(dense_1_output_array_q0)
);

face_classifier_cKfY #(
    .DataWidth( 32 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
dense_1_kernel_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_kernel_array_address0),
    .ce0(dense_1_kernel_array_ce0),
    .q0(dense_1_kernel_array_q0)
);

face_classifier_cwdI #(
    .DataWidth( 32 ),
    .AddressRange( 300000 ),
    .AddressWidth( 19 ))
dense_1_kernel_array_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_kernel_array_2_address0),
    .ce0(dense_1_kernel_array_2_ce0),
    .we0(dense_1_kernel_array_2_we0),
    .d0(dense_1_kernel_array_q0),
    .q0(dense_1_kernel_array_2_q0)
);

face_classifier_cMgi #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_1_bias_array1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_bias_array1_address0),
    .ce0(dense_1_bias_array1_ce0),
    .q0(dense_1_bias_array1_q0)
);

face_classifier_cwdI #(
    .DataWidth( 32 ),
    .AddressRange( 300000 ),
    .AddressWidth( 19 ))
dense_1_bias_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_bias_array_address0),
    .ce0(dense_1_bias_array_ce0),
    .we0(dense_1_bias_array_we0),
    .d0(dense_1_bias_array1_q0),
    .q0(dense_1_bias_array_q0)
);

face_classifier_cAem #(
    .DataWidth( 32 ),
    .AddressRange( 300000 ),
    .AddressWidth( 19 ))
batch_normalization_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_8_address0),
    .ce0(batch_normalization_8_ce0),
    .we0(batch_normalization_8_we0),
    .d0(batch_normalization_8_d0),
    .q0(batch_normalization_8_q0),
    .address1(batch_normalization_8_address1),
    .ce1(batch_normalization_8_ce1),
    .we1(batch_normalization_8_we1),
    .d1(grp_generic_tanh_float_s_fu_1851_ap_return),
    .q1(batch_normalization_8_q1)
);

face_classifier_cPgM #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
batch_normalization_31_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_31_address0),
    .ce0(batch_normalization_31_ce0),
    .q0(batch_normalization_31_q0)
);

face_classifier_cwdI #(
    .DataWidth( 32 ),
    .AddressRange( 300000 ),
    .AddressWidth( 19 ))
batch_normalization_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_7_address0),
    .ce0(batch_normalization_7_ce0),
    .we0(batch_normalization_7_we0),
    .d0(batch_normalization_31_q0),
    .q0(batch_normalization_7_q0)
);

face_classifier_cRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
batch_normalization_20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_20_address0),
    .ce0(batch_normalization_20_ce0),
    .q0(batch_normalization_20_q0)
);

face_classifier_cwdI #(
    .DataWidth( 32 ),
    .AddressRange( 300000 ),
    .AddressWidth( 19 ))
batch_normalization_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_18_address0),
    .ce0(batch_normalization_18_ce0),
    .we0(batch_normalization_18_we0),
    .d0(batch_normalization_20_q0),
    .q0(batch_normalization_18_q0)
);

face_classifier_cThq #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
batch_normalization_34_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_34_address0),
    .ce0(batch_normalization_34_ce0),
    .q0(batch_normalization_34_q0)
);

face_classifier_cwdI #(
    .DataWidth( 32 ),
    .AddressRange( 300000 ),
    .AddressWidth( 19 ))
batch_normalization_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_6_address0),
    .ce0(batch_normalization_6_ce0),
    .we0(batch_normalization_6_we0),
    .d0(batch_normalization_34_q0),
    .q0(batch_normalization_6_q0)
);

face_classifier_cVhK #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
batch_normalization_37_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_37_address0),
    .ce0(batch_normalization_37_ce0),
    .q0(batch_normalization_37_q0)
);

face_classifier_cwdI #(
    .DataWidth( 32 ),
    .AddressRange( 300000 ),
    .AddressWidth( 19 ))
batch_normalization_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_5_address0),
    .ce0(batch_normalization_5_ce0),
    .we0(batch_normalization_5_we0),
    .d0(batch_normalization_37_q0),
    .q0(batch_normalization_5_q0)
);

face_classifier_cwdI #(
    .DataWidth( 32 ),
    .AddressRange( 300000 ),
    .AddressWidth( 19 ))
dense_2_output_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_output_array_address0),
    .ce0(dense_2_output_array_ce0),
    .we0(dense_2_output_array_we0),
    .d0(dense_2_output_array_d0),
    .q0(dense_2_output_array_q0)
);

face_classifier_cYie #(
    .DataWidth( 32 ),
    .AddressRange( 60 ),
    .AddressWidth( 6 ))
dense_2_kernel_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_kernel_array_address0),
    .ce0(dense_2_kernel_array_ce0),
    .q0(dense_2_kernel_array_q0)
);

face_classifier_cwdI #(
    .DataWidth( 32 ),
    .AddressRange( 300000 ),
    .AddressWidth( 19 ))
dense_2_kernel_array_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_kernel_array_1_address0),
    .ce0(dense_2_kernel_array_1_ce0),
    .we0(dense_2_kernel_array_1_we0),
    .d0(dense_2_kernel_array_q0),
    .q0(dense_2_kernel_array_1_q0)
);

face_classifier_c0iy #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
dense_2_bias_array6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_bias_array6_address0),
    .ce0(dense_2_bias_array6_ce0),
    .q0(dense_2_bias_array6_q0)
);

face_classifier_cwdI #(
    .DataWidth( 32 ),
    .AddressRange( 300000 ),
    .AddressWidth( 19 ))
dense_2_bias_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_bias_array_address0),
    .ce0(dense_2_bias_array_ce0),
    .we0(dense_2_bias_array_we0),
    .d0(dense_2_bias_array6_q0),
    .q0(dense_2_bias_array_q0)
);

face_classifier_c2iS #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dense_kernel_shape_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_kernel_shape_address0),
    .ce0(dense_kernel_shape_ce0),
    .we0(dense_kernel_shape_we0),
    .d0(dense_kernel_shape_d0),
    .q0(dense_kernel_shape_q0),
    .address1(dense_kernel_shape_address1),
    .ce1(dense_kernel_shape_ce1),
    .we1(dense_kernel_shape_we1),
    .d1(64'd1),
    .q1(dense_kernel_shape_q1)
);

face_classifier_c3i2 #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dense_output_shape_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_output_shape_address0),
    .ce0(dense_output_shape_ce0),
    .we0(dense_output_shape_we0),
    .d0(dense_output_shape_d0),
    .q0(dense_output_shape_q0),
    .address1(dense_output_shape_address1),
    .ce1(dense_output_shape_ce1),
    .we1(dense_output_shape_we1),
    .d1(64'd1)
);

face_classifier_c4jc #(
    .DataWidth( 9 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
batch_normalization_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_4_address0),
    .ce0(batch_normalization_4_ce0),
    .we0(batch_normalization_4_we0),
    .d0(batch_normalization_4_d0),
    .address1(batch_normalization_4_address1),
    .ce1(batch_normalization_4_ce1),
    .we1(batch_normalization_4_we1),
    .d1(9'd1),
    .q1(batch_normalization_4_q1)
);

face_classifier_c5jm #(
    .DataWidth( 9 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
activation_1_output_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(activation_1_output_s_address0),
    .ce0(activation_1_output_s_ce0),
    .we0(activation_1_output_s_we0),
    .d0(batch_normalization_4_q1),
    .q0(activation_1_output_s_q0)
);

face_classifier_cwdI #(
    .DataWidth( 32 ),
    .AddressRange( 300000 ),
    .AddressWidth( 19 ))
activation_1_output_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(activation_1_output_1_address0),
    .ce0(activation_1_output_1_ce0),
    .we0(activation_1_output_1_we0),
    .d0(batch_normalization_25_q1),
    .q0(activation_1_output_1_q0)
);

face_classifier_c7jG #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dropout_2_output_sha_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dropout_2_output_sha_address0),
    .ce0(dropout_2_output_sha_ce0),
    .we0(dropout_2_output_sha_we0),
    .d0(dropout_2_output_sha_d0),
    .q0(dropout_2_output_sha_q0)
);

face_classifier_cwdI #(
    .DataWidth( 32 ),
    .AddressRange( 300000 ),
    .AddressWidth( 19 ))
dropout_2_output_arr_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dropout_2_output_arr_address0),
    .ce0(dropout_2_output_arr_ce0),
    .we0(dropout_2_output_arr_we0),
    .d0(activation_1_output_1_q0),
    .q0(dropout_2_output_arr_q0)
);

face_classifier_c2iS #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dense_1_kernel_shape_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_kernel_shape_address0),
    .ce0(dense_1_kernel_shape_ce0),
    .we0(dense_1_kernel_shape_we0),
    .d0(dense_1_kernel_shape_d0),
    .q0(dense_1_kernel_shape_q0),
    .address1(dense_1_kernel_shape_address1),
    .ce1(dense_1_kernel_shape_ce1),
    .we1(dense_1_kernel_shape_we1),
    .d1(64'd1),
    .q1(dense_1_kernel_shape_q1)
);

face_classifier_c3i2 #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dense_1_output_shape_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_output_shape_address0),
    .ce0(dense_1_output_shape_ce0),
    .we0(dense_1_output_shape_we0),
    .d0(dense_1_output_shape_d0),
    .q0(dense_1_output_shape_q0),
    .address1(dense_1_output_shape_address1),
    .ce1(dense_1_output_shape_ce1),
    .we1(dense_1_output_shape_we1),
    .d1(64'd1)
);

face_classifier_cbbk #(
    .DataWidth( 6 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
batch_normalization_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_15_address0),
    .ce0(batch_normalization_15_ce0),
    .we0(batch_normalization_15_we0),
    .d0(batch_normalization_15_d0),
    .address1(batch_normalization_15_address1),
    .ce1(batch_normalization_15_ce1),
    .we1(batch_normalization_15_we1),
    .d1(6'd1),
    .q1(batch_normalization_15_q1)
);

face_classifier_cbck #(
    .DataWidth( 6 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
activation_2_output_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(activation_2_output_s_address0),
    .ce0(activation_2_output_s_ce0),
    .we0(activation_2_output_s_we0),
    .d0(batch_normalization_15_q1),
    .q0(activation_2_output_s_q0)
);

face_classifier_cwdI #(
    .DataWidth( 32 ),
    .AddressRange( 300000 ),
    .AddressWidth( 19 ))
activation_2_output_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(activation_2_output_1_address0),
    .ce0(activation_2_output_1_ce0),
    .we0(activation_2_output_1_we0),
    .d0(batch_normalization_8_q1),
    .q0(activation_2_output_1_q0)
);

face_classifier_c7jG #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dropout_3_output_sha_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dropout_3_output_sha_address0),
    .ce0(dropout_3_output_sha_ce0),
    .we0(dropout_3_output_sha_we0),
    .d0(dropout_3_output_sha_d0),
    .q0(dropout_3_output_sha_q0)
);

face_classifier_cwdI #(
    .DataWidth( 32 ),
    .AddressRange( 300000 ),
    .AddressWidth( 19 ))
dropout_3_output_arr_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dropout_3_output_arr_address0),
    .ce0(dropout_3_output_arr_ce0),
    .we0(dropout_3_output_arr_we0),
    .d0(activation_2_output_1_q0),
    .q0(dropout_3_output_arr_q0)
);

face_classifier_c2iS #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dense_2_kernel_shape_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_kernel_shape_address0),
    .ce0(dense_2_kernel_shape_ce0),
    .we0(dense_2_kernel_shape_we0),
    .d0(dense_2_kernel_shape_d0),
    .q0(dense_2_kernel_shape_q0),
    .address1(dense_2_kernel_shape_address1),
    .ce1(dense_2_kernel_shape_ce1),
    .we1(dense_2_kernel_shape_we1),
    .d1(64'd1),
    .q1(dense_2_kernel_shape_q1)
);

face_classifier_cbhl #(
    .DataWidth( 5 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dense_2_output_shape_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_output_shape_address0),
    .ce0(dense_2_output_shape_ce0),
    .we0(dense_2_output_shape_we0),
    .d0(dense_2_output_shape_d0),
    .address1(dense_2_output_shape_address1),
    .ce1(dense_2_output_shape_ce1),
    .we1(dense_2_output_shape_we1),
    .d1(5'd1),
    .q1(dense_2_output_shape_q1)
);

face_classifier_cbil #(
    .DataWidth( 32 ),
    .AddressRange( 264822 ),
    .AddressWidth( 19 ))
dense_fwork_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_fwork_address0),
    .ce0(dense_fwork_ce0),
    .we0(dense_fwork_we0),
    .d0(dense_fwork_d0),
    .q0(dense_fwork_q0),
    .address1(grp_k2c_dense_fu_1832_fwork_address1),
    .ce1(dense_fwork_ce1),
    .q1(dense_fwork_q1)
);

face_classifier_cbjl #(
    .DataWidth( 32 ),
    .AddressRange( 1100 ),
    .AddressWidth( 11 ))
dense_1_fwork_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_fwork_address0),
    .ce0(dense_1_fwork_ce0),
    .we0(dense_1_fwork_we0),
    .d0(dense_1_fwork_d0),
    .q0(dense_1_fwork_q0),
    .address1(grp_k2c_dense_2_fu_1809_fwork_address1),
    .ce1(dense_1_fwork_ce1),
    .q1(dense_1_fwork_q1)
);

face_classifier_cbkl #(
    .DataWidth( 32 ),
    .AddressRange( 70 ),
    .AddressWidth( 7 ))
dense_2_fwork_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_fwork_address0),
    .ce0(dense_2_fwork_ce0),
    .we0(dense_2_fwork_we0),
    .d0(dense_2_fwork_d0),
    .q0(dense_2_fwork_q0),
    .address1(grp_k2c_dense_1_fu_1786_fwork_address1),
    .ce1(dense_2_fwork_ce1),
    .q1(dense_2_fwork_q1)
);

k2c_dense_1 grp_k2c_dense_1_fu_1786(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_dense_1_fu_1786_ap_start),
    .ap_done(grp_k2c_dense_1_fu_1786_ap_done),
    .ap_idle(grp_k2c_dense_1_fu_1786_ap_idle),
    .ap_ready(grp_k2c_dense_1_fu_1786_ap_ready),
    .output_array_address0(grp_k2c_dense_1_fu_1786_output_array_address0),
    .output_array_ce0(grp_k2c_dense_1_fu_1786_output_array_ce0),
    .output_array_we0(grp_k2c_dense_1_fu_1786_output_array_we0),
    .output_array_d0(grp_k2c_dense_1_fu_1786_output_array_d0),
    .output_array_q0(dense_2_output_array_q0),
    .output_numel_read(reg_1943),
    .input_array_address0(grp_k2c_dense_1_fu_1786_input_array_address0),
    .input_array_ce0(grp_k2c_dense_1_fu_1786_input_array_ce0),
    .input_array_q0(dropout_3_output_arr_q0),
    .input_ndim_read(batch_normalization_66_reg_3330),
    .input_numel_read(batch_normalization_63_reg_3307),
    .input_shape_address0(grp_k2c_dense_1_fu_1786_input_shape_address0),
    .input_shape_ce0(grp_k2c_dense_1_fu_1786_input_shape_ce0),
    .input_shape_q0(dropout_3_output_sha_q0),
    .kernel_array_address0(grp_k2c_dense_1_fu_1786_kernel_array_address0),
    .kernel_array_ce0(grp_k2c_dense_1_fu_1786_kernel_array_ce0),
    .kernel_array_q0(dense_2_kernel_array_1_q0),
    .kernel_ndim_read(dense_2_kernel_ndim),
    .kernel_numel_read(dense_2_kernel_numel),
    .kernel_shape_address0(grp_k2c_dense_1_fu_1786_kernel_shape_address0),
    .kernel_shape_ce0(grp_k2c_dense_1_fu_1786_kernel_shape_ce0),
    .kernel_shape_q0(dense_2_kernel_shape_q0),
    .kernel_shape_address1(grp_k2c_dense_1_fu_1786_kernel_shape_address1),
    .kernel_shape_ce1(grp_k2c_dense_1_fu_1786_kernel_shape_ce1),
    .kernel_shape_q1(dense_2_kernel_shape_q1),
    .bias_array_address0(grp_k2c_dense_1_fu_1786_bias_array_address0),
    .bias_array_ce0(grp_k2c_dense_1_fu_1786_bias_array_ce0),
    .bias_array_q0(dense_2_bias_array_q0),
    .bias_numel_read(dense_2_bias_numel),
    .fwork_address0(grp_k2c_dense_1_fu_1786_fwork_address0),
    .fwork_ce0(grp_k2c_dense_1_fu_1786_fwork_ce0),
    .fwork_we0(grp_k2c_dense_1_fu_1786_fwork_we0),
    .fwork_d0(grp_k2c_dense_1_fu_1786_fwork_d0),
    .fwork_q0(dense_2_fwork_q0),
    .fwork_address1(grp_k2c_dense_1_fu_1786_fwork_address1),
    .fwork_ce1(grp_k2c_dense_1_fu_1786_fwork_ce1),
    .fwork_q1(dense_2_fwork_q1)
);

k2c_dense_2 grp_k2c_dense_2_fu_1809(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_dense_2_fu_1809_ap_start),
    .ap_done(grp_k2c_dense_2_fu_1809_ap_done),
    .ap_idle(grp_k2c_dense_2_fu_1809_ap_idle),
    .ap_ready(grp_k2c_dense_2_fu_1809_ap_ready),
    .output_array_address0(grp_k2c_dense_2_fu_1809_output_array_address0),
    .output_array_ce0(grp_k2c_dense_2_fu_1809_output_array_ce0),
    .output_array_we0(grp_k2c_dense_2_fu_1809_output_array_we0),
    .output_array_d0(grp_k2c_dense_2_fu_1809_output_array_d0),
    .output_array_q0(dense_1_output_array_q0),
    .output_numel_read(reg_1937),
    .input_array_address0(grp_k2c_dense_2_fu_1809_input_array_address0),
    .input_array_ce0(grp_k2c_dense_2_fu_1809_input_array_ce0),
    .input_array_q0(dropout_2_output_arr_q0),
    .input_ndim_read(batch_normalization_58_reg_3206),
    .input_numel_read(batch_normalization_55_reg_3183),
    .input_shape_address0(grp_k2c_dense_2_fu_1809_input_shape_address0),
    .input_shape_ce0(grp_k2c_dense_2_fu_1809_input_shape_ce0),
    .input_shape_q0(dropout_2_output_sha_q0),
    .kernel_array_address0(grp_k2c_dense_2_fu_1809_kernel_array_address0),
    .kernel_array_ce0(grp_k2c_dense_2_fu_1809_kernel_array_ce0),
    .kernel_array_q0(dense_1_kernel_array_2_q0),
    .kernel_ndim_read(dense_1_kernel_ndim),
    .kernel_numel_read(dense_1_kernel_numel),
    .kernel_shape_address0(grp_k2c_dense_2_fu_1809_kernel_shape_address0),
    .kernel_shape_ce0(grp_k2c_dense_2_fu_1809_kernel_shape_ce0),
    .kernel_shape_q0(dense_1_kernel_shape_q0),
    .kernel_shape_address1(grp_k2c_dense_2_fu_1809_kernel_shape_address1),
    .kernel_shape_ce1(grp_k2c_dense_2_fu_1809_kernel_shape_ce1),
    .kernel_shape_q1(dense_1_kernel_shape_q1),
    .bias_array_address0(grp_k2c_dense_2_fu_1809_bias_array_address0),
    .bias_array_ce0(grp_k2c_dense_2_fu_1809_bias_array_ce0),
    .bias_array_q0(dense_1_bias_array_q0),
    .bias_numel_read(dense_1_bias_numel),
    .fwork_address0(grp_k2c_dense_2_fu_1809_fwork_address0),
    .fwork_ce0(grp_k2c_dense_2_fu_1809_fwork_ce0),
    .fwork_we0(grp_k2c_dense_2_fu_1809_fwork_we0),
    .fwork_d0(grp_k2c_dense_2_fu_1809_fwork_d0),
    .fwork_q0(dense_1_fwork_q0),
    .fwork_address1(grp_k2c_dense_2_fu_1809_fwork_address1),
    .fwork_ce1(grp_k2c_dense_2_fu_1809_fwork_ce1),
    .fwork_q1(dense_1_fwork_q1)
);

k2c_dense grp_k2c_dense_fu_1832(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_dense_fu_1832_ap_start),
    .ap_done(grp_k2c_dense_fu_1832_ap_done),
    .ap_idle(grp_k2c_dense_fu_1832_ap_idle),
    .ap_ready(grp_k2c_dense_fu_1832_ap_ready),
    .output_array_address0(grp_k2c_dense_fu_1832_output_array_address0),
    .output_array_ce0(grp_k2c_dense_fu_1832_output_array_ce0),
    .output_array_we0(grp_k2c_dense_fu_1832_output_array_we0),
    .output_array_d0(grp_k2c_dense_fu_1832_output_array_d0),
    .output_array_q0(dense_output_array_q0),
    .input_array_address0(grp_k2c_dense_fu_1832_input_array_address0),
    .input_array_ce0(grp_k2c_dense_fu_1832_input_array_ce0),
    .input_array_q0(dense_input_input_array_q0),
    .input_ndim_read(dense_input_input_ndim),
    .input_numel_read(dense_input_input_numel),
    .input_shape_address0(grp_k2c_dense_fu_1832_input_shape_address0),
    .input_shape_ce0(grp_k2c_dense_fu_1832_input_shape_ce0),
    .input_shape_q0(dense_input_input_shape_q0),
    .kernel_array_address0(grp_k2c_dense_fu_1832_kernel_array_address0),
    .kernel_array_ce0(grp_k2c_dense_fu_1832_kernel_array_ce0),
    .kernel_array_q0(dense_kernel_array_q0),
    .kernel_shape_address0(grp_k2c_dense_fu_1832_kernel_shape_address0),
    .kernel_shape_ce0(grp_k2c_dense_fu_1832_kernel_shape_ce0),
    .kernel_shape_q0(dense_kernel_shape_q0),
    .kernel_shape_address1(grp_k2c_dense_fu_1832_kernel_shape_address1),
    .kernel_shape_ce1(grp_k2c_dense_fu_1832_kernel_shape_ce1),
    .kernel_shape_q1(dense_kernel_shape_q1),
    .bias_array_address0(grp_k2c_dense_fu_1832_bias_array_address0),
    .bias_array_ce0(grp_k2c_dense_fu_1832_bias_array_ce0),
    .bias_array_q0(dense_bias_array_0_q0),
    .fwork_address0(grp_k2c_dense_fu_1832_fwork_address0),
    .fwork_ce0(grp_k2c_dense_fu_1832_fwork_ce0),
    .fwork_we0(grp_k2c_dense_fu_1832_fwork_we0),
    .fwork_d0(grp_k2c_dense_fu_1832_fwork_d0),
    .fwork_q0(dense_fwork_q0),
    .fwork_address1(grp_k2c_dense_fu_1832_fwork_address1),
    .fwork_ce1(grp_k2c_dense_fu_1832_fwork_ce1),
    .fwork_q1(dense_fwork_q1)
);

generic_tanh_float_s grp_generic_tanh_float_s_fu_1851(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_tanh_float_s_fu_1851_ap_start),
    .ap_done(grp_generic_tanh_float_s_fu_1851_ap_done),
    .ap_idle(grp_generic_tanh_float_s_fu_1851_ap_idle),
    .ap_ready(grp_generic_tanh_float_s_fu_1851_ap_ready),
    .ap_ce(1'b1),
    .t_in(grp_generic_tanh_float_s_fu_1851_t_in),
    .ap_return(grp_generic_tanh_float_s_fu_1851_ap_return)
);

k2c_batch_norm grp_k2c_batch_norm_fu_1866(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_batch_norm_fu_1866_ap_start),
    .ap_done(grp_k2c_batch_norm_fu_1866_ap_done),
    .ap_idle(grp_k2c_batch_norm_fu_1866_ap_idle),
    .ap_ready(grp_k2c_batch_norm_fu_1866_ap_ready),
    .outputs_array_address0(grp_k2c_batch_norm_fu_1866_outputs_array_address0),
    .outputs_array_ce0(grp_k2c_batch_norm_fu_1866_outputs_array_ce0),
    .outputs_array_we0(grp_k2c_batch_norm_fu_1866_outputs_array_we0),
    .outputs_array_d0(grp_k2c_batch_norm_fu_1866_outputs_array_d0),
    .inputs_array_address0(grp_k2c_batch_norm_fu_1866_inputs_array_address0),
    .inputs_array_ce0(grp_k2c_batch_norm_fu_1866_inputs_array_ce0),
    .inputs_array_q0(grp_k2c_batch_norm_fu_1866_inputs_array_q0),
    .inputs_ndim_read(grp_k2c_batch_norm_fu_1866_inputs_ndim_read),
    .inputs_numel_read(grp_k2c_batch_norm_fu_1866_inputs_numel_read),
    .inputs_shape_address0(grp_k2c_batch_norm_fu_1866_inputs_shape_address0),
    .inputs_shape_ce0(grp_k2c_batch_norm_fu_1866_inputs_shape_ce0),
    .inputs_shape_q0(grp_k2c_batch_norm_fu_1866_inputs_shape_q0),
    .mean_array_address0(grp_k2c_batch_norm_fu_1866_mean_array_address0),
    .mean_array_ce0(grp_k2c_batch_norm_fu_1866_mean_array_ce0),
    .mean_array_q0(grp_k2c_batch_norm_fu_1866_mean_array_q0),
    .stdev_array_address0(grp_k2c_batch_norm_fu_1866_stdev_array_address0),
    .stdev_array_ce0(grp_k2c_batch_norm_fu_1866_stdev_array_ce0),
    .stdev_array_q0(grp_k2c_batch_norm_fu_1866_stdev_array_q0),
    .gamma_array_address0(grp_k2c_batch_norm_fu_1866_gamma_array_address0),
    .gamma_array_ce0(grp_k2c_batch_norm_fu_1866_gamma_array_ce0),
    .gamma_array_q0(grp_k2c_batch_norm_fu_1866_gamma_array_q0),
    .beta_array_address0(grp_k2c_batch_norm_fu_1866_beta_array_address0),
    .beta_array_ce0(grp_k2c_batch_norm_fu_1866_beta_array_ce0),
    .beta_array_q0(grp_k2c_batch_norm_fu_1866_beta_array_q0)
);

face_classifier_cg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_cg8j_U153(
    .din0(grp_fu_1893_p0),
    .din1(grp_fu_1893_p1),
    .opcode(grp_fu_1893_opcode),
    .dout(grp_fu_1893_p2)
);

face_classifier_ccud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_ccud_U154(
    .din0(dense_2_output_array_q0),
    .din1(sum_1_reg_3472),
    .dout(tmp_79_fu_1900_p2)
);

face_classifier_chbi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_chbi_U155(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd1065353216),
    .din1(sum_reg_1741),
    .ce(1'b1),
    .dout(grp_fu_1906_p2)
);

face_classifier_cqcK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
face_classifier_cqcK_U156(
    .din0(dense_2_output_array_q0),
    .din1(xmax1_reg_1720),
    .opcode(5'd2),
    .dout(tmp_12_fu_1912_p2)
);

face_classifier_cbll #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_cbll_U157(
    .din0(32'd0),
    .din1(grp_fu_1893_p2),
    .dout(tmp_77_fu_1918_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp10_stage0) & (1'b1 == ap_condition_pp10_exit_iter0_state39) & (1'b0 == ap_block_pp10_stage0_subdone))) begin
            ap_enable_reg_pp10_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state38)) begin
            ap_enable_reg_pp10_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp10_exit_iter0_state39) & (1'b0 == ap_block_pp10_stage0_subdone))) begin
            ap_enable_reg_pp10_iter1 <= (1'b1 ^ ap_condition_pp10_exit_iter0_state39);
        end else if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter1 <= ap_enable_reg_pp10_iter0;
        end else if ((1'b1 == ap_CS_fsm_state38)) begin
            ap_enable_reg_pp10_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp12_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp12_stage0) & (1'b1 == ap_condition_pp12_exit_iter0_state47) & (1'b0 == ap_block_pp12_stage0_subdone))) begin
            ap_enable_reg_pp12_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state46)) begin
            ap_enable_reg_pp12_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp12_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp12_exit_iter0_state47) & (1'b0 == ap_block_pp12_stage0_subdone))) begin
            ap_enable_reg_pp12_iter1 <= (1'b1 ^ ap_condition_pp12_exit_iter0_state47);
        end else if ((1'b0 == ap_block_pp12_stage0_subdone)) begin
            ap_enable_reg_pp12_iter1 <= ap_enable_reg_pp12_iter0;
        end else if ((1'b1 == ap_CS_fsm_state46)) begin
            ap_enable_reg_pp12_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp13_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp13_stage0) & (1'b1 == ap_condition_pp13_exit_iter0_state50) & (1'b0 == ap_block_pp13_stage0_subdone))) begin
            ap_enable_reg_pp13_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state49)) begin
            ap_enable_reg_pp13_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp13_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp13_exit_iter0_state50) & (1'b0 == ap_block_pp13_stage0_subdone))) begin
            ap_enable_reg_pp13_iter1 <= (1'b1 ^ ap_condition_pp13_exit_iter0_state50);
        end else if ((1'b0 == ap_block_pp13_stage0_subdone)) begin
            ap_enable_reg_pp13_iter1 <= ap_enable_reg_pp13_iter0;
        end else if ((1'b1 == ap_CS_fsm_state49)) begin
            ap_enable_reg_pp13_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp14_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp14_stage0) & (1'b1 == ap_condition_pp14_exit_iter0_state53) & (1'b0 == ap_block_pp14_stage0_subdone))) begin
            ap_enable_reg_pp14_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state52)) begin
            ap_enable_reg_pp14_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp14_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp14_exit_iter0_state53) & (1'b0 == ap_block_pp14_stage0_subdone))) begin
            ap_enable_reg_pp14_iter1 <= (1'b1 ^ ap_condition_pp14_exit_iter0_state53);
        end else if ((1'b0 == ap_block_pp14_stage0_subdone)) begin
            ap_enable_reg_pp14_iter1 <= ap_enable_reg_pp14_iter0;
        end else if ((1'b1 == ap_CS_fsm_state52)) begin
            ap_enable_reg_pp14_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp15_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp15_exit_iter0_state56) & (1'b1 == ap_CS_fsm_pp15_stage0) & (1'b0 == ap_block_pp15_stage0_subdone))) begin
            ap_enable_reg_pp15_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state55)) begin
            ap_enable_reg_pp15_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp15_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp15_exit_iter0_state56) & (1'b0 == ap_block_pp15_stage0_subdone))) begin
            ap_enable_reg_pp15_iter1 <= (1'b1 ^ ap_condition_pp15_exit_iter0_state56);
        end else if ((1'b0 == ap_block_pp15_stage0_subdone)) begin
            ap_enable_reg_pp15_iter1 <= ap_enable_reg_pp15_iter0;
        end else if ((1'b1 == ap_CS_fsm_state55)) begin
            ap_enable_reg_pp15_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp17_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp17_exit_iter0_state65) & (1'b1 == ap_CS_fsm_pp17_stage0) & (1'b0 == ap_block_pp17_stage0_subdone))) begin
            ap_enable_reg_pp17_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state64)) begin
            ap_enable_reg_pp17_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp17_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp17_exit_iter0_state65) & (1'b0 == ap_block_pp17_stage0_subdone))) begin
            ap_enable_reg_pp17_iter1 <= (1'b1 ^ ap_condition_pp17_exit_iter0_state65);
        end else if ((1'b0 == ap_block_pp17_stage0_subdone)) begin
            ap_enable_reg_pp17_iter1 <= ap_enable_reg_pp17_iter0;
        end else if ((1'b1 == ap_CS_fsm_state64)) begin
            ap_enable_reg_pp17_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp18_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp18_exit_iter0_state68) & (1'b1 == ap_CS_fsm_pp18_stage0) & (1'b0 == ap_block_pp18_stage0_subdone))) begin
            ap_enable_reg_pp18_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state67)) begin
            ap_enable_reg_pp18_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp18_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp18_exit_iter0_state68) & (1'b0 == ap_block_pp18_stage0_subdone))) begin
            ap_enable_reg_pp18_iter1 <= (1'b1 ^ ap_condition_pp18_exit_iter0_state68);
        end else if ((1'b0 == ap_block_pp18_stage0_subdone)) begin
            ap_enable_reg_pp18_iter1 <= ap_enable_reg_pp18_iter0;
        end else if ((1'b1 == ap_CS_fsm_state67)) begin
            ap_enable_reg_pp18_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp19_exit_iter0_state75) & (1'b1 == ap_CS_fsm_pp19_stage0) & (1'b0 == ap_block_pp19_stage0_subdone))) begin
            ap_enable_reg_pp19_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state74) & (grp_k2c_batch_norm_fu_1866_ap_done == 1'b1))) begin
            ap_enable_reg_pp19_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp19_exit_iter0_state75)) begin
                ap_enable_reg_pp19_iter1 <= (1'b1 ^ ap_condition_pp19_exit_iter0_state75);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp19_iter1 <= ap_enable_reg_pp19_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter2 <= ap_enable_reg_pp19_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter3 <= ap_enable_reg_pp19_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter4 <= ap_enable_reg_pp19_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter5 <= ap_enable_reg_pp19_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter6 <= ap_enable_reg_pp19_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter7 <= ap_enable_reg_pp19_iter6;
        end else if (((1'b1 == ap_CS_fsm_state74) & (grp_k2c_batch_norm_fu_1866_ap_done == 1'b1))) begin
            ap_enable_reg_pp19_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp20_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp20_exit_iter0_state84) & (1'b1 == ap_CS_fsm_pp20_stage0) & (1'b0 == ap_block_pp20_stage0_subdone))) begin
            ap_enable_reg_pp20_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state83)) begin
            ap_enable_reg_pp20_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp20_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp20_exit_iter0_state84) & (1'b0 == ap_block_pp20_stage0_subdone))) begin
            ap_enable_reg_pp20_iter1 <= (1'b1 ^ ap_condition_pp20_exit_iter0_state84);
        end else if ((1'b0 == ap_block_pp20_stage0_subdone)) begin
            ap_enable_reg_pp20_iter1 <= ap_enable_reg_pp20_iter0;
        end else if ((1'b1 == ap_CS_fsm_state83)) begin
            ap_enable_reg_pp20_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp21_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp21_exit_iter0_state87) & (1'b1 == ap_CS_fsm_pp21_stage0) & (1'b0 == ap_block_pp21_stage0_subdone))) begin
            ap_enable_reg_pp21_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state86)) begin
            ap_enable_reg_pp21_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp21_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp21_exit_iter0_state87) & (1'b0 == ap_block_pp21_stage0_subdone))) begin
            ap_enable_reg_pp21_iter1 <= (1'b1 ^ ap_condition_pp21_exit_iter0_state87);
        end else if ((1'b0 == ap_block_pp21_stage0_subdone)) begin
            ap_enable_reg_pp21_iter1 <= ap_enable_reg_pp21_iter0;
        end else if ((1'b1 == ap_CS_fsm_state86)) begin
            ap_enable_reg_pp21_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp22_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp22_exit_iter0_state90) & (1'b1 == ap_CS_fsm_pp22_stage0) & (1'b0 == ap_block_pp22_stage0_subdone))) begin
            ap_enable_reg_pp22_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state89)) begin
            ap_enable_reg_pp22_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp22_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp22_exit_iter0_state90) & (1'b0 == ap_block_pp22_stage0_subdone))) begin
            ap_enable_reg_pp22_iter1 <= (1'b1 ^ ap_condition_pp22_exit_iter0_state90);
        end else if ((1'b0 == ap_block_pp22_stage0_subdone)) begin
            ap_enable_reg_pp22_iter1 <= ap_enable_reg_pp22_iter0;
        end else if ((1'b1 == ap_CS_fsm_state89)) begin
            ap_enable_reg_pp22_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp23_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp23_exit_iter0_state93) & (1'b1 == ap_CS_fsm_pp23_stage0) & (1'b0 == ap_block_pp23_stage0_subdone))) begin
            ap_enable_reg_pp23_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state92)) begin
            ap_enable_reg_pp23_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp23_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp23_exit_iter0_state93) & (1'b0 == ap_block_pp23_stage0_subdone))) begin
            ap_enable_reg_pp23_iter1 <= (1'b1 ^ ap_condition_pp23_exit_iter0_state93);
        end else if ((1'b0 == ap_block_pp23_stage0_subdone)) begin
            ap_enable_reg_pp23_iter1 <= ap_enable_reg_pp23_iter0;
        end else if ((1'b1 == ap_CS_fsm_state92)) begin
            ap_enable_reg_pp23_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp24_exit_iter0_state99) & (1'b1 == ap_CS_fsm_pp24_stage0) & (1'b0 == ap_block_pp24_stage0_subdone))) begin
            ap_enable_reg_pp24_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state98) & (grp_k2c_batch_norm_fu_1866_ap_done == 1'b1))) begin
            ap_enable_reg_pp24_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp24_exit_iter0_state99)) begin
                ap_enable_reg_pp24_iter1 <= (1'b1 ^ ap_condition_pp24_exit_iter0_state99);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp24_iter1 <= ap_enable_reg_pp24_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter2 <= ap_enable_reg_pp24_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter3 <= ap_enable_reg_pp24_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter4 <= ap_enable_reg_pp24_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter5 <= ap_enable_reg_pp24_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter6 <= ap_enable_reg_pp24_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter7 <= ap_enable_reg_pp24_iter6;
        end else if (((1'b1 == ap_CS_fsm_state98) & (grp_k2c_batch_norm_fu_1866_ap_done == 1'b1))) begin
            ap_enable_reg_pp24_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp25_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp25_exit_iter0_state108) & (1'b1 == ap_CS_fsm_pp25_stage0) & (1'b0 == ap_block_pp25_stage0_subdone))) begin
            ap_enable_reg_pp25_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state107)) begin
            ap_enable_reg_pp25_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp25_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp25_exit_iter0_state108) & (1'b0 == ap_block_pp25_stage0_subdone))) begin
            ap_enable_reg_pp25_iter1 <= (1'b1 ^ ap_condition_pp25_exit_iter0_state108);
        end else if ((1'b0 == ap_block_pp25_stage0_subdone)) begin
            ap_enable_reg_pp25_iter1 <= ap_enable_reg_pp25_iter0;
        end else if ((1'b1 == ap_CS_fsm_state107)) begin
            ap_enable_reg_pp25_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp26_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp26_exit_iter0_state111) & (1'b1 == ap_CS_fsm_pp26_stage0) & (1'b0 == ap_block_pp26_stage0_subdone))) begin
            ap_enable_reg_pp26_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state110)) begin
            ap_enable_reg_pp26_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp26_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp26_exit_iter0_state111) & (1'b0 == ap_block_pp26_stage0_subdone))) begin
            ap_enable_reg_pp26_iter1 <= (1'b1 ^ ap_condition_pp26_exit_iter0_state111);
        end else if ((1'b0 == ap_block_pp26_stage0_subdone)) begin
            ap_enable_reg_pp26_iter1 <= ap_enable_reg_pp26_iter0;
        end else if ((1'b1 == ap_CS_fsm_state110)) begin
            ap_enable_reg_pp26_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp27_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp27_exit_iter0_state114) & (1'b1 == ap_CS_fsm_pp27_stage0) & (1'b0 == ap_block_pp27_stage0_subdone))) begin
            ap_enable_reg_pp27_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state113)) begin
            ap_enable_reg_pp27_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp27_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp27_exit_iter0_state114) & (1'b0 == ap_block_pp27_stage0_subdone))) begin
            ap_enable_reg_pp27_iter1 <= (1'b1 ^ ap_condition_pp27_exit_iter0_state114);
        end else if ((1'b0 == ap_block_pp27_stage0_subdone)) begin
            ap_enable_reg_pp27_iter1 <= ap_enable_reg_pp27_iter0;
        end else if ((1'b1 == ap_CS_fsm_state113)) begin
            ap_enable_reg_pp27_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp28_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp28_exit_iter0_state117) & (1'b1 == ap_CS_fsm_pp28_stage0) & (1'b0 == ap_block_pp28_stage0_subdone))) begin
            ap_enable_reg_pp28_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state116)) begin
            ap_enable_reg_pp28_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp28_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp28_exit_iter0_state117) & (1'b0 == ap_block_pp28_stage0_subdone))) begin
            ap_enable_reg_pp28_iter1 <= (1'b1 ^ ap_condition_pp28_exit_iter0_state117);
        end else if ((1'b0 == ap_block_pp28_stage0_subdone)) begin
            ap_enable_reg_pp28_iter1 <= ap_enable_reg_pp28_iter0;
        end else if ((1'b1 == ap_CS_fsm_state116)) begin
            ap_enable_reg_pp28_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state10) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state10) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state10);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_condition_pp4_exit_iter0_state18) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp4_exit_iter0_state18) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state18);
        end else if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_condition_pp5_exit_iter0_state21) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp5_exit_iter0_state21) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state21);
        end else if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_enable_reg_pp5_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b1 == ap_condition_pp6_exit_iter0_state24) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp6_exit_iter0_state24) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
            ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state24);
        end else if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            ap_enable_reg_pp6_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp7_stage0) & (1'b1 == ap_condition_pp7_exit_iter0_state27) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state26)) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp7_exit_iter0_state27) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
            ap_enable_reg_pp7_iter1 <= (1'b1 ^ ap_condition_pp7_exit_iter0_state27);
        end else if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
        end else if ((1'b1 == ap_CS_fsm_state26)) begin
            ap_enable_reg_pp7_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp9_stage0) & (1'b1 == ap_condition_pp9_exit_iter0_state36) & (1'b0 == ap_block_pp9_stage0_subdone))) begin
            ap_enable_reg_pp9_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state35)) begin
            ap_enable_reg_pp9_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp9_exit_iter0_state36) & (1'b0 == ap_block_pp9_stage0_subdone))) begin
            ap_enable_reg_pp9_iter1 <= (1'b1 ^ ap_condition_pp9_exit_iter0_state36);
        end else if ((1'b0 == ap_block_pp9_stage0_subdone)) begin
            ap_enable_reg_pp9_iter1 <= ap_enable_reg_pp9_iter0;
        end else if ((1'b1 == ap_CS_fsm_state35)) begin
            ap_enable_reg_pp9_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_tanh_float_s_fu_1851_ap_start_reg <= 1'b0;
    end else begin
        if ((((exitcond25_fu_2552_p2 == 1'd0) & (ap_enable_reg_pp24_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp24_stage0) & (1'b0 == ap_block_pp24_stage0_11001)) | ((exitcond26_fu_2437_p2 == 1'd0) & (ap_enable_reg_pp19_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp19_stage0) & (1'b0 == ap_block_pp19_stage0_11001)))) begin
            grp_generic_tanh_float_s_fu_1851_ap_start_reg <= 1'b1;
        end else if ((grp_generic_tanh_float_s_fu_1851_ap_ready == 1'b1)) begin
            grp_generic_tanh_float_s_fu_1851_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_batch_norm_fu_1866_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state73))) begin
            grp_k2c_batch_norm_fu_1866_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_batch_norm_fu_1866_ap_ready == 1'b1)) begin
            grp_k2c_batch_norm_fu_1866_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_dense_1_fu_1786_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state119)) begin
            grp_k2c_dense_1_fu_1786_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_dense_1_fu_1786_ap_ready == 1'b1)) begin
            grp_k2c_dense_1_fu_1786_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_dense_2_fu_1809_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state95)) begin
            grp_k2c_dense_2_fu_1809_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_dense_2_fu_1809_ap_ready == 1'b1)) begin
            grp_k2c_dense_2_fu_1809_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_dense_fu_1832_ap_start_reg <= 1'b0;
    end else begin
        if (((tmp_57_fu_2412_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state71))) begin
            grp_k2c_dense_fu_1832_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_dense_fu_1832_ap_ready == 1'b1)) begin
            grp_k2c_dense_fu_1832_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond25_fu_2552_p2 == 1'd0) & (ap_enable_reg_pp24_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp24_stage0) & (1'b0 == ap_block_pp24_stage0_11001))) begin
        i_1_reg_1654 <= i_40_fu_2557_p2;
    end else if (((1'b1 == ap_CS_fsm_state98) & (grp_k2c_batch_norm_fu_1866_ap_done == 1'b1))) begin
        i_1_reg_1654 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state124)) begin
        i_2_reg_1709 <= i_41_reg_3439;
    end else if ((1'b1 == ap_CS_fsm_state122)) begin
        i_2_reg_1709 <= 3'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_2658_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state123))) begin
        i_3_reg_1730 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state127)) begin
        i_3_reg_1730 <= i_42_reg_3452;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state130)) begin
        i_4_reg_1753 <= i_43_reg_3480;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        i_4_reg_1753 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond26_fu_2437_p2 == 1'd0) & (ap_enable_reg_pp19_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp19_stage0) & (1'b0 == ap_block_pp19_stage0_11001))) begin
        i_reg_1599 <= i_39_fu_2442_p2;
    end else if (((1'b1 == ap_CS_fsm_state74) & (grp_k2c_batch_norm_fu_1866_ap_done == 1'b1))) begin
        i_reg_1599 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        invdar1_reg_1489 <= 11'd0;
    end else if (((tmp_44_fu_2217_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state42))) begin
        invdar1_reg_1489 <= indvarinc1_fu_2206_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        invdar2_reg_1588 <= 7'd0;
    end else if (((tmp_57_fu_2412_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state71))) begin
        invdar2_reg_1588 <= indvarinc2_fu_2401_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        invdar_reg_1390 <= 19'd0;
    end else if (((tmp_34_fu_2022_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        invdar_reg_1390 <= indvarinc_fu_2011_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond13_fu_2235_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45))) begin
        j_10_reg_1500 <= j_39_fu_2241_p2;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        j_10_reg_1500 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        j_11_reg_1511 <= 4'd0;
    end else if (((1'b0 == ap_block_pp12_stage0_11001) & (exitcond12_fu_2252_p2 == 1'd0) & (ap_enable_reg_pp12_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp12_stage0))) begin
        j_11_reg_1511 <= j_40_fu_2258_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        j_12_reg_1522 <= 4'd0;
    end else if (((1'b0 == ap_block_pp13_stage0_11001) & (exitcond11_fu_2269_p2 == 1'd0) & (ap_enable_reg_pp13_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp13_stage0))) begin
        j_12_reg_1522 <= j_41_fu_2275_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        j_13_reg_1533 <= 4'd0;
    end else if (((1'b0 == ap_block_pp14_stage0_11001) & (exitcond10_fu_2286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp14_stage0) & (ap_enable_reg_pp14_iter0 == 1'b1))) begin
        j_13_reg_1533 <= j_42_fu_2292_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        j_14_reg_1544 <= 4'd0;
    end else if (((exitcond9_fu_2303_p2 == 1'd0) & (ap_enable_reg_pp15_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp15_stage0) & (1'b0 == ap_block_pp15_stage0_11001))) begin
        j_14_reg_1544 <= j_43_fu_2309_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_fu_2332_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state61))) begin
        j_15_reg_1555 <= j_44_fu_2338_p2;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        j_15_reg_1555 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_fu_2361_p2 == 1'd0) & (ap_enable_reg_pp17_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp17_stage0) & (1'b0 == ap_block_pp17_stage0_11001))) begin
        j_16_reg_1566 <= j_45_fu_2367_p2;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        j_16_reg_1566 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_2384_p2 == 1'd0) & (ap_enable_reg_pp18_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp18_stage0) & (1'b0 == ap_block_pp18_stage0_11001))) begin
        j_17_reg_1577 <= j_46_fu_2390_p2;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        j_17_reg_1577 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_2452_p2 == 1'd0) & (ap_enable_reg_pp20_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp20_stage0) & (1'b0 == ap_block_pp20_stage0_11001))) begin
        j_18_reg_1610 <= j_47_fu_2458_p2;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        j_18_reg_1610 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        j_19_reg_1621 <= 19'd0;
    end else if (((tmp_62_fu_2474_p2 == 1'd1) & (ap_enable_reg_pp21_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp21_stage0) & (1'b0 == ap_block_pp21_stage0_11001))) begin
        j_19_reg_1621 <= j_48_fu_2479_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond23_fu_1977_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        j_1_reg_1368 <= j_29_fu_1983_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        j_1_reg_1368 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        j_20_reg_1632 <= 3'd0;
    end else if (((exitcond4_fu_2485_p2 == 1'd0) & (ap_enable_reg_pp22_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp22_stage0) & (1'b0 == ap_block_pp22_stage0_11001))) begin
        j_20_reg_1632 <= j_49_fu_2491_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        j_21_reg_1643 <= 19'd0;
    end else if (((tmp_65_fu_2512_p2 == 1'd1) & (ap_enable_reg_pp23_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp23_stage0) & (1'b0 == ap_block_pp23_stage0_11001))) begin
        j_21_reg_1643 <= j_50_fu_2517_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_2567_p2 == 1'd0) & (ap_enable_reg_pp25_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp25_stage0) & (1'b0 == ap_block_pp25_stage0_11001))) begin
        j_22_reg_1665 <= j_51_fu_2573_p2;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        j_22_reg_1665 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state110)) begin
        j_23_reg_1676 <= 19'd0;
    end else if (((tmp_70_fu_2589_p2 == 1'd1) & (ap_enable_reg_pp26_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp26_stage0) & (1'b0 == ap_block_pp26_stage0_11001))) begin
        j_23_reg_1676 <= j_52_fu_2594_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        j_24_reg_1687 <= 3'd0;
    end else if (((exitcond2_fu_2600_p2 == 1'd0) & (ap_enable_reg_pp27_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp27_stage0) & (1'b0 == ap_block_pp27_stage0_11001))) begin
        j_24_reg_1687 <= j_53_fu_2606_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state116)) begin
        j_25_reg_1698 <= 19'd0;
    end else if (((tmp_73_fu_2627_p2 == 1'd1) & (ap_enable_reg_pp28_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp28_stage0) & (1'b0 == ap_block_pp28_stage0_11001))) begin
        j_25_reg_1698 <= j_54_fu_2632_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state132)) begin
        j_26_reg_1764 <= j_55_reg_3493;
    end else if (((tmp_78_fu_2784_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state129))) begin
        j_26_reg_1764 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_2805_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state131))) begin
        j_27_reg_1775 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state134)) begin
        j_27_reg_1775 <= j_56_reg_3516;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        j_2_reg_1379 <= 7'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond22_fu_1994_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        j_2_reg_1379 <= j_30_fu_2000_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond21_fu_2040_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        j_3_reg_1401 <= j_31_fu_2046_p2;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        j_3_reg_1401 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        j_4_reg_1412 <= 7'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (exitcond20_fu_2057_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        j_4_reg_1412 <= j_32_fu_2063_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        j_5_reg_1423 <= 7'd0;
    end else if (((1'b0 == ap_block_pp5_stage0_11001) & (exitcond19_fu_2074_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        j_5_reg_1423 <= j_33_fu_2080_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        j_6_reg_1434 <= 7'd0;
    end else if (((1'b0 == ap_block_pp6_stage0_11001) & (exitcond18_fu_2091_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        j_6_reg_1434 <= j_34_fu_2097_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        j_7_reg_1445 <= 7'd0;
    end else if (((1'b0 == ap_block_pp7_stage0_11001) & (exitcond17_fu_2108_p2 == 1'd0) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        j_7_reg_1445 <= j_35_fu_2114_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond16_fu_2137_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        j_8_reg_1456 <= j_36_fu_2143_p2;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        j_8_reg_1456 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp9_stage0_11001) & (exitcond15_fu_2166_p2 == 1'd0) & (ap_enable_reg_pp9_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp9_stage0))) begin
        j_9_reg_1467 <= j_37_fu_2172_p2;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        j_9_reg_1467 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond24_fu_1960_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        j_reg_1357 <= j_28_fu_1966_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        j_reg_1357 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp10_stage0_11001) & (exitcond14_fu_2189_p2 == 1'd0) & (ap_enable_reg_pp10_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp10_stage0))) begin
        j_s_reg_1478 <= j_38_fu_2195_p2;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        j_s_reg_1478 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_2658_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state123))) begin
        sum_reg_1741 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state127)) begin
        sum_reg_1741 <= grp_fu_1893_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state124)) begin
        xmax1_reg_1720 <= xmax_1_fu_2754_p3;
    end else if ((1'b1 == ap_CS_fsm_state122)) begin
        xmax1_reg_1720 <= dense_2_output_array_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_34_fu_2022_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        batch_normalization_1[0] <= 1'b1;
        batch_normalization_3[2] <= 1'b1;
batch_normalization_3[5] <= 1'b1;
batch_normalization_3[6] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_44_fu_2217_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state42))) begin
        batch_normalization_12[1] <= 1'b1;
batch_normalization_12[3] <= 1'b1;
        batch_normalization_9[0] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state74) & (grp_k2c_batch_norm_fu_1866_ap_done == 1'b1))) begin
        batch_normalization_55_reg_3183[2] <= batch_normalization_3[2];
batch_normalization_55_reg_3183[6 : 5] <= batch_normalization_3[6 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond26_fu_2437_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp19_stage0) & (1'b0 == ap_block_pp19_stage0_11001))) begin
        batch_normalization_56_reg_3200 <= i_cast_fu_2432_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp19_stage0) & (1'b0 == ap_block_pp19_stage0_11001))) begin
        batch_normalization_56_reg_3200_pp19_iter1_reg <= batch_normalization_56_reg_3200;
        exitcond26_reg_3191 <= exitcond26_fu_2437_p2;
        exitcond26_reg_3191_pp19_iter1_reg <= exitcond26_reg_3191;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp19_stage0_11001)) begin
        batch_normalization_56_reg_3200_pp19_iter2_reg <= batch_normalization_56_reg_3200_pp19_iter1_reg;
        batch_normalization_56_reg_3200_pp19_iter3_reg <= batch_normalization_56_reg_3200_pp19_iter2_reg;
        batch_normalization_56_reg_3200_pp19_iter4_reg <= batch_normalization_56_reg_3200_pp19_iter3_reg;
        batch_normalization_56_reg_3200_pp19_iter5_reg <= batch_normalization_56_reg_3200_pp19_iter4_reg;
        batch_normalization_56_reg_3200_pp19_iter6_reg <= batch_normalization_56_reg_3200_pp19_iter5_reg;
        exitcond26_reg_3191_pp19_iter2_reg <= exitcond26_reg_3191_pp19_iter1_reg;
        exitcond26_reg_3191_pp19_iter3_reg <= exitcond26_reg_3191_pp19_iter2_reg;
        exitcond26_reg_3191_pp19_iter4_reg <= exitcond26_reg_3191_pp19_iter3_reg;
        exitcond26_reg_3191_pp19_iter5_reg <= exitcond26_reg_3191_pp19_iter4_reg;
        exitcond26_reg_3191_pp19_iter6_reg <= exitcond26_reg_3191_pp19_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        batch_normalization_58_reg_3206[0] <= batch_normalization_1[0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state98) & (grp_k2c_batch_norm_fu_1866_ap_done == 1'b1))) begin
        batch_normalization_63_reg_3307[1] <= batch_normalization_12[1];
batch_normalization_63_reg_3307[3] <= batch_normalization_12[3];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond25_fu_2552_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp24_stage0) & (1'b0 == ap_block_pp24_stage0_11001))) begin
        batch_normalization_64_reg_3324 <= i_1_cast_fu_2547_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp24_stage0) & (1'b0 == ap_block_pp24_stage0_11001))) begin
        batch_normalization_64_reg_3324_pp24_iter1_reg <= batch_normalization_64_reg_3324;
        exitcond25_reg_3315 <= exitcond25_fu_2552_p2;
        exitcond25_reg_3315_pp24_iter1_reg <= exitcond25_reg_3315;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp24_stage0_11001)) begin
        batch_normalization_64_reg_3324_pp24_iter2_reg <= batch_normalization_64_reg_3324_pp24_iter1_reg;
        batch_normalization_64_reg_3324_pp24_iter3_reg <= batch_normalization_64_reg_3324_pp24_iter2_reg;
        batch_normalization_64_reg_3324_pp24_iter4_reg <= batch_normalization_64_reg_3324_pp24_iter3_reg;
        batch_normalization_64_reg_3324_pp24_iter5_reg <= batch_normalization_64_reg_3324_pp24_iter4_reg;
        batch_normalization_64_reg_3324_pp24_iter6_reg <= batch_normalization_64_reg_3324_pp24_iter5_reg;
        exitcond25_reg_3315_pp24_iter2_reg <= exitcond25_reg_3315_pp24_iter1_reg;
        exitcond25_reg_3315_pp24_iter3_reg <= exitcond25_reg_3315_pp24_iter2_reg;
        exitcond25_reg_3315_pp24_iter4_reg <= exitcond25_reg_3315_pp24_iter3_reg;
        exitcond25_reg_3315_pp24_iter5_reg <= exitcond25_reg_3315_pp24_iter4_reg;
        exitcond25_reg_3315_pp24_iter6_reg <= exitcond25_reg_3315_pp24_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        batch_normalization_66_reg_3330[0] <= batch_normalization_9[0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        dense_1_bias_numel[1] <= 1'b1;
dense_1_bias_numel[3] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        dense_1_kernel_ndim[1] <= 1'b1;
        dense_1_kernel_numel[3] <= 1'b1;
dense_1_kernel_numel[5] <= 1'b1;
dense_1_kernel_numel[6] <= 1'b1;
dense_1_kernel_numel[7] <= 1'b1;
dense_1_kernel_numel[8] <= 1'b1;
dense_1_kernel_numel[9] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        dense_1_output_ndim[0] <= 1'b1;
        dense_1_output_numel[1] <= 1'b1;
dense_1_output_numel[3] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        dense_2_bias_numel[1] <= 1'b1;
dense_2_bias_numel[2] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        dense_2_kernel_ndim[1] <= 1'b1;
        dense_2_kernel_numel[2] <= 1'b1;
dense_2_kernel_numel[3] <= 1'b1;
dense_2_kernel_numel[4] <= 1'b1;
dense_2_kernel_numel[5] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_75_fu_2767_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state125))) begin
        dense_2_output_array_3_reg_3457[2 : 0] <= i_3_cast_fu_2762_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_78_fu_2784_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state129))) begin
        dense_2_output_array_5_reg_3485[2 : 0] <= i_4_cast_fu_2779_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        dense_2_output_ndim <= 1'd1;
        dense_2_output_numel[1] <= 1'b1;
dense_2_output_numel[2] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        dense_output_ndim[0] <= 1'b1;
        dense_output_numel[2] <= 1'b1;
dense_output_numel[5] <= 1'b1;
dense_output_numel[6] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp14_stage0_11001) & (1'b1 == ap_CS_fsm_pp14_stage0))) begin
        exitcond10_reg_3081 <= exitcond10_fu_2286_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp13_stage0_11001) & (1'b1 == ap_CS_fsm_pp13_stage0))) begin
        exitcond11_reg_3062 <= exitcond11_fu_2269_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp12_stage0_11001) & (1'b1 == ap_CS_fsm_pp12_stage0))) begin
        exitcond12_reg_3043 <= exitcond12_fu_2252_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp10_stage0_11001) & (1'b1 == ap_CS_fsm_pp10_stage0))) begin
        exitcond14_reg_3008 <= exitcond14_fu_2189_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0))) begin
        exitcond15_reg_2989 <= exitcond15_fu_2166_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        exitcond17_reg_2962 <= exitcond17_fu_2108_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        exitcond18_reg_2943 <= exitcond18_fu_2091_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        exitcond19_reg_2924 <= exitcond19_fu_2074_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        exitcond20_reg_2905 <= exitcond20_fu_2057_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond22_reg_2870 <= exitcond22_fu_1994_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp27_stage0) & (1'b0 == ap_block_pp27_stage0_11001))) begin
        exitcond2_reg_3373 <= exitcond2_fu_2600_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp25_stage0) & (1'b0 == ap_block_pp25_stage0_11001))) begin
        exitcond3_reg_3335 <= exitcond3_fu_2567_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp22_stage0) & (1'b0 == ap_block_pp22_stage0_11001))) begin
        exitcond4_reg_3249 <= exitcond4_fu_2485_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp20_stage0) & (1'b0 == ap_block_pp20_stage0_11001))) begin
        exitcond5_reg_3211 <= exitcond5_fu_2452_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp18_stage0) & (1'b0 == ap_block_pp18_stage0_11001))) begin
        exitcond6_reg_3146 <= exitcond6_fu_2384_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp17_stage0) & (1'b0 == ap_block_pp17_stage0_11001))) begin
        exitcond7_reg_3127 <= exitcond7_fu_2361_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp15_stage0) & (1'b0 == ap_block_pp15_stage0_11001))) begin
        exitcond9_reg_3100 <= exitcond9_fu_2303_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_2658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state123))) begin
        i_41_reg_3439 <= i_41_fu_2664_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        i_42_reg_3452 <= i_42_fu_2773_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state129)) begin
        i_43_reg_3480 <= i_43_fu_2790_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state131)) begin
        j_55_reg_3493 <= j_55_fu_2811_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state133)) begin
        j_56_reg_3516 <= j_56_fu_2838_p2;
        tmp_81_reg_3508 <= tmp_81_fu_2827_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state95))) begin
        reg_1937[1] <= dense_1_output_numel[1];
reg_1937[3] <= dense_1_output_numel[3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state119) | ((tmp_78_fu_2784_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state129)))) begin
        reg_1943[2 : 1] <= dense_2_output_numel[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        sum_1_reg_3472 <= grp_fu_1906_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond22_fu_1994_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_35_reg_2879[6 : 0] <= tmp_35_fu_2006_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (exitcond20_fu_2057_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        tmp_37_reg_2914[6 : 0] <= tmp_37_fu_2069_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (exitcond19_fu_2074_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        tmp_38_reg_2933[6 : 0] <= tmp_38_fu_2086_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (exitcond18_fu_2091_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        tmp_39_reg_2952[6 : 0] <= tmp_39_fu_2103_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (exitcond17_fu_2108_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        tmp_40_reg_2971[6 : 0] <= tmp_40_fu_2120_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp9_stage0_11001) & (exitcond15_fu_2166_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp9_stage0))) begin
        tmp_42_reg_2998[9 : 0] <= tmp_42_fu_2178_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp10_stage0_11001) & (exitcond14_fu_2189_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp10_stage0))) begin
        tmp_45_reg_3017[3 : 0] <= tmp_45_fu_2201_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp12_stage0_11001) & (exitcond12_fu_2252_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp12_stage0))) begin
        tmp_47_reg_3052[3 : 0] <= tmp_47_fu_2264_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp13_stage0_11001) & (exitcond11_fu_2269_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp13_stage0))) begin
        tmp_49_reg_3071[3 : 0] <= tmp_49_fu_2281_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp14_stage0_11001) & (exitcond10_fu_2286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp14_stage0))) begin
        tmp_51_reg_3090[3 : 0] <= tmp_51_fu_2298_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond9_fu_2303_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp15_stage0) & (1'b0 == ap_block_pp15_stage0_11001))) begin
        tmp_52_reg_3109[3 : 0] <= tmp_52_fu_2315_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_fu_2361_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp17_stage0) & (1'b0 == ap_block_pp17_stage0_11001))) begin
        tmp_54_reg_3136[5 : 0] <= tmp_54_fu_2373_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_2384_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp18_stage0) & (1'b0 == ap_block_pp18_stage0_11001))) begin
        tmp_55_reg_3155[2 : 0] <= tmp_55_fu_2396_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_2452_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp20_stage0) & (1'b0 == ap_block_pp20_stage0_11001))) begin
        tmp_60_reg_3220[2 : 0] <= tmp_60_fu_2464_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp21_stage0) & (1'b0 == ap_block_pp21_stage0_11001))) begin
        tmp_61_reg_3230[18 : 0] <= tmp_61_fu_2469_p1[18 : 0];
        tmp_62_reg_3235 <= tmp_62_fu_2474_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_2485_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp22_stage0) & (1'b0 == ap_block_pp22_stage0_11001))) begin
        tmp_63_reg_3258[2 : 0] <= tmp_63_fu_2497_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp23_stage0) & (1'b0 == ap_block_pp23_stage0_11001))) begin
        tmp_64_reg_3268[18 : 0] <= tmp_64_fu_2507_p1[18 : 0];
        tmp_65_reg_3273 <= tmp_65_fu_2512_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_2567_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp25_stage0) & (1'b0 == ap_block_pp25_stage0_11001))) begin
        tmp_68_reg_3344[2 : 0] <= tmp_68_fu_2579_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp26_stage0) & (1'b0 == ap_block_pp26_stage0_11001))) begin
        tmp_69_reg_3354[18 : 0] <= tmp_69_fu_2584_p1[18 : 0];
        tmp_70_reg_3359 <= tmp_70_fu_2589_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_2600_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp27_stage0) & (1'b0 == ap_block_pp27_stage0_11001))) begin
        tmp_71_reg_3382[2 : 0] <= tmp_71_fu_2612_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp28_stage0) & (1'b0 == ap_block_pp28_stage0_11001))) begin
        tmp_72_reg_3392[18 : 0] <= tmp_72_fu_2622_p1[18 : 0];
        tmp_73_reg_3397 <= tmp_73_fu_2627_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state126)) begin
        tmp_77_reg_3462 <= tmp_77_fu_1918_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_2805_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state131))) begin
        tmp_80_reg_3498[2 : 0] <= tmp_80_fu_2817_p1[2 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp23_stage0) & (ap_enable_reg_pp23_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp23_stage0))) begin
        activation_1_output_1_address0 = tmp_64_fu_2507_p1;
    end else if (((1'b0 == ap_block_pp21_stage0) & (ap_enable_reg_pp21_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp21_stage0))) begin
        activation_1_output_1_address0 = tmp_61_reg_3230;
    end else begin
        activation_1_output_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp23_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp23_stage0) & (1'b0 == ap_block_pp23_stage0_11001)) | ((ap_enable_reg_pp21_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp21_stage0) & (1'b0 == ap_block_pp21_stage0_11001)))) begin
        activation_1_output_1_ce0 = 1'b1;
    end else begin
        activation_1_output_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_62_reg_3235 == 1'd1) & (ap_enable_reg_pp21_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp21_stage0) & (1'b0 == ap_block_pp21_stage0_11001))) begin
        activation_1_output_1_we0 = 1'b1;
    end else begin
        activation_1_output_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp22_stage0) & (ap_enable_reg_pp22_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp22_stage0))) begin
        activation_1_output_s_address0 = tmp_63_fu_2497_p1;
    end else if (((1'b0 == ap_block_pp20_stage0) & (ap_enable_reg_pp20_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp20_stage0))) begin
        activation_1_output_s_address0 = tmp_60_reg_3220;
    end else begin
        activation_1_output_s_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp22_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp22_stage0) & (1'b0 == ap_block_pp22_stage0_11001)) | ((ap_enable_reg_pp20_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp20_stage0) & (1'b0 == ap_block_pp20_stage0_11001)))) begin
        activation_1_output_s_ce0 = 1'b1;
    end else begin
        activation_1_output_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5_reg_3211 == 1'd0) & (ap_enable_reg_pp20_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp20_stage0) & (1'b0 == ap_block_pp20_stage0_11001))) begin
        activation_1_output_s_we0 = 1'b1;
    end else begin
        activation_1_output_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp28_stage0) & (ap_enable_reg_pp28_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp28_stage0))) begin
        activation_2_output_1_address0 = tmp_72_fu_2622_p1;
    end else if (((1'b0 == ap_block_pp26_stage0) & (ap_enable_reg_pp26_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp26_stage0))) begin
        activation_2_output_1_address0 = tmp_69_reg_3354;
    end else begin
        activation_2_output_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp28_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp28_stage0) & (1'b0 == ap_block_pp28_stage0_11001)) | ((ap_enable_reg_pp26_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp26_stage0) & (1'b0 == ap_block_pp26_stage0_11001)))) begin
        activation_2_output_1_ce0 = 1'b1;
    end else begin
        activation_2_output_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_70_reg_3359 == 1'd1) & (ap_enable_reg_pp26_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp26_stage0) & (1'b0 == ap_block_pp26_stage0_11001))) begin
        activation_2_output_1_we0 = 1'b1;
    end else begin
        activation_2_output_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp27_stage0) & (ap_enable_reg_pp27_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp27_stage0))) begin
        activation_2_output_s_address0 = tmp_71_fu_2612_p1;
    end else if (((1'b0 == ap_block_pp25_stage0) & (ap_enable_reg_pp25_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp25_stage0))) begin
        activation_2_output_s_address0 = tmp_68_reg_3344;
    end else begin
        activation_2_output_s_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp27_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp27_stage0) & (1'b0 == ap_block_pp27_stage0_11001)) | ((ap_enable_reg_pp25_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp25_stage0) & (1'b0 == ap_block_pp25_stage0_11001)))) begin
        activation_2_output_s_ce0 = 1'b1;
    end else begin
        activation_2_output_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond3_reg_3335 == 1'd0) & (ap_enable_reg_pp25_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp25_stage0) & (1'b0 == ap_block_pp25_stage0_11001))) begin
        activation_2_output_s_we0 = 1'b1;
    end else begin
        activation_2_output_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state134)) begin
        activation_3_output_array_ce0 = 1'b1;
    end else begin
        activation_3_output_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state134)) begin
        activation_3_output_array_we0 = 1'b1;
    end else begin
        activation_3_output_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_78_fu_2784_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state129))) begin
        activation_3_output_ndim_ap_vld = 1'b1;
    end else begin
        activation_3_output_ndim_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_78_fu_2784_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state129))) begin
        activation_3_output_numel_ap_vld = 1'b1;
    end else begin
        activation_3_output_numel_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state132)) begin
        activation_3_output_shape_ce0 = 1'b1;
    end else begin
        activation_3_output_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state132)) begin
        activation_3_output_shape_we0 = 1'b1;
    end else begin
        activation_3_output_shape_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond14_fu_2189_p2 == 1'd1)) begin
        ap_condition_pp10_exit_iter0_state39 = 1'b1;
    end else begin
        ap_condition_pp10_exit_iter0_state39 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond12_fu_2252_p2 == 1'd1)) begin
        ap_condition_pp12_exit_iter0_state47 = 1'b1;
    end else begin
        ap_condition_pp12_exit_iter0_state47 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond11_fu_2269_p2 == 1'd1)) begin
        ap_condition_pp13_exit_iter0_state50 = 1'b1;
    end else begin
        ap_condition_pp13_exit_iter0_state50 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond10_fu_2286_p2 == 1'd1)) begin
        ap_condition_pp14_exit_iter0_state53 = 1'b1;
    end else begin
        ap_condition_pp14_exit_iter0_state53 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond9_fu_2303_p2 == 1'd1)) begin
        ap_condition_pp15_exit_iter0_state56 = 1'b1;
    end else begin
        ap_condition_pp15_exit_iter0_state56 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond7_fu_2361_p2 == 1'd1)) begin
        ap_condition_pp17_exit_iter0_state65 = 1'b1;
    end else begin
        ap_condition_pp17_exit_iter0_state65 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond6_fu_2384_p2 == 1'd1)) begin
        ap_condition_pp18_exit_iter0_state68 = 1'b1;
    end else begin
        ap_condition_pp18_exit_iter0_state68 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond26_fu_2437_p2 == 1'd1)) begin
        ap_condition_pp19_exit_iter0_state75 = 1'b1;
    end else begin
        ap_condition_pp19_exit_iter0_state75 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond5_fu_2452_p2 == 1'd1)) begin
        ap_condition_pp20_exit_iter0_state84 = 1'b1;
    end else begin
        ap_condition_pp20_exit_iter0_state84 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_62_fu_2474_p2 == 1'd0)) begin
        ap_condition_pp21_exit_iter0_state87 = 1'b1;
    end else begin
        ap_condition_pp21_exit_iter0_state87 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond4_fu_2485_p2 == 1'd1)) begin
        ap_condition_pp22_exit_iter0_state90 = 1'b1;
    end else begin
        ap_condition_pp22_exit_iter0_state90 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_65_fu_2512_p2 == 1'd0)) begin
        ap_condition_pp23_exit_iter0_state93 = 1'b1;
    end else begin
        ap_condition_pp23_exit_iter0_state93 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond25_fu_2552_p2 == 1'd1)) begin
        ap_condition_pp24_exit_iter0_state99 = 1'b1;
    end else begin
        ap_condition_pp24_exit_iter0_state99 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond3_fu_2567_p2 == 1'd1)) begin
        ap_condition_pp25_exit_iter0_state108 = 1'b1;
    end else begin
        ap_condition_pp25_exit_iter0_state108 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_70_fu_2589_p2 == 1'd0)) begin
        ap_condition_pp26_exit_iter0_state111 = 1'b1;
    end else begin
        ap_condition_pp26_exit_iter0_state111 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond2_fu_2600_p2 == 1'd1)) begin
        ap_condition_pp27_exit_iter0_state114 = 1'b1;
    end else begin
        ap_condition_pp27_exit_iter0_state114 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_73_fu_2627_p2 == 1'd0)) begin
        ap_condition_pp28_exit_iter0_state117 = 1'b1;
    end else begin
        ap_condition_pp28_exit_iter0_state117 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond22_fu_1994_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond20_fu_2057_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state18 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state18 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond19_fu_2074_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state21 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state21 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond18_fu_2091_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state24 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state24 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond17_fu_2108_p2 == 1'd1)) begin
        ap_condition_pp7_exit_iter0_state27 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter0_state27 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond15_fu_2166_p2 == 1'd1)) begin
        ap_condition_pp9_exit_iter0_state36 = 1'b1;
    end else begin
        ap_condition_pp9_exit_iter0_state36 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_82_fu_2832_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state133))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp10_iter0 == 1'b0) & (ap_enable_reg_pp10_iter1 == 1'b0))) begin
        ap_idle_pp10 = 1'b1;
    end else begin
        ap_idle_pp10 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp12_iter0 == 1'b0) & (ap_enable_reg_pp12_iter1 == 1'b0))) begin
        ap_idle_pp12 = 1'b1;
    end else begin
        ap_idle_pp12 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp13_iter0 == 1'b0) & (ap_enable_reg_pp13_iter1 == 1'b0))) begin
        ap_idle_pp13 = 1'b1;
    end else begin
        ap_idle_pp13 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp14_iter1 == 1'b0) & (ap_enable_reg_pp14_iter0 == 1'b0))) begin
        ap_idle_pp14 = 1'b1;
    end else begin
        ap_idle_pp14 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp15_iter1 == 1'b0) & (ap_enable_reg_pp15_iter0 == 1'b0))) begin
        ap_idle_pp15 = 1'b1;
    end else begin
        ap_idle_pp15 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp17_iter1 == 1'b0) & (ap_enable_reg_pp17_iter0 == 1'b0))) begin
        ap_idle_pp17 = 1'b1;
    end else begin
        ap_idle_pp17 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp18_iter1 == 1'b0) & (ap_enable_reg_pp18_iter0 == 1'b0))) begin
        ap_idle_pp18 = 1'b1;
    end else begin
        ap_idle_pp18 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp19_iter7 == 1'b0) & (ap_enable_reg_pp19_iter6 == 1'b0) & (ap_enable_reg_pp19_iter5 == 1'b0) & (ap_enable_reg_pp19_iter4 == 1'b0) & (ap_enable_reg_pp19_iter3 == 1'b0) & (ap_enable_reg_pp19_iter2 == 1'b0) & (ap_enable_reg_pp19_iter1 == 1'b0) & (ap_enable_reg_pp19_iter0 == 1'b0))) begin
        ap_idle_pp19 = 1'b1;
    end else begin
        ap_idle_pp19 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp20_iter1 == 1'b0) & (ap_enable_reg_pp20_iter0 == 1'b0))) begin
        ap_idle_pp20 = 1'b1;
    end else begin
        ap_idle_pp20 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp21_iter1 == 1'b0) & (ap_enable_reg_pp21_iter0 == 1'b0))) begin
        ap_idle_pp21 = 1'b1;
    end else begin
        ap_idle_pp21 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp22_iter1 == 1'b0) & (ap_enable_reg_pp22_iter0 == 1'b0))) begin
        ap_idle_pp22 = 1'b1;
    end else begin
        ap_idle_pp22 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp23_iter1 == 1'b0) & (ap_enable_reg_pp23_iter0 == 1'b0))) begin
        ap_idle_pp23 = 1'b1;
    end else begin
        ap_idle_pp23 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp24_iter7 == 1'b0) & (ap_enable_reg_pp24_iter6 == 1'b0) & (ap_enable_reg_pp24_iter5 == 1'b0) & (ap_enable_reg_pp24_iter4 == 1'b0) & (ap_enable_reg_pp24_iter3 == 1'b0) & (ap_enable_reg_pp24_iter2 == 1'b0) & (ap_enable_reg_pp24_iter1 == 1'b0) & (ap_enable_reg_pp24_iter0 == 1'b0))) begin
        ap_idle_pp24 = 1'b1;
    end else begin
        ap_idle_pp24 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp25_iter1 == 1'b0) & (ap_enable_reg_pp25_iter0 == 1'b0))) begin
        ap_idle_pp25 = 1'b1;
    end else begin
        ap_idle_pp25 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp26_iter1 == 1'b0) & (ap_enable_reg_pp26_iter0 == 1'b0))) begin
        ap_idle_pp26 = 1'b1;
    end else begin
        ap_idle_pp26 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp27_iter1 == 1'b0) & (ap_enable_reg_pp27_iter0 == 1'b0))) begin
        ap_idle_pp27 = 1'b1;
    end else begin
        ap_idle_pp27 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp28_iter1 == 1'b0) & (ap_enable_reg_pp28_iter0 == 1'b0))) begin
        ap_idle_pp28 = 1'b1;
    end else begin
        ap_idle_pp28 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b0) & (ap_enable_reg_pp7_iter1 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp9_iter0 == 1'b0) & (ap_enable_reg_pp9_iter1 == 1'b0))) begin
        ap_idle_pp9 = 1'b1;
    end else begin
        ap_idle_pp9 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_82_fu_2832_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state133))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        batch_normalization_11_ce0 = 1'b1;
    end else begin
        batch_normalization_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        batch_normalization_14_ce0 = 1'b1;
    end else begin
        batch_normalization_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        batch_normalization_15_address0 = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        batch_normalization_15_address0 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        batch_normalization_15_address0 = 3'd0;
    end else begin
        batch_normalization_15_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp25_stage0) & (ap_enable_reg_pp25_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp25_stage0))) begin
        batch_normalization_15_address1 = tmp_68_fu_2579_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        batch_normalization_15_address1 = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        batch_normalization_15_address1 = 3'd2;
    end else begin
        batch_normalization_15_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state44))) begin
        batch_normalization_15_ce0 = 1'b1;
    end else begin
        batch_normalization_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state44) | ((ap_enable_reg_pp25_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp25_stage0) & (1'b0 == ap_block_pp25_stage0_11001)))) begin
        batch_normalization_15_ce1 = 1'b1;
    end else begin
        batch_normalization_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state44))) begin
        batch_normalization_15_d0 = 6'd1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        batch_normalization_15_d0 = 6'd10;
    end else begin
        batch_normalization_15_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state44) | ((tmp_44_fu_2217_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state42)))) begin
        batch_normalization_15_we0 = 1'b1;
    end else begin
        batch_normalization_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state44))) begin
        batch_normalization_15_we1 = 1'b1;
    end else begin
        batch_normalization_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        batch_normalization_17_ce0 = 1'b1;
    end else begin
        batch_normalization_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp13_stage0) & (1'b1 == ap_CS_fsm_pp13_stage0) & (ap_enable_reg_pp13_iter1 == 1'b1))) begin
        batch_normalization_18_address0 = tmp_49_reg_3071;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        batch_normalization_18_address0 = grp_k2c_batch_norm_fu_1866_stdev_array_address0;
    end else begin
        batch_normalization_18_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp13_stage0_11001) & (1'b1 == ap_CS_fsm_pp13_stage0) & (ap_enable_reg_pp13_iter1 == 1'b1))) begin
        batch_normalization_18_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        batch_normalization_18_ce0 = grp_k2c_batch_norm_fu_1866_stdev_array_ce0;
    end else begin
        batch_normalization_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp13_stage0_11001) & (exitcond11_reg_3062 == 1'd0) & (1'b1 == ap_CS_fsm_pp13_stage0) & (ap_enable_reg_pp13_iter1 == 1'b1))) begin
        batch_normalization_18_we0 = 1'b1;
    end else begin
        batch_normalization_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp13_stage0_11001) & (ap_enable_reg_pp13_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp13_stage0))) begin
        batch_normalization_20_ce0 = 1'b1;
    end else begin
        batch_normalization_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        batch_normalization_21_address0 = tmp_38_reg_2933;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        batch_normalization_21_address0 = grp_k2c_batch_norm_fu_1866_stdev_array_address0;
    end else begin
        batch_normalization_21_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        batch_normalization_21_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        batch_normalization_21_ce0 = grp_k2c_batch_norm_fu_1866_stdev_array_ce0;
    end else begin
        batch_normalization_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (exitcond19_reg_2924 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        batch_normalization_21_we0 = 1'b1;
    end else begin
        batch_normalization_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1))) begin
        batch_normalization_22_address0 = tmp_40_reg_2971;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        batch_normalization_22_address0 = grp_k2c_batch_norm_fu_1866_beta_array_address0;
    end else begin
        batch_normalization_22_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1))) begin
        batch_normalization_22_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        batch_normalization_22_ce0 = grp_k2c_batch_norm_fu_1866_beta_array_ce0;
    end else begin
        batch_normalization_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (exitcond17_reg_2962 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1))) begin
        batch_normalization_22_we0 = 1'b1;
    end else begin
        batch_normalization_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1))) begin
        batch_normalization_23_address0 = tmp_39_reg_2952;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        batch_normalization_23_address0 = grp_k2c_batch_norm_fu_1866_gamma_array_address0;
    end else begin
        batch_normalization_23_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1))) begin
        batch_normalization_23_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        batch_normalization_23_ce0 = grp_k2c_batch_norm_fu_1866_gamma_array_ce0;
    end else begin
        batch_normalization_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (exitcond18_reg_2943 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1))) begin
        batch_normalization_23_we0 = 1'b1;
    end else begin
        batch_normalization_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        batch_normalization_24_address0 = tmp_37_reg_2914;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        batch_normalization_24_address0 = grp_k2c_batch_norm_fu_1866_mean_array_address0;
    end else begin
        batch_normalization_24_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        batch_normalization_24_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        batch_normalization_24_ce0 = grp_k2c_batch_norm_fu_1866_mean_array_ce0;
    end else begin
        batch_normalization_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (exitcond20_reg_2905 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        batch_normalization_24_we0 = 1'b1;
    end else begin
        batch_normalization_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp19_stage0) & (ap_enable_reg_pp19_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp19_stage0))) begin
        batch_normalization_25_address0 = i_cast_fu_2432_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        batch_normalization_25_address0 = tmp_36_fu_2052_p1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        batch_normalization_25_address0 = grp_k2c_batch_norm_fu_1866_outputs_array_address0;
    end else begin
        batch_normalization_25_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp21_stage0) & (ap_enable_reg_pp21_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp21_stage0))) begin
        batch_normalization_25_address1 = tmp_61_fu_2469_p1;
    end else if (((1'b0 == ap_block_pp19_stage0) & (ap_enable_reg_pp19_iter7 == 1'b1))) begin
        batch_normalization_25_address1 = batch_normalization_56_reg_3200_pp19_iter6_reg;
    end else begin
        batch_normalization_25_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((ap_enable_reg_pp19_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp19_stage0) & (1'b0 == ap_block_pp19_stage0_11001)))) begin
        batch_normalization_25_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        batch_normalization_25_ce0 = grp_k2c_batch_norm_fu_1866_outputs_array_ce0;
    end else begin
        batch_normalization_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp21_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp21_stage0) & (1'b0 == ap_block_pp21_stage0_11001)) | ((ap_enable_reg_pp19_iter7 == 1'b1) & (1'b0 == ap_block_pp19_stage0_11001)))) begin
        batch_normalization_25_ce1 = 1'b1;
    end else begin
        batch_normalization_25_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        batch_normalization_25_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        batch_normalization_25_d0 = grp_k2c_batch_norm_fu_1866_outputs_array_d0;
    end else begin
        batch_normalization_25_d0 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond21_fu_2040_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        batch_normalization_25_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        batch_normalization_25_we0 = grp_k2c_batch_norm_fu_1866_outputs_array_we0;
    end else begin
        batch_normalization_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond26_reg_3191_pp19_iter6_reg == 1'd0) & (ap_enable_reg_pp19_iter7 == 1'b1) & (1'b0 == ap_block_pp19_stage0_11001))) begin
        batch_normalization_25_we1 = 1'b1;
    end else begin
        batch_normalization_25_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp12_stage0_11001) & (ap_enable_reg_pp12_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp12_stage0))) begin
        batch_normalization_31_ce0 = 1'b1;
    end else begin
        batch_normalization_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp14_stage0_11001) & (1'b1 == ap_CS_fsm_pp14_stage0) & (ap_enable_reg_pp14_iter0 == 1'b1))) begin
        batch_normalization_34_ce0 = 1'b1;
    end else begin
        batch_normalization_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp15_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp15_stage0) & (1'b0 == ap_block_pp15_stage0_11001))) begin
        batch_normalization_37_ce0 = 1'b1;
    end else begin
        batch_normalization_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        batch_normalization_4_address0 = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        batch_normalization_4_address0 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        batch_normalization_4_address0 = 3'd0;
    end else begin
        batch_normalization_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp20_stage0) & (ap_enable_reg_pp20_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp20_stage0))) begin
        batch_normalization_4_address1 = tmp_60_fu_2464_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        batch_normalization_4_address1 = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        batch_normalization_4_address1 = 3'd2;
    end else begin
        batch_normalization_4_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15))) begin
        batch_normalization_4_ce0 = 1'b1;
    end else begin
        batch_normalization_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((ap_enable_reg_pp20_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp20_stage0) & (1'b0 == ap_block_pp20_stage0_11001)))) begin
        batch_normalization_4_ce1 = 1'b1;
    end else begin
        batch_normalization_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15))) begin
        batch_normalization_4_d0 = 9'd1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        batch_normalization_4_d0 = 9'd100;
    end else begin
        batch_normalization_4_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((tmp_34_fu_2022_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13)))) begin
        batch_normalization_4_we0 = 1'b1;
    end else begin
        batch_normalization_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15))) begin
        batch_normalization_4_we1 = 1'b1;
    end else begin
        batch_normalization_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp15_stage0) & (ap_enable_reg_pp15_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp15_stage0))) begin
        batch_normalization_5_address0 = tmp_52_reg_3109;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        batch_normalization_5_address0 = grp_k2c_batch_norm_fu_1866_beta_array_address0;
    end else begin
        batch_normalization_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp15_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp15_stage0) & (1'b0 == ap_block_pp15_stage0_11001))) begin
        batch_normalization_5_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        batch_normalization_5_ce0 = grp_k2c_batch_norm_fu_1866_beta_array_ce0;
    end else begin
        batch_normalization_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond9_reg_3100 == 1'd0) & (ap_enable_reg_pp15_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp15_stage0) & (1'b0 == ap_block_pp15_stage0_11001))) begin
        batch_normalization_5_we0 = 1'b1;
    end else begin
        batch_normalization_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp14_stage0) & (1'b1 == ap_CS_fsm_pp14_stage0) & (ap_enable_reg_pp14_iter1 == 1'b1))) begin
        batch_normalization_6_address0 = tmp_51_reg_3090;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        batch_normalization_6_address0 = grp_k2c_batch_norm_fu_1866_gamma_array_address0;
    end else begin
        batch_normalization_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp14_stage0_11001) & (1'b1 == ap_CS_fsm_pp14_stage0) & (ap_enable_reg_pp14_iter1 == 1'b1))) begin
        batch_normalization_6_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        batch_normalization_6_ce0 = grp_k2c_batch_norm_fu_1866_gamma_array_ce0;
    end else begin
        batch_normalization_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp14_stage0_11001) & (exitcond10_reg_3081 == 1'd0) & (1'b1 == ap_CS_fsm_pp14_stage0) & (ap_enable_reg_pp14_iter1 == 1'b1))) begin
        batch_normalization_6_we0 = 1'b1;
    end else begin
        batch_normalization_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp12_stage0) & (1'b1 == ap_CS_fsm_pp12_stage0) & (ap_enable_reg_pp12_iter1 == 1'b1))) begin
        batch_normalization_7_address0 = tmp_47_reg_3052;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        batch_normalization_7_address0 = grp_k2c_batch_norm_fu_1866_mean_array_address0;
    end else begin
        batch_normalization_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp12_stage0_11001) & (1'b1 == ap_CS_fsm_pp12_stage0) & (ap_enable_reg_pp12_iter1 == 1'b1))) begin
        batch_normalization_7_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        batch_normalization_7_ce0 = grp_k2c_batch_norm_fu_1866_mean_array_ce0;
    end else begin
        batch_normalization_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp12_stage0_11001) & (exitcond12_reg_3043 == 1'd0) & (1'b1 == ap_CS_fsm_pp12_stage0) & (ap_enable_reg_pp12_iter1 == 1'b1))) begin
        batch_normalization_7_we0 = 1'b1;
    end else begin
        batch_normalization_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp24_stage0) & (ap_enable_reg_pp24_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp24_stage0))) begin
        batch_normalization_8_address0 = i_1_cast_fu_2547_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        batch_normalization_8_address0 = tmp_46_fu_2247_p1;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        batch_normalization_8_address0 = grp_k2c_batch_norm_fu_1866_outputs_array_address0;
    end else begin
        batch_normalization_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp26_stage0) & (ap_enable_reg_pp26_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp26_stage0))) begin
        batch_normalization_8_address1 = tmp_69_fu_2584_p1;
    end else if (((1'b0 == ap_block_pp24_stage0) & (ap_enable_reg_pp24_iter7 == 1'b1))) begin
        batch_normalization_8_address1 = batch_normalization_64_reg_3324_pp24_iter6_reg;
    end else begin
        batch_normalization_8_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | ((ap_enable_reg_pp24_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp24_stage0) & (1'b0 == ap_block_pp24_stage0_11001)))) begin
        batch_normalization_8_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        batch_normalization_8_ce0 = grp_k2c_batch_norm_fu_1866_outputs_array_ce0;
    end else begin
        batch_normalization_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp26_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp26_stage0) & (1'b0 == ap_block_pp26_stage0_11001)) | ((ap_enable_reg_pp24_iter7 == 1'b1) & (1'b0 == ap_block_pp24_stage0_11001)))) begin
        batch_normalization_8_ce1 = 1'b1;
    end else begin
        batch_normalization_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        batch_normalization_8_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        batch_normalization_8_d0 = grp_k2c_batch_norm_fu_1866_outputs_array_d0;
    end else begin
        batch_normalization_8_d0 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond13_fu_2235_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45))) begin
        batch_normalization_8_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        batch_normalization_8_we0 = grp_k2c_batch_norm_fu_1866_outputs_array_we0;
    end else begin
        batch_normalization_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond25_reg_3315_pp24_iter6_reg == 1'd0) & (ap_enable_reg_pp24_iter7 == 1'b1) & (1'b0 == ap_block_pp24_stage0_11001))) begin
        batch_normalization_8_we1 = 1'b1;
    end else begin
        batch_normalization_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        batch_normalization_s_ce0 = 1'b1;
    end else begin
        batch_normalization_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp10_stage0_11001) & (ap_enable_reg_pp10_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp10_stage0))) begin
        dense_1_bias_array1_ce0 = 1'b1;
    end else begin
        dense_1_bias_array1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp10_stage0) & (1'b1 == ap_CS_fsm_pp10_stage0) & (ap_enable_reg_pp10_iter1 == 1'b1))) begin
        dense_1_bias_array_address0 = tmp_45_reg_3017;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        dense_1_bias_array_address0 = grp_k2c_dense_2_fu_1809_bias_array_address0;
    end else begin
        dense_1_bias_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp10_stage0_11001) & (1'b1 == ap_CS_fsm_pp10_stage0) & (ap_enable_reg_pp10_iter1 == 1'b1))) begin
        dense_1_bias_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        dense_1_bias_array_ce0 = grp_k2c_dense_2_fu_1809_bias_array_ce0;
    end else begin
        dense_1_bias_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp10_stage0_11001) & (exitcond14_reg_3008 == 1'd0) & (1'b1 == ap_CS_fsm_pp10_stage0) & (ap_enable_reg_pp10_iter1 == 1'b1))) begin
        dense_1_bias_array_we0 = 1'b1;
    end else begin
        dense_1_bias_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        dense_1_fwork_address0 = tmp_43_fu_2212_p1;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        dense_1_fwork_address0 = grp_k2c_dense_2_fu_1809_fwork_address0;
    end else begin
        dense_1_fwork_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        dense_1_fwork_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        dense_1_fwork_ce0 = grp_k2c_dense_2_fu_1809_fwork_ce0;
    end else begin
        dense_1_fwork_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        dense_1_fwork_ce1 = grp_k2c_dense_2_fu_1809_fwork_ce1;
    end else begin
        dense_1_fwork_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        dense_1_fwork_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        dense_1_fwork_d0 = grp_k2c_dense_2_fu_1809_fwork_d0;
    end else begin
        dense_1_fwork_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        dense_1_fwork_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        dense_1_fwork_we0 = grp_k2c_dense_2_fu_1809_fwork_we0;
    end else begin
        dense_1_fwork_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp9_stage0) & (1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter1 == 1'b1))) begin
        dense_1_kernel_array_2_address0 = tmp_42_reg_2998;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        dense_1_kernel_array_2_address0 = grp_k2c_dense_2_fu_1809_kernel_array_address0;
    end else begin
        dense_1_kernel_array_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter1 == 1'b1))) begin
        dense_1_kernel_array_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        dense_1_kernel_array_2_ce0 = grp_k2c_dense_2_fu_1809_kernel_array_ce0;
    end else begin
        dense_1_kernel_array_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp9_stage0_11001) & (exitcond15_reg_2989 == 1'd0) & (1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter1 == 1'b1))) begin
        dense_1_kernel_array_2_we0 = 1'b1;
    end else begin
        dense_1_kernel_array_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp9_stage0_11001) & (ap_enable_reg_pp9_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp9_stage0))) begin
        dense_1_kernel_array_ce0 = 1'b1;
    end else begin
        dense_1_kernel_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        dense_1_kernel_shape_address0 = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        dense_1_kernel_shape_address0 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        dense_1_kernel_shape_address0 = 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        dense_1_kernel_shape_address0 = grp_k2c_dense_2_fu_1809_kernel_shape_address0;
    end else begin
        dense_1_kernel_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        dense_1_kernel_shape_address1 = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        dense_1_kernel_shape_address1 = 3'd2;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        dense_1_kernel_shape_address1 = grp_k2c_dense_2_fu_1809_kernel_shape_address1;
    end else begin
        dense_1_kernel_shape_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35))) begin
        dense_1_kernel_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        dense_1_kernel_shape_ce0 = grp_k2c_dense_2_fu_1809_kernel_shape_ce0;
    end else begin
        dense_1_kernel_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        dense_1_kernel_shape_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        dense_1_kernel_shape_ce1 = grp_k2c_dense_2_fu_1809_kernel_shape_ce1;
    end else begin
        dense_1_kernel_shape_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        dense_1_kernel_shape_d0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        dense_1_kernel_shape_d0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        dense_1_kernel_shape_d0 = 64'd100;
    end else begin
        dense_1_kernel_shape_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35))) begin
        dense_1_kernel_shape_we0 = 1'b1;
    end else begin
        dense_1_kernel_shape_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        dense_1_kernel_shape_we1 = 1'b1;
    end else begin
        dense_1_kernel_shape_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        dense_1_output_array_address0 = tmp_41_fu_2149_p1;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        dense_1_output_array_address0 = grp_k2c_batch_norm_fu_1866_inputs_array_address0;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        dense_1_output_array_address0 = grp_k2c_dense_2_fu_1809_output_array_address0;
    end else begin
        dense_1_output_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        dense_1_output_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        dense_1_output_array_ce0 = grp_k2c_batch_norm_fu_1866_inputs_array_ce0;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        dense_1_output_array_ce0 = grp_k2c_dense_2_fu_1809_output_array_ce0;
    end else begin
        dense_1_output_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        dense_1_output_array_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        dense_1_output_array_d0 = grp_k2c_dense_2_fu_1809_output_array_d0;
    end else begin
        dense_1_output_array_d0 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond16_fu_2137_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        dense_1_output_array_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        dense_1_output_array_we0 = grp_k2c_dense_2_fu_1809_output_array_we0;
    end else begin
        dense_1_output_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        dense_1_output_shape_address0 = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        dense_1_output_shape_address0 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        dense_1_output_shape_address0 = 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        dense_1_output_shape_address0 = grp_k2c_batch_norm_fu_1866_inputs_shape_address0;
    end else begin
        dense_1_output_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        dense_1_output_shape_address1 = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        dense_1_output_shape_address1 = 3'd2;
    end else begin
        dense_1_output_shape_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state31))) begin
        dense_1_output_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        dense_1_output_shape_ce0 = grp_k2c_batch_norm_fu_1866_inputs_shape_ce0;
    end else begin
        dense_1_output_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31))) begin
        dense_1_output_shape_ce1 = 1'b1;
    end else begin
        dense_1_output_shape_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31))) begin
        dense_1_output_shape_d0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        dense_1_output_shape_d0 = 64'd10;
    end else begin
        dense_1_output_shape_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state31))) begin
        dense_1_output_shape_we0 = 1'b1;
    end else begin
        dense_1_output_shape_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31))) begin
        dense_1_output_shape_we1 = 1'b1;
    end else begin
        dense_1_output_shape_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp18_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp18_stage0) & (1'b0 == ap_block_pp18_stage0_11001))) begin
        dense_2_bias_array6_ce0 = 1'b1;
    end else begin
        dense_2_bias_array6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp18_stage0) & (ap_enable_reg_pp18_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp18_stage0))) begin
        dense_2_bias_array_address0 = tmp_55_reg_3155;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        dense_2_bias_array_address0 = grp_k2c_dense_1_fu_1786_bias_array_address0;
    end else begin
        dense_2_bias_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp18_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp18_stage0) & (1'b0 == ap_block_pp18_stage0_11001))) begin
        dense_2_bias_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        dense_2_bias_array_ce0 = grp_k2c_dense_1_fu_1786_bias_array_ce0;
    end else begin
        dense_2_bias_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond6_reg_3146 == 1'd0) & (ap_enable_reg_pp18_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp18_stage0) & (1'b0 == ap_block_pp18_stage0_11001))) begin
        dense_2_bias_array_we0 = 1'b1;
    end else begin
        dense_2_bias_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        dense_2_fwork_address0 = tmp_56_fu_2407_p1;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        dense_2_fwork_address0 = grp_k2c_dense_1_fu_1786_fwork_address0;
    end else begin
        dense_2_fwork_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        dense_2_fwork_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        dense_2_fwork_ce0 = grp_k2c_dense_1_fu_1786_fwork_ce0;
    end else begin
        dense_2_fwork_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state120)) begin
        dense_2_fwork_ce1 = grp_k2c_dense_1_fu_1786_fwork_ce1;
    end else begin
        dense_2_fwork_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        dense_2_fwork_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        dense_2_fwork_d0 = grp_k2c_dense_1_fu_1786_fwork_d0;
    end else begin
        dense_2_fwork_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        dense_2_fwork_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        dense_2_fwork_we0 = grp_k2c_dense_1_fu_1786_fwork_we0;
    end else begin
        dense_2_fwork_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp17_stage0) & (ap_enable_reg_pp17_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp17_stage0))) begin
        dense_2_kernel_array_1_address0 = tmp_54_reg_3136;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        dense_2_kernel_array_1_address0 = grp_k2c_dense_1_fu_1786_kernel_array_address0;
    end else begin
        dense_2_kernel_array_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp17_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp17_stage0) & (1'b0 == ap_block_pp17_stage0_11001))) begin
        dense_2_kernel_array_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        dense_2_kernel_array_1_ce0 = grp_k2c_dense_1_fu_1786_kernel_array_ce0;
    end else begin
        dense_2_kernel_array_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond7_reg_3127 == 1'd0) & (ap_enable_reg_pp17_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp17_stage0) & (1'b0 == ap_block_pp17_stage0_11001))) begin
        dense_2_kernel_array_1_we0 = 1'b1;
    end else begin
        dense_2_kernel_array_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp17_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp17_stage0) & (1'b0 == ap_block_pp17_stage0_11001))) begin
        dense_2_kernel_array_ce0 = 1'b1;
    end else begin
        dense_2_kernel_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        dense_2_kernel_shape_address0 = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        dense_2_kernel_shape_address0 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        dense_2_kernel_shape_address0 = 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        dense_2_kernel_shape_address0 = grp_k2c_dense_1_fu_1786_kernel_shape_address0;
    end else begin
        dense_2_kernel_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        dense_2_kernel_shape_address1 = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        dense_2_kernel_shape_address1 = 3'd2;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        dense_2_kernel_shape_address1 = grp_k2c_dense_1_fu_1786_kernel_shape_address1;
    end else begin
        dense_2_kernel_shape_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state64))) begin
        dense_2_kernel_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        dense_2_kernel_shape_ce0 = grp_k2c_dense_1_fu_1786_kernel_shape_ce0;
    end else begin
        dense_2_kernel_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state64))) begin
        dense_2_kernel_shape_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        dense_2_kernel_shape_ce1 = grp_k2c_dense_1_fu_1786_kernel_shape_ce1;
    end else begin
        dense_2_kernel_shape_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        dense_2_kernel_shape_d0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        dense_2_kernel_shape_d0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        dense_2_kernel_shape_d0 = 64'd10;
    end else begin
        dense_2_kernel_shape_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state64))) begin
        dense_2_kernel_shape_we0 = 1'b1;
    end else begin
        dense_2_kernel_shape_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state64))) begin
        dense_2_kernel_shape_we1 = 1'b1;
    end else begin
        dense_2_kernel_shape_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state133)) begin
        dense_2_output_array_address0 = tmp_81_fu_2827_p1;
    end else if ((1'b1 == ap_CS_fsm_state130)) begin
        dense_2_output_array_address0 = dense_2_output_array_5_reg_3485;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        dense_2_output_array_address0 = i_4_cast_fu_2779_p1;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        dense_2_output_array_address0 = dense_2_output_array_3_reg_3457;
    end else if ((1'b1 == ap_CS_fsm_state125)) begin
        dense_2_output_array_address0 = i_3_cast_fu_2762_p1;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        dense_2_output_array_address0 = i_2_cast_fu_2653_p1;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        dense_2_output_array_address0 = 19'd0;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        dense_2_output_array_address0 = tmp_53_fu_2344_p1;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        dense_2_output_array_address0 = grp_k2c_dense_1_fu_1786_output_array_address0;
    end else begin
        dense_2_output_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state61))) begin
        dense_2_output_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        dense_2_output_array_ce0 = grp_k2c_dense_1_fu_1786_output_array_ce0;
    end else begin
        dense_2_output_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state130)) begin
        dense_2_output_array_d0 = tmp_79_fu_1900_p2;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        dense_2_output_array_d0 = tmp_77_fu_1918_p2;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        dense_2_output_array_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        dense_2_output_array_d0 = grp_k2c_dense_1_fu_1786_output_array_d0;
    end else begin
        dense_2_output_array_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state126) | ((exitcond8_fu_2332_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state61)))) begin
        dense_2_output_array_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        dense_2_output_array_we0 = grp_k2c_dense_1_fu_1786_output_array_we0;
    end else begin
        dense_2_output_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        dense_2_output_shape_address0 = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        dense_2_output_shape_address0 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        dense_2_output_shape_address0 = 3'd0;
    end else begin
        dense_2_output_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state131)) begin
        dense_2_output_shape_address1 = tmp_80_fu_2817_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        dense_2_output_shape_address1 = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        dense_2_output_shape_address1 = 3'd2;
    end else begin
        dense_2_output_shape_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state60))) begin
        dense_2_output_shape_ce0 = 1'b1;
    end else begin
        dense_2_output_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state131))) begin
        dense_2_output_shape_ce1 = 1'b1;
    end else begin
        dense_2_output_shape_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state60))) begin
        dense_2_output_shape_d0 = 5'd1;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        dense_2_output_shape_d0 = 5'd6;
    end else begin
        dense_2_output_shape_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state60))) begin
        dense_2_output_shape_we0 = 1'b1;
    end else begin
        dense_2_output_shape_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state60))) begin
        dense_2_output_shape_we1 = 1'b1;
    end else begin
        dense_2_output_shape_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        dense_bias_array_0_address0 = tmp_35_reg_2879;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        dense_bias_array_0_address0 = grp_k2c_dense_fu_1832_bias_array_address0;
    end else begin
        dense_bias_array_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        dense_bias_array_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        dense_bias_array_0_ce0 = grp_k2c_dense_fu_1832_bias_array_ce0;
    end else begin
        dense_bias_array_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond22_reg_2870 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        dense_bias_array_0_we0 = 1'b1;
    end else begin
        dense_bias_array_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        dense_bias_array_ce0 = 1'b1;
    end else begin
        dense_bias_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        dense_fwork_address0 = tmp_33_fu_2017_p1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        dense_fwork_address0 = grp_k2c_dense_fu_1832_fwork_address0;
    end else begin
        dense_fwork_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        dense_fwork_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        dense_fwork_ce0 = grp_k2c_dense_fu_1832_fwork_ce0;
    end else begin
        dense_fwork_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        dense_fwork_ce1 = grp_k2c_dense_fu_1832_fwork_ce1;
    end else begin
        dense_fwork_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        dense_fwork_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        dense_fwork_d0 = grp_k2c_dense_fu_1832_fwork_d0;
    end else begin
        dense_fwork_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        dense_fwork_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        dense_fwork_we0 = grp_k2c_dense_fu_1832_fwork_we0;
    end else begin
        dense_fwork_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dense_kernel_array_address0 = tmp_s_fu_1989_p1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        dense_kernel_array_address0 = grp_k2c_dense_fu_1832_kernel_array_address0;
    end else begin
        dense_kernel_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dense_kernel_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        dense_kernel_array_ce0 = grp_k2c_dense_fu_1832_kernel_array_ce0;
    end else begin
        dense_kernel_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond23_fu_1977_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        dense_kernel_array_we0 = 1'b1;
    end else begin
        dense_kernel_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        dense_kernel_shape_address0 = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        dense_kernel_shape_address0 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dense_kernel_shape_address0 = 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        dense_kernel_shape_address0 = grp_k2c_dense_fu_1832_kernel_shape_address0;
    end else begin
        dense_kernel_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        dense_kernel_shape_address1 = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        dense_kernel_shape_address1 = 3'd2;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        dense_kernel_shape_address1 = grp_k2c_dense_fu_1832_kernel_shape_address1;
    end else begin
        dense_kernel_shape_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state7))) begin
        dense_kernel_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        dense_kernel_shape_ce0 = grp_k2c_dense_fu_1832_kernel_shape_ce0;
    end else begin
        dense_kernel_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7))) begin
        dense_kernel_shape_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        dense_kernel_shape_ce1 = grp_k2c_dense_fu_1832_kernel_shape_ce1;
    end else begin
        dense_kernel_shape_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        dense_kernel_shape_d0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        dense_kernel_shape_d0 = 64'd100;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dense_kernel_shape_d0 = 64'd2622;
    end else begin
        dense_kernel_shape_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state7))) begin
        dense_kernel_shape_we0 = 1'b1;
    end else begin
        dense_kernel_shape_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7))) begin
        dense_kernel_shape_we1 = 1'b1;
    end else begin
        dense_kernel_shape_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dense_output_array_address0 = tmp_fu_1972_p1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        dense_output_array_address0 = grp_k2c_batch_norm_fu_1866_inputs_array_address0;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        dense_output_array_address0 = grp_k2c_dense_fu_1832_output_array_address0;
    end else begin
        dense_output_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dense_output_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        dense_output_array_ce0 = grp_k2c_batch_norm_fu_1866_inputs_array_ce0;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        dense_output_array_ce0 = grp_k2c_dense_fu_1832_output_array_ce0;
    end else begin
        dense_output_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dense_output_array_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        dense_output_array_d0 = grp_k2c_dense_fu_1832_output_array_d0;
    end else begin
        dense_output_array_d0 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond24_fu_1960_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        dense_output_array_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        dense_output_array_we0 = grp_k2c_dense_fu_1832_output_array_we0;
    end else begin
        dense_output_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        dense_output_shape_address0 = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        dense_output_shape_address0 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        dense_output_shape_address0 = 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        dense_output_shape_address0 = grp_k2c_batch_norm_fu_1866_inputs_shape_address0;
    end else begin
        dense_output_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        dense_output_shape_address1 = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        dense_output_shape_address1 = 3'd2;
    end else begin
        dense_output_shape_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        dense_output_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        dense_output_shape_ce0 = grp_k2c_batch_norm_fu_1866_inputs_shape_ce0;
    end else begin
        dense_output_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        dense_output_shape_ce1 = 1'b1;
    end else begin
        dense_output_shape_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        dense_output_shape_d0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        dense_output_shape_d0 = 64'd100;
    end else begin
        dense_output_shape_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        dense_output_shape_we0 = 1'b1;
    end else begin
        dense_output_shape_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        dense_output_shape_we1 = 1'b1;
    end else begin
        dense_output_shape_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp23_stage0) & (ap_enable_reg_pp23_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp23_stage0))) begin
        dropout_2_output_arr_address0 = tmp_64_reg_3268;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        dropout_2_output_arr_address0 = grp_k2c_dense_2_fu_1809_input_array_address0;
    end else begin
        dropout_2_output_arr_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp23_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp23_stage0) & (1'b0 == ap_block_pp23_stage0_11001))) begin
        dropout_2_output_arr_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        dropout_2_output_arr_ce0 = grp_k2c_dense_2_fu_1809_input_array_ce0;
    end else begin
        dropout_2_output_arr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_65_reg_3273 == 1'd1) & (ap_enable_reg_pp23_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp23_stage0) & (1'b0 == ap_block_pp23_stage0_11001))) begin
        dropout_2_output_arr_we0 = 1'b1;
    end else begin
        dropout_2_output_arr_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp22_stage0) & (ap_enable_reg_pp22_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp22_stage0))) begin
        dropout_2_output_sha_address0 = tmp_63_reg_3258;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        dropout_2_output_sha_address0 = grp_k2c_dense_2_fu_1809_input_shape_address0;
    end else begin
        dropout_2_output_sha_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp22_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp22_stage0) & (1'b0 == ap_block_pp22_stage0_11001))) begin
        dropout_2_output_sha_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        dropout_2_output_sha_ce0 = grp_k2c_dense_2_fu_1809_input_shape_ce0;
    end else begin
        dropout_2_output_sha_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond4_reg_3249 == 1'd0) & (ap_enable_reg_pp22_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp22_stage0) & (1'b0 == ap_block_pp22_stage0_11001))) begin
        dropout_2_output_sha_we0 = 1'b1;
    end else begin
        dropout_2_output_sha_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp28_stage0) & (ap_enable_reg_pp28_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp28_stage0))) begin
        dropout_3_output_arr_address0 = tmp_72_reg_3392;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        dropout_3_output_arr_address0 = grp_k2c_dense_1_fu_1786_input_array_address0;
    end else begin
        dropout_3_output_arr_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp28_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp28_stage0) & (1'b0 == ap_block_pp28_stage0_11001))) begin
        dropout_3_output_arr_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        dropout_3_output_arr_ce0 = grp_k2c_dense_1_fu_1786_input_array_ce0;
    end else begin
        dropout_3_output_arr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_73_reg_3397 == 1'd1) & (ap_enable_reg_pp28_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp28_stage0) & (1'b0 == ap_block_pp28_stage0_11001))) begin
        dropout_3_output_arr_we0 = 1'b1;
    end else begin
        dropout_3_output_arr_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp27_stage0) & (ap_enable_reg_pp27_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp27_stage0))) begin
        dropout_3_output_sha_address0 = tmp_71_reg_3382;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        dropout_3_output_sha_address0 = grp_k2c_dense_1_fu_1786_input_shape_address0;
    end else begin
        dropout_3_output_sha_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp27_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp27_stage0) & (1'b0 == ap_block_pp27_stage0_11001))) begin
        dropout_3_output_sha_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        dropout_3_output_sha_ce0 = grp_k2c_dense_1_fu_1786_input_shape_ce0;
    end else begin
        dropout_3_output_sha_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_reg_3373 == 1'd0) & (ap_enable_reg_pp27_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp27_stage0) & (1'b0 == ap_block_pp27_stage0_11001))) begin
        dropout_3_output_sha_we0 = 1'b1;
    end else begin
        dropout_3_output_sha_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state126)) begin
        grp_fu_1893_opcode = 2'd1;
    end else if ((1'b1 == ap_CS_fsm_state127)) begin
        grp_fu_1893_opcode = 2'd0;
    end else begin
        grp_fu_1893_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        grp_fu_1893_p0 = sum_reg_1741;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        grp_fu_1893_p0 = dense_2_output_array_q0;
    end else begin
        grp_fu_1893_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        grp_fu_1893_p1 = tmp_77_reg_3462;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        grp_fu_1893_p1 = xmax1_reg_1720;
    end else begin
        grp_fu_1893_p1 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond25_reg_3315 == 1'd0) & (1'b0 == ap_block_pp24_stage0) & (ap_enable_reg_pp24_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp24_stage0))) begin
        grp_generic_tanh_float_s_fu_1851_t_in = batch_normalization_8_q0;
    end else if (((exitcond26_reg_3191 == 1'd0) & (1'b0 == ap_block_pp19_stage0) & (ap_enable_reg_pp19_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp19_stage0))) begin
        grp_generic_tanh_float_s_fu_1851_t_in = batch_normalization_25_q0;
    end else begin
        grp_generic_tanh_float_s_fu_1851_t_in = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        grp_k2c_batch_norm_fu_1866_beta_array_q0 = batch_normalization_5_q0;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        grp_k2c_batch_norm_fu_1866_beta_array_q0 = batch_normalization_22_q0;
    end else begin
        grp_k2c_batch_norm_fu_1866_beta_array_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        grp_k2c_batch_norm_fu_1866_gamma_array_q0 = batch_normalization_6_q0;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        grp_k2c_batch_norm_fu_1866_gamma_array_q0 = batch_normalization_23_q0;
    end else begin
        grp_k2c_batch_norm_fu_1866_gamma_array_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        grp_k2c_batch_norm_fu_1866_inputs_array_q0 = dense_1_output_array_q0;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        grp_k2c_batch_norm_fu_1866_inputs_array_q0 = dense_output_array_q0;
    end else begin
        grp_k2c_batch_norm_fu_1866_inputs_array_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        grp_k2c_batch_norm_fu_1866_inputs_ndim_read = dense_1_output_ndim;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        grp_k2c_batch_norm_fu_1866_inputs_ndim_read = dense_output_ndim;
    end else begin
        grp_k2c_batch_norm_fu_1866_inputs_ndim_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        grp_k2c_batch_norm_fu_1866_inputs_numel_read = reg_1937;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        grp_k2c_batch_norm_fu_1866_inputs_numel_read = dense_output_numel;
    end else begin
        grp_k2c_batch_norm_fu_1866_inputs_numel_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        grp_k2c_batch_norm_fu_1866_inputs_shape_q0 = dense_1_output_shape_q0;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        grp_k2c_batch_norm_fu_1866_inputs_shape_q0 = dense_output_shape_q0;
    end else begin
        grp_k2c_batch_norm_fu_1866_inputs_shape_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        grp_k2c_batch_norm_fu_1866_mean_array_q0 = batch_normalization_7_q0;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        grp_k2c_batch_norm_fu_1866_mean_array_q0 = batch_normalization_24_q0;
    end else begin
        grp_k2c_batch_norm_fu_1866_mean_array_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        grp_k2c_batch_norm_fu_1866_stdev_array_q0 = batch_normalization_18_q0;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        grp_k2c_batch_norm_fu_1866_stdev_array_q0 = batch_normalization_21_q0;
    end else begin
        grp_k2c_batch_norm_fu_1866_stdev_array_q0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((exitcond24_fu_1960_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((exitcond23_fu_1977_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((exitcond22_fu_1994_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((exitcond22_fu_1994_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((tmp_34_fu_2022_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((exitcond21_fu_2040_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((exitcond20_fu_2057_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((exitcond20_fu_2057_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if (~((exitcond19_fu_2074_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if (((exitcond19_fu_2074_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if (~((exitcond18_fu_2091_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if (((exitcond18_fu_2091_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_pp7_stage0;
        end
        ap_ST_fsm_pp7_stage0 : begin
            if (~((exitcond17_fu_2108_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if (((exitcond17_fu_2108_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            if (((exitcond16_fu_2137_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_pp9_stage0;
        end
        ap_ST_fsm_pp9_stage0 : begin
            if (~((exitcond15_fu_2166_p2 == 1'd1) & (ap_enable_reg_pp9_iter0 == 1'b1) & (1'b0 == ap_block_pp9_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage0;
            end else if (((exitcond15_fu_2166_p2 == 1'd1) & (ap_enable_reg_pp9_iter0 == 1'b1) & (1'b0 == ap_block_pp9_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage0;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_pp10_stage0;
        end
        ap_ST_fsm_pp10_stage0 : begin
            if (~((exitcond14_fu_2189_p2 == 1'd1) & (ap_enable_reg_pp10_iter0 == 1'b1) & (1'b0 == ap_block_pp10_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp10_stage0;
            end else if (((exitcond14_fu_2189_p2 == 1'd1) & (ap_enable_reg_pp10_iter0 == 1'b1) & (1'b0 == ap_block_pp10_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp10_stage0;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            if (((tmp_44_fu_2217_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            if (((exitcond13_fu_2235_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_pp12_stage0;
        end
        ap_ST_fsm_pp12_stage0 : begin
            if (~((exitcond12_fu_2252_p2 == 1'd1) & (ap_enable_reg_pp12_iter0 == 1'b1) & (1'b0 == ap_block_pp12_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp12_stage0;
            end else if (((exitcond12_fu_2252_p2 == 1'd1) & (ap_enable_reg_pp12_iter0 == 1'b1) & (1'b0 == ap_block_pp12_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp12_stage0;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_pp13_stage0;
        end
        ap_ST_fsm_pp13_stage0 : begin
            if (~((exitcond11_fu_2269_p2 == 1'd1) & (ap_enable_reg_pp13_iter0 == 1'b1) & (1'b0 == ap_block_pp13_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp13_stage0;
            end else if (((exitcond11_fu_2269_p2 == 1'd1) & (ap_enable_reg_pp13_iter0 == 1'b1) & (1'b0 == ap_block_pp13_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp13_stage0;
            end
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_pp14_stage0;
        end
        ap_ST_fsm_pp14_stage0 : begin
            if (~((exitcond10_fu_2286_p2 == 1'd1) & (ap_enable_reg_pp14_iter0 == 1'b1) & (1'b0 == ap_block_pp14_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp14_stage0;
            end else if (((exitcond10_fu_2286_p2 == 1'd1) & (ap_enable_reg_pp14_iter0 == 1'b1) & (1'b0 == ap_block_pp14_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp14_stage0;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_pp15_stage0;
        end
        ap_ST_fsm_pp15_stage0 : begin
            if (~((exitcond9_fu_2303_p2 == 1'd1) & (ap_enable_reg_pp15_iter0 == 1'b1) & (1'b0 == ap_block_pp15_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp15_stage0;
            end else if (((exitcond9_fu_2303_p2 == 1'd1) & (ap_enable_reg_pp15_iter0 == 1'b1) & (1'b0 == ap_block_pp15_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp15_stage0;
            end
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            if (((exitcond8_fu_2332_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state61))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_pp17_stage0;
        end
        ap_ST_fsm_pp17_stage0 : begin
            if (~((exitcond7_fu_2361_p2 == 1'd1) & (ap_enable_reg_pp17_iter0 == 1'b1) & (1'b0 == ap_block_pp17_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp17_stage0;
            end else if (((exitcond7_fu_2361_p2 == 1'd1) & (ap_enable_reg_pp17_iter0 == 1'b1) & (1'b0 == ap_block_pp17_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp17_stage0;
            end
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_pp18_stage0;
        end
        ap_ST_fsm_pp18_stage0 : begin
            if (~((exitcond6_fu_2384_p2 == 1'd1) & (ap_enable_reg_pp18_iter0 == 1'b1) & (1'b0 == ap_block_pp18_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp18_stage0;
            end else if (((exitcond6_fu_2384_p2 == 1'd1) & (ap_enable_reg_pp18_iter0 == 1'b1) & (1'b0 == ap_block_pp18_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp18_stage0;
            end
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            if (((tmp_57_fu_2412_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state71))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_state72 : begin
            if (((grp_k2c_dense_fu_1832_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state72))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            if (((1'b1 == ap_CS_fsm_state74) & (grp_k2c_batch_norm_fu_1866_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp19_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end
        end
        ap_ST_fsm_pp19_stage0 : begin
            if ((~((exitcond26_fu_2437_p2 == 1'd1) & (ap_enable_reg_pp19_iter0 == 1'b1) & (ap_enable_reg_pp19_iter1 == 1'b0) & (1'b0 == ap_block_pp19_stage0_subdone)) & ~((ap_enable_reg_pp19_iter7 == 1'b1) & (ap_enable_reg_pp19_iter6 == 1'b0) & (1'b0 == ap_block_pp19_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp19_stage0;
            end else if ((((ap_enable_reg_pp19_iter7 == 1'b1) & (ap_enable_reg_pp19_iter6 == 1'b0) & (1'b0 == ap_block_pp19_stage0_subdone)) | ((exitcond26_fu_2437_p2 == 1'd1) & (ap_enable_reg_pp19_iter0 == 1'b1) & (ap_enable_reg_pp19_iter1 == 1'b0) & (1'b0 == ap_block_pp19_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp19_stage0;
            end
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_pp20_stage0;
        end
        ap_ST_fsm_pp20_stage0 : begin
            if (~((exitcond5_fu_2452_p2 == 1'd1) & (ap_enable_reg_pp20_iter0 == 1'b1) & (1'b0 == ap_block_pp20_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp20_stage0;
            end else if (((exitcond5_fu_2452_p2 == 1'd1) & (ap_enable_reg_pp20_iter0 == 1'b1) & (1'b0 == ap_block_pp20_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state86;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp20_stage0;
            end
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_pp21_stage0;
        end
        ap_ST_fsm_pp21_stage0 : begin
            if (~((tmp_62_fu_2474_p2 == 1'd0) & (ap_enable_reg_pp21_iter0 == 1'b1) & (1'b0 == ap_block_pp21_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp21_stage0;
            end else if (((tmp_62_fu_2474_p2 == 1'd0) & (ap_enable_reg_pp21_iter0 == 1'b1) & (1'b0 == ap_block_pp21_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp21_stage0;
            end
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_pp22_stage0;
        end
        ap_ST_fsm_pp22_stage0 : begin
            if (~((exitcond4_fu_2485_p2 == 1'd1) & (ap_enable_reg_pp22_iter0 == 1'b1) & (1'b0 == ap_block_pp22_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp22_stage0;
            end else if (((exitcond4_fu_2485_p2 == 1'd1) & (ap_enable_reg_pp22_iter0 == 1'b1) & (1'b0 == ap_block_pp22_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state92;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp22_stage0;
            end
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_pp23_stage0;
        end
        ap_ST_fsm_pp23_stage0 : begin
            if (~((tmp_65_fu_2512_p2 == 1'd0) & (ap_enable_reg_pp23_iter0 == 1'b1) & (1'b0 == ap_block_pp23_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp23_stage0;
            end else if (((tmp_65_fu_2512_p2 == 1'd0) & (ap_enable_reg_pp23_iter0 == 1'b1) & (1'b0 == ap_block_pp23_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp23_stage0;
            end
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            if (((1'b1 == ap_CS_fsm_state96) & (grp_k2c_dense_2_fu_1809_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state96;
            end
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            if (((1'b1 == ap_CS_fsm_state98) & (grp_k2c_batch_norm_fu_1866_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp24_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end
        end
        ap_ST_fsm_pp24_stage0 : begin
            if ((~((exitcond25_fu_2552_p2 == 1'd1) & (ap_enable_reg_pp24_iter0 == 1'b1) & (ap_enable_reg_pp24_iter1 == 1'b0) & (1'b0 == ap_block_pp24_stage0_subdone)) & ~((ap_enable_reg_pp24_iter7 == 1'b1) & (ap_enable_reg_pp24_iter6 == 1'b0) & (1'b0 == ap_block_pp24_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp24_stage0;
            end else if ((((ap_enable_reg_pp24_iter7 == 1'b1) & (ap_enable_reg_pp24_iter6 == 1'b0) & (1'b0 == ap_block_pp24_stage0_subdone)) | ((exitcond25_fu_2552_p2 == 1'd1) & (ap_enable_reg_pp24_iter0 == 1'b1) & (ap_enable_reg_pp24_iter1 == 1'b0) & (1'b0 == ap_block_pp24_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state107;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp24_stage0;
            end
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_pp25_stage0;
        end
        ap_ST_fsm_pp25_stage0 : begin
            if (~((exitcond3_fu_2567_p2 == 1'd1) & (ap_enable_reg_pp25_iter0 == 1'b1) & (1'b0 == ap_block_pp25_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp25_stage0;
            end else if (((exitcond3_fu_2567_p2 == 1'd1) & (ap_enable_reg_pp25_iter0 == 1'b1) & (1'b0 == ap_block_pp25_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state110;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp25_stage0;
            end
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_pp26_stage0;
        end
        ap_ST_fsm_pp26_stage0 : begin
            if (~((tmp_70_fu_2589_p2 == 1'd0) & (ap_enable_reg_pp26_iter0 == 1'b1) & (1'b0 == ap_block_pp26_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp26_stage0;
            end else if (((tmp_70_fu_2589_p2 == 1'd0) & (ap_enable_reg_pp26_iter0 == 1'b1) & (1'b0 == ap_block_pp26_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state113;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp26_stage0;
            end
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_pp27_stage0;
        end
        ap_ST_fsm_pp27_stage0 : begin
            if (~((exitcond2_fu_2600_p2 == 1'd1) & (ap_enable_reg_pp27_iter0 == 1'b1) & (1'b0 == ap_block_pp27_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp27_stage0;
            end else if (((exitcond2_fu_2600_p2 == 1'd1) & (ap_enable_reg_pp27_iter0 == 1'b1) & (1'b0 == ap_block_pp27_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state116;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp27_stage0;
            end
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_pp28_stage0;
        end
        ap_ST_fsm_pp28_stage0 : begin
            if (~((tmp_73_fu_2627_p2 == 1'd0) & (ap_enable_reg_pp28_iter0 == 1'b1) & (1'b0 == ap_block_pp28_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp28_stage0;
            end else if (((tmp_73_fu_2627_p2 == 1'd0) & (ap_enable_reg_pp28_iter0 == 1'b1) & (1'b0 == ap_block_pp28_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state119;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp28_stage0;
            end
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            if (((1'b1 == ap_CS_fsm_state120) & (grp_k2c_dense_1_fu_1786_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state121;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state120;
            end
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            if (((exitcond1_fu_2658_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state123))) begin
                ap_NS_fsm = ap_ST_fsm_state125;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state124;
            end
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state125 : begin
            if (((tmp_75_fu_2767_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state125))) begin
                ap_NS_fsm = ap_ST_fsm_state128;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state126;
            end
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            if (((tmp_78_fu_2784_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state129))) begin
                ap_NS_fsm = ap_ST_fsm_state131;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state130;
            end
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state131 : begin
            if (((exitcond_fu_2805_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state131))) begin
                ap_NS_fsm = ap_ST_fsm_state133;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state132;
            end
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state133 : begin
            if (((tmp_82_fu_2832_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state133))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state134;
            end
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign activation_3_output_array_address0 = tmp_81_reg_3508;

assign activation_3_output_array_d0 = dense_2_output_array_q0;

assign activation_3_output_ndim = dense_2_output_ndim;

assign activation_3_output_numel = dense_2_output_numel;

assign activation_3_output_shape_address0 = tmp_80_reg_3498;

assign activation_3_output_shape_d0 = $signed(dense_2_output_shape_q1);

assign ap_CS_fsm_pp10_stage0 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp12_stage0 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_pp13_stage0 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_pp14_stage0 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_pp15_stage0 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_pp17_stage0 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_pp18_stage0 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_pp19_stage0 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_pp20_stage0 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_pp21_stage0 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_pp22_stage0 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_pp23_stage0 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_pp24_stage0 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_pp25_stage0 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_pp26_stage0 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_pp27_stage0 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_pp28_stage0 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp9_stage0 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state120 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state121 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state124 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state130 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state131 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state134 = ap_CS_fsm[32'd98];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd73];

assign ap_block_pp10_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp10_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp10_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp12_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp12_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp12_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp13_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp13_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp13_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp14_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp14_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp14_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp15_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp15_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp15_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp17_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp17_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp17_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp18_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp18_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp18_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp19_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp19_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp19_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp20_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp20_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp20_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp21_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp21_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp21_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp22_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp22_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp22_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp23_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp23_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp23_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp24_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp24_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp24_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp25_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp25_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp25_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp26_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp26_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp26_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp27_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp27_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp27_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp28_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp28_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp28_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp9_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp9_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp9_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state100_pp24_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp24_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp24_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp24_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp24_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp24_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp24_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp25_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp25_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp26_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp26_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state114_pp27_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state115_pp27_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state117_pp28_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state118_pp28_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp9_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp9_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp10_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp10_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp12_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp12_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp13_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp13_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp14_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp14_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp15_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp15_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp17_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp17_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp18_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp18_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp19_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp19_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp19_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp19_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp19_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp19_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp19_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp19_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp20_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp20_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp21_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp21_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp22_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp22_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp23_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp23_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp24_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp10 = (ap_idle_pp10 ^ 1'b1);

assign ap_enable_pp12 = (ap_idle_pp12 ^ 1'b1);

assign ap_enable_pp13 = (ap_idle_pp13 ^ 1'b1);

assign ap_enable_pp14 = (ap_idle_pp14 ^ 1'b1);

assign ap_enable_pp15 = (ap_idle_pp15 ^ 1'b1);

assign ap_enable_pp17 = (ap_idle_pp17 ^ 1'b1);

assign ap_enable_pp18 = (ap_idle_pp18 ^ 1'b1);

assign ap_enable_pp19 = (ap_idle_pp19 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp20 = (ap_idle_pp20 ^ 1'b1);

assign ap_enable_pp21 = (ap_idle_pp21 ^ 1'b1);

assign ap_enable_pp22 = (ap_idle_pp22 ^ 1'b1);

assign ap_enable_pp23 = (ap_idle_pp23 ^ 1'b1);

assign ap_enable_pp24 = (ap_idle_pp24 ^ 1'b1);

assign ap_enable_pp25 = (ap_idle_pp25 ^ 1'b1);

assign ap_enable_pp26 = (ap_idle_pp26 ^ 1'b1);

assign ap_enable_pp27 = (ap_idle_pp27 ^ 1'b1);

assign ap_enable_pp28 = (ap_idle_pp28 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

assign ap_enable_pp9 = (ap_idle_pp9 ^ 1'b1);

assign batch_normalization_11_address0 = tmp_37_fu_2069_p1;

assign batch_normalization_14_address0 = tmp_39_fu_2103_p1;

assign batch_normalization_17_address0 = tmp_40_fu_2120_p1;

assign batch_normalization_20_address0 = tmp_49_fu_2281_p1;

assign batch_normalization_31_address0 = tmp_47_fu_2264_p1;

assign batch_normalization_34_address0 = tmp_51_fu_2298_p1;

assign batch_normalization_37_address0 = tmp_52_fu_2315_p1;

assign batch_normalization_s_address0 = tmp_38_fu_2086_p1;

assign dense_1_bias_array1_address0 = tmp_45_fu_2201_p1;

assign dense_1_kernel_array_address0 = tmp_42_fu_2178_p1;

assign dense_2_bias_array6_address0 = tmp_55_fu_2396_p1;

assign dense_2_kernel_array_address0 = tmp_54_fu_2373_p1;

assign dense_bias_array_address0 = tmp_35_fu_2006_p1;

assign dense_input_input_array_address0 = grp_k2c_dense_fu_1832_input_array_address0;

assign dense_input_input_array_ce0 = grp_k2c_dense_fu_1832_input_array_ce0;

assign dense_input_input_shape_address0 = grp_k2c_dense_fu_1832_input_shape_address0;

assign dense_input_input_shape_ce0 = grp_k2c_dense_fu_1832_input_shape_ce0;

assign dropout_2_output_sha_d0 = $signed(activation_1_output_s_q0);

assign dropout_3_output_sha_d0 = $signed(activation_2_output_s_q0);

assign exitcond10_fu_2286_p2 = ((j_13_reg_1533 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond11_fu_2269_p2 = ((j_12_reg_1522 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond12_fu_2252_p2 = ((j_11_reg_1511 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond13_fu_2235_p2 = ((j_10_reg_1500 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond14_fu_2189_p2 = ((j_s_reg_1478 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond15_fu_2166_p2 = ((j_9_reg_1467 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond16_fu_2137_p2 = ((j_8_reg_1456 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond17_fu_2108_p2 = ((j_7_reg_1445 == 7'd100) ? 1'b1 : 1'b0);

assign exitcond18_fu_2091_p2 = ((j_6_reg_1434 == 7'd100) ? 1'b1 : 1'b0);

assign exitcond19_fu_2074_p2 = ((j_5_reg_1423 == 7'd100) ? 1'b1 : 1'b0);

assign exitcond1_fu_2658_p2 = ((i_2_reg_1709 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond20_fu_2057_p2 = ((j_4_reg_1412 == 7'd100) ? 1'b1 : 1'b0);

assign exitcond21_fu_2040_p2 = ((j_3_reg_1401 == 7'd100) ? 1'b1 : 1'b0);

assign exitcond22_fu_1994_p2 = ((j_2_reg_1379 == 7'd100) ? 1'b1 : 1'b0);

assign exitcond23_fu_1977_p2 = ((j_1_reg_1368 == 19'd262200) ? 1'b1 : 1'b0);

assign exitcond24_fu_1960_p2 = ((j_reg_1357 == 7'd100) ? 1'b1 : 1'b0);

assign exitcond25_fu_2552_p2 = ((i_1_cast_fu_2547_p1 == batch_normalization_63_reg_3307) ? 1'b1 : 1'b0);

assign exitcond26_fu_2437_p2 = ((i_cast_fu_2432_p1 == batch_normalization_55_reg_3183) ? 1'b1 : 1'b0);

assign exitcond2_fu_2600_p2 = ((j_24_reg_1687 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond3_fu_2567_p2 = ((j_22_reg_1665 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond4_fu_2485_p2 = ((j_20_reg_1632 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond5_fu_2452_p2 = ((j_18_reg_1610 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond6_fu_2384_p2 = ((j_17_reg_1577 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond7_fu_2361_p2 = ((j_16_reg_1566 == 6'd60) ? 1'b1 : 1'b0);

assign exitcond8_fu_2332_p2 = ((j_15_reg_1555 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond9_fu_2303_p2 = ((j_14_reg_1544 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond_fu_2805_p2 = ((j_26_reg_1764 == 3'd5) ? 1'b1 : 1'b0);

assign grp_generic_tanh_float_s_fu_1851_ap_start = grp_generic_tanh_float_s_fu_1851_ap_start_reg;

assign grp_k2c_batch_norm_fu_1866_ap_start = grp_k2c_batch_norm_fu_1866_ap_start_reg;

assign grp_k2c_dense_1_fu_1786_ap_start = grp_k2c_dense_1_fu_1786_ap_start_reg;

assign grp_k2c_dense_2_fu_1809_ap_start = grp_k2c_dense_2_fu_1809_ap_start_reg;

assign grp_k2c_dense_fu_1832_ap_start = grp_k2c_dense_fu_1832_ap_start_reg;

assign i_1_cast_fu_2547_p1 = i_1_reg_1654;

assign i_2_cast_fu_2653_p1 = i_2_reg_1709;

assign i_39_fu_2442_p2 = (i_reg_1599 + 19'd1);

assign i_3_cast_fu_2762_p1 = i_3_reg_1730;

assign i_40_fu_2557_p2 = (i_1_reg_1654 + 19'd1);

assign i_41_fu_2664_p2 = (3'd1 + i_2_reg_1709);

assign i_42_fu_2773_p2 = (i_3_reg_1730 + 3'd1);

assign i_43_fu_2790_p2 = (i_4_reg_1753 + 3'd1);

assign i_4_cast_fu_2779_p1 = i_4_reg_1753;

assign i_cast_fu_2432_p1 = i_reg_1599;

assign indvarinc1_fu_2206_p2 = (invdar1_reg_1489 + 11'd1);

assign indvarinc2_fu_2401_p2 = (invdar2_reg_1588 + 7'd1);

assign indvarinc_fu_2011_p2 = (invdar_reg_1390 + 19'd1);

assign j_28_fu_1966_p2 = (j_reg_1357 + 7'd1);

assign j_29_fu_1983_p2 = (j_1_reg_1368 + 19'd1);

assign j_30_fu_2000_p2 = (j_2_reg_1379 + 7'd1);

assign j_31_fu_2046_p2 = (j_3_reg_1401 + 7'd1);

assign j_32_fu_2063_p2 = (j_4_reg_1412 + 7'd1);

assign j_33_fu_2080_p2 = (j_5_reg_1423 + 7'd1);

assign j_34_fu_2097_p2 = (j_6_reg_1434 + 7'd1);

assign j_35_fu_2114_p2 = (j_7_reg_1445 + 7'd1);

assign j_36_fu_2143_p2 = (j_8_reg_1456 + 4'd1);

assign j_37_fu_2172_p2 = (j_9_reg_1467 + 10'd1);

assign j_38_fu_2195_p2 = (j_s_reg_1478 + 4'd1);

assign j_39_fu_2241_p2 = (j_10_reg_1500 + 4'd1);

assign j_40_fu_2258_p2 = (j_11_reg_1511 + 4'd1);

assign j_41_fu_2275_p2 = (j_12_reg_1522 + 4'd1);

assign j_42_fu_2292_p2 = (j_13_reg_1533 + 4'd1);

assign j_43_fu_2309_p2 = (j_14_reg_1544 + 4'd1);

assign j_44_fu_2338_p2 = (j_15_reg_1555 + 3'd1);

assign j_45_fu_2367_p2 = (j_16_reg_1566 + 6'd1);

assign j_46_fu_2390_p2 = (j_17_reg_1577 + 3'd1);

assign j_47_fu_2458_p2 = (j_18_reg_1610 + 3'd1);

assign j_48_fu_2479_p2 = (j_19_reg_1621 + 19'd1);

assign j_49_fu_2491_p2 = (j_20_reg_1632 + 3'd1);

assign j_50_fu_2517_p2 = (j_21_reg_1643 + 19'd1);

assign j_51_fu_2573_p2 = (j_22_reg_1665 + 3'd1);

assign j_52_fu_2594_p2 = (j_23_reg_1676 + 19'd1);

assign j_53_fu_2606_p2 = (j_24_reg_1687 + 3'd1);

assign j_54_fu_2632_p2 = (j_25_reg_1698 + 19'd1);

assign j_55_fu_2811_p2 = (j_26_reg_1764 + 3'd1);

assign j_56_fu_2838_p2 = ($signed(j_27_reg_1775) + $signed(32'd1));

assign notlhs1_fu_2724_p2 = ((tmp_7_fu_2692_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs_fu_2706_p2 = ((tmp_5_fu_2674_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs1_fu_2730_p2 = ((tmp_93_fu_2702_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_2712_p2 = ((tmp_92_fu_2684_p1 == 23'd0) ? 1'b1 : 1'b0);

assign tmp_10_fu_2736_p2 = (notrhs1_fu_2730_p2 | notlhs1_fu_2724_p2);

assign tmp_11_fu_2742_p2 = (tmp_9_fu_2718_p2 & tmp_10_fu_2736_p2);

assign tmp_13_fu_2748_p2 = (tmp_12_fu_1912_p2 & tmp_11_fu_2742_p2);

assign tmp_33_fu_2017_p1 = invdar_reg_1390;

assign tmp_34_fu_2022_p2 = ((invdar_reg_1390 == 19'd264821) ? 1'b1 : 1'b0);

assign tmp_35_fu_2006_p1 = j_2_reg_1379;

assign tmp_36_fu_2052_p1 = j_3_reg_1401;

assign tmp_37_fu_2069_p1 = j_4_reg_1412;

assign tmp_38_fu_2086_p1 = j_5_reg_1423;

assign tmp_39_fu_2103_p1 = j_6_reg_1434;

assign tmp_40_fu_2120_p1 = j_7_reg_1445;

assign tmp_41_fu_2149_p1 = j_8_reg_1456;

assign tmp_42_fu_2178_p1 = j_9_reg_1467;

assign tmp_43_fu_2212_p1 = invdar1_reg_1489;

assign tmp_44_fu_2217_p2 = ((invdar1_reg_1489 == 11'd1099) ? 1'b1 : 1'b0);

assign tmp_45_fu_2201_p1 = j_s_reg_1478;

assign tmp_46_fu_2247_p1 = j_10_reg_1500;

assign tmp_47_fu_2264_p1 = j_11_reg_1511;

assign tmp_49_fu_2281_p1 = j_12_reg_1522;

assign tmp_51_fu_2298_p1 = j_13_reg_1533;

assign tmp_52_fu_2315_p1 = j_14_reg_1544;

assign tmp_53_fu_2344_p1 = j_15_reg_1555;

assign tmp_54_fu_2373_p1 = j_16_reg_1566;

assign tmp_55_fu_2396_p1 = j_17_reg_1577;

assign tmp_56_fu_2407_p1 = invdar2_reg_1588;

assign tmp_57_fu_2412_p2 = ((invdar2_reg_1588 == 7'd69) ? 1'b1 : 1'b0);

assign tmp_5_fu_2674_p4 = {{xmax_2_to_int_fu_2670_p1[30:23]}};

assign tmp_60_fu_2464_p1 = j_18_reg_1610;

assign tmp_61_fu_2469_p1 = j_19_reg_1621;

assign tmp_62_fu_2474_p2 = ((tmp_61_fu_2469_p1 < batch_normalization_55_reg_3183) ? 1'b1 : 1'b0);

assign tmp_63_fu_2497_p1 = j_20_reg_1632;

assign tmp_64_fu_2507_p1 = j_21_reg_1643;

assign tmp_65_fu_2512_p2 = ((tmp_64_fu_2507_p1 < batch_normalization_55_reg_3183) ? 1'b1 : 1'b0);

assign tmp_68_fu_2579_p1 = j_22_reg_1665;

assign tmp_69_fu_2584_p1 = j_23_reg_1676;

assign tmp_70_fu_2589_p2 = ((tmp_69_fu_2584_p1 < batch_normalization_63_reg_3307) ? 1'b1 : 1'b0);

assign tmp_71_fu_2612_p1 = j_24_reg_1687;

assign tmp_72_fu_2622_p1 = j_25_reg_1698;

assign tmp_73_fu_2627_p2 = ((tmp_72_fu_2622_p1 < batch_normalization_63_reg_3307) ? 1'b1 : 1'b0);

assign tmp_75_fu_2767_p2 = ((i_3_reg_1730 == 3'd6) ? 1'b1 : 1'b0);

assign tmp_78_fu_2784_p2 = ((i_4_reg_1753 == 3'd6) ? 1'b1 : 1'b0);

assign tmp_7_fu_2692_p4 = {{xmax1_to_int_fu_2688_p1[30:23]}};

assign tmp_80_fu_2817_p1 = j_26_reg_1764;

assign tmp_81_fu_2827_p1 = j_27_reg_1775;

assign tmp_82_fu_2832_p2 = ((tmp_81_fu_2827_p1 < reg_1943) ? 1'b1 : 1'b0);

assign tmp_92_fu_2684_p1 = xmax_2_to_int_fu_2670_p1[22:0];

assign tmp_93_fu_2702_p1 = xmax1_to_int_fu_2688_p1[22:0];

assign tmp_9_fu_2718_p2 = (notrhs_fu_2712_p2 | notlhs_fu_2706_p2);

assign tmp_fu_1972_p1 = j_reg_1357;

assign tmp_s_fu_1989_p1 = j_1_reg_1368;

assign xmax1_to_int_fu_2688_p1 = xmax1_reg_1720;

assign xmax_1_fu_2754_p3 = ((tmp_13_fu_2748_p2[0:0] === 1'b1) ? dense_2_output_array_q0 : xmax1_reg_1720);

assign xmax_2_to_int_fu_2670_p1 = dense_2_output_array_q0;

always @ (posedge ap_clk) begin
    dense_output_ndim[63:1] <= 63'b000000000000000000000000000000000000000000000000000000000000000;
    dense_output_numel[1:0] <= 2'b00;
    dense_output_numel[4:3] <= 2'b00;
    dense_output_numel[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    batch_normalization_1[63:1] <= 63'b000000000000000000000000000000000000000000000000000000000000000;
    batch_normalization_3[1:0] <= 2'b00;
    batch_normalization_3[4:3] <= 2'b00;
    batch_normalization_3[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    dense_1_output_ndim[63:1] <= 63'b000000000000000000000000000000000000000000000000000000000000000;
    dense_1_output_numel[0] <= 1'b0;
    dense_1_output_numel[2:2] <= 1'b0;
    dense_1_output_numel[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    dense_1_kernel_ndim[0] <= 1'b0;
    dense_1_kernel_ndim[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    dense_1_kernel_numel[2:0] <= 3'b000;
    dense_1_kernel_numel[4:4] <= 1'b0;
    dense_1_kernel_numel[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    dense_1_bias_numel[0] <= 1'b0;
    dense_1_bias_numel[2:2] <= 1'b0;
    dense_1_bias_numel[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    batch_normalization_9[63:1] <= 63'b000000000000000000000000000000000000000000000000000000000000000;
    batch_normalization_12[0] <= 1'b0;
    batch_normalization_12[2:2] <= 1'b0;
    batch_normalization_12[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    dense_2_output_numel[0] <= 1'b0;
    dense_2_output_numel[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    dense_2_kernel_ndim[0] <= 1'b0;
    dense_2_kernel_ndim[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    dense_2_kernel_numel[1:0] <= 2'b00;
    dense_2_kernel_numel[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    dense_2_bias_numel[0] <= 1'b0;
    dense_2_bias_numel[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    reg_1937[0] <= 1'b0;
    reg_1937[2:2] <= 1'b0;
    reg_1937[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    reg_1943[0] <= 1'b0;
    reg_1943[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    tmp_35_reg_2879[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    tmp_37_reg_2914[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    tmp_38_reg_2933[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    tmp_39_reg_2952[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    tmp_40_reg_2971[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    tmp_42_reg_2998[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    tmp_45_reg_3017[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_47_reg_3052[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_49_reg_3071[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_51_reg_3090[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_52_reg_3109[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_54_reg_3136[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_55_reg_3155[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    batch_normalization_55_reg_3183[1:0] <= 2'b00;
    batch_normalization_55_reg_3183[4:3] <= 2'b00;
    batch_normalization_55_reg_3183[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    batch_normalization_58_reg_3206[63:1] <= 63'b000000000000000000000000000000000000000000000000000000000000000;
    tmp_60_reg_3220[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    tmp_61_reg_3230[63:19] <= 45'b000000000000000000000000000000000000000000000;
    tmp_63_reg_3258[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    tmp_64_reg_3268[63:19] <= 45'b000000000000000000000000000000000000000000000;
    batch_normalization_63_reg_3307[0] <= 1'b0;
    batch_normalization_63_reg_3307[2:2] <= 1'b0;
    batch_normalization_63_reg_3307[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    batch_normalization_66_reg_3330[63:1] <= 63'b000000000000000000000000000000000000000000000000000000000000000;
    tmp_68_reg_3344[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    tmp_69_reg_3354[63:19] <= 45'b000000000000000000000000000000000000000000000;
    tmp_71_reg_3382[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    tmp_72_reg_3392[63:19] <= 45'b000000000000000000000000000000000000000000000;
    dense_2_output_array_3_reg_3457[18:3] <= 16'b0000000000000000;
    dense_2_output_array_5_reg_3485[18:3] <= 16'b0000000000000000;
    tmp_80_reg_3498[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
end

endmodule //face_classifier_c
