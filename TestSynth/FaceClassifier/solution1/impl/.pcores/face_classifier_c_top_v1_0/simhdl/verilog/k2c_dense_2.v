// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module k2c_dense_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        output_array_address0,
        output_array_ce0,
        output_array_we0,
        output_array_d0,
        output_array_q0,
        output_numel_read,
        input_array_address0,
        input_array_ce0,
        input_array_q0,
        input_ndim_read,
        input_numel_read,
        input_shape_address0,
        input_shape_ce0,
        input_shape_q0,
        kernel_array_address0,
        kernel_array_ce0,
        kernel_array_q0,
        kernel_ndim_read,
        kernel_numel_read,
        kernel_shape_address0,
        kernel_shape_ce0,
        kernel_shape_q0,
        kernel_shape_address1,
        kernel_shape_ce1,
        kernel_shape_q1,
        bias_array_address0,
        bias_array_ce0,
        bias_array_q0,
        bias_numel_read,
        fwork_address0,
        fwork_ce0,
        fwork_we0,
        fwork_d0,
        fwork_q0,
        fwork_address1,
        fwork_ce1,
        fwork_q1
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_state9 = 10'd256;
parameter    ap_ST_fsm_state10 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [18:0] output_array_address0;
output   output_array_ce0;
output   output_array_we0;
output  [31:0] output_array_d0;
input  [31:0] output_array_q0;
input  [63:0] output_numel_read;
output  [18:0] input_array_address0;
output   input_array_ce0;
input  [31:0] input_array_q0;
input  [63:0] input_ndim_read;
input  [63:0] input_numel_read;
output  [2:0] input_shape_address0;
output   input_shape_ce0;
input  [63:0] input_shape_q0;
output  [18:0] kernel_array_address0;
output   kernel_array_ce0;
input  [31:0] kernel_array_q0;
input  [63:0] kernel_ndim_read;
input  [63:0] kernel_numel_read;
output  [2:0] kernel_shape_address0;
output   kernel_shape_ce0;
input  [63:0] kernel_shape_q0;
output  [2:0] kernel_shape_address1;
output   kernel_shape_ce1;
input  [63:0] kernel_shape_q1;
output  [18:0] bias_array_address0;
output   bias_array_ce0;
input  [31:0] bias_array_q0;
input  [63:0] bias_numel_read;
output  [10:0] fwork_address0;
output   fwork_ce0;
output   fwork_we0;
output  [31:0] fwork_d0;
input  [31:0] fwork_q0;
output  [10:0] fwork_address1;
output   fwork_ce1;
input  [31:0] fwork_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[18:0] output_array_address0;
reg output_array_ce0;
reg output_array_we0;
reg[31:0] output_array_d0;
reg[18:0] input_array_address0;
reg input_array_ce0;
reg[2:0] input_shape_address0;
reg input_shape_ce0;
reg[18:0] kernel_array_address0;
reg kernel_array_ce0;
reg[2:0] kernel_shape_address0;
reg kernel_shape_ce0;
reg kernel_shape_ce1;
reg[18:0] bias_array_address0;
reg bias_array_ce0;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] tmp_fu_298_p2;
reg   [0:0] tmp_reg_503;
wire   [63:0] tmp_s_fu_304_p2;
reg   [63:0] tmp_s_reg_507;
wire   [18:0] tmp_54_fu_311_p1;
reg   [18:0] tmp_54_reg_512;
wire   [0:0] icmp_fu_326_p2;
reg   [0:0] icmp_reg_517;
wire   [63:0] i_34_fu_346_p2;
reg   [63:0] i_34_reg_543;
wire    ap_CS_fsm_state3;
wire   [19:0] outrowidx_fu_352_p2;
reg   [19:0] outrowidx_reg_548;
wire   [0:0] exitcond2_fu_341_p2;
wire   [19:0] inneridx_fu_357_p2;
reg   [19:0] inneridx_reg_553;
wire   [63:0] j_9_fu_371_p2;
reg   [63:0] j_9_reg_561;
wire    ap_CS_fsm_state4;
wire   [0:0] exitcond_i_fu_366_p2;
reg   [18:0] output_array_addr_1_reg_571;
wire   [63:0] i_35_fu_392_p2;
wire   [63:0] outrows1_fu_397_p3;
reg   [63:0] outrows1_reg_581;
wire    ap_CS_fsm_state6;
reg   [63:0] outcols_reg_586;
wire  signed [19:0] tmp_52_fu_404_p1;
reg  signed [19:0] tmp_52_reg_591;
reg   [63:0] innerdim_reg_597;
wire  signed [19:0] tmp_53_fu_408_p1;
reg  signed [19:0] tmp_53_reg_602;
wire   [19:0] tmp_56_fu_412_p1;
reg   [19:0] tmp_56_reg_607;
wire    ap_CS_fsm_state7;
wire   [63:0] j_8_fu_421_p2;
reg   [63:0] j_8_reg_615;
wire   [0:0] exitcond1_fu_416_p2;
reg   [18:0] output_array_addr_reg_625;
wire    ap_CS_fsm_state8;
wire   [63:0] k_2_fu_446_p2;
reg   [63:0] k_2_reg_638;
wire    ap_CS_fsm_state9;
wire   [0:0] exitcond_fu_441_p2;
wire   [31:0] grp_fu_283_p2;
wire    ap_CS_fsm_state10;
wire    grp_k2c_dot_fu_259_ap_start;
wire    grp_k2c_dot_fu_259_ap_done;
wire    grp_k2c_dot_fu_259_ap_idle;
wire    grp_k2c_dot_fu_259_ap_ready;
wire   [18:0] grp_k2c_dot_fu_259_C_array_address0;
wire    grp_k2c_dot_fu_259_C_array_ce0;
wire    grp_k2c_dot_fu_259_C_array_we0;
wire   [31:0] grp_k2c_dot_fu_259_C_array_d0;
wire   [18:0] grp_k2c_dot_fu_259_Ar_array_address0;
wire    grp_k2c_dot_fu_259_Ar_array_ce0;
wire   [2:0] grp_k2c_dot_fu_259_Ar_shape_address0;
wire    grp_k2c_dot_fu_259_Ar_shape_ce0;
wire   [18:0] grp_k2c_dot_fu_259_B_array_address0;
wire    grp_k2c_dot_fu_259_B_array_ce0;
wire   [2:0] grp_k2c_dot_fu_259_B_shape_address0;
wire    grp_k2c_dot_fu_259_B_shape_ce0;
wire   [10:0] grp_k2c_dot_fu_259_fwork_address0;
wire    grp_k2c_dot_fu_259_fwork_ce0;
wire    grp_k2c_dot_fu_259_fwork_we0;
wire   [31:0] grp_k2c_dot_fu_259_fwork_d0;
wire   [10:0] grp_k2c_dot_fu_259_fwork_address1;
wire    grp_k2c_dot_fu_259_fwork_ce1;
reg   [63:0] i_i_reg_190;
wire    ap_CS_fsm_state2;
reg   [63:0] i_reg_202;
reg   [63:0] j_i_reg_213;
wire    ap_CS_fsm_state5;
wire   [0:0] tmp_i_fu_332_p2;
reg   [63:0] j_reg_225;
reg   [31:0] storemerge_reg_237;
reg   [63:0] k_reg_248;
reg    grp_k2c_dot_fu_259_ap_start_reg;
wire   [63:0] tmp_i_cast_fu_387_p1;
wire   [63:0] tmp_18_cast_fu_432_p1;
wire   [63:0] tmp_20_cast_fu_457_p1;
wire   [63:0] tmp_22_cast_fu_472_p1;
reg   [31:0] grp_fu_283_p0;
reg   [31:0] grp_fu_283_p1;
wire   [31:0] tmp_20_fu_291_p2;
wire   [62:0] tmp_51_fu_316_p4;
wire  signed [19:0] tmp_55_fu_337_p1;
wire   [19:0] tmp_58_fu_377_p1;
wire   [19:0] tmp_57_fu_362_p1;
wire   [19:0] tmp_i_39_fu_381_p2;
wire   [19:0] tmp_16_fu_427_p2;
wire  signed [19:0] tmp_59_fu_437_p1;
wire   [19:0] tmp_17_fu_452_p2;
wire   [19:0] tmp_18_fu_462_p2;
wire   [19:0] tmp_19_fu_467_p2;
reg   [9:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 grp_k2c_dot_fu_259_ap_start_reg = 1'b0;
end

k2c_dot grp_k2c_dot_fu_259(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_dot_fu_259_ap_start),
    .ap_done(grp_k2c_dot_fu_259_ap_done),
    .ap_idle(grp_k2c_dot_fu_259_ap_idle),
    .ap_ready(grp_k2c_dot_fu_259_ap_ready),
    .C_array_address0(grp_k2c_dot_fu_259_C_array_address0),
    .C_array_ce0(grp_k2c_dot_fu_259_C_array_ce0),
    .C_array_we0(grp_k2c_dot_fu_259_C_array_we0),
    .C_array_d0(grp_k2c_dot_fu_259_C_array_d0),
    .Ar_array_address0(grp_k2c_dot_fu_259_Ar_array_address0),
    .Ar_array_ce0(grp_k2c_dot_fu_259_Ar_array_ce0),
    .Ar_array_q0(input_array_q0),
    .Ar_ndim_read(input_ndim_read),
    .Ar_numel_read(tmp_54_reg_512),
    .Ar_shape_address0(grp_k2c_dot_fu_259_Ar_shape_address0),
    .Ar_shape_ce0(grp_k2c_dot_fu_259_Ar_shape_ce0),
    .Ar_shape_q0(input_shape_q0),
    .B_array_address0(grp_k2c_dot_fu_259_B_array_address0),
    .B_array_ce0(grp_k2c_dot_fu_259_B_array_ce0),
    .B_array_q0(kernel_array_q0),
    .B_ndim_read(kernel_ndim_read),
    .B_numel_read(kernel_numel_read),
    .B_shape_address0(grp_k2c_dot_fu_259_B_shape_address0),
    .B_shape_ce0(grp_k2c_dot_fu_259_B_shape_ce0),
    .B_shape_q0(kernel_shape_q0),
    .axesA_0_read(tmp_s_reg_507),
    .fwork_address0(grp_k2c_dot_fu_259_fwork_address0),
    .fwork_ce0(grp_k2c_dot_fu_259_fwork_ce0),
    .fwork_we0(grp_k2c_dot_fu_259_fwork_we0),
    .fwork_d0(grp_k2c_dot_fu_259_fwork_d0),
    .fwork_q0(fwork_q0),
    .fwork_address1(grp_k2c_dot_fu_259_fwork_address1),
    .fwork_ce1(grp_k2c_dot_fu_259_fwork_ce1),
    .fwork_q1(fwork_q1)
);

face_classifier_cbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_cbkb_U102(
    .din0(grp_fu_283_p0),
    .din1(grp_fu_283_p1),
    .dout(grp_fu_283_p2)
);

face_classifier_ccud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_ccud_U103(
    .din0(input_array_q0),
    .din1(kernel_array_q0),
    .dout(tmp_20_fu_291_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_dot_fu_259_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_298_p2 == 1'd0))) begin
            grp_k2c_dot_fu_259_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_dot_fu_259_ap_ready == 1'b1)) begin
            grp_k2c_dot_fu_259_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond_i_fu_366_p2 == 1'd1))) begin
        i_i_reg_190 <= i_35_fu_392_p2;
    end else if (((grp_k2c_dot_fu_259_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_i_reg_190 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (exitcond1_fu_416_p2 == 1'd1))) begin
        i_reg_202 <= i_34_reg_543;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        i_reg_202 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_i_fu_332_p2 == 1'd1) & (tmp_reg_503 == 1'd0))) begin
        j_i_reg_213 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        j_i_reg_213 <= j_9_reg_561;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (exitcond_fu_441_p2 == 1'd1))) begin
        j_reg_225 <= j_8_reg_615;
    end else if (((1'b1 == ap_CS_fsm_state3) & (exitcond2_fu_341_p2 == 1'd0) & (tmp_reg_503 == 1'd1))) begin
        j_reg_225 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        k_reg_248 <= k_2_reg_638;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        k_reg_248 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        storemerge_reg_237 <= grp_fu_283_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        storemerge_reg_237 <= bias_array_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_reg_503 == 1'd1))) begin
        i_34_reg_543 <= i_34_fu_346_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_298_p2 == 1'd1))) begin
        icmp_reg_517 <= icmp_fu_326_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        innerdim_reg_597 <= kernel_shape_q1;
        outcols_reg_586 <= kernel_shape_q0;
        outrows1_reg_581 <= outrows1_fu_397_p3;
        tmp_52_reg_591 <= tmp_52_fu_404_p1;
        tmp_53_reg_602 <= tmp_53_fu_408_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond2_fu_341_p2 == 1'd0) & (tmp_reg_503 == 1'd1))) begin
        inneridx_reg_553 <= inneridx_fu_357_p2;
        outrowidx_reg_548 <= outrowidx_fu_352_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        j_8_reg_615 <= j_8_fu_421_p2;
        tmp_56_reg_607 <= tmp_56_fu_412_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        j_9_reg_561 <= j_9_fu_371_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        k_2_reg_638 <= k_2_fu_446_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond_i_fu_366_p2 == 1'd0))) begin
        output_array_addr_1_reg_571 <= tmp_i_cast_fu_387_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (exitcond1_fu_416_p2 == 1'd0))) begin
        output_array_addr_reg_625 <= tmp_18_cast_fu_432_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_298_p2 == 1'd0))) begin
        tmp_54_reg_512 <= tmp_54_fu_311_p1;
        tmp_s_reg_507 <= tmp_s_fu_304_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_reg_503 <= tmp_fu_298_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state3) & (((tmp_i_fu_332_p2 == 1'd0) & (tmp_reg_503 == 1'd0)) | ((exitcond2_fu_341_p2 == 1'd1) & (tmp_reg_503 == 1'd1)))))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (((tmp_i_fu_332_p2 == 1'd0) & (tmp_reg_503 == 1'd0)) | ((exitcond2_fu_341_p2 == 1'd1) & (tmp_reg_503 == 1'd1))))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        bias_array_address0 = j_reg_225;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        bias_array_address0 = j_i_reg_213;
    end else begin
        bias_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state4))) begin
        bias_array_ce0 = 1'b1;
    end else begin
        bias_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_283_p0 = storemerge_reg_237;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_283_p0 = output_array_q0;
    end else begin
        grp_fu_283_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_283_p1 = tmp_20_fu_291_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_283_p1 = bias_array_q0;
    end else begin
        grp_fu_283_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        input_array_address0 = tmp_20_cast_fu_457_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_array_address0 = grp_k2c_dot_fu_259_Ar_array_address0;
    end else begin
        input_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        input_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_array_ce0 = grp_k2c_dot_fu_259_Ar_array_ce0;
    end else begin
        input_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (tmp_fu_298_p2 == 1'd1))) begin
        input_shape_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_shape_address0 = grp_k2c_dot_fu_259_Ar_shape_address0;
    end else begin
        input_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_298_p2 == 1'd1))) begin
        input_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_shape_ce0 = grp_k2c_dot_fu_259_Ar_shape_ce0;
    end else begin
        input_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        kernel_array_address0 = tmp_22_cast_fu_472_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_array_address0 = grp_k2c_dot_fu_259_B_array_address0;
    end else begin
        kernel_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        kernel_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_array_ce0 = grp_k2c_dot_fu_259_B_array_ce0;
    end else begin
        kernel_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (tmp_fu_298_p2 == 1'd1))) begin
        kernel_shape_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_shape_address0 = grp_k2c_dot_fu_259_B_shape_address0;
    end else begin
        kernel_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_298_p2 == 1'd1))) begin
        kernel_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_shape_ce0 = grp_k2c_dot_fu_259_B_shape_ce0;
    end else begin
        kernel_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_298_p2 == 1'd1))) begin
        kernel_shape_ce1 = 1'b1;
    end else begin
        kernel_shape_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        output_array_address0 = output_array_addr_reg_625;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        output_array_address0 = output_array_addr_1_reg_571;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        output_array_address0 = tmp_i_cast_fu_387_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_array_address0 = grp_k2c_dot_fu_259_C_array_address0;
    end else begin
        output_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state4))) begin
        output_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_array_ce0 = grp_k2c_dot_fu_259_C_array_ce0;
    end else begin
        output_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        output_array_d0 = storemerge_reg_237;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        output_array_d0 = grp_fu_283_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_array_d0 = grp_k2c_dot_fu_259_C_array_d0;
    end else begin
        output_array_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state9))) begin
        output_array_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_array_we0 = grp_k2c_dot_fu_259_C_array_we0;
    end else begin
        output_array_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_298_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_298_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_k2c_dot_fu_259_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (((tmp_i_fu_332_p2 == 1'd0) & (tmp_reg_503 == 1'd0)) | ((exitcond2_fu_341_p2 == 1'd1) & (tmp_reg_503 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b1 == ap_CS_fsm_state3) & (exitcond2_fu_341_p2 == 1'd0) & (tmp_reg_503 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (exitcond_i_fu_366_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (exitcond1_fu_416_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (exitcond_fu_441_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign exitcond1_fu_416_p2 = ((j_reg_225 == outcols_reg_586) ? 1'b1 : 1'b0);

assign exitcond2_fu_341_p2 = ((i_reg_202 == outrows1_reg_581) ? 1'b1 : 1'b0);

assign exitcond_fu_441_p2 = ((k_reg_248 == innerdim_reg_597) ? 1'b1 : 1'b0);

assign exitcond_i_fu_366_p2 = ((j_i_reg_213 == bias_numel_read) ? 1'b1 : 1'b0);

assign fwork_address0 = grp_k2c_dot_fu_259_fwork_address0;

assign fwork_address1 = grp_k2c_dot_fu_259_fwork_address1;

assign fwork_ce0 = grp_k2c_dot_fu_259_fwork_ce0;

assign fwork_ce1 = grp_k2c_dot_fu_259_fwork_ce1;

assign fwork_d0 = grp_k2c_dot_fu_259_fwork_d0;

assign fwork_we0 = grp_k2c_dot_fu_259_fwork_we0;

assign grp_k2c_dot_fu_259_ap_start = grp_k2c_dot_fu_259_ap_start_reg;

assign i_34_fu_346_p2 = (64'd1 + i_reg_202);

assign i_35_fu_392_p2 = (i_i_reg_190 + bias_numel_read);

assign icmp_fu_326_p2 = ((tmp_51_fu_316_p4 != 63'd0) ? 1'b1 : 1'b0);

assign inneridx_fu_357_p2 = ($signed(tmp_53_reg_602) * $signed(tmp_55_fu_337_p1));

assign j_8_fu_421_p2 = (64'd1 + j_reg_225);

assign j_9_fu_371_p2 = (64'd1 + j_i_reg_213);

assign k_2_fu_446_p2 = (64'd1 + k_reg_248);

assign kernel_shape_address1 = 64'd0;

assign outrowidx_fu_352_p2 = ($signed(tmp_52_reg_591) * $signed(tmp_55_fu_337_p1));

assign outrows1_fu_397_p3 = ((icmp_reg_517[0:0] === 1'b1) ? input_shape_q0 : 64'd1);

assign tmp_16_fu_427_p2 = (tmp_56_fu_412_p1 + outrowidx_reg_548);

assign tmp_17_fu_452_p2 = ($signed(tmp_59_fu_437_p1) + $signed(inneridx_reg_553));

assign tmp_18_cast_fu_432_p1 = tmp_16_fu_427_p2;

assign tmp_18_fu_462_p2 = ($signed(tmp_52_reg_591) * $signed(tmp_59_fu_437_p1));

assign tmp_19_fu_467_p2 = (tmp_18_fu_462_p2 + tmp_56_reg_607);

assign tmp_20_cast_fu_457_p1 = tmp_17_fu_452_p2;

assign tmp_22_cast_fu_472_p1 = tmp_19_fu_467_p2;

assign tmp_51_fu_316_p4 = {{input_ndim_read[63:1]}};

assign tmp_52_fu_404_p1 = kernel_shape_q0[19:0];

assign tmp_53_fu_408_p1 = kernel_shape_q1[19:0];

assign tmp_54_fu_311_p1 = input_numel_read[18:0];

assign tmp_55_fu_337_p1 = i_reg_202[19:0];

assign tmp_56_fu_412_p1 = j_reg_225[19:0];

assign tmp_57_fu_362_p1 = j_i_reg_213[19:0];

assign tmp_58_fu_377_p1 = i_i_reg_190[19:0];

assign tmp_59_fu_437_p1 = k_reg_248[19:0];

assign tmp_fu_298_p2 = ((input_ndim_read < 64'd3) ? 1'b1 : 1'b0);

assign tmp_i_39_fu_381_p2 = (tmp_58_fu_377_p1 + tmp_57_fu_362_p1);

assign tmp_i_cast_fu_387_p1 = tmp_i_39_fu_381_p2;

assign tmp_i_fu_332_p2 = ((i_i_reg_190 < output_numel_read) ? 1'b1 : 1'b0);

assign tmp_s_fu_304_p2 = ($signed(64'd18446744073709551615) + $signed(input_ndim_read));

endmodule //k2c_dense_2
