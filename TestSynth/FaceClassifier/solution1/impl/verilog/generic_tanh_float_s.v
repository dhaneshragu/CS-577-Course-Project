// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module generic_tanh_float_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        t_in,
        ap_return
);

parameter    ap_ST_fsm_state1 = 61'd1;
parameter    ap_ST_fsm_state2 = 61'd2;
parameter    ap_ST_fsm_state3 = 61'd4;
parameter    ap_ST_fsm_state4 = 61'd8;
parameter    ap_ST_fsm_state5 = 61'd16;
parameter    ap_ST_fsm_state6 = 61'd32;
parameter    ap_ST_fsm_state7 = 61'd64;
parameter    ap_ST_fsm_state8 = 61'd128;
parameter    ap_ST_fsm_state9 = 61'd256;
parameter    ap_ST_fsm_state10 = 61'd512;
parameter    ap_ST_fsm_state11 = 61'd1024;
parameter    ap_ST_fsm_state12 = 61'd2048;
parameter    ap_ST_fsm_state13 = 61'd4096;
parameter    ap_ST_fsm_state14 = 61'd8192;
parameter    ap_ST_fsm_state15 = 61'd16384;
parameter    ap_ST_fsm_state16 = 61'd32768;
parameter    ap_ST_fsm_state17 = 61'd65536;
parameter    ap_ST_fsm_state18 = 61'd131072;
parameter    ap_ST_fsm_state19 = 61'd262144;
parameter    ap_ST_fsm_state20 = 61'd524288;
parameter    ap_ST_fsm_state21 = 61'd1048576;
parameter    ap_ST_fsm_state22 = 61'd2097152;
parameter    ap_ST_fsm_state23 = 61'd4194304;
parameter    ap_ST_fsm_state24 = 61'd8388608;
parameter    ap_ST_fsm_state25 = 61'd16777216;
parameter    ap_ST_fsm_state26 = 61'd33554432;
parameter    ap_ST_fsm_state27 = 61'd67108864;
parameter    ap_ST_fsm_state28 = 61'd134217728;
parameter    ap_ST_fsm_state29 = 61'd268435456;
parameter    ap_ST_fsm_state30 = 61'd536870912;
parameter    ap_ST_fsm_state31 = 61'd1073741824;
parameter    ap_ST_fsm_state32 = 61'd2147483648;
parameter    ap_ST_fsm_state33 = 61'd4294967296;
parameter    ap_ST_fsm_state34 = 61'd8589934592;
parameter    ap_ST_fsm_state35 = 61'd17179869184;
parameter    ap_ST_fsm_state36 = 61'd34359738368;
parameter    ap_ST_fsm_state37 = 61'd68719476736;
parameter    ap_ST_fsm_state38 = 61'd137438953472;
parameter    ap_ST_fsm_state39 = 61'd274877906944;
parameter    ap_ST_fsm_state40 = 61'd549755813888;
parameter    ap_ST_fsm_state41 = 61'd1099511627776;
parameter    ap_ST_fsm_state42 = 61'd2199023255552;
parameter    ap_ST_fsm_state43 = 61'd4398046511104;
parameter    ap_ST_fsm_state44 = 61'd8796093022208;
parameter    ap_ST_fsm_state45 = 61'd17592186044416;
parameter    ap_ST_fsm_state46 = 61'd35184372088832;
parameter    ap_ST_fsm_state47 = 61'd70368744177664;
parameter    ap_ST_fsm_state48 = 61'd140737488355328;
parameter    ap_ST_fsm_state49 = 61'd281474976710656;
parameter    ap_ST_fsm_state50 = 61'd562949953421312;
parameter    ap_ST_fsm_state51 = 61'd1125899906842624;
parameter    ap_ST_fsm_state52 = 61'd2251799813685248;
parameter    ap_ST_fsm_state53 = 61'd4503599627370496;
parameter    ap_ST_fsm_state54 = 61'd9007199254740992;
parameter    ap_ST_fsm_state55 = 61'd18014398509481984;
parameter    ap_ST_fsm_state56 = 61'd36028797018963968;
parameter    ap_ST_fsm_state57 = 61'd72057594037927936;
parameter    ap_ST_fsm_state58 = 61'd144115188075855872;
parameter    ap_ST_fsm_state59 = 61'd288230376151711744;
parameter    ap_ST_fsm_state60 = 61'd576460752303423488;
parameter    ap_ST_fsm_state61 = 61'd1152921504606846976;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] t_in;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] ap_return;

(* fsm_encoding = "none" *) reg   [60:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] grp_fu_100_p2;
reg   [31:0] reg_144;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state57;
wire   [31:0] grp_fu_112_p2;
reg   [31:0] reg_151;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state54;
reg   [0:0] p_Result_s_reg_319;
wire   [31:0] abst_in_fu_197_p1;
reg   [31:0] abst_in_reg_324;
wire   [0:0] tmp_s_fu_203_p2;
reg   [0:0] tmp_s_reg_331;
wire   [0:0] tmp_56_fu_209_p2;
reg   [0:0] tmp_56_reg_335;
wire   [0:0] or_cond_fu_221_p2;
reg   [0:0] or_cond_reg_339;
wire   [0:0] tmp_27_fu_124_p2;
reg   [0:0] tmp_27_reg_343;
wire   [0:0] tmp_60_fu_227_p2;
reg   [0:0] tmp_60_reg_347;
wire   [31:0] tmp_134_neg_fu_233_p2;
reg   [31:0] tmp_134_neg_reg_352;
wire   [31:0] p_1_fu_239_p3;
wire   [31:0] tmp_61_fu_247_p1;
wire    ap_CS_fsm_state2;
wire   [31:0] x_2_fu_251_p3;
reg   [31:0] x_2_reg_367;
wire    ap_CS_fsm_state5;
wire   [63:0] grp_exp_generic_double_s_fu_89_ap_return;
reg   [63:0] tmp_128_i_reg_380;
wire    ap_CS_fsm_state16;
wire   [63:0] grp_fu_129_p2;
reg   [63:0] tmp_129_i_reg_385;
wire    ap_CS_fsm_state21;
wire   [31:0] tmp_130_i_fu_117_p1;
wire    ap_CS_fsm_state22;
reg   [31:0] tmp_63_reg_395;
wire    ap_CS_fsm_state44;
wire   [31:0] tmp_62_fu_314_p1;
wire    ap_CS_fsm_state45;
wire   [31:0] grp_fu_108_p2;
reg   [31:0] resultf_reg_405;
wire    ap_CS_fsm_state60;
wire    grp_exp_generic_double_s_fu_89_ap_start;
wire    grp_exp_generic_double_s_fu_89_ap_done;
wire    grp_exp_generic_double_s_fu_89_ap_idle;
wire    grp_exp_generic_double_s_fu_89_ap_ready;
reg   [31:0] expx_reg_58;
wire    ap_CS_fsm_state6;
wire   [0:0] tmp_i_fu_271_p2;
wire   [0:0] tmp_i_68_fu_277_p2;
reg   [31:0] ap_phi_mux_resultf_4_phi_fu_76_p10;
reg   [31:0] resultf_4_reg_72;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state41;
reg    grp_exp_generic_double_s_fu_89_ap_start_reg;
reg   [60:0] ap_NS_fsm;
wire    ap_NS_fsm_state7;
wire   [63:0] xd_fu_120_p1;
wire    ap_CS_fsm_state7;
reg   [31:0] grp_fu_100_p0;
reg   [31:0] grp_fu_100_p1;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state58;
reg   [31:0] grp_fu_112_p0;
reg   [31:0] grp_fu_112_p1;
wire    ap_CS_fsm_state27;
wire   [31:0] tmp_27_fu_124_p0;
wire    ap_CS_fsm_state17;
wire   [22:0] loc_V_1_fu_179_p1;
wire   [31:0] p_Val2_s_fu_157_p1;
wire   [30:0] tmp_fu_185_p1;
wire   [31:0] p_Result_9_fu_189_p3;
wire   [7:0] loc_V_fu_169_p4;
wire   [0:0] tmp_57_fu_215_p2;
wire   [0:0] tmp_58_fu_134_p2;
wire   [0:0] tmp_55_fu_139_p2;
wire   [31:0] p_Val2_3_fu_258_p1;
wire   [7:0] loc_V_2_fu_261_p4;
wire   [31:0] tmp_139_to_int_fu_283_p1;
wire   [31:0] tmp_139_neg_fu_287_p2;
wire   [31:0] tmp_66_fu_293_p1;
wire   [31:0] tmp_135_to_int_fu_304_p1;
wire   [31:0] tmp_135_neg_fu_308_p2;
reg   [1:0] grp_fu_100_opcode;
wire   [31:0] p_s_fu_297_p3;
reg   [31:0] ap_return_preg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 61'd1;
#0 grp_exp_generic_double_s_fu_89_ap_start_reg = 1'b0;
#0 ap_return_preg = 32'd0;
end

exp_generic_double_s grp_exp_generic_double_s_fu_89(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_exp_generic_double_s_fu_89_ap_start),
    .ap_done(grp_exp_generic_double_s_fu_89_ap_done),
    .ap_idle(grp_exp_generic_double_s_fu_89_ap_idle),
    .ap_ready(grp_exp_generic_double_s_fu_89_ap_ready),
    .x(xd_fu_120_p1),
    .ap_return(grp_exp_generic_double_s_fu_89_ap_return)
);

face_classifier_crcU #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_crcU_U71(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_100_p0),
    .din1(grp_fu_100_p1),
    .opcode(grp_fu_100_opcode),
    .ce(1'b1),
    .dout(grp_fu_100_p2)
);

face_classifier_cfYi #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_cfYi_U72(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(abst_in_reg_324),
    .din1(reg_144),
    .ce(1'b1),
    .dout(grp_fu_108_p2)
);

face_classifier_cmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_cmb6_U73(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_112_p0),
    .din1(grp_fu_112_p1),
    .ce(1'b1),
    .dout(grp_fu_112_p2)
);

face_classifier_csc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
face_classifier_csc4_U74(
    .din0(tmp_129_i_reg_385),
    .dout(tmp_130_i_fu_117_p1)
);

face_classifier_ctde #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
face_classifier_ctde_U75(
    .din0(x_2_reg_367),
    .dout(xd_fu_120_p1)
);

face_classifier_cudo #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
face_classifier_cudo_U76(
    .din0(tmp_27_fu_124_p0),
    .din1(32'd1102053376),
    .opcode(5'd4),
    .dout(tmp_27_fu_124_p2)
);

face_classifier_cvdy #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
face_classifier_cvdy_U77(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_128_i_reg_380),
    .din1(64'd13830554455654793216),
    .ce(1'b1),
    .dout(grp_fu_129_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state41)) begin
            ap_return_preg <= p_s_fu_297_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_exp_generic_double_s_fu_89_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state7) & (1'b1 == ap_CS_fsm_state6))) begin
            grp_exp_generic_double_s_fu_89_ap_start_reg <= 1'b1;
        end else if ((grp_exp_generic_double_s_fu_89_ap_ready == 1'b1)) begin
            grp_exp_generic_double_s_fu_89_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (tmp_i_68_fu_277_p2 == 1'd1) & (tmp_i_fu_271_p2 == 1'd0))) begin
        expx_reg_58 <= x_2_reg_367;
    end else if (((1'b1 == ap_CS_fsm_state6) & (tmp_i_fu_271_p2 == 1'd1))) begin
        expx_reg_58 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        expx_reg_58 <= tmp_130_i_fu_117_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_s_fu_203_p2 == 1'd1))) begin
        resultf_4_reg_72 <= p_1_fu_239_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_27_fu_124_p2 == 1'd0) & (or_cond_fu_221_p2 == 1'd0) & (tmp_56_fu_209_p2 == 1'd0) & (tmp_s_fu_203_p2 == 1'd0))) begin
        resultf_4_reg_72 <= 32'd1065353216;
    end else if (((1'b1 == ap_CS_fsm_state41) & (tmp_27_reg_343 == 1'd1) & (tmp_60_reg_347 == 1'd0) & (or_cond_reg_339 == 1'd0) & (tmp_56_reg_335 == 1'd0) & (tmp_s_reg_331 == 1'd0))) begin
        resultf_4_reg_72 <= reg_144;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        resultf_4_reg_72 <= grp_fu_112_p2;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        resultf_4_reg_72 <= resultf_reg_405;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        abst_in_reg_324[30 : 0] <= abst_in_fu_197_p1[30 : 0];
        p_Result_s_reg_319 <= p_Val2_s_fu_157_p1[32'd31];
        tmp_s_reg_331 <= tmp_s_fu_203_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_56_fu_209_p2 == 1'd0) & (tmp_s_fu_203_p2 == 1'd0))) begin
        or_cond_reg_339 <= or_cond_fu_221_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state26))) begin
        reg_144 <= grp_fu_100_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state36))) begin
        reg_151 <= grp_fu_112_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        resultf_reg_405 <= grp_fu_108_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_128_i_reg_380 <= grp_exp_generic_double_s_fu_89_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        tmp_129_i_reg_385 <= grp_fu_129_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_27_fu_124_p2 == 1'd1) & (or_cond_fu_221_p2 == 1'd0) & (tmp_56_fu_209_p2 == 1'd0) & (tmp_s_fu_203_p2 == 1'd0))) begin
        tmp_134_neg_reg_352 <= tmp_134_neg_fu_233_p2;
        tmp_60_reg_347 <= tmp_60_fu_227_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (or_cond_fu_221_p2 == 1'd0) & (tmp_56_fu_209_p2 == 1'd0) & (tmp_s_fu_203_p2 == 1'd0))) begin
        tmp_27_reg_343 <= tmp_27_fu_124_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_s_fu_203_p2 == 1'd0))) begin
        tmp_56_reg_335 <= tmp_56_fu_209_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        tmp_63_reg_395 <= grp_fu_100_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        x_2_reg_367 <= x_2_fu_251_p3;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) & (tmp_27_reg_343 == 1'd1) & (tmp_60_reg_347 == 1'd0) & (or_cond_reg_339 == 1'd0) & (tmp_56_reg_335 == 1'd0) & (tmp_s_reg_331 == 1'd0))) begin
        ap_phi_mux_resultf_4_phi_fu_76_p10 = reg_144;
    end else begin
        ap_phi_mux_resultf_4_phi_fu_76_p10 = resultf_4_reg_72;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ap_return = p_s_fu_297_p3;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | ((1'b1 == ap_CS_fsm_state2) & (tmp_60_reg_347 == 1'd1)))) begin
        grp_fu_100_opcode = 2'd1;
    end else if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (((or_cond_fu_221_p2 == 1'd1) & (tmp_s_fu_203_p2 == 1'd0)) | ((tmp_56_fu_209_p2 == 1'd1) & (tmp_s_fu_203_p2 == 1'd0)))) | ((1'b1 == ap_CS_fsm_state23) & (tmp_60_reg_347 == 1'd0)) | ((1'b1 == ap_CS_fsm_state23) & (tmp_60_reg_347 == 1'd1)) | ((1'b1 == ap_CS_fsm_state2) & (tmp_60_reg_347 == 1'd0)))) begin
        grp_fu_100_opcode = 2'd0;
    end else begin
        grp_fu_100_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_100_p0 = 32'd1065353216;
    end else if ((((1'b1 == ap_CS_fsm_state23) & (tmp_60_reg_347 == 1'd0)) | ((1'b1 == ap_CS_fsm_state23) & (tmp_60_reg_347 == 1'd1)))) begin
        grp_fu_100_p0 = expx_reg_58;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_60_reg_347 == 1'd0))) begin
        grp_fu_100_p0 = abst_in_reg_324;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_60_reg_347 == 1'd1))) begin
        grp_fu_100_p0 = tmp_61_fu_247_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_100_p0 = abst_in_fu_197_p1;
    end else begin
        grp_fu_100_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_100_p1 = reg_151;
    end else if ((((1'b1 == ap_CS_fsm_state23) & (tmp_60_reg_347 == 1'd0)) | ((1'b1 == ap_CS_fsm_state23) & (tmp_60_reg_347 == 1'd1)))) begin
        grp_fu_100_p1 = 32'd1073741824;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (tmp_60_reg_347 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (tmp_60_reg_347 == 1'd1)))) begin
        grp_fu_100_p1 = abst_in_reg_324;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_100_p1 = 32'd1065353216;
    end else begin
        grp_fu_100_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_112_p0 = tmp_62_fu_314_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_112_p0 = 32'd1073741824;
    end else begin
        grp_fu_112_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_112_p1 = tmp_63_reg_395;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_112_p1 = reg_144;
    end else begin
        grp_fu_112_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & ((tmp_s_fu_203_p2 == 1'd1) | ((tmp_27_fu_124_p2 == 1'd0) & (or_cond_fu_221_p2 == 1'd0) & (tmp_56_fu_209_p2 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_27_fu_124_p2 == 1'd1) & (or_cond_fu_221_p2 == 1'd0) & (tmp_56_fu_209_p2 == 1'd0) & (tmp_s_fu_203_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (((or_cond_fu_221_p2 == 1'd1) & (tmp_s_fu_203_p2 == 1'd0)) | ((tmp_56_fu_209_p2 == 1'd1) & (tmp_s_fu_203_p2 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (tmp_i_68_fu_277_p2 == 1'd0) & (tmp_i_fu_271_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (tmp_60_reg_347 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign abst_in_fu_197_p1 = p_Result_9_fu_189_p3;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_NS_fsm_state7 = ap_NS_fsm[32'd6];

assign grp_exp_generic_double_s_fu_89_ap_start = grp_exp_generic_double_s_fu_89_ap_start_reg;

assign loc_V_1_fu_179_p1 = p_Val2_s_fu_157_p1[22:0];

assign loc_V_2_fu_261_p4 = {{p_Val2_3_fu_258_p1[30:23]}};

assign loc_V_fu_169_p4 = {{p_Val2_s_fu_157_p1[30:23]}};

assign or_cond_fu_221_p2 = (tmp_58_fu_134_p2 & tmp_57_fu_215_p2);

assign p_1_fu_239_p3 = ((tmp_55_fu_139_p2[0:0] === 1'b1) ? 32'd1065353216 : 32'd2147483647);

assign p_Result_9_fu_189_p3 = {{1'd0}, {tmp_fu_185_p1}};

assign p_Val2_3_fu_258_p1 = x_2_reg_367;

assign p_Val2_s_fu_157_p1 = t_in;

assign p_s_fu_297_p3 = ((p_Result_s_reg_319[0:0] === 1'b1) ? tmp_66_fu_293_p1 : ap_phi_mux_resultf_4_phi_fu_76_p10);

assign tmp_134_neg_fu_233_p2 = (p_Result_9_fu_189_p3 ^ 32'd2147483648);

assign tmp_135_neg_fu_308_p2 = (tmp_135_to_int_fu_304_p1 ^ 32'd2147483648);

assign tmp_135_to_int_fu_304_p1 = expx_reg_58;

assign tmp_139_neg_fu_287_p2 = (tmp_139_to_int_fu_283_p1 ^ 32'd2147483648);

assign tmp_139_to_int_fu_283_p1 = ap_phi_mux_resultf_4_phi_fu_76_p10;

assign tmp_27_fu_124_p0 = p_Result_9_fu_189_p3;

assign tmp_55_fu_139_p2 = ((loc_V_1_fu_179_p1 == 23'd0) ? 1'b1 : 1'b0);

assign tmp_56_fu_209_p2 = ((loc_V_fu_169_p4 < 8'd72) ? 1'b1 : 1'b0);

assign tmp_57_fu_215_p2 = ((loc_V_fu_169_p4 == 8'd72) ? 1'b1 : 1'b0);

assign tmp_58_fu_134_p2 = ((loc_V_1_fu_179_p1 == 23'd0) ? 1'b1 : 1'b0);

assign tmp_60_fu_227_p2 = ((loc_V_fu_169_p4 < 8'd127) ? 1'b1 : 1'b0);

assign tmp_61_fu_247_p1 = tmp_134_neg_reg_352;

assign tmp_62_fu_314_p1 = tmp_135_neg_fu_308_p2;

assign tmp_66_fu_293_p1 = tmp_139_neg_fu_287_p2;

assign tmp_fu_185_p1 = p_Val2_s_fu_157_p1[30:0];

assign tmp_i_68_fu_277_p2 = ((loc_V_2_fu_261_p4 < 8'd96) ? 1'b1 : 1'b0);

assign tmp_i_fu_271_p2 = ((loc_V_2_fu_261_p4 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_s_fu_203_p2 = ((loc_V_fu_169_p4 == 8'd255) ? 1'b1 : 1'b0);

assign x_2_fu_251_p3 = ((tmp_60_reg_347[0:0] === 1'b1) ? grp_fu_100_p2 : grp_fu_100_p2);

always @ (posedge ap_clk) begin
    abst_in_reg_324[31] <= 1'b0;
end

endmodule //generic_tanh_float_s
