// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module k2c_dot (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Ar_array_address0,
        Ar_array_ce0,
        Ar_array_q0,
        Ar_ndim_read,
        Ar_numel_read,
        Ar_shape_address0,
        Ar_shape_ce0,
        Ar_shape_q0,
        B_array_address0,
        B_array_ce0,
        B_array_q0,
        axesA_0_read,
        fwork_address0,
        fwork_ce0,
        fwork_we0,
        fwork_d0,
        fwork_q0,
        fwork_address1,
        fwork_ce1,
        fwork_q1,
        dense_output_array_address0,
        dense_output_array_ce0,
        dense_output_array_we0,
        dense_output_array_d0
);

parameter    ap_ST_fsm_state1 = 99'd1;
parameter    ap_ST_fsm_state2 = 99'd2;
parameter    ap_ST_fsm_state3 = 99'd4;
parameter    ap_ST_fsm_state4 = 99'd8;
parameter    ap_ST_fsm_state5 = 99'd16;
parameter    ap_ST_fsm_state6 = 99'd32;
parameter    ap_ST_fsm_state7 = 99'd64;
parameter    ap_ST_fsm_state8 = 99'd128;
parameter    ap_ST_fsm_state9 = 99'd256;
parameter    ap_ST_fsm_state10 = 99'd512;
parameter    ap_ST_fsm_state11 = 99'd1024;
parameter    ap_ST_fsm_state12 = 99'd2048;
parameter    ap_ST_fsm_state13 = 99'd4096;
parameter    ap_ST_fsm_state14 = 99'd8192;
parameter    ap_ST_fsm_state15 = 99'd16384;
parameter    ap_ST_fsm_state16 = 99'd32768;
parameter    ap_ST_fsm_state17 = 99'd65536;
parameter    ap_ST_fsm_state18 = 99'd131072;
parameter    ap_ST_fsm_state19 = 99'd262144;
parameter    ap_ST_fsm_state20 = 99'd524288;
parameter    ap_ST_fsm_state21 = 99'd1048576;
parameter    ap_ST_fsm_state22 = 99'd2097152;
parameter    ap_ST_fsm_state23 = 99'd4194304;
parameter    ap_ST_fsm_state24 = 99'd8388608;
parameter    ap_ST_fsm_state25 = 99'd16777216;
parameter    ap_ST_fsm_state26 = 99'd33554432;
parameter    ap_ST_fsm_state27 = 99'd67108864;
parameter    ap_ST_fsm_state28 = 99'd134217728;
parameter    ap_ST_fsm_state29 = 99'd268435456;
parameter    ap_ST_fsm_state30 = 99'd536870912;
parameter    ap_ST_fsm_state31 = 99'd1073741824;
parameter    ap_ST_fsm_state32 = 99'd2147483648;
parameter    ap_ST_fsm_state33 = 99'd4294967296;
parameter    ap_ST_fsm_state34 = 99'd8589934592;
parameter    ap_ST_fsm_state35 = 99'd17179869184;
parameter    ap_ST_fsm_state36 = 99'd34359738368;
parameter    ap_ST_fsm_state37 = 99'd68719476736;
parameter    ap_ST_fsm_state38 = 99'd137438953472;
parameter    ap_ST_fsm_state39 = 99'd274877906944;
parameter    ap_ST_fsm_state40 = 99'd549755813888;
parameter    ap_ST_fsm_state41 = 99'd1099511627776;
parameter    ap_ST_fsm_state42 = 99'd2199023255552;
parameter    ap_ST_fsm_state43 = 99'd4398046511104;
parameter    ap_ST_fsm_state44 = 99'd8796093022208;
parameter    ap_ST_fsm_state45 = 99'd17592186044416;
parameter    ap_ST_fsm_state46 = 99'd35184372088832;
parameter    ap_ST_fsm_state47 = 99'd70368744177664;
parameter    ap_ST_fsm_state48 = 99'd140737488355328;
parameter    ap_ST_fsm_state49 = 99'd281474976710656;
parameter    ap_ST_fsm_state50 = 99'd562949953421312;
parameter    ap_ST_fsm_state51 = 99'd1125899906842624;
parameter    ap_ST_fsm_state52 = 99'd2251799813685248;
parameter    ap_ST_fsm_state53 = 99'd4503599627370496;
parameter    ap_ST_fsm_state54 = 99'd9007199254740992;
parameter    ap_ST_fsm_state55 = 99'd18014398509481984;
parameter    ap_ST_fsm_state56 = 99'd36028797018963968;
parameter    ap_ST_fsm_state57 = 99'd72057594037927936;
parameter    ap_ST_fsm_state58 = 99'd144115188075855872;
parameter    ap_ST_fsm_state59 = 99'd288230376151711744;
parameter    ap_ST_fsm_state60 = 99'd576460752303423488;
parameter    ap_ST_fsm_state61 = 99'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 99'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 99'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 99'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 99'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 99'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 99'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 99'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 99'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 99'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 99'd1180591620717411303424;
parameter    ap_ST_fsm_pp0_stage0 = 99'd2361183241434822606848;
parameter    ap_ST_fsm_state74 = 99'd4722366482869645213696;
parameter    ap_ST_fsm_state75 = 99'd9444732965739290427392;
parameter    ap_ST_fsm_state76 = 99'd18889465931478580854784;
parameter    ap_ST_fsm_pp2_stage0 = 99'd37778931862957161709568;
parameter    ap_ST_fsm_state79 = 99'd75557863725914323419136;
parameter    ap_ST_fsm_pp3_stage0 = 99'd151115727451828646838272;
parameter    ap_ST_fsm_state83 = 99'd302231454903657293676544;
parameter    ap_ST_fsm_pp4_stage0 = 99'd604462909807314587353088;
parameter    ap_ST_fsm_state87 = 99'd1208925819614629174706176;
parameter    ap_ST_fsm_state88 = 99'd2417851639229258349412352;
parameter    ap_ST_fsm_state89 = 99'd4835703278458516698824704;
parameter    ap_ST_fsm_pp5_stage0 = 99'd9671406556917033397649408;
parameter    ap_ST_fsm_state93 = 99'd19342813113834066795298816;
parameter    ap_ST_fsm_state94 = 99'd38685626227668133590597632;
parameter    ap_ST_fsm_state95 = 99'd77371252455336267181195264;
parameter    ap_ST_fsm_state96 = 99'd154742504910672534362390528;
parameter    ap_ST_fsm_state97 = 99'd309485009821345068724781056;
parameter    ap_ST_fsm_state98 = 99'd618970019642690137449562112;
parameter    ap_ST_fsm_state99 = 99'd1237940039285380274899124224;
parameter    ap_ST_fsm_state100 = 99'd2475880078570760549798248448;
parameter    ap_ST_fsm_state101 = 99'd4951760157141521099596496896;
parameter    ap_ST_fsm_state102 = 99'd9903520314283042199192993792;
parameter    ap_ST_fsm_pp6_stage0 = 99'd19807040628566084398385987584;
parameter    ap_ST_fsm_pp6_stage1 = 99'd39614081257132168796771975168;
parameter    ap_ST_fsm_pp6_stage2 = 99'd79228162514264337593543950336;
parameter    ap_ST_fsm_pp6_stage3 = 99'd158456325028528675187087900672;
parameter    ap_ST_fsm_state113 = 99'd316912650057057350374175801344;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] Ar_array_address0;
output   Ar_array_ce0;
input  [31:0] Ar_array_q0;
input  [63:0] Ar_ndim_read;
input  [63:0] Ar_numel_read;
output  [2:0] Ar_shape_address0;
output   Ar_shape_ce0;
input  [63:0] Ar_shape_q0;
output  [18:0] B_array_address0;
output   B_array_ce0;
input  [31:0] B_array_q0;
input  [63:0] axesA_0_read;
output  [18:0] fwork_address0;
output   fwork_ce0;
output   fwork_we0;
output  [31:0] fwork_d0;
input  [31:0] fwork_q0;
output  [18:0] fwork_address1;
output   fwork_ce1;
input  [31:0] fwork_q1;
output  [11:0] dense_output_array_address0;
output   dense_output_array_ce0;
output   dense_output_array_we0;
output  [31:0] dense_output_array_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg Ar_array_ce0;
reg[2:0] Ar_shape_address0;
reg Ar_shape_ce0;
reg B_array_ce0;
reg[18:0] fwork_address0;
reg fwork_ce0;
reg fwork_we0;
reg[31:0] fwork_d0;
reg fwork_ce1;
reg[11:0] dense_output_array_address0;
reg dense_output_array_ce0;
reg dense_output_array_we0;
reg[31:0] dense_output_array_d0;

(* fsm_encoding = "none" *) reg   [98:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [2:0] dense_kernel_shape_address0;
reg    dense_kernel_shape_ce0;
wire   [63:0] dense_kernel_shape_q0;
reg   [2:0] i_4_reg_494;
reg   [1:0] i_7_reg_514;
reg   [0:0] j_3_reg_526;
reg   [2:0] i_8_reg_537;
reg   [1:0] i_9_reg_548;
reg   [2:0] j_4_reg_572;
reg   [31:0] tmp_24_reg_638;
reg   [63:0] k_reg_650;
wire   [63:0] i_26_fu_701_p2;
wire    ap_CS_fsm_state2;
wire   [1:0] i_24_fu_738_p2;
wire    ap_CS_fsm_state3;
wire   [0:0] exitcond15_fu_732_p2;
reg   [63:0] Ar_shape_load_reg_1172;
wire    ap_CS_fsm_state4;
wire  signed [19:0] tmp_47_fu_765_p1;
reg  signed [19:0] tmp_47_reg_1178;
wire   [63:0] grp_fu_769_p2;
reg   [63:0] free_axesA_reg_1183;
wire    ap_CS_fsm_state71;
wire   [63:0] i_25_fu_777_p2;
reg   [63:0] i_25_reg_1188;
wire   [2:0] i_27_cast_fu_782_p2;
reg   [2:0] i_27_cast_reg_1193;
wire   [63:0] i_4_cast_fu_788_p1;
reg   [63:0] i_4_cast_reg_1198;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state72_pp0_stage0_iter0;
wire    ap_block_state73_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] exitcond14_fu_793_p2;
reg   [0:0] exitcond14_reg_1203;
wire   [2:0] i_27_fu_798_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [2:0] i_28_fu_814_p2;
wire    ap_CS_fsm_state75;
wire   [0:0] tmp_s_fu_809_p2;
wire   [0:0] exitcond1_fu_820_p2;
reg   [0:0] exitcond1_reg_1225;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state77_pp2_stage0_iter0;
wire    ap_block_state78_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [1:0] i_29_fu_831_p2;
reg   [1:0] i_29_reg_1234;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] j_fu_837_p2;
wire   [63:0] i_8_cast_fu_848_p1;
reg   [63:0] i_8_cast_reg_1244;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state80_pp3_stage0_iter0;
wire    ap_block_state81_pp3_stage0_iter1;
wire    ap_block_state82_pp3_stage0_iter2;
wire    ap_block_pp3_stage0_11001;
reg   [63:0] i_8_cast_reg_1244_pp3_iter1_reg;
wire   [0:0] exitcond12_fu_853_p2;
reg   [0:0] exitcond12_reg_1249;
reg   [0:0] exitcond12_reg_1249_pp3_iter1_reg;
wire   [2:0] i_30_fu_858_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [0:0] exitcond11_fu_864_p2;
reg   [0:0] exitcond11_reg_1268;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_state84_pp4_stage0_iter0;
wire    ap_block_state85_pp4_stage0_iter1;
wire    ap_block_state86_pp4_stage0_iter2;
wire    ap_block_pp4_stage0_11001;
reg   [0:0] exitcond11_reg_1268_pp4_iter1_reg;
wire   [1:0] i_31_fu_870_p2;
reg    ap_enable_reg_pp4_iter0;
wire   [63:0] i_9_cast6_fu_876_p1;
reg   [63:0] i_9_cast6_reg_1277;
reg   [63:0] i_9_cast6_reg_1277_pp4_iter1_reg;
wire   [63:0] i_32_fu_891_p2;
reg   [63:0] i_32_reg_1295;
wire    ap_CS_fsm_state88;
wire   [19:0] tmp_49_fu_897_p1;
reg   [19:0] tmp_49_reg_1300;
wire   [0:0] exitcond5_fu_886_p2;
wire   [63:0] j_4_cast_fu_900_p1;
reg   [63:0] j_4_cast_reg_1306;
wire    ap_CS_fsm_pp5_stage0;
wire    ap_block_state90_pp5_stage0_iter0;
wire    ap_block_state91_pp5_stage0_iter1;
wire    ap_block_state92_pp5_stage0_iter2;
wire    ap_block_pp5_stage0_11001;
reg   [63:0] j_4_cast_reg_1306_pp5_iter1_reg;
wire   [0:0] exitcond10_fu_905_p2;
reg   [0:0] exitcond10_reg_1311;
reg   [0:0] exitcond10_reg_1311_pp5_iter1_reg;
wire   [2:0] j_1_fu_910_p2;
reg    ap_enable_reg_pp5_iter0;
wire    ap_CS_fsm_state93;
wire   [18:0] i_33_fu_922_p2;
reg   [18:0] i_33_reg_1338;
wire    ap_CS_fsm_state95;
wire   [63:0] i_11_cast5_fu_928_p1;
reg   [63:0] i_11_cast5_reg_1343;
wire   [0:0] exitcond4_fu_916_p2;
reg   [18:0] B_array_addr_reg_1348;
wire   [70:0] bound_fu_937_p2;
reg   [70:0] bound_reg_1353;
wire   [1:0] j_2_fu_949_p2;
reg   [1:0] j_2_reg_1361;
wire    ap_CS_fsm_state97;
wire   [63:0] j_5_cast4_fu_955_p1;
reg   [63:0] j_5_cast4_reg_1366;
wire   [0:0] exitcond9_fu_943_p2;
wire   [0:0] ifzero_fu_960_p2;
reg   [0:0] ifzero_reg_1376;
wire    ap_CS_fsm_state98;
wire   [0:0] exitcond_flatten_fu_985_p2;
wire    ap_CS_fsm_state102;
wire   [70:0] indvar_flatten_next_fu_990_p2;
reg   [70:0] indvar_flatten_next_reg_1389;
wire   [6:0] j_mid2_fu_1002_p3;
reg   [6:0] j_mid2_reg_1394;
wire   [63:0] tmp_20_mid2_v_v_fu_1016_p3;
reg   [63:0] tmp_20_mid2_v_v_reg_1399;
wire   [19:0] tmp_21_mid2_fu_1032_p2;
reg   [19:0] tmp_21_mid2_reg_1404;
wire   [19:0] j_cast2_fu_1037_p1;
reg   [19:0] j_cast2_reg_1409;
reg   [11:0] dense_output_array_a_reg_1414;
wire   [0:0] exitcond_fu_1049_p2;
reg   [0:0] exitcond_reg_1419;
wire    ap_CS_fsm_pp6_stage0;
wire    ap_block_state103_pp6_stage0_iter0;
wire    ap_block_state107_pp6_stage0_iter1;
wire    ap_block_state111_pp6_stage0_iter2;
wire    ap_block_pp6_stage0_11001;
reg   [0:0] exitcond_reg_1419_pp6_iter1_reg;
reg   [0:0] exitcond_reg_1419_pp6_iter2_reg;
wire   [63:0] k_2_fu_1054_p2;
reg   [63:0] k_2_reg_1423;
reg    ap_enable_reg_pp6_iter0;
reg   [31:0] fwork_load_reg_1438;
wire    ap_CS_fsm_pp6_stage1;
wire    ap_block_state104_pp6_stage1_iter0;
wire    ap_block_state108_pp6_stage1_iter1;
wire    ap_block_state112_pp6_stage1_iter2;
wire    ap_block_pp6_stage1_11001;
reg   [31:0] fwork_load_2_reg_1443;
wire   [31:0] grp_fu_687_p2;
reg   [31:0] tmp_27_reg_1448;
wire   [31:0] grp_fu_682_p2;
reg   [31:0] tmp_28_reg_1453;
reg    ap_enable_reg_pp6_iter2;
wire   [6:0] j_6_fu_1083_p2;
wire    ap_CS_fsm_state113;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state72;
reg    ap_enable_reg_pp0_iter1;
wire    ap_CS_fsm_state76;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state77;
reg    ap_enable_reg_pp2_iter1;
wire    ap_CS_fsm_state79;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state80;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter2;
wire    ap_CS_fsm_state83;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state84;
reg    ap_enable_reg_pp4_iter1;
reg    ap_enable_reg_pp4_iter2;
wire    ap_CS_fsm_state89;
wire    grp_k2c_idx2sub_fu_661_ap_idle;
wire    grp_k2c_idx2sub_fu_661_ap_ready;
wire    grp_k2c_idx2sub_fu_661_ap_done;
wire    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state90;
reg    ap_enable_reg_pp5_iter1;
reg    ap_enable_reg_pp5_iter2;
wire    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state103;
reg    ap_enable_reg_pp6_iter1;
wire    ap_block_state106_pp6_stage3_iter0;
wire    ap_block_state110_pp6_stage3_iter1;
wire    ap_block_pp6_stage3_subdone;
wire    ap_CS_fsm_pp6_stage3;
wire    ap_block_pp6_stage1_subdone;
reg   [2:0] permA_address0;
reg    permA_ce0;
reg    permA_we0;
reg   [63:0] permA_d0;
wire   [63:0] permA_q0;
reg   [2:0] permB_address0;
reg    permB_ce0;
reg    permB_we0;
reg   [1:0] permB_d0;
wire   [1:0] permB_q0;
reg   [2:0] freeA_address0;
reg    freeA_ce0;
reg    freeA_we0;
wire   [63:0] freeA_q0;
reg   [2:0] freeB_address0;
reg    freeB_ce0;
reg    freeB_we0;
wire   [1:0] freeB_q0;
reg   [2:0] newshpA_address0;
reg    newshpA_ce0;
reg    newshpA_we0;
wire   [63:0] newshpA_q0;
reg   [2:0] newshpB_address0;
reg    newshpB_ce0;
reg    newshpB_we0;
wire   [63:0] newshpB_q0;
reg   [2:0] Asub_address0;
reg    Asub_ce0;
reg    Asub_we0;
reg   [63:0] Asub_d0;
wire   [63:0] Asub_q0;
reg   [2:0] Bsub_address0;
reg    Bsub_ce0;
reg    Bsub_we0;
reg   [63:0] Bsub_d0;
wire   [63:0] Bsub_q0;
wire    grp_k2c_idx2sub_fu_661_ap_start;
reg   [63:0] grp_k2c_idx2sub_fu_661_idx;
wire   [2:0] grp_k2c_idx2sub_fu_661_sub_address0;
wire    grp_k2c_idx2sub_fu_661_sub_ce0;
wire    grp_k2c_idx2sub_fu_661_sub_we0;
wire   [63:0] grp_k2c_idx2sub_fu_661_sub_d0;
wire   [2:0] grp_k2c_idx2sub_fu_661_shape_address0;
wire    grp_k2c_idx2sub_fu_661_shape_ce0;
reg   [63:0] grp_k2c_idx2sub_fu_661_shape_q0;
reg   [63:0] grp_k2c_idx2sub_fu_661_ndim;
wire    grp_k2c_sub2idx_fu_673_ap_start;
wire    grp_k2c_sub2idx_fu_673_ap_done;
wire    grp_k2c_sub2idx_fu_673_ap_idle;
wire    grp_k2c_sub2idx_fu_673_ap_ready;
wire   [2:0] grp_k2c_sub2idx_fu_673_sub_address0;
wire    grp_k2c_sub2idx_fu_673_sub_ce0;
reg   [63:0] grp_k2c_sub2idx_fu_673_sub_q0;
wire   [2:0] grp_k2c_sub2idx_fu_673_shape_address0;
wire    grp_k2c_sub2idx_fu_673_shape_ce0;
reg   [63:0] grp_k2c_sub2idx_fu_673_shape_q0;
reg   [63:0] grp_k2c_sub2idx_fu_673_ndim;
wire   [63:0] grp_k2c_sub2idx_fu_673_ap_return;
reg   [63:0] i_reg_470;
wire   [0:0] exitcond13_fu_696_p2;
reg   [1:0] i_1_reg_482;
reg   [2:0] i_5_reg_505;
wire    ap_CS_fsm_state74;
reg   [1:0] ap_phi_mux_i_7_phi_fu_518_p4;
wire    ap_block_pp2_stage0;
reg   [63:0] i_10_reg_559;
wire    ap_CS_fsm_state94;
wire    ap_CS_fsm_state87;
reg   [18:0] i_11_reg_583;
reg   [1:0] j_5_reg_594;
wire    ap_CS_fsm_state96;
wire    ap_CS_fsm_state101;
reg    ap_block_state101_on_subcall_done;
reg   [70:0] indvar_flatten_reg_605;
reg   [63:0] i_s_reg_616;
reg   [6:0] j_s_reg_627;
reg   [31:0] ap_phi_mux_tmp_24_phi_fu_642_p4;
wire    ap_block_pp6_stage1;
reg   [63:0] ap_phi_mux_k_phi_fu_654_p4;
wire    ap_block_pp6_stage0;
reg    grp_k2c_idx2sub_fu_661_ap_start_reg;
reg    grp_k2c_sub2idx_fu_673_ap_start_reg;
wire    ap_CS_fsm_state100;
wire   [0:0] tmp_18_fu_707_p2;
wire   [0:0] tmp_fu_744_p2;
wire    ap_block_pp0_stage0;
wire   [63:0] i_5_cast_fu_804_p1;
wire   [63:0] j_3_cast_fu_826_p1;
wire   [63:0] i_7_cast7_fu_843_p1;
wire    ap_block_pp3_stage0;
wire    ap_block_pp4_stage0;
wire   [63:0] extLd_fu_881_p1;
wire    ap_block_pp5_stage0;
wire   [63:0] extLd2_fu_966_p1;
wire    ap_CS_fsm_state99;
wire   [63:0] sum9_cast_fu_980_p1;
wire   [63:0] tmp_23_cast_fu_1045_p1;
wire   [63:0] sum_cast_fu_1069_p1;
wire   [63:0] sum3_cast_fu_1078_p1;
reg   [63:0] count_fu_120;
wire   [63:0] count_6_fu_716_p2;
reg   [63:0] count_2_fu_156;
wire   [63:0] count_7_fu_754_p2;
wire    ap_CS_fsm_pp6_stage2;
wire    ap_block_pp6_stage2;
wire   [2:0] tmp_48_fu_774_p1;
wire   [63:0] bound_fu_937_p0;
wire   [19:0] tmp_52_fu_971_p1;
wire   [19:0] sum9_fu_975_p2;
wire   [0:0] exitcond16_fu_996_p2;
wire   [63:0] i_35_fu_1010_p2;
wire  signed [19:0] tmp_51_fu_1028_p1;
wire  signed [12:0] grp_fu_1088_p3;
wire  signed [19:0] tmp_53_fu_1060_p1;
wire   [19:0] sum_fu_1064_p2;
wire  signed [19:0] grp_fu_1097_p3;
(* use_dsp48 = "no" *) wire   [19:0] sum3_fu_1074_p2;
wire   [7:0] grp_fu_1088_p0;
wire  signed [12:0] grp_fu_1088_p1;
wire   [6:0] grp_fu_1088_p2;
wire   [7:0] grp_fu_1097_p0;
reg    grp_fu_769_ap_start;
wire    grp_fu_769_ap_done;
reg   [98:0] ap_NS_fsm;
wire    ap_block_state105_pp6_stage2_iter0;
wire    ap_block_state109_pp6_stage2_iter1;
wire    ap_block_pp6_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
wire   [70:0] bound_fu_937_p00;
wire   [12:0] grp_fu_1088_p20;

// power-on initialization
initial begin
#0 ap_CS_fsm = 99'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 grp_k2c_idx2sub_fu_661_ap_start_reg = 1'b0;
#0 grp_k2c_sub2idx_fu_673_ap_start_reg = 1'b0;
end

k2c_dot_dense_kerdEe #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dense_kernel_shape_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_kernel_shape_address0),
    .ce0(dense_kernel_shape_ce0),
    .q0(dense_kernel_shape_q0)
);

k2c_dot_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
permA_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(permA_address0),
    .ce0(permA_ce0),
    .we0(permA_we0),
    .d0(permA_d0),
    .q0(permA_q0)
);

k2c_dot_permB #(
    .DataWidth( 2 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
permB_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(permB_address0),
    .ce0(permB_ce0),
    .we0(permB_we0),
    .d0(permB_d0),
    .q0(permB_q0)
);

k2c_dot_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
freeA_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(freeA_address0),
    .ce0(freeA_ce0),
    .we0(freeA_we0),
    .d0(i_reg_470),
    .q0(freeA_q0)
);

k2c_dot_permB #(
    .DataWidth( 2 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
freeB_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(freeB_address0),
    .ce0(freeB_ce0),
    .we0(freeB_we0),
    .d0(i_1_reg_482),
    .q0(freeB_q0)
);

k2c_dot_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
newshpA_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(newshpA_address0),
    .ce0(newshpA_ce0),
    .we0(newshpA_we0),
    .d0(Ar_shape_q0),
    .q0(newshpA_q0)
);

k2c_dot_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
newshpB_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(newshpB_address0),
    .ce0(newshpB_ce0),
    .we0(newshpB_we0),
    .d0(dense_kernel_shape_q0),
    .q0(newshpB_q0)
);

k2c_dot_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
Asub_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Asub_address0),
    .ce0(Asub_ce0),
    .we0(Asub_we0),
    .d0(Asub_d0),
    .q0(Asub_q0)
);

k2c_dot_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
Bsub_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Bsub_address0),
    .ce0(Bsub_ce0),
    .we0(Bsub_we0),
    .d0(Bsub_d0),
    .q0(Bsub_q0)
);

k2c_idx2sub grp_k2c_idx2sub_fu_661(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_idx2sub_fu_661_ap_start),
    .ap_done(grp_k2c_idx2sub_fu_661_ap_done),
    .ap_idle(grp_k2c_idx2sub_fu_661_ap_idle),
    .ap_ready(grp_k2c_idx2sub_fu_661_ap_ready),
    .idx(grp_k2c_idx2sub_fu_661_idx),
    .sub_address0(grp_k2c_idx2sub_fu_661_sub_address0),
    .sub_ce0(grp_k2c_idx2sub_fu_661_sub_ce0),
    .sub_we0(grp_k2c_idx2sub_fu_661_sub_we0),
    .sub_d0(grp_k2c_idx2sub_fu_661_sub_d0),
    .shape_address0(grp_k2c_idx2sub_fu_661_shape_address0),
    .shape_ce0(grp_k2c_idx2sub_fu_661_shape_ce0),
    .shape_q0(grp_k2c_idx2sub_fu_661_shape_q0),
    .ndim(grp_k2c_idx2sub_fu_661_ndim)
);

k2c_sub2idx grp_k2c_sub2idx_fu_673(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_sub2idx_fu_673_ap_start),
    .ap_done(grp_k2c_sub2idx_fu_673_ap_done),
    .ap_idle(grp_k2c_sub2idx_fu_673_ap_idle),
    .ap_ready(grp_k2c_sub2idx_fu_673_ap_ready),
    .sub_address0(grp_k2c_sub2idx_fu_673_sub_address0),
    .sub_ce0(grp_k2c_sub2idx_fu_673_sub_ce0),
    .sub_q0(grp_k2c_sub2idx_fu_673_sub_q0),
    .shape_address0(grp_k2c_sub2idx_fu_673_shape_address0),
    .shape_ce0(grp_k2c_sub2idx_fu_673_shape_ce0),
    .shape_q0(grp_k2c_sub2idx_fu_673_shape_q0),
    .ndim(grp_k2c_sub2idx_fu_673_ndim),
    .ap_return(grp_k2c_sub2idx_fu_673_ap_return)
);

face_classifier_ceOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_ceOg_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_mux_tmp_24_phi_fu_642_p4),
    .din1(tmp_27_reg_1448),
    .ce(1'b1),
    .dout(grp_fu_682_p2)
);

face_classifier_cfYi #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_cfYi_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(fwork_load_reg_1438),
    .din1(fwork_load_2_reg_1443),
    .ce(1'b1),
    .dout(grp_fu_687_p2)
);

face_classifier_cg8j #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
face_classifier_cg8j_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_769_ap_start),
    .done(grp_fu_769_ap_done),
    .din0(Ar_numel_read),
    .din1(Ar_shape_q0),
    .ce(1'b1),
    .dout(grp_fu_769_p2)
);

face_classifier_chbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 7 ),
    .dout_WIDTH( 13 ))
face_classifier_chbi_U15(
    .din0(grp_fu_1088_p0),
    .din1(grp_fu_1088_p1),
    .din2(grp_fu_1088_p2),
    .dout(grp_fu_1088_p3)
);

face_classifier_cibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 20 ),
    .dout_WIDTH( 20 ))
face_classifier_cibs_U16(
    .din0(grp_fu_1097_p0),
    .din1(tmp_53_fu_1060_p1),
    .din2(tmp_49_reg_1300),
    .dout(grp_fu_1097_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state72) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state71)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state72))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state72);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state71)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state77) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state76)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state77))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state77);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state76)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state80) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state79)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state80)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state80);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((1'b1 == ap_CS_fsm_state79)) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state84) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state83)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state84)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state84);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end else if ((1'b1 == ap_CS_fsm_state83)) begin
            ap_enable_reg_pp4_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_condition_pp5_exit_iter0_state90) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if (((grp_k2c_idx2sub_fu_661_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state89))) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state90)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state90);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end else if (((grp_k2c_idx2sub_fu_661_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state89))) begin
            ap_enable_reg_pp5_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_condition_pp6_exit_iter0_state103) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if (((exitcond_flatten_fu_985_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state102))) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage3_subdone) & (1'b1 == ap_CS_fsm_pp6_stage3))) begin
            if ((1'b1 == ap_condition_pp6_exit_iter0_state103)) begin
                ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state103);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp6_stage3_subdone) & (1'b1 == ap_CS_fsm_pp6_stage3)) | ((1'b0 == ap_block_pp6_stage1_subdone) & (1'b1 == ap_CS_fsm_pp6_stage1)))) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end else if (((exitcond_flatten_fu_985_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state102))) begin
            ap_enable_reg_pp6_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_idx2sub_fu_661_ap_start_reg <= 1'b0;
    end else begin
        if ((((exitcond4_fu_916_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state95)) | ((exitcond5_fu_886_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state88)))) begin
            grp_k2c_idx2sub_fu_661_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_idx2sub_fu_661_ap_ready == 1'b1)) begin
            grp_k2c_idx2sub_fu_661_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_sub2idx_fu_673_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state93))) begin
            grp_k2c_sub2idx_fu_673_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_sub2idx_fu_673_ap_ready == 1'b1)) begin
            grp_k2c_sub2idx_fu_673_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_744_p2 == 1'd0) & (exitcond15_fu_732_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        count_2_fu_156 <= count_7_fu_754_p2;
    end else if (((exitcond13_fu_696_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        count_2_fu_156 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_18_fu_707_p2 == 1'd0) & (exitcond13_fu_696_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        count_fu_120 <= count_6_fu_716_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        count_fu_120 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        i_10_reg_559 <= 64'd0;
    end else if (((grp_k2c_sub2idx_fu_673_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state94))) begin
        i_10_reg_559 <= i_32_reg_1295;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_886_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state88))) begin
        i_11_reg_583 <= 19'd0;
    end else if (((exitcond9_fu_943_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state97))) begin
        i_11_reg_583 <= i_33_reg_1338;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond15_fu_732_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i_1_reg_482 <= i_24_fu_738_p2;
    end else if (((exitcond13_fu_696_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_1_reg_482 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond14_fu_793_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_4_reg_494 <= i_27_fu_798_p2;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        i_4_reg_494 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        i_5_reg_505 <= i_27_cast_reg_1193;
    end else if (((tmp_s_fu_809_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state75))) begin
        i_5_reg_505 <= i_28_fu_814_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        i_7_reg_514 <= 2'd1;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond1_reg_1225 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_7_reg_514 <= i_29_reg_1234;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        i_8_reg_537 <= 3'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond12_fu_853_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_8_reg_537 <= i_30_fu_858_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        i_9_reg_548 <= 2'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (exitcond11_fu_864_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        i_9_reg_548 <= i_31_fu_870_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond13_fu_696_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_470 <= i_26_fu_701_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_470 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        i_s_reg_616 <= tmp_20_mid2_v_v_reg_1399;
    end else if (((exitcond4_fu_916_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state95))) begin
        i_s_reg_616 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        indvar_flatten_reg_605 <= indvar_flatten_next_reg_1389;
    end else if (((exitcond4_fu_916_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state95))) begin
        indvar_flatten_reg_605 <= 71'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        j_3_reg_526 <= 1'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond1_fu_820_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        j_3_reg_526 <= j_fu_837_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (exitcond10_fu_905_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        j_4_reg_572 <= j_1_fu_910_p2;
    end else if (((grp_k2c_idx2sub_fu_661_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state89))) begin
        j_4_reg_572 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state101_on_subcall_done) & (1'b1 == ap_CS_fsm_state101))) begin
        j_5_reg_594 <= j_2_reg_1361;
    end else if (((grp_k2c_idx2sub_fu_661_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state96))) begin
        j_5_reg_594 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        j_s_reg_627 <= j_6_fu_1083_p2;
    end else if (((exitcond4_fu_916_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state95))) begin
        j_s_reg_627 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (exitcond_reg_1419 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        k_reg_650 <= k_2_reg_1423;
    end else if (((exitcond_flatten_fu_985_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state102))) begin
        k_reg_650 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage1_11001) & (exitcond_reg_1419_pp6_iter2_reg == 1'd0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage1))) begin
        tmp_24_reg_638 <= tmp_28_reg_1453;
    end else if (((exitcond_flatten_fu_985_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state102))) begin
        tmp_24_reg_638 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        Ar_shape_load_reg_1172 <= Ar_shape_q0;
        tmp_47_reg_1178 <= tmp_47_fu_765_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_916_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state95))) begin
        B_array_addr_reg_1348 <= i_11_cast5_fu_928_p1;
        i_11_cast5_reg_1343[18 : 0] <= i_11_cast5_fu_928_p1[18 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_916_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state95))) begin
        bound_reg_1353[70 : 2] <= bound_fu_937_p2[70 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_985_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state102))) begin
        dense_output_array_a_reg_1414 <= tmp_23_cast_fu_1045_p1;
        j_cast2_reg_1409[6 : 0] <= j_cast2_fu_1037_p1[6 : 0];
        j_mid2_reg_1394 <= j_mid2_fu_1002_p3;
        tmp_20_mid2_v_v_reg_1399 <= tmp_20_mid2_v_v_fu_1016_p3;
        tmp_21_mid2_reg_1404 <= tmp_21_mid2_fu_1032_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        exitcond10_reg_1311 <= exitcond10_fu_905_p2;
        exitcond10_reg_1311_pp5_iter1_reg <= exitcond10_reg_1311;
        j_4_cast_reg_1306[2 : 0] <= j_4_cast_fu_900_p1[2 : 0];
        j_4_cast_reg_1306_pp5_iter1_reg[2 : 0] <= j_4_cast_reg_1306[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        exitcond11_reg_1268 <= exitcond11_fu_864_p2;
        exitcond11_reg_1268_pp4_iter1_reg <= exitcond11_reg_1268;
        i_9_cast6_reg_1277_pp4_iter1_reg[1 : 0] <= i_9_cast6_reg_1277[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        exitcond12_reg_1249 <= exitcond12_fu_853_p2;
        exitcond12_reg_1249_pp3_iter1_reg <= exitcond12_reg_1249;
        i_8_cast_reg_1244[2 : 0] <= i_8_cast_fu_848_p1[2 : 0];
        i_8_cast_reg_1244_pp3_iter1_reg[2 : 0] <= i_8_cast_reg_1244[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond14_reg_1203 <= exitcond14_fu_793_p2;
        i_4_cast_reg_1198[2 : 0] <= i_4_cast_fu_788_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond1_reg_1225 <= exitcond1_fu_820_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        exitcond_reg_1419 <= exitcond_fu_1049_p2;
        exitcond_reg_1419_pp6_iter1_reg <= exitcond_reg_1419;
        exitcond_reg_1419_pp6_iter2_reg <= exitcond_reg_1419_pp6_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        free_axesA_reg_1183 <= grp_fu_769_p2;
        i_25_reg_1188 <= i_25_fu_777_p2;
        i_27_cast_reg_1193 <= i_27_cast_fu_782_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage1_11001) & (exitcond_reg_1419 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage1) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
        fwork_load_2_reg_1443 <= fwork_q1;
        fwork_load_reg_1438 <= fwork_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond1_fu_820_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_29_reg_1234 <= i_29_fu_831_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        i_32_reg_1295 <= i_32_fu_891_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        i_33_reg_1338 <= i_33_fu_922_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (exitcond11_fu_864_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        i_9_cast6_reg_1277[1 : 0] <= i_9_cast6_fu_876_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond9_fu_943_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state97))) begin
        ifzero_reg_1376 <= ifzero_fu_960_p2;
        j_5_cast4_reg_1366[1 : 0] <= j_5_cast4_fu_955_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        indvar_flatten_next_reg_1389 <= indvar_flatten_next_fu_990_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        j_2_reg_1361 <= j_2_fu_949_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        k_2_reg_1423 <= k_2_fu_1054_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (exitcond_reg_1419 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        tmp_27_reg_1448 <= grp_fu_687_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (exitcond_reg_1419_pp6_iter1_reg == 1'd0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        tmp_28_reg_1453 <= grp_fu_682_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_886_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state88))) begin
        tmp_49_reg_1300 <= tmp_49_fu_897_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        Ar_array_ce0 = 1'b1;
    end else begin
        Ar_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        Ar_shape_address0 = permA_q0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        Ar_shape_address0 = axesA_0_read;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        Ar_shape_address0 = grp_k2c_idx2sub_fu_661_shape_address0;
    end else begin
        Ar_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        Ar_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        Ar_shape_ce0 = grp_k2c_idx2sub_fu_661_shape_ce0;
    end else begin
        Ar_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        Asub_address0 = j_5_cast4_reg_1366;
    end else if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        Asub_address0 = permA_q0;
    end else if (((ifzero_reg_1376 == 1'd1) & (1'b1 == ap_CS_fsm_state101))) begin
        Asub_address0 = grp_k2c_sub2idx_fu_673_sub_address0;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        Asub_address0 = grp_k2c_idx2sub_fu_661_sub_address0;
    end else begin
        Asub_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state99) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)))) begin
        Asub_ce0 = 1'b1;
    end else if (((ifzero_reg_1376 == 1'd1) & (1'b1 == ap_CS_fsm_state101))) begin
        Asub_ce0 = grp_k2c_sub2idx_fu_673_sub_ce0;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        Asub_ce0 = grp_k2c_idx2sub_fu_661_sub_ce0;
    end else begin
        Asub_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        Asub_d0 = Bsub_q0;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        Asub_d0 = grp_k2c_idx2sub_fu_661_sub_d0;
    end else begin
        Asub_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        Asub_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        Asub_we0 = grp_k2c_idx2sub_fu_661_sub_we0;
    end else begin
        Asub_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        B_array_ce0 = 1'b1;
    end else begin
        B_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        Bsub_address0 = extLd2_fu_966_p1;
    end else if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter2 == 1'b1))) begin
        Bsub_address0 = j_4_cast_reg_1306_pp5_iter1_reg;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        Bsub_address0 = grp_k2c_sub2idx_fu_673_sub_address0;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        Bsub_address0 = grp_k2c_idx2sub_fu_661_sub_address0;
    end else begin
        Bsub_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state98) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter2 == 1'b1)))) begin
        Bsub_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        Bsub_ce0 = grp_k2c_sub2idx_fu_673_sub_ce0;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        Bsub_ce0 = grp_k2c_idx2sub_fu_661_sub_ce0;
    end else begin
        Bsub_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter2 == 1'b1))) begin
        Bsub_d0 = Asub_q0;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        Bsub_d0 = grp_k2c_idx2sub_fu_661_sub_d0;
    end else begin
        Bsub_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (exitcond10_reg_1311_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1))) begin
        Bsub_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        Bsub_we0 = grp_k2c_idx2sub_fu_661_sub_we0;
    end else begin
        Bsub_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond14_fu_793_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state72 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state72 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond1_fu_820_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state77 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state77 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond12_fu_853_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state80 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state80 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond11_fu_864_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state84 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state84 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond10_fu_905_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state90 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state90 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_fu_1049_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state103 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state103 = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond_flatten_fu_985_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state102)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (exitcond1_reg_1225 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_i_7_phi_fu_518_p4 = i_29_reg_1234;
    end else begin
        ap_phi_mux_i_7_phi_fu_518_p4 = i_7_reg_514;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (exitcond_reg_1419 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        ap_phi_mux_k_phi_fu_654_p4 = k_2_reg_1423;
    end else begin
        ap_phi_mux_k_phi_fu_654_p4 = k_reg_650;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage1) & (exitcond_reg_1419_pp6_iter2_reg == 1'd0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage1))) begin
        ap_phi_mux_tmp_24_phi_fu_642_p4 = tmp_28_reg_1453;
    end else begin
        ap_phi_mux_tmp_24_phi_fu_642_p4 = tmp_24_reg_638;
    end
end

always @ (*) begin
    if (((exitcond_flatten_fu_985_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state102))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        dense_kernel_shape_address0 = extLd_fu_881_p1;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        dense_kernel_shape_address0 = grp_k2c_idx2sub_fu_661_shape_address0;
    end else begin
        dense_kernel_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        dense_kernel_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        dense_kernel_shape_ce0 = grp_k2c_idx2sub_fu_661_shape_ce0;
    end else begin
        dense_kernel_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage1) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage1))) begin
        dense_output_array_address0 = dense_output_array_a_reg_1414;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        dense_output_array_address0 = tmp_23_cast_fu_1045_p1;
    end else begin
        dense_output_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state102) | ((1'b0 == ap_block_pp6_stage1_11001) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage1)))) begin
        dense_output_array_ce0 = 1'b1;
    end else begin
        dense_output_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage1) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage1))) begin
        dense_output_array_d0 = tmp_28_reg_1453;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        dense_output_array_d0 = 32'd0;
    end else begin
        dense_output_array_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp6_stage1_11001) & (exitcond_reg_1419_pp6_iter2_reg == 1'd0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage1)) | ((exitcond_flatten_fu_985_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state102)))) begin
        dense_output_array_we0 = 1'b1;
    end else begin
        dense_output_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        freeA_address0 = i_4_cast_fu_788_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        freeA_address0 = count_fu_120;
    end else begin
        freeA_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        freeA_ce0 = 1'b1;
    end else begin
        freeA_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_18_fu_707_p2 == 1'd0) & (exitcond13_fu_696_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        freeA_we0 = 1'b1;
    end else begin
        freeA_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        freeB_address0 = j_3_cast_fu_826_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        freeB_address0 = count_2_fu_156;
    end else begin
        freeB_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        freeB_ce0 = 1'b1;
    end else begin
        freeB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_744_p2 == 1'd0) & (exitcond15_fu_732_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        freeB_we0 = 1'b1;
    end else begin
        freeB_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        fwork_address0 = sum_cast_fu_1069_p1;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        fwork_address0 = sum9_cast_fu_980_p1;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        fwork_address0 = grp_k2c_sub2idx_fu_673_ap_return;
    end else begin
        fwork_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state101_on_subcall_done) & (1'b1 == ap_CS_fsm_state101)) | ((grp_k2c_sub2idx_fu_673_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state94)) | ((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0)))) begin
        fwork_ce0 = 1'b1;
    end else begin
        fwork_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        fwork_ce1 = 1'b1;
    end else begin
        fwork_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        fwork_d0 = B_array_q0;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        fwork_d0 = Ar_array_q0;
    end else begin
        fwork_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state101_on_subcall_done) & (ifzero_reg_1376 == 1'd1) & (1'b1 == ap_CS_fsm_state101)) | ((grp_k2c_sub2idx_fu_673_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state94)))) begin
        fwork_we0 = 1'b1;
    end else begin
        fwork_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_769_ap_start = 1'b1;
    end else begin
        grp_fu_769_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        grp_k2c_idx2sub_fu_661_idx = i_11_cast5_reg_1343;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        grp_k2c_idx2sub_fu_661_idx = i_10_reg_559;
    end else begin
        grp_k2c_idx2sub_fu_661_idx = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        grp_k2c_idx2sub_fu_661_ndim = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        grp_k2c_idx2sub_fu_661_ndim = Ar_ndim_read;
    end else begin
        grp_k2c_idx2sub_fu_661_ndim = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        grp_k2c_idx2sub_fu_661_shape_q0 = dense_kernel_shape_q0;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        grp_k2c_idx2sub_fu_661_shape_q0 = Ar_shape_q0;
    end else begin
        grp_k2c_idx2sub_fu_661_shape_q0 = 'bx;
    end
end

always @ (*) begin
    if (((ifzero_reg_1376 == 1'd1) & (1'b1 == ap_CS_fsm_state101))) begin
        grp_k2c_sub2idx_fu_673_ndim = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        grp_k2c_sub2idx_fu_673_ndim = Ar_ndim_read;
    end else begin
        grp_k2c_sub2idx_fu_673_ndim = 'bx;
    end
end

always @ (*) begin
    if (((ifzero_reg_1376 == 1'd1) & (1'b1 == ap_CS_fsm_state101))) begin
        grp_k2c_sub2idx_fu_673_shape_q0 = newshpB_q0;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        grp_k2c_sub2idx_fu_673_shape_q0 = newshpA_q0;
    end else begin
        grp_k2c_sub2idx_fu_673_shape_q0 = 'bx;
    end
end

always @ (*) begin
    if (((ifzero_reg_1376 == 1'd1) & (1'b1 == ap_CS_fsm_state101))) begin
        grp_k2c_sub2idx_fu_673_sub_q0 = Asub_q0;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        grp_k2c_sub2idx_fu_673_sub_q0 = Bsub_q0;
    end else begin
        grp_k2c_sub2idx_fu_673_sub_q0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        newshpA_address0 = i_8_cast_reg_1244_pp3_iter1_reg;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        newshpA_address0 = grp_k2c_sub2idx_fu_673_shape_address0;
    end else begin
        newshpA_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        newshpA_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        newshpA_ce0 = grp_k2c_sub2idx_fu_673_shape_ce0;
    end else begin
        newshpA_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond12_reg_1249_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        newshpA_we0 = 1'b1;
    end else begin
        newshpA_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        newshpB_address0 = i_9_cast6_reg_1277_pp4_iter1_reg;
    end else if (((ifzero_reg_1376 == 1'd1) & (1'b1 == ap_CS_fsm_state101))) begin
        newshpB_address0 = grp_k2c_sub2idx_fu_673_shape_address0;
    end else begin
        newshpB_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        newshpB_ce0 = 1'b1;
    end else if (((ifzero_reg_1376 == 1'd1) & (1'b1 == ap_CS_fsm_state101))) begin
        newshpB_ce0 = grp_k2c_sub2idx_fu_673_shape_ce0;
    end else begin
        newshpB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (exitcond11_reg_1268_pp4_iter1_reg == 1'd0) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        newshpB_we0 = 1'b1;
    end else begin
        newshpB_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        permA_address0 = j_4_cast_fu_900_p1;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        permA_address0 = i_8_cast_fu_848_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        permA_address0 = i_5_cast_fu_804_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        permA_address0 = i_4_cast_reg_1198;
    end else begin
        permA_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state75) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        permA_ce0 = 1'b1;
    end else begin
        permA_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        permA_d0 = axesA_0_read;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        permA_d0 = freeA_q0;
    end else begin
        permA_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_s_fu_809_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state75)) | ((exitcond14_reg_1203 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        permA_we0 = 1'b1;
    end else begin
        permA_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        permB_address0 = j_5_cast4_fu_955_p1;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        permB_address0 = i_9_cast6_fu_876_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        permB_address0 = i_7_cast7_fu_843_p1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        permB_address0 = 64'd0;
    end else begin
        permB_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state97) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        permB_ce0 = 1'b1;
    end else begin
        permB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        permB_d0 = freeB_q0;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        permB_d0 = 2'd0;
    end else begin
        permB_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state76) | ((1'b0 == ap_block_pp2_stage0_11001) & (exitcond1_reg_1225 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        permB_we0 = 1'b1;
    end else begin
        permB_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond13_fu_696_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond15_fu_732_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond14_fu_793_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond14_fu_793_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            if (((tmp_s_fu_809_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state75))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((1'b0 == ap_block_pp2_stage0_subdone) & (exitcond1_fu_820_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (exitcond1_fu_820_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (exitcond12_fu_853_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)) & ~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (exitcond12_fu_853_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone) & (exitcond11_fu_864_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1)) & ~((ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if ((((ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter2 == 1'b1)) | ((ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone) & (exitcond11_fu_864_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            if (((exitcond5_fu_886_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state88))) begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end
        end
        ap_ST_fsm_state89 : begin
            if (((grp_k2c_idx2sub_fu_661_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state89))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((ap_enable_reg_pp5_iter1 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone) & (exitcond10_fu_905_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1)) & ~((ap_enable_reg_pp5_iter1 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((ap_enable_reg_pp5_iter1 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter2 == 1'b1)) | ((ap_enable_reg_pp5_iter1 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone) & (exitcond10_fu_905_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            if (((grp_k2c_sub2idx_fu_673_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state94))) begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end
        end
        ap_ST_fsm_state95 : begin
            if (((exitcond4_fu_916_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state95))) begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state96;
            end
        end
        ap_ST_fsm_state96 : begin
            if (((grp_k2c_idx2sub_fu_661_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state96))) begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state96;
            end
        end
        ap_ST_fsm_state97 : begin
            if (((exitcond9_fu_943_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state97))) begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            if (((ifzero_reg_1376 == 1'd0) & (1'b1 == ap_CS_fsm_state99))) begin
                ap_NS_fsm = ap_ST_fsm_state101;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state100;
            end
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            if (((1'b0 == ap_block_state101_on_subcall_done) & (1'b1 == ap_CS_fsm_state101))) begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state101;
            end
        end
        ap_ST_fsm_state102 : begin
            if (((exitcond_flatten_fu_985_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state102))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone) & (exitcond_fu_1049_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1)) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage1;
            end else if (((ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone) & (exitcond_fu_1049_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state113;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_pp6_stage1 : begin
            if ((~((1'b0 == ap_block_pp6_stage1_subdone) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage1)) & (1'b0 == ap_block_pp6_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage2;
            end else if (((1'b0 == ap_block_pp6_stage1_subdone) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state113;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage1;
            end
        end
        ap_ST_fsm_pp6_stage2 : begin
            if ((1'b0 == ap_block_pp6_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage2;
            end
        end
        ap_ST_fsm_pp6_stage3 : begin
            if ((1'b0 == ap_block_pp6_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage3;
            end
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Ar_array_address0 = i_10_reg_559;

assign B_array_address0 = B_array_addr_reg_1348;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_pp6_stage1 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_pp6_stage2 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_pp6_stage3 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd98];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd90];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage3_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state101_on_subcall_done = ((grp_k2c_sub2idx_fu_673_ap_done == 1'b0) & (ifzero_reg_1376 == 1'd1));
end

assign ap_block_state103_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp6_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp6_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp6_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp6_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp6_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state110_pp6_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp6_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign bound_fu_937_p0 = bound_fu_937_p00;

assign bound_fu_937_p00 = free_axesA_reg_1183;

assign bound_fu_937_p2 = (bound_fu_937_p0 * $signed('h64));

assign count_6_fu_716_p2 = (count_fu_120 + 64'd1);

assign count_7_fu_754_p2 = (count_2_fu_156 + 64'd1);

assign exitcond10_fu_905_p2 = ((j_4_cast_fu_900_p1 == Ar_ndim_read) ? 1'b1 : 1'b0);

assign exitcond11_fu_864_p2 = ((i_9_reg_548 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond12_fu_853_p2 = ((i_8_cast_fu_848_p1 == Ar_ndim_read) ? 1'b1 : 1'b0);

assign exitcond13_fu_696_p2 = ((i_reg_470 == Ar_ndim_read) ? 1'b1 : 1'b0);

assign exitcond14_fu_793_p2 = ((i_4_cast_fu_788_p1 == i_25_reg_1188) ? 1'b1 : 1'b0);

assign exitcond15_fu_732_p2 = ((i_1_reg_482 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond16_fu_996_p2 = ((j_s_reg_627 != 7'd100) ? 1'b1 : 1'b0);

assign exitcond1_fu_820_p2 = ((ap_phi_mux_i_7_phi_fu_518_p4 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond4_fu_916_p2 = ((i_11_reg_583 == 19'd262200) ? 1'b1 : 1'b0);

assign exitcond5_fu_886_p2 = ((i_10_reg_559 == Ar_numel_read) ? 1'b1 : 1'b0);

assign exitcond9_fu_943_p2 = ((j_5_reg_594 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_985_p2 = ((indvar_flatten_reg_605 == bound_reg_1353) ? 1'b1 : 1'b0);

assign exitcond_fu_1049_p2 = ((ap_phi_mux_k_phi_fu_654_p4 == Ar_shape_load_reg_1172) ? 1'b1 : 1'b0);

assign extLd2_fu_966_p1 = permB_q0;

assign extLd_fu_881_p1 = permB_q0;

assign fwork_address1 = sum3_cast_fu_1078_p1;

assign grp_fu_1088_p0 = 13'd100;

assign grp_fu_1088_p1 = tmp_20_mid2_v_v_fu_1016_p3[12:0];

assign grp_fu_1088_p2 = grp_fu_1088_p20;

assign grp_fu_1088_p20 = j_mid2_fu_1002_p3;

assign grp_fu_1097_p0 = 20'd100;

assign grp_k2c_idx2sub_fu_661_ap_start = grp_k2c_idx2sub_fu_661_ap_start_reg;

assign grp_k2c_sub2idx_fu_673_ap_start = grp_k2c_sub2idx_fu_673_ap_start_reg;

assign i_11_cast5_fu_928_p1 = i_11_reg_583;

assign i_24_fu_738_p2 = (i_1_reg_482 + 2'd1);

assign i_25_fu_777_p2 = ($signed(64'd18446744073709551615) + $signed(Ar_ndim_read));

assign i_26_fu_701_p2 = (i_reg_470 + 64'd1);

assign i_27_cast_fu_782_p2 = ($signed(3'd7) + $signed(tmp_48_fu_774_p1));

assign i_27_fu_798_p2 = (i_4_reg_494 + 3'd1);

assign i_28_fu_814_p2 = (i_5_reg_505 + 3'd1);

assign i_29_fu_831_p2 = (ap_phi_mux_i_7_phi_fu_518_p4 + 2'd1);

assign i_30_fu_858_p2 = (i_8_reg_537 + 3'd1);

assign i_31_fu_870_p2 = (i_9_reg_548 + 2'd1);

assign i_32_fu_891_p2 = (i_10_reg_559 + 64'd1);

assign i_33_fu_922_p2 = (i_11_reg_583 + 19'd1);

assign i_35_fu_1010_p2 = (64'd1 + i_s_reg_616);

assign i_4_cast_fu_788_p1 = i_4_reg_494;

assign i_5_cast_fu_804_p1 = i_5_reg_505;

assign i_7_cast7_fu_843_p1 = i_7_reg_514;

assign i_8_cast_fu_848_p1 = i_8_reg_537;

assign i_9_cast6_fu_876_p1 = i_9_reg_548;

assign ifzero_fu_960_p2 = ((j_2_fu_949_p2 == 2'd2) ? 1'b1 : 1'b0);

assign indvar_flatten_next_fu_990_p2 = (indvar_flatten_reg_605 + 71'd1);

assign j_1_fu_910_p2 = (j_4_reg_572 + 3'd1);

assign j_2_fu_949_p2 = (j_5_reg_594 + 2'd1);

assign j_3_cast_fu_826_p1 = j_3_reg_526;

assign j_4_cast_fu_900_p1 = j_4_reg_572;

assign j_5_cast4_fu_955_p1 = j_5_reg_594;

assign j_6_fu_1083_p2 = (j_mid2_reg_1394 + 7'd1);

assign j_cast2_fu_1037_p1 = j_mid2_fu_1002_p3;

assign j_fu_837_p2 = (j_3_reg_526 ^ 1'd1);

assign j_mid2_fu_1002_p3 = ((exitcond16_fu_996_p2[0:0] === 1'b1) ? j_s_reg_627 : 7'd0);

assign k_2_fu_1054_p2 = (ap_phi_mux_k_phi_fu_654_p4 + 64'd1);

assign sum3_cast_fu_1078_p1 = sum3_fu_1074_p2;

assign sum3_fu_1074_p2 = ($signed(grp_fu_1097_p3) + $signed(j_cast2_reg_1409));

assign sum9_cast_fu_980_p1 = sum9_fu_975_p2;

assign sum9_fu_975_p2 = (tmp_52_fu_971_p1 + tmp_49_reg_1300);

assign sum_cast_fu_1069_p1 = sum_fu_1064_p2;

assign sum_fu_1064_p2 = ($signed(tmp_53_fu_1060_p1) + $signed(tmp_21_mid2_reg_1404));

assign tmp_18_fu_707_p2 = ((i_reg_470 == axesA_0_read) ? 1'b1 : 1'b0);

assign tmp_20_mid2_v_v_fu_1016_p3 = ((exitcond16_fu_996_p2[0:0] === 1'b1) ? i_s_reg_616 : i_35_fu_1010_p2);

assign tmp_21_mid2_fu_1032_p2 = ($signed(tmp_47_reg_1178) * $signed(tmp_51_fu_1028_p1));

assign tmp_23_cast_fu_1045_p1 = $unsigned(grp_fu_1088_p3);

assign tmp_47_fu_765_p1 = Ar_shape_q0[19:0];

assign tmp_48_fu_774_p1 = Ar_ndim_read[2:0];

assign tmp_49_fu_897_p1 = Ar_numel_read[19:0];

assign tmp_51_fu_1028_p1 = tmp_20_mid2_v_v_fu_1016_p3[19:0];

assign tmp_52_fu_971_p1 = grp_k2c_sub2idx_fu_673_ap_return[19:0];

assign tmp_53_fu_1060_p1 = ap_phi_mux_k_phi_fu_654_p4[19:0];

assign tmp_fu_744_p2 = ((i_1_reg_482 == 2'd0) ? 1'b1 : 1'b0);

assign tmp_s_fu_809_p2 = ((i_5_cast_fu_804_p1 < Ar_ndim_read) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    i_4_cast_reg_1198[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_8_cast_reg_1244[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_8_cast_reg_1244_pp3_iter1_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_9_cast6_reg_1277[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    i_9_cast6_reg_1277_pp4_iter1_reg[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    j_4_cast_reg_1306[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    j_4_cast_reg_1306_pp5_iter1_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_11_cast5_reg_1343[63:19] <= 45'b000000000000000000000000000000000000000000000;
    bound_reg_1353[1:0] <= 2'b00;
    j_5_cast4_reg_1366[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    j_cast2_reg_1409[19:7] <= 13'b0000000000000;
end

endmodule //k2c_dot
