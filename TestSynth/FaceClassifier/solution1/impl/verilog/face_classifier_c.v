// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="face_classifier_c,hls_ip_2018_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xa7a12tcsg325-1q,HLS_INPUT_CLOCK=100.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=84.608600,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=4306,HLS_SYN_DSP=172,HLS_SYN_FF=36501,HLS_SYN_LUT=45579,HLS_VERSION=2018_2}" *)

module face_classifier_c (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        dense_input_input_array_address0,
        dense_input_input_array_ce0,
        dense_input_input_array_q0,
        dense_input_input_ndim,
        dense_input_input_numel,
        dense_input_input_shape_address0,
        dense_input_input_shape_ce0,
        dense_input_input_shape_q0,
        activation_3_output_array_address0,
        activation_3_output_array_ce0,
        activation_3_output_array_we0,
        activation_3_output_array_d0,
        activation_3_output_ndim,
        activation_3_output_ndim_ap_vld,
        activation_3_output_numel,
        activation_3_output_numel_ap_vld,
        activation_3_output_shape_address0,
        activation_3_output_shape_ce0,
        activation_3_output_shape_we0,
        activation_3_output_shape_d0
);

parameter    ap_ST_fsm_state1 = 101'd1;
parameter    ap_ST_fsm_state2 = 101'd2;
parameter    ap_ST_fsm_state3 = 101'd4;
parameter    ap_ST_fsm_state4 = 101'd8;
parameter    ap_ST_fsm_state5 = 101'd16;
parameter    ap_ST_fsm_state6 = 101'd32;
parameter    ap_ST_fsm_state7 = 101'd64;
parameter    ap_ST_fsm_state8 = 101'd128;
parameter    ap_ST_fsm_state9 = 101'd256;
parameter    ap_ST_fsm_pp1_stage0 = 101'd512;
parameter    ap_ST_fsm_state12 = 101'd1024;
parameter    ap_ST_fsm_pp2_stage0 = 101'd2048;
parameter    ap_ST_fsm_state15 = 101'd4096;
parameter    ap_ST_fsm_state16 = 101'd8192;
parameter    ap_ST_fsm_state17 = 101'd16384;
parameter    ap_ST_fsm_state18 = 101'd32768;
parameter    ap_ST_fsm_state19 = 101'd65536;
parameter    ap_ST_fsm_state20 = 101'd131072;
parameter    ap_ST_fsm_pp4_stage0 = 101'd262144;
parameter    ap_ST_fsm_state23 = 101'd524288;
parameter    ap_ST_fsm_pp5_stage0 = 101'd1048576;
parameter    ap_ST_fsm_state26 = 101'd2097152;
parameter    ap_ST_fsm_pp6_stage0 = 101'd4194304;
parameter    ap_ST_fsm_state29 = 101'd8388608;
parameter    ap_ST_fsm_pp7_stage0 = 101'd16777216;
parameter    ap_ST_fsm_state32 = 101'd33554432;
parameter    ap_ST_fsm_state33 = 101'd67108864;
parameter    ap_ST_fsm_state34 = 101'd134217728;
parameter    ap_ST_fsm_state35 = 101'd268435456;
parameter    ap_ST_fsm_state36 = 101'd536870912;
parameter    ap_ST_fsm_state37 = 101'd1073741824;
parameter    ap_ST_fsm_state38 = 101'd2147483648;
parameter    ap_ST_fsm_pp9_stage0 = 101'd4294967296;
parameter    ap_ST_fsm_state41 = 101'd8589934592;
parameter    ap_ST_fsm_pp10_stage0 = 101'd17179869184;
parameter    ap_ST_fsm_state44 = 101'd34359738368;
parameter    ap_ST_fsm_state45 = 101'd68719476736;
parameter    ap_ST_fsm_state46 = 101'd137438953472;
parameter    ap_ST_fsm_state47 = 101'd274877906944;
parameter    ap_ST_fsm_state48 = 101'd549755813888;
parameter    ap_ST_fsm_state49 = 101'd1099511627776;
parameter    ap_ST_fsm_pp12_stage0 = 101'd2199023255552;
parameter    ap_ST_fsm_state52 = 101'd4398046511104;
parameter    ap_ST_fsm_pp13_stage0 = 101'd8796093022208;
parameter    ap_ST_fsm_state55 = 101'd17592186044416;
parameter    ap_ST_fsm_pp14_stage0 = 101'd35184372088832;
parameter    ap_ST_fsm_state58 = 101'd70368744177664;
parameter    ap_ST_fsm_pp15_stage0 = 101'd140737488355328;
parameter    ap_ST_fsm_state61 = 101'd281474976710656;
parameter    ap_ST_fsm_state62 = 101'd562949953421312;
parameter    ap_ST_fsm_state63 = 101'd1125899906842624;
parameter    ap_ST_fsm_state64 = 101'd2251799813685248;
parameter    ap_ST_fsm_state65 = 101'd4503599627370496;
parameter    ap_ST_fsm_state66 = 101'd9007199254740992;
parameter    ap_ST_fsm_state67 = 101'd18014398509481984;
parameter    ap_ST_fsm_pp17_stage0 = 101'd36028797018963968;
parameter    ap_ST_fsm_state70 = 101'd72057594037927936;
parameter    ap_ST_fsm_pp18_stage0 = 101'd144115188075855872;
parameter    ap_ST_fsm_state73 = 101'd288230376151711744;
parameter    ap_ST_fsm_state74 = 101'd576460752303423488;
parameter    ap_ST_fsm_state75 = 101'd1152921504606846976;
parameter    ap_ST_fsm_state76 = 101'd2305843009213693952;
parameter    ap_ST_fsm_state77 = 101'd4611686018427387904;
parameter    ap_ST_fsm_pp19_stage0 = 101'd9223372036854775808;
parameter    ap_ST_fsm_state86 = 101'd18446744073709551616;
parameter    ap_ST_fsm_pp20_stage0 = 101'd36893488147419103232;
parameter    ap_ST_fsm_state89 = 101'd73786976294838206464;
parameter    ap_ST_fsm_pp21_stage0 = 101'd147573952589676412928;
parameter    ap_ST_fsm_state92 = 101'd295147905179352825856;
parameter    ap_ST_fsm_pp22_stage0 = 101'd590295810358705651712;
parameter    ap_ST_fsm_state95 = 101'd1180591620717411303424;
parameter    ap_ST_fsm_pp23_stage0 = 101'd2361183241434822606848;
parameter    ap_ST_fsm_state98 = 101'd4722366482869645213696;
parameter    ap_ST_fsm_state99 = 101'd9444732965739290427392;
parameter    ap_ST_fsm_state100 = 101'd18889465931478580854784;
parameter    ap_ST_fsm_state101 = 101'd37778931862957161709568;
parameter    ap_ST_fsm_pp24_stage0 = 101'd75557863725914323419136;
parameter    ap_ST_fsm_state110 = 101'd151115727451828646838272;
parameter    ap_ST_fsm_pp25_stage0 = 101'd302231454903657293676544;
parameter    ap_ST_fsm_state113 = 101'd604462909807314587353088;
parameter    ap_ST_fsm_pp26_stage0 = 101'd1208925819614629174706176;
parameter    ap_ST_fsm_state116 = 101'd2417851639229258349412352;
parameter    ap_ST_fsm_pp27_stage0 = 101'd4835703278458516698824704;
parameter    ap_ST_fsm_state119 = 101'd9671406556917033397649408;
parameter    ap_ST_fsm_pp28_stage0 = 101'd19342813113834066795298816;
parameter    ap_ST_fsm_state122 = 101'd38685626227668133590597632;
parameter    ap_ST_fsm_state123 = 101'd77371252455336267181195264;
parameter    ap_ST_fsm_state124 = 101'd154742504910672534362390528;
parameter    ap_ST_fsm_state125 = 101'd309485009821345068724781056;
parameter    ap_ST_fsm_state126 = 101'd618970019642690137449562112;
parameter    ap_ST_fsm_state127 = 101'd1237940039285380274899124224;
parameter    ap_ST_fsm_state128 = 101'd2475880078570760549798248448;
parameter    ap_ST_fsm_state129 = 101'd4951760157141521099596496896;
parameter    ap_ST_fsm_state130 = 101'd9903520314283042199192993792;
parameter    ap_ST_fsm_state131 = 101'd19807040628566084398385987584;
parameter    ap_ST_fsm_state132 = 101'd39614081257132168796771975168;
parameter    ap_ST_fsm_state133 = 101'd79228162514264337593543950336;
parameter    ap_ST_fsm_state134 = 101'd158456325028528675187087900672;
parameter    ap_ST_fsm_state135 = 101'd316912650057057350374175801344;
parameter    ap_ST_fsm_state136 = 101'd633825300114114700748351602688;
parameter    ap_ST_fsm_state137 = 101'd1267650600228229401496703205376;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] dense_input_input_array_address0;
output   dense_input_input_array_ce0;
input  [31:0] dense_input_input_array_q0;
input  [63:0] dense_input_input_ndim;
input  [63:0] dense_input_input_numel;
output  [2:0] dense_input_input_shape_address0;
output   dense_input_input_shape_ce0;
input  [63:0] dense_input_input_shape_q0;
output  [11:0] activation_3_output_array_address0;
output   activation_3_output_array_ce0;
output   activation_3_output_array_we0;
output  [31:0] activation_3_output_array_d0;
output  [63:0] activation_3_output_ndim;
output   activation_3_output_ndim_ap_vld;
output  [63:0] activation_3_output_numel;
output   activation_3_output_numel_ap_vld;
output  [2:0] activation_3_output_shape_address0;
output   activation_3_output_shape_ce0;
output   activation_3_output_shape_we0;
output  [63:0] activation_3_output_shape_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg activation_3_output_array_ce0;
reg activation_3_output_array_we0;
reg activation_3_output_ndim_ap_vld;
reg activation_3_output_numel_ap_vld;
reg activation_3_output_shape_ce0;
reg activation_3_output_shape_we0;

(* fsm_encoding = "none" *) reg   [100:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] dense_output_ndim;
reg   [63:0] dense_output_numel;
reg   [11:0] dense_output_array_address0;
reg    dense_output_array_ce0;
reg    dense_output_array_we0;
reg   [31:0] dense_output_array_d0;
wire   [31:0] dense_output_array_q0;
wire   [18:0] face_classifier_c_de_address0;
reg    face_classifier_c_de_ce0;
wire   [31:0] face_classifier_c_de_q0;
reg   [18:0] dense_kernel_array_address0;
reg    dense_kernel_array_ce0;
reg    dense_kernel_array_we0;
reg   [31:0] dense_kernel_array_d0;
wire   [31:0] dense_kernel_array_q0;
wire   [6:0] dense_bias_array_address0;
reg    dense_bias_array_ce0;
wire   [31:0] dense_bias_array_q0;
reg   [11:0] dense_bias_array_0_address0;
reg    dense_bias_array_0_ce0;
reg    dense_bias_array_0_we0;
wire   [31:0] dense_bias_array_0_q0;
reg   [63:0] batch_normalization_1;
reg   [63:0] batch_normalization_3;
reg   [11:0] batch_normalization_23_address0;
reg    batch_normalization_23_ce0;
reg    batch_normalization_23_we0;
reg   [31:0] batch_normalization_23_d0;
wire   [31:0] batch_normalization_23_q0;
reg   [11:0] batch_normalization_23_address1;
reg    batch_normalization_23_ce1;
reg    batch_normalization_23_we1;
wire   [31:0] batch_normalization_23_q1;
wire   [6:0] batch_normalization_11_address0;
reg    batch_normalization_11_ce0;
wire   [31:0] batch_normalization_11_q0;
reg   [11:0] batch_normalization_22_address0;
reg    batch_normalization_22_ce0;
reg    batch_normalization_22_we0;
wire   [31:0] batch_normalization_22_q0;
wire   [6:0] batch_normalization_s_address0;
reg    batch_normalization_s_ce0;
wire   [31:0] batch_normalization_s_q0;
reg   [11:0] batch_normalization_18_address0;
reg    batch_normalization_18_ce0;
reg    batch_normalization_18_we0;
wire   [31:0] batch_normalization_18_q0;
wire   [6:0] batch_normalization_14_address0;
reg    batch_normalization_14_ce0;
wire   [31:0] batch_normalization_14_q0;
reg   [11:0] batch_normalization_21_address0;
reg    batch_normalization_21_ce0;
reg    batch_normalization_21_we0;
wire   [31:0] batch_normalization_21_q0;
wire   [6:0] batch_normalization_17_address0;
reg    batch_normalization_17_ce0;
wire   [31:0] batch_normalization_17_q0;
reg   [11:0] batch_normalization_19_address0;
reg    batch_normalization_19_ce0;
reg    batch_normalization_19_we0;
wire   [31:0] batch_normalization_19_q0;
reg   [63:0] dense_1_output_ndim;
reg   [63:0] dense_1_output_numel;
reg   [11:0] dense_1_output_array_address0;
reg    dense_1_output_array_ce0;
reg    dense_1_output_array_we0;
reg   [31:0] dense_1_output_array_d0;
wire   [31:0] dense_1_output_array_q0;
reg   [63:0] dense_1_kernel_ndim;
reg   [63:0] dense_1_kernel_numel;
wire   [9:0] dense_1_kernel_array_address0;
reg    dense_1_kernel_array_ce0;
wire   [31:0] dense_1_kernel_array_q0;
reg   [18:0] dense_1_kernel_array_1_address0;
reg    dense_1_kernel_array_1_ce0;
reg    dense_1_kernel_array_1_we0;
wire   [31:0] dense_1_kernel_array_1_q0;
reg   [63:0] dense_1_bias_numel;
wire   [3:0] dense_1_bias_array8_address0;
reg    dense_1_bias_array8_ce0;
wire   [31:0] dense_1_bias_array8_q0;
reg   [11:0] dense_1_bias_array_address0;
reg    dense_1_bias_array_ce0;
reg    dense_1_bias_array_we0;
wire   [31:0] dense_1_bias_array_q0;
reg   [0:0] batch_normalization_9;
reg   [11:0] batch_normalization_8_address0;
reg    batch_normalization_8_ce0;
reg    batch_normalization_8_we0;
reg   [31:0] batch_normalization_8_d0;
wire   [31:0] batch_normalization_8_q0;
reg   [11:0] batch_normalization_8_address1;
reg    batch_normalization_8_ce1;
reg    batch_normalization_8_we1;
wire   [31:0] batch_normalization_8_q1;
wire   [3:0] batch_normalization_29_address0;
reg    batch_normalization_29_ce0;
wire   [31:0] batch_normalization_29_q0;
reg   [11:0] batch_normalization_7_address0;
reg    batch_normalization_7_ce0;
reg    batch_normalization_7_we0;
wire   [31:0] batch_normalization_7_q0;
wire   [3:0] batch_normalization_20_address0;
reg    batch_normalization_20_ce0;
wire   [31:0] batch_normalization_20_q0;
reg   [11:0] batch_normalization_15_address0;
reg    batch_normalization_15_ce0;
reg    batch_normalization_15_we0;
wire   [31:0] batch_normalization_15_q0;
wire   [3:0] batch_normalization_32_address0;
reg    batch_normalization_32_ce0;
wire   [31:0] batch_normalization_32_q0;
reg   [11:0] batch_normalization_6_address0;
reg    batch_normalization_6_ce0;
reg    batch_normalization_6_we0;
wire   [31:0] batch_normalization_6_q0;
wire   [3:0] batch_normalization_35_address0;
reg    batch_normalization_35_ce0;
wire   [31:0] batch_normalization_35_q0;
reg   [11:0] batch_normalization_5_address0;
reg    batch_normalization_5_ce0;
reg    batch_normalization_5_we0;
wire   [31:0] batch_normalization_5_q0;
reg   [0:0] dense_2_output_ndim;
reg   [63:0] dense_2_output_numel;
reg   [11:0] dense_2_output_array_address0;
reg    dense_2_output_array_ce0;
reg    dense_2_output_array_we0;
reg   [31:0] dense_2_output_array_d0;
wire   [31:0] dense_2_output_array_q0;
reg   [63:0] dense_2_kernel_ndim;
reg   [6:0] dense_2_kernel_numel;
wire   [5:0] dense_2_kernel_array_address0;
reg    dense_2_kernel_array_ce0;
wire   [31:0] dense_2_kernel_array_q0;
reg   [11:0] dense_2_kernel_array_2_address0;
reg    dense_2_kernel_array_2_ce0;
reg    dense_2_kernel_array_2_we0;
wire   [31:0] dense_2_kernel_array_2_q0;
reg   [63:0] dense_2_bias_numel;
wire   [2:0] dense_2_bias_array13_address0;
reg    dense_2_bias_array13_ce0;
wire   [31:0] dense_2_bias_array13_q0;
reg   [11:0] dense_2_bias_array_address0;
reg    dense_2_bias_array_ce0;
reg    dense_2_bias_array_we0;
wire   [31:0] dense_2_bias_array_q0;
reg   [2:0] dense_kernel_shape_address0;
reg    dense_kernel_shape_ce0;
reg    dense_kernel_shape_we0;
reg   [63:0] dense_kernel_shape_d0;
wire   [63:0] dense_kernel_shape_q0;
reg   [2:0] dense_kernel_shape_address1;
reg    dense_kernel_shape_ce1;
reg    dense_kernel_shape_we1;
wire   [63:0] dense_kernel_shape_q1;
reg   [2:0] dense_output_shape_address0;
reg    dense_output_shape_ce0;
reg    dense_output_shape_we0;
reg   [63:0] dense_output_shape_d0;
wire   [63:0] dense_output_shape_q0;
reg   [2:0] dense_output_shape_address1;
reg    dense_output_shape_ce1;
reg    dense_output_shape_we1;
reg   [2:0] batch_normalization_4_address0;
reg    batch_normalization_4_ce0;
reg    batch_normalization_4_we0;
reg   [8:0] batch_normalization_4_d0;
reg   [2:0] batch_normalization_4_address1;
reg    batch_normalization_4_ce1;
reg    batch_normalization_4_we1;
wire   [8:0] batch_normalization_4_q1;
reg   [2:0] activation_1_output_s_address0;
reg    activation_1_output_s_ce0;
reg    activation_1_output_s_we0;
wire   [8:0] activation_1_output_s_q0;
reg   [11:0] activation_1_output_1_address0;
reg    activation_1_output_1_ce0;
reg    activation_1_output_1_we0;
wire   [31:0] activation_1_output_1_q0;
reg   [2:0] dropout_2_output_sha_address0;
reg    dropout_2_output_sha_ce0;
reg    dropout_2_output_sha_we0;
wire   [63:0] dropout_2_output_sha_d0;
wire   [63:0] dropout_2_output_sha_q0;
reg   [11:0] dropout_2_output_arr_address0;
reg    dropout_2_output_arr_ce0;
reg    dropout_2_output_arr_we0;
wire   [31:0] dropout_2_output_arr_q0;
reg   [2:0] dense_1_kernel_shape_address0;
reg    dense_1_kernel_shape_ce0;
reg    dense_1_kernel_shape_we0;
reg   [63:0] dense_1_kernel_shape_d0;
wire   [63:0] dense_1_kernel_shape_q0;
reg   [2:0] dense_1_kernel_shape_address1;
reg    dense_1_kernel_shape_ce1;
reg    dense_1_kernel_shape_we1;
wire   [63:0] dense_1_kernel_shape_q1;
reg   [2:0] dense_1_output_shape_address0;
reg    dense_1_output_shape_ce0;
reg    dense_1_output_shape_we0;
reg   [63:0] dense_1_output_shape_d0;
wire   [63:0] dense_1_output_shape_q0;
reg   [2:0] dense_1_output_shape_address1;
reg    dense_1_output_shape_ce1;
reg    dense_1_output_shape_we1;
reg   [2:0] batch_normalization_12_address0;
reg    batch_normalization_12_ce0;
reg    batch_normalization_12_we0;
reg   [5:0] batch_normalization_12_d0;
reg   [2:0] batch_normalization_12_address1;
reg    batch_normalization_12_ce1;
reg    batch_normalization_12_we1;
wire   [5:0] batch_normalization_12_q1;
reg   [2:0] activation_2_output_s_address0;
reg    activation_2_output_s_ce0;
reg    activation_2_output_s_we0;
wire   [5:0] activation_2_output_s_q0;
reg   [11:0] activation_2_output_1_address0;
reg    activation_2_output_1_ce0;
reg    activation_2_output_1_we0;
wire   [31:0] activation_2_output_1_q0;
reg   [63:0] dropout_3_output_ndi;
reg   [4:0] dropout_3_output_num;
reg   [2:0] dropout_3_output_sha_address0;
reg    dropout_3_output_sha_ce0;
reg    dropout_3_output_sha_we0;
wire   [63:0] dropout_3_output_sha_d0;
wire   [63:0] dropout_3_output_sha_q0;
reg   [11:0] dropout_3_output_arr_address0;
reg    dropout_3_output_arr_ce0;
reg    dropout_3_output_arr_we0;
wire   [31:0] dropout_3_output_arr_q0;
reg   [2:0] dense_2_kernel_shape_address0;
reg    dense_2_kernel_shape_ce0;
reg    dense_2_kernel_shape_we0;
reg   [63:0] dense_2_kernel_shape_d0;
wire   [63:0] dense_2_kernel_shape_q0;
reg   [2:0] dense_2_kernel_shape_address1;
reg    dense_2_kernel_shape_ce1;
reg    dense_2_kernel_shape_we1;
wire   [63:0] dense_2_kernel_shape_q1;
reg   [2:0] dense_2_output_shape_address0;
reg    dense_2_output_shape_ce0;
reg    dense_2_output_shape_we0;
reg   [4:0] dense_2_output_shape_d0;
reg   [2:0] dense_2_output_shape_address1;
reg    dense_2_output_shape_ce1;
reg    dense_2_output_shape_we1;
wire   [4:0] dense_2_output_shape_q1;
reg   [18:0] j_1_reg_1432;
reg   [6:0] j_2_reg_1443;
reg   [6:0] j_4_reg_1476;
reg   [6:0] j_5_reg_1487;
reg   [6:0] j_6_reg_1498;
reg   [6:0] j_7_reg_1509;
reg   [9:0] j_9_reg_1531;
reg   [3:0] j_s_reg_1542;
reg   [3:0] j_11_reg_1575;
reg   [3:0] j_12_reg_1586;
reg   [3:0] j_13_reg_1597;
reg   [3:0] j_14_reg_1608;
reg   [5:0] j_16_reg_1630;
reg   [2:0] j_17_reg_1641;
reg   [11:0] i_reg_1663;
reg   [2:0] j_18_reg_1674;
reg   [11:0] j_19_reg_1685;
reg   [2:0] j_20_reg_1696;
reg   [11:0] j_21_reg_1707;
reg   [3:0] i_1_reg_1718;
reg   [2:0] j_22_reg_1729;
reg   [3:0] j_23_reg_1740;
reg   [2:0] j_24_reg_1751;
reg   [3:0] j_25_reg_1762;
reg   [63:0] reg_2001;
wire    ap_CS_fsm_state98;
wire    ap_CS_fsm_state100;
wire    ap_CS_fsm_state3;
wire   [6:0] j_28_fu_2025_p2;
wire    ap_CS_fsm_state4;
wire   [18:0] indvarinc_fu_2036_p2;
reg   [18:0] indvarinc_reg_2935;
wire    ap_CS_fsm_state6;
wire   [63:0] tmp_s_fu_2042_p1;
reg   [63:0] tmp_s_reg_2940;
wire   [0:0] tmp_55_fu_2047_p2;
reg   [0:0] tmp_55_reg_2950;
wire   [0:0] exitcond23_fu_2053_p2;
reg   [0:0] exitcond23_reg_2954;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state10_pp1_stage0_iter0;
wire    ap_block_state11_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [18:0] j_29_fu_2059_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] tmp_56_fu_2065_p1;
reg   [63:0] tmp_56_reg_2963;
wire   [0:0] exitcond22_fu_2070_p2;
reg   [0:0] exitcond22_reg_2973;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state13_pp2_stage0_iter0;
wire    ap_block_state14_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [6:0] j_30_fu_2076_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [63:0] tmp_57_fu_2082_p1;
reg   [63:0] tmp_57_reg_2982;
wire   [18:0] indvarinc1_fu_2087_p2;
wire    ap_CS_fsm_state16;
wire   [6:0] j_31_fu_2122_p2;
wire    ap_CS_fsm_state19;
wire   [0:0] exitcond20_fu_2133_p2;
reg   [0:0] exitcond20_reg_3008;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_state21_pp4_stage0_iter0;
wire    ap_block_state22_pp4_stage0_iter1;
wire    ap_block_pp4_stage0_11001;
wire   [6:0] j_32_fu_2139_p2;
reg    ap_enable_reg_pp4_iter0;
wire   [63:0] tmp_61_fu_2145_p1;
reg   [63:0] tmp_61_reg_3017;
wire   [0:0] exitcond19_fu_2150_p2;
reg   [0:0] exitcond19_reg_3027;
wire    ap_CS_fsm_pp5_stage0;
wire    ap_block_state24_pp5_stage0_iter0;
wire    ap_block_state25_pp5_stage0_iter1;
wire    ap_block_pp5_stage0_11001;
wire   [6:0] j_33_fu_2156_p2;
reg    ap_enable_reg_pp5_iter0;
wire   [63:0] tmp_62_fu_2162_p1;
reg   [63:0] tmp_62_reg_3036;
wire   [0:0] exitcond18_fu_2167_p2;
reg   [0:0] exitcond18_reg_3046;
wire    ap_CS_fsm_pp6_stage0;
wire    ap_block_state27_pp6_stage0_iter0;
wire    ap_block_state28_pp6_stage0_iter1;
wire    ap_block_pp6_stage0_11001;
wire   [6:0] j_34_fu_2173_p2;
reg    ap_enable_reg_pp6_iter0;
wire   [63:0] tmp_63_fu_2179_p1;
reg   [63:0] tmp_63_reg_3055;
wire   [0:0] exitcond17_fu_2184_p2;
reg   [0:0] exitcond17_reg_3065;
wire    ap_CS_fsm_pp7_stage0;
wire    ap_block_state30_pp7_stage0_iter0;
wire    ap_block_state31_pp7_stage0_iter1;
wire    ap_block_pp7_stage0_11001;
wire   [6:0] j_35_fu_2190_p2;
reg    ap_enable_reg_pp7_iter0;
wire   [63:0] tmp_64_fu_2196_p1;
reg   [63:0] tmp_64_reg_3074;
wire   [3:0] j_36_fu_2219_p2;
wire    ap_CS_fsm_state35;
wire   [0:0] exitcond15_fu_2242_p2;
reg   [0:0] exitcond15_reg_3092;
wire    ap_CS_fsm_pp9_stage0;
wire    ap_block_state39_pp9_stage0_iter0;
wire    ap_block_state40_pp9_stage0_iter1;
wire    ap_block_pp9_stage0_11001;
wire   [9:0] j_37_fu_2248_p2;
reg    ap_enable_reg_pp9_iter0;
wire   [63:0] tmp_66_fu_2254_p1;
reg   [63:0] tmp_66_reg_3101;
wire   [0:0] exitcond14_fu_2265_p2;
reg   [0:0] exitcond14_reg_3111;
wire    ap_CS_fsm_pp10_stage0;
wire    ap_block_state42_pp10_stage0_iter0;
wire    ap_block_state43_pp10_stage0_iter1;
wire    ap_block_pp10_stage0_11001;
wire   [3:0] j_38_fu_2271_p2;
reg    ap_enable_reg_pp10_iter0;
wire   [63:0] tmp_67_fu_2277_p1;
reg   [63:0] tmp_67_reg_3120;
wire   [10:0] indvarinc2_fu_2282_p2;
wire    ap_CS_fsm_state45;
wire   [3:0] j_39_fu_2311_p2;
wire    ap_CS_fsm_state48;
wire   [0:0] exitcond12_fu_2322_p2;
reg   [0:0] exitcond12_reg_3146;
wire    ap_CS_fsm_pp12_stage0;
wire    ap_block_state50_pp12_stage0_iter0;
wire    ap_block_state51_pp12_stage0_iter1;
wire    ap_block_pp12_stage0_11001;
wire   [3:0] j_40_fu_2328_p2;
reg    ap_enable_reg_pp12_iter0;
wire   [63:0] tmp_71_fu_2334_p1;
reg   [63:0] tmp_71_reg_3155;
wire   [0:0] exitcond11_fu_2339_p2;
reg   [0:0] exitcond11_reg_3165;
wire    ap_CS_fsm_pp13_stage0;
wire    ap_block_state53_pp13_stage0_iter0;
wire    ap_block_state54_pp13_stage0_iter1;
wire    ap_block_pp13_stage0_11001;
wire   [3:0] j_41_fu_2345_p2;
reg    ap_enable_reg_pp13_iter0;
wire   [63:0] tmp_72_fu_2351_p1;
reg   [63:0] tmp_72_reg_3174;
wire   [0:0] exitcond10_fu_2356_p2;
reg   [0:0] exitcond10_reg_3184;
wire    ap_CS_fsm_pp14_stage0;
wire    ap_block_state56_pp14_stage0_iter0;
wire    ap_block_state57_pp14_stage0_iter1;
wire    ap_block_pp14_stage0_11001;
wire   [3:0] j_42_fu_2362_p2;
reg    ap_enable_reg_pp14_iter0;
wire   [63:0] tmp_73_fu_2368_p1;
reg   [63:0] tmp_73_reg_3193;
wire   [0:0] exitcond9_fu_2373_p2;
reg   [0:0] exitcond9_reg_3203;
wire    ap_CS_fsm_pp15_stage0;
wire    ap_block_state59_pp15_stage0_iter0;
wire    ap_block_state60_pp15_stage0_iter1;
wire    ap_block_pp15_stage0_11001;
wire   [3:0] j_43_fu_2379_p2;
reg    ap_enable_reg_pp15_iter0;
wire   [63:0] tmp_74_fu_2385_p1;
reg   [63:0] tmp_74_reg_3212;
wire   [2:0] j_44_fu_2408_p2;
wire    ap_CS_fsm_state64;
wire   [0:0] exitcond7_fu_2431_p2;
reg   [0:0] exitcond7_reg_3230;
wire    ap_CS_fsm_pp17_stage0;
wire    ap_block_state68_pp17_stage0_iter0;
wire    ap_block_state69_pp17_stage0_iter1;
wire    ap_block_pp17_stage0_11001;
wire   [5:0] j_45_fu_2437_p2;
reg    ap_enable_reg_pp17_iter0;
wire   [63:0] tmp_76_fu_2443_p1;
reg   [63:0] tmp_76_reg_3239;
wire   [0:0] exitcond6_fu_2454_p2;
reg   [0:0] exitcond6_reg_3249;
wire    ap_CS_fsm_pp18_stage0;
wire    ap_block_state71_pp18_stage0_iter0;
wire    ap_block_state72_pp18_stage0_iter1;
wire    ap_block_pp18_stage0_11001;
wire   [2:0] j_46_fu_2460_p2;
reg    ap_enable_reg_pp18_iter0;
wire   [63:0] tmp_77_fu_2466_p1;
reg   [63:0] tmp_77_reg_3258;
wire   [6:0] indvarinc3_fu_2471_p2;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state76;
reg   [63:0] batch_normalization_53_reg_3286;
wire    ap_CS_fsm_state77;
wire    grp_k2c_batch_norm_fu_1936_ap_idle;
wire    grp_k2c_batch_norm_fu_1936_ap_ready;
wire    grp_k2c_batch_norm_fu_1936_ap_done;
wire   [0:0] exitcond27_fu_2507_p2;
reg   [0:0] exitcond27_reg_3294;
wire    ap_CS_fsm_pp19_stage0;
wire    ap_block_state78_pp19_stage0_iter0;
wire    ap_block_state79_pp19_stage0_iter1;
wire    ap_block_state80_pp19_stage0_iter2;
wire    ap_block_state81_pp19_stage0_iter3;
wire    ap_block_state82_pp19_stage0_iter4;
wire    ap_block_state83_pp19_stage0_iter5;
wire    ap_block_state84_pp19_stage0_iter6;
wire    ap_block_state85_pp19_stage0_iter7;
wire    ap_block_pp19_stage0_11001;
reg   [0:0] exitcond27_reg_3294_pp19_iter1_reg;
reg   [0:0] exitcond27_reg_3294_pp19_iter2_reg;
reg   [0:0] exitcond27_reg_3294_pp19_iter3_reg;
reg   [0:0] exitcond27_reg_3294_pp19_iter4_reg;
reg   [0:0] exitcond27_reg_3294_pp19_iter5_reg;
reg   [0:0] exitcond27_reg_3294_pp19_iter6_reg;
wire   [11:0] i_43_fu_2512_p2;
reg    ap_enable_reg_pp19_iter0;
reg   [11:0] batch_normalization_54_reg_3303;
reg   [11:0] batch_normalization_54_reg_3303_pp19_iter1_reg;
reg   [11:0] batch_normalization_54_reg_3303_pp19_iter2_reg;
reg   [11:0] batch_normalization_54_reg_3303_pp19_iter3_reg;
reg   [11:0] batch_normalization_54_reg_3303_pp19_iter4_reg;
reg   [11:0] batch_normalization_54_reg_3303_pp19_iter5_reg;
reg   [11:0] batch_normalization_54_reg_3303_pp19_iter6_reg;
reg   [63:0] batch_normalization_56_reg_3309;
wire    ap_CS_fsm_state86;
wire   [0:0] exitcond5_fu_2522_p2;
reg   [0:0] exitcond5_reg_3314;
wire    ap_CS_fsm_pp20_stage0;
wire    ap_block_state87_pp20_stage0_iter0;
wire    ap_block_state88_pp20_stage0_iter1;
wire    ap_block_pp20_stage0_11001;
wire   [2:0] j_47_fu_2528_p2;
reg    ap_enable_reg_pp20_iter0;
wire   [63:0] tmp_80_fu_2534_p1;
reg   [63:0] tmp_80_reg_3323;
wire   [63:0] tmp_81_fu_2539_p1;
reg   [63:0] tmp_81_reg_3333;
wire    ap_CS_fsm_pp21_stage0;
wire    ap_block_state90_pp21_stage0_iter0;
wire    ap_block_state91_pp21_stage0_iter1;
wire    ap_block_pp21_stage0_11001;
wire   [0:0] tmp_82_fu_2544_p2;
reg   [0:0] tmp_82_reg_3338;
wire   [11:0] j_48_fu_2549_p2;
reg    ap_enable_reg_pp21_iter0;
wire   [0:0] exitcond4_fu_2555_p2;
reg   [0:0] exitcond4_reg_3352;
wire    ap_CS_fsm_pp22_stage0;
wire    ap_block_state93_pp22_stage0_iter0;
wire    ap_block_state94_pp22_stage0_iter1;
wire    ap_block_pp22_stage0_11001;
wire   [2:0] j_49_fu_2561_p2;
reg    ap_enable_reg_pp22_iter0;
wire   [63:0] tmp_83_fu_2567_p1;
reg   [63:0] tmp_83_reg_3361;
wire   [63:0] tmp_84_fu_2577_p1;
reg   [63:0] tmp_84_reg_3371;
wire    ap_CS_fsm_pp23_stage0;
wire    ap_block_state96_pp23_stage0_iter0;
wire    ap_block_state97_pp23_stage0_iter1;
wire    ap_block_pp23_stage0_11001;
wire   [0:0] tmp_85_fu_2582_p2;
reg   [0:0] tmp_85_reg_3376;
wire   [11:0] j_50_fu_2587_p2;
reg    ap_enable_reg_pp23_iter0;
wire   [0:0] exitcond26_fu_2613_p2;
reg   [0:0] exitcond26_reg_3410;
wire    ap_CS_fsm_pp24_stage0;
wire    ap_block_state102_pp24_stage0_iter0;
wire    ap_block_state103_pp24_stage0_iter1;
wire    ap_block_state104_pp24_stage0_iter2;
wire    ap_block_state105_pp24_stage0_iter3;
wire    ap_block_state106_pp24_stage0_iter4;
wire    ap_block_state107_pp24_stage0_iter5;
wire    ap_block_state108_pp24_stage0_iter6;
wire    ap_block_state109_pp24_stage0_iter7;
wire    ap_block_pp24_stage0_11001;
reg   [0:0] exitcond26_reg_3410_pp24_iter1_reg;
reg   [0:0] exitcond26_reg_3410_pp24_iter2_reg;
reg   [0:0] exitcond26_reg_3410_pp24_iter3_reg;
reg   [0:0] exitcond26_reg_3410_pp24_iter4_reg;
reg   [0:0] exitcond26_reg_3410_pp24_iter5_reg;
reg   [0:0] exitcond26_reg_3410_pp24_iter6_reg;
wire   [3:0] i_44_fu_2619_p2;
reg    ap_enable_reg_pp24_iter0;
reg   [11:0] batch_normalization_61_reg_3419;
reg   [11:0] batch_normalization_61_reg_3419_pp24_iter1_reg;
reg   [11:0] batch_normalization_61_reg_3419_pp24_iter2_reg;
reg   [11:0] batch_normalization_61_reg_3419_pp24_iter3_reg;
reg   [11:0] batch_normalization_61_reg_3419_pp24_iter4_reg;
reg   [11:0] batch_normalization_61_reg_3419_pp24_iter5_reg;
reg   [11:0] batch_normalization_61_reg_3419_pp24_iter6_reg;
wire   [63:0] extLd2_fu_2634_p1;
reg   [63:0] extLd2_reg_3425;
wire    ap_CS_fsm_state110;
wire   [0:0] exitcond3_fu_2638_p2;
reg   [0:0] exitcond3_reg_3430;
wire    ap_CS_fsm_pp25_stage0;
wire    ap_block_state111_pp25_stage0_iter0;
wire    ap_block_state112_pp25_stage0_iter1;
wire    ap_block_pp25_stage0_11001;
wire   [2:0] j_51_fu_2644_p2;
reg    ap_enable_reg_pp25_iter0;
wire   [63:0] tmp_86_fu_2650_p1;
reg   [63:0] tmp_86_reg_3439;
wire   [0:0] exitcond25_fu_2655_p2;
reg   [0:0] exitcond25_reg_3449;
wire    ap_CS_fsm_pp26_stage0;
wire    ap_block_state114_pp26_stage0_iter0;
wire    ap_block_state115_pp26_stage0_iter1;
wire    ap_block_pp26_stage0_11001;
wire   [3:0] j_52_fu_2661_p2;
reg    ap_enable_reg_pp26_iter0;
wire   [63:0] tmp_87_fu_2667_p1;
reg   [63:0] tmp_87_reg_3458;
wire   [0:0] exitcond2_fu_2683_p2;
reg   [0:0] exitcond2_reg_3468;
wire    ap_CS_fsm_pp27_stage0;
wire    ap_block_state117_pp27_stage0_iter0;
wire    ap_block_state118_pp27_stage0_iter1;
wire    ap_block_pp27_stage0_11001;
wire   [2:0] j_53_fu_2689_p2;
reg    ap_enable_reg_pp27_iter0;
wire   [63:0] tmp_88_fu_2695_p1;
reg   [63:0] tmp_88_reg_3477;
wire   [0:0] exitcond28_fu_2705_p2;
reg   [0:0] exitcond28_reg_3487;
wire    ap_CS_fsm_pp28_stage0;
wire    ap_block_state120_pp28_stage0_iter0;
wire    ap_block_state121_pp28_stage0_iter1;
wire    ap_block_pp28_stage0_11001;
wire   [3:0] j_54_fu_2711_p2;
reg    ap_enable_reg_pp28_iter0;
wire   [63:0] tmp_89_fu_2717_p1;
reg   [63:0] tmp_89_reg_3496;
wire    ap_CS_fsm_state125;
wire    ap_CS_fsm_state126;
wire   [0:0] exitcond1_fu_2727_p2;
wire   [2:0] i_45_fu_2733_p2;
reg   [2:0] i_45_reg_3519;
wire   [31:0] xmax_1_fu_2823_p3;
wire    ap_CS_fsm_state127;
wire   [2:0] i_46_fu_2842_p2;
reg   [2:0] i_46_reg_3532;
wire    ap_CS_fsm_state128;
reg   [11:0] dense_2_output_array_7_reg_3537;
wire   [0:0] tmp_90_fu_2836_p2;
wire   [31:0] tmp_92_fu_1988_p2;
reg   [31:0] tmp_92_reg_3542;
wire    ap_CS_fsm_state129;
wire   [31:0] grp_fu_1963_p2;
wire    ap_CS_fsm_state130;
wire   [31:0] grp_fu_1976_p2;
reg   [31:0] sum_1_reg_3552;
wire    ap_CS_fsm_state131;
wire   [2:0] i_47_fu_2859_p2;
reg   [2:0] i_47_reg_3560;
wire    ap_CS_fsm_state132;
reg   [11:0] dense_2_output_array_9_reg_3565;
wire   [0:0] tmp_93_fu_2853_p2;
reg   [63:0] dense_2_output_numel_2_reg_3570;
wire   [2:0] j_55_fu_2885_p2;
reg   [2:0] j_55_reg_3578;
wire    ap_CS_fsm_state134;
wire   [63:0] tmp_95_fu_2891_p1;
reg   [63:0] tmp_95_reg_3583;
wire   [0:0] exitcond_fu_2879_p2;
wire  signed [63:0] tmp_96_fu_2901_p1;
reg  signed [63:0] tmp_96_reg_3593;
wire    ap_CS_fsm_state136;
wire   [31:0] j_56_fu_2911_p2;
reg   [31:0] j_56_reg_3601;
wire   [0:0] tmp_97_fu_2906_p2;
wire    ap_CS_fsm_state9;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state10;
reg    ap_enable_reg_pp1_iter1;
wire    ap_CS_fsm_state12;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state13;
reg    ap_enable_reg_pp2_iter1;
wire    ap_CS_fsm_state20;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state21;
reg    ap_enable_reg_pp4_iter1;
wire    ap_CS_fsm_state23;
wire    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state24;
reg    ap_enable_reg_pp5_iter1;
wire    ap_CS_fsm_state26;
wire    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state27;
reg    ap_enable_reg_pp6_iter1;
wire    ap_CS_fsm_state29;
wire    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_exit_iter0_state30;
reg    ap_enable_reg_pp7_iter1;
wire    ap_CS_fsm_state38;
wire    ap_block_pp9_stage0_subdone;
reg    ap_condition_pp9_exit_iter0_state39;
reg    ap_enable_reg_pp9_iter1;
wire    ap_CS_fsm_state41;
wire    ap_block_pp10_stage0_subdone;
reg    ap_condition_pp10_exit_iter0_state42;
reg    ap_enable_reg_pp10_iter1;
wire    ap_CS_fsm_state49;
wire    ap_block_pp12_stage0_subdone;
reg    ap_condition_pp12_exit_iter0_state50;
reg    ap_enable_reg_pp12_iter1;
wire    ap_CS_fsm_state52;
wire    ap_block_pp13_stage0_subdone;
reg    ap_condition_pp13_exit_iter0_state53;
reg    ap_enable_reg_pp13_iter1;
wire    ap_CS_fsm_state55;
wire    ap_block_pp14_stage0_subdone;
reg    ap_condition_pp14_exit_iter0_state56;
reg    ap_enable_reg_pp14_iter1;
wire    ap_CS_fsm_state58;
wire    ap_block_pp15_stage0_subdone;
reg    ap_condition_pp15_exit_iter0_state59;
reg    ap_enable_reg_pp15_iter1;
wire    ap_CS_fsm_state67;
wire    ap_block_pp17_stage0_subdone;
reg    ap_condition_pp17_exit_iter0_state68;
reg    ap_enable_reg_pp17_iter1;
wire    ap_CS_fsm_state70;
wire    ap_block_pp18_stage0_subdone;
reg    ap_condition_pp18_exit_iter0_state71;
reg    ap_enable_reg_pp18_iter1;
wire    ap_block_pp19_stage0_subdone;
reg    ap_condition_pp19_exit_iter0_state78;
reg    ap_enable_reg_pp19_iter1;
reg    ap_enable_reg_pp19_iter2;
reg    ap_enable_reg_pp19_iter3;
reg    ap_enable_reg_pp19_iter4;
reg    ap_enable_reg_pp19_iter5;
reg    ap_enable_reg_pp19_iter6;
reg    ap_enable_reg_pp19_iter7;
wire    ap_block_pp20_stage0_subdone;
reg    ap_condition_pp20_exit_iter0_state87;
reg    ap_enable_reg_pp20_iter1;
wire    ap_CS_fsm_state89;
wire    ap_block_pp21_stage0_subdone;
reg    ap_condition_pp21_exit_iter0_state90;
reg    ap_enable_reg_pp21_iter1;
wire    ap_CS_fsm_state92;
wire    ap_block_pp22_stage0_subdone;
reg    ap_condition_pp22_exit_iter0_state93;
reg    ap_enable_reg_pp22_iter1;
wire    ap_CS_fsm_state95;
wire    ap_block_pp23_stage0_subdone;
reg    ap_condition_pp23_exit_iter0_state96;
reg    ap_enable_reg_pp23_iter1;
wire    ap_CS_fsm_state101;
wire    ap_block_pp24_stage0_subdone;
reg    ap_condition_pp24_exit_iter0_state102;
reg    ap_enable_reg_pp24_iter1;
reg    ap_enable_reg_pp24_iter2;
reg    ap_enable_reg_pp24_iter3;
reg    ap_enable_reg_pp24_iter4;
reg    ap_enable_reg_pp24_iter5;
reg    ap_enable_reg_pp24_iter6;
reg    ap_enable_reg_pp24_iter7;
wire    ap_block_pp25_stage0_subdone;
reg    ap_condition_pp25_exit_iter0_state111;
reg    ap_enable_reg_pp25_iter1;
wire    ap_CS_fsm_state113;
wire    ap_block_pp26_stage0_subdone;
reg    ap_condition_pp26_exit_iter0_state114;
reg    ap_enable_reg_pp26_iter1;
wire    ap_CS_fsm_state116;
wire    ap_block_pp27_stage0_subdone;
reg    ap_condition_pp27_exit_iter0_state117;
reg    ap_enable_reg_pp27_iter1;
wire    ap_CS_fsm_state119;
wire    ap_block_pp28_stage0_subdone;
reg    ap_condition_pp28_exit_iter0_state120;
reg    ap_enable_reg_pp28_iter1;
reg   [18:0] dense_fwork_address0;
reg    dense_fwork_ce0;
reg    dense_fwork_we0;
reg   [31:0] dense_fwork_d0;
wire   [31:0] dense_fwork_q0;
reg    dense_fwork_ce1;
wire   [31:0] dense_fwork_q1;
reg   [10:0] dense_1_fwork_address0;
reg    dense_1_fwork_ce0;
reg    dense_1_fwork_we0;
reg   [31:0] dense_1_fwork_d0;
wire   [31:0] dense_1_fwork_q0;
reg    dense_1_fwork_ce1;
wire   [31:0] dense_1_fwork_q1;
reg   [6:0] dense_2_fwork_address0;
reg    dense_2_fwork_ce0;
reg    dense_2_fwork_we0;
reg   [31:0] dense_2_fwork_d0;
wire   [31:0] dense_2_fwork_q0;
reg    dense_2_fwork_ce1;
wire   [31:0] dense_2_fwork_q1;
wire    grp_k2c_dense_1_fu_1850_ap_start;
wire    grp_k2c_dense_1_fu_1850_ap_done;
wire    grp_k2c_dense_1_fu_1850_ap_idle;
wire    grp_k2c_dense_1_fu_1850_ap_ready;
wire   [11:0] grp_k2c_dense_1_fu_1850_output_array_address0;
wire    grp_k2c_dense_1_fu_1850_output_array_ce0;
wire    grp_k2c_dense_1_fu_1850_output_array_we0;
wire   [31:0] grp_k2c_dense_1_fu_1850_output_array_d0;
wire   [11:0] grp_k2c_dense_1_fu_1850_input_array_address0;
wire    grp_k2c_dense_1_fu_1850_input_array_ce0;
wire   [2:0] grp_k2c_dense_1_fu_1850_input_shape_address0;
wire    grp_k2c_dense_1_fu_1850_input_shape_ce0;
wire   [18:0] grp_k2c_dense_1_fu_1850_kernel_array_address0;
wire    grp_k2c_dense_1_fu_1850_kernel_array_ce0;
wire   [2:0] grp_k2c_dense_1_fu_1850_kernel_shape_address0;
wire    grp_k2c_dense_1_fu_1850_kernel_shape_ce0;
wire   [2:0] grp_k2c_dense_1_fu_1850_kernel_shape_address1;
wire    grp_k2c_dense_1_fu_1850_kernel_shape_ce1;
wire   [11:0] grp_k2c_dense_1_fu_1850_bias_array_address0;
wire    grp_k2c_dense_1_fu_1850_bias_array_ce0;
wire   [10:0] grp_k2c_dense_1_fu_1850_fwork_address0;
wire    grp_k2c_dense_1_fu_1850_fwork_ce0;
wire    grp_k2c_dense_1_fu_1850_fwork_we0;
wire   [31:0] grp_k2c_dense_1_fu_1850_fwork_d0;
wire   [10:0] grp_k2c_dense_1_fu_1850_fwork_address1;
wire    grp_k2c_dense_1_fu_1850_fwork_ce1;
wire    grp_k2c_dense2_fu_1873_ap_start;
wire    grp_k2c_dense2_fu_1873_ap_done;
wire    grp_k2c_dense2_fu_1873_ap_idle;
wire    grp_k2c_dense2_fu_1873_ap_ready;
wire   [6:0] grp_k2c_dense2_fu_1873_fwork_address0;
wire    grp_k2c_dense2_fu_1873_fwork_ce0;
wire    grp_k2c_dense2_fu_1873_fwork_we0;
wire   [31:0] grp_k2c_dense2_fu_1873_fwork_d0;
wire   [6:0] grp_k2c_dense2_fu_1873_fwork_address1;
wire    grp_k2c_dense2_fu_1873_fwork_ce1;
wire   [11:0] grp_k2c_dense2_fu_1873_dense_2_bias_array_address0;
wire    grp_k2c_dense2_fu_1873_dense_2_bias_array_ce0;
wire   [11:0] grp_k2c_dense2_fu_1873_dense_2_output_array_address0;
wire    grp_k2c_dense2_fu_1873_dense_2_output_array_ce0;
wire    grp_k2c_dense2_fu_1873_dense_2_output_array_we0;
wire   [31:0] grp_k2c_dense2_fu_1873_dense_2_output_array_d0;
wire   [11:0] grp_k2c_dense2_fu_1873_dropout_3_output_arr_address0;
wire    grp_k2c_dense2_fu_1873_dropout_3_output_arr_ce0;
wire   [11:0] grp_k2c_dense2_fu_1873_dense_2_kernel_array_2_address0;
wire    grp_k2c_dense2_fu_1873_dense_2_kernel_array_2_ce0;
wire   [2:0] grp_k2c_dense2_fu_1873_dropout_3_output_sha_address0;
wire    grp_k2c_dense2_fu_1873_dropout_3_output_sha_ce0;
wire   [2:0] grp_k2c_dense2_fu_1873_dense_2_kernel_shape_address0;
wire    grp_k2c_dense2_fu_1873_dense_2_kernel_shape_ce0;
wire   [2:0] grp_k2c_dense2_fu_1873_dense_2_kernel_shape_address1;
wire    grp_k2c_dense2_fu_1873_dense_2_kernel_shape_ce1;
wire    grp_k2c_dense_fu_1902_ap_start;
wire    grp_k2c_dense_fu_1902_ap_done;
wire    grp_k2c_dense_fu_1902_ap_idle;
wire    grp_k2c_dense_fu_1902_ap_ready;
wire   [11:0] grp_k2c_dense_fu_1902_output_array_address0;
wire    grp_k2c_dense_fu_1902_output_array_ce0;
wire    grp_k2c_dense_fu_1902_output_array_we0;
wire   [31:0] grp_k2c_dense_fu_1902_output_array_d0;
wire   [11:0] grp_k2c_dense_fu_1902_input_array_address0;
wire    grp_k2c_dense_fu_1902_input_array_ce0;
wire   [2:0] grp_k2c_dense_fu_1902_input_shape_address0;
wire    grp_k2c_dense_fu_1902_input_shape_ce0;
wire   [18:0] grp_k2c_dense_fu_1902_kernel_array_address0;
wire    grp_k2c_dense_fu_1902_kernel_array_ce0;
wire   [2:0] grp_k2c_dense_fu_1902_kernel_shape_address0;
wire    grp_k2c_dense_fu_1902_kernel_shape_ce0;
wire   [2:0] grp_k2c_dense_fu_1902_kernel_shape_address1;
wire    grp_k2c_dense_fu_1902_kernel_shape_ce1;
wire   [11:0] grp_k2c_dense_fu_1902_bias_array_address0;
wire    grp_k2c_dense_fu_1902_bias_array_ce0;
wire   [18:0] grp_k2c_dense_fu_1902_fwork_address0;
wire    grp_k2c_dense_fu_1902_fwork_ce0;
wire    grp_k2c_dense_fu_1902_fwork_we0;
wire   [31:0] grp_k2c_dense_fu_1902_fwork_d0;
wire   [18:0] grp_k2c_dense_fu_1902_fwork_address1;
wire    grp_k2c_dense_fu_1902_fwork_ce1;
wire    grp_generic_tanh_float_s_fu_1921_ap_start;
wire    grp_generic_tanh_float_s_fu_1921_ap_done;
wire    grp_generic_tanh_float_s_fu_1921_ap_idle;
wire    grp_generic_tanh_float_s_fu_1921_ap_ready;
reg   [31:0] grp_generic_tanh_float_s_fu_1921_t_in;
wire   [31:0] grp_generic_tanh_float_s_fu_1921_ap_return;
wire    grp_k2c_batch_norm_fu_1936_ap_start;
wire   [11:0] grp_k2c_batch_norm_fu_1936_outputs_array_address0;
wire    grp_k2c_batch_norm_fu_1936_outputs_array_ce0;
wire    grp_k2c_batch_norm_fu_1936_outputs_array_we0;
wire   [31:0] grp_k2c_batch_norm_fu_1936_outputs_array_d0;
wire   [11:0] grp_k2c_batch_norm_fu_1936_inputs_array_address0;
wire    grp_k2c_batch_norm_fu_1936_inputs_array_ce0;
reg   [31:0] grp_k2c_batch_norm_fu_1936_inputs_array_q0;
reg   [63:0] grp_k2c_batch_norm_fu_1936_inputs_ndim_read;
reg   [63:0] grp_k2c_batch_norm_fu_1936_inputs_numel_read;
wire   [2:0] grp_k2c_batch_norm_fu_1936_inputs_shape_address0;
wire    grp_k2c_batch_norm_fu_1936_inputs_shape_ce0;
reg   [63:0] grp_k2c_batch_norm_fu_1936_inputs_shape_q0;
wire   [11:0] grp_k2c_batch_norm_fu_1936_mean_array_address0;
wire    grp_k2c_batch_norm_fu_1936_mean_array_ce0;
reg   [31:0] grp_k2c_batch_norm_fu_1936_mean_array_q0;
wire   [11:0] grp_k2c_batch_norm_fu_1936_stdev_array_address0;
wire    grp_k2c_batch_norm_fu_1936_stdev_array_ce0;
reg   [31:0] grp_k2c_batch_norm_fu_1936_stdev_array_q0;
wire   [11:0] grp_k2c_batch_norm_fu_1936_gamma_array_address0;
wire    grp_k2c_batch_norm_fu_1936_gamma_array_ce0;
reg   [31:0] grp_k2c_batch_norm_fu_1936_gamma_array_q0;
wire   [11:0] grp_k2c_batch_norm_fu_1936_beta_array_address0;
wire    grp_k2c_batch_norm_fu_1936_beta_array_ce0;
reg   [31:0] grp_k2c_batch_norm_fu_1936_beta_array_q0;
reg   [6:0] j_reg_1410;
wire   [0:0] exitcond24_fu_2019_p2;
reg   [18:0] invdar_reg_1421;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state5;
reg   [18:0] invdar1_reg_1454;
wire   [0:0] tmp_59_fu_2098_p2;
wire    ap_CS_fsm_state15;
reg   [6:0] j_3_reg_1465;
wire    ap_CS_fsm_state18;
wire   [0:0] exitcond21_fu_2116_p2;
reg   [3:0] j_8_reg_1520;
wire    ap_CS_fsm_state34;
wire   [0:0] exitcond16_fu_2213_p2;
reg   [10:0] invdar2_reg_1553;
wire   [0:0] tmp_69_fu_2293_p2;
wire    ap_CS_fsm_state44;
reg   [3:0] j_10_reg_1564;
wire    ap_CS_fsm_state47;
wire   [0:0] exitcond13_fu_2305_p2;
reg   [2:0] j_15_reg_1619;
wire    ap_CS_fsm_state63;
wire   [0:0] exitcond8_fu_2402_p2;
reg   [6:0] invdar3_reg_1652;
wire   [0:0] tmp_79_fu_2482_p2;
wire    ap_CS_fsm_state73;
reg   [2:0] i_2_reg_1773;
reg   [31:0] xmax1_reg_1784;
reg   [2:0] i_3_reg_1794;
reg   [31:0] sum_reg_1805;
reg   [2:0] i_4_reg_1817;
wire    ap_CS_fsm_state133;
reg   [2:0] j_26_reg_1828;
wire    ap_CS_fsm_state135;
reg  signed [31:0] j_27_reg_1839;
wire    ap_CS_fsm_state137;
reg    grp_k2c_dense_1_fu_1850_ap_start_reg;
wire    ap_CS_fsm_state99;
reg    grp_k2c_dense2_fu_1873_ap_start_reg;
wire    ap_CS_fsm_state122;
wire    ap_CS_fsm_state123;
reg    grp_k2c_dense_fu_1902_ap_start_reg;
wire    ap_CS_fsm_state75;
reg    grp_generic_tanh_float_s_fu_1921_ap_start_reg;
wire    ap_block_pp19_stage0;
wire    ap_block_pp24_stage0;
reg    grp_k2c_batch_norm_fu_1936_ap_start_reg;
wire   [63:0] tmp_fu_2031_p1;
wire    ap_block_pp1_stage0;
wire    ap_block_pp2_stage0;
wire   [63:0] tmp_58_fu_2093_p1;
wire   [63:0] tmp_60_fu_2128_p1;
wire    ap_block_pp4_stage0;
wire    ap_block_pp5_stage0;
wire    ap_block_pp6_stage0;
wire    ap_block_pp7_stage0;
wire   [63:0] tmp_65_fu_2225_p1;
wire    ap_block_pp9_stage0;
wire    ap_block_pp10_stage0;
wire   [63:0] tmp_68_fu_2288_p1;
wire   [63:0] tmp_70_fu_2317_p1;
wire    ap_block_pp12_stage0;
wire    ap_block_pp13_stage0;
wire    ap_block_pp14_stage0;
wire    ap_block_pp15_stage0;
wire   [63:0] tmp_75_fu_2414_p1;
wire    ap_block_pp17_stage0;
wire    ap_block_pp18_stage0;
wire   [63:0] tmp_78_fu_2477_p1;
wire   [63:0] i_cast_fu_2502_p1;
wire    ap_block_pp20_stage0;
wire    ap_block_pp21_stage0;
wire    ap_block_pp22_stage0;
wire    ap_block_pp23_stage0;
wire   [63:0] i_1_cast_fu_2625_p1;
wire    ap_block_pp25_stage0;
wire    ap_block_pp26_stage0;
wire    ap_block_pp27_stage0;
wire    ap_block_pp28_stage0;
wire   [63:0] i_2_cast_fu_2722_p1;
wire   [63:0] i_3_cast_fu_2831_p1;
wire   [63:0] i_4_cast_fu_2848_p1;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state124;
wire   [31:0] tmp_94_fu_1970_p2;
wire    ap_CS_fsm_state66;
reg   [31:0] grp_fu_1963_p0;
reg   [31:0] grp_fu_1963_p1;
wire   [31:0] xmax_2_to_int_fu_2739_p1;
wire   [31:0] xmax1_to_int_fu_2757_p1;
wire   [7:0] tmp_6_fu_2743_p4;
wire   [22:0] tmp_98_fu_2753_p1;
wire   [0:0] notrhs_fu_2781_p2;
wire   [0:0] notlhs_fu_2775_p2;
wire   [7:0] tmp_8_fu_2761_p4;
wire   [22:0] tmp_99_fu_2771_p1;
wire   [0:0] notrhs1_fu_2799_p2;
wire   [0:0] notlhs1_fu_2793_p2;
wire   [0:0] tmp_10_fu_2787_p2;
wire   [0:0] tmp_11_fu_2805_p2;
wire   [0:0] tmp_12_fu_2811_p2;
wire   [0:0] tmp_13_fu_1982_p2;
wire   [0:0] tmp_14_fu_2817_p2;
reg   [1:0] grp_fu_1963_opcode;
reg   [100:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
reg    ap_idle_pp9;
wire    ap_enable_pp9;
reg    ap_idle_pp10;
wire    ap_enable_pp10;
reg    ap_idle_pp12;
wire    ap_enable_pp12;
reg    ap_idle_pp13;
wire    ap_enable_pp13;
reg    ap_idle_pp14;
wire    ap_enable_pp14;
reg    ap_idle_pp15;
wire    ap_enable_pp15;
reg    ap_idle_pp17;
wire    ap_enable_pp17;
reg    ap_idle_pp18;
wire    ap_enable_pp18;
reg    ap_idle_pp19;
wire    ap_enable_pp19;
reg    ap_idle_pp20;
wire    ap_enable_pp20;
reg    ap_idle_pp21;
wire    ap_enable_pp21;
reg    ap_idle_pp22;
wire    ap_enable_pp22;
reg    ap_idle_pp23;
wire    ap_enable_pp23;
reg    ap_idle_pp24;
wire    ap_enable_pp24;
reg    ap_idle_pp25;
wire    ap_enable_pp25;
reg    ap_idle_pp26;
wire    ap_enable_pp26;
reg    ap_idle_pp27;
wire    ap_enable_pp27;
reg    ap_idle_pp28;
wire    ap_enable_pp28;

// power-on initialization
initial begin
#0 ap_CS_fsm = 101'd1;
#0 dense_output_ndim = 64'd0;
#0 dense_output_numel = 64'd0;
#0 batch_normalization_1 = 64'd0;
#0 batch_normalization_3 = 64'd0;
#0 dense_1_output_ndim = 64'd0;
#0 dense_1_output_numel = 64'd0;
#0 dense_1_kernel_ndim = 64'd0;
#0 dense_1_kernel_numel = 64'd0;
#0 dense_1_bias_numel = 64'd0;
#0 batch_normalization_9 = 1'd0;
#0 dense_2_output_ndim = 1'd0;
#0 dense_2_output_numel = 64'd0;
#0 dense_2_kernel_ndim = 64'd0;
#0 dense_2_kernel_numel = 7'd0;
#0 dense_2_bias_numel = 64'd0;
#0 dropout_3_output_ndi = 64'd0;
#0 dropout_3_output_num = 5'd0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp9_iter0 = 1'b0;
#0 ap_enable_reg_pp10_iter0 = 1'b0;
#0 ap_enable_reg_pp12_iter0 = 1'b0;
#0 ap_enable_reg_pp13_iter0 = 1'b0;
#0 ap_enable_reg_pp14_iter0 = 1'b0;
#0 ap_enable_reg_pp15_iter0 = 1'b0;
#0 ap_enable_reg_pp17_iter0 = 1'b0;
#0 ap_enable_reg_pp18_iter0 = 1'b0;
#0 ap_enable_reg_pp19_iter0 = 1'b0;
#0 ap_enable_reg_pp20_iter0 = 1'b0;
#0 ap_enable_reg_pp21_iter0 = 1'b0;
#0 ap_enable_reg_pp22_iter0 = 1'b0;
#0 ap_enable_reg_pp23_iter0 = 1'b0;
#0 ap_enable_reg_pp24_iter0 = 1'b0;
#0 ap_enable_reg_pp25_iter0 = 1'b0;
#0 ap_enable_reg_pp26_iter0 = 1'b0;
#0 ap_enable_reg_pp27_iter0 = 1'b0;
#0 ap_enable_reg_pp28_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 ap_enable_reg_pp9_iter1 = 1'b0;
#0 ap_enable_reg_pp10_iter1 = 1'b0;
#0 ap_enable_reg_pp12_iter1 = 1'b0;
#0 ap_enable_reg_pp13_iter1 = 1'b0;
#0 ap_enable_reg_pp14_iter1 = 1'b0;
#0 ap_enable_reg_pp15_iter1 = 1'b0;
#0 ap_enable_reg_pp17_iter1 = 1'b0;
#0 ap_enable_reg_pp18_iter1 = 1'b0;
#0 ap_enable_reg_pp19_iter1 = 1'b0;
#0 ap_enable_reg_pp19_iter2 = 1'b0;
#0 ap_enable_reg_pp19_iter3 = 1'b0;
#0 ap_enable_reg_pp19_iter4 = 1'b0;
#0 ap_enable_reg_pp19_iter5 = 1'b0;
#0 ap_enable_reg_pp19_iter6 = 1'b0;
#0 ap_enable_reg_pp19_iter7 = 1'b0;
#0 ap_enable_reg_pp20_iter1 = 1'b0;
#0 ap_enable_reg_pp21_iter1 = 1'b0;
#0 ap_enable_reg_pp22_iter1 = 1'b0;
#0 ap_enable_reg_pp23_iter1 = 1'b0;
#0 ap_enable_reg_pp24_iter1 = 1'b0;
#0 ap_enable_reg_pp24_iter2 = 1'b0;
#0 ap_enable_reg_pp24_iter3 = 1'b0;
#0 ap_enable_reg_pp24_iter4 = 1'b0;
#0 ap_enable_reg_pp24_iter5 = 1'b0;
#0 ap_enable_reg_pp24_iter6 = 1'b0;
#0 ap_enable_reg_pp24_iter7 = 1'b0;
#0 ap_enable_reg_pp25_iter1 = 1'b0;
#0 ap_enable_reg_pp26_iter1 = 1'b0;
#0 ap_enable_reg_pp27_iter1 = 1'b0;
#0 ap_enable_reg_pp28_iter1 = 1'b0;
#0 grp_k2c_dense_1_fu_1850_ap_start_reg = 1'b0;
#0 grp_k2c_dense2_fu_1873_ap_start_reg = 1'b0;
#0 grp_k2c_dense_fu_1902_ap_start_reg = 1'b0;
#0 grp_generic_tanh_float_s_fu_1921_ap_start_reg = 1'b0;
#0 grp_k2c_batch_norm_fu_1936_ap_start_reg = 1'b0;
end

face_classifier_cAem #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
dense_output_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_output_array_address0),
    .ce0(dense_output_array_ce0),
    .we0(dense_output_array_we0),
    .d0(dense_output_array_d0),
    .q0(dense_output_array_q0)
);

face_classifier_cBew #(
    .DataWidth( 32 ),
    .AddressRange( 262200 ),
    .AddressWidth( 19 ))
face_classifier_c_de_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(face_classifier_c_de_address0),
    .ce0(face_classifier_c_de_ce0),
    .q0(face_classifier_c_de_q0)
);

face_classifier_cCeG #(
    .DataWidth( 32 ),
    .AddressRange( 262200 ),
    .AddressWidth( 19 ))
dense_kernel_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_kernel_array_address0),
    .ce0(dense_kernel_array_ce0),
    .we0(dense_kernel_array_we0),
    .d0(dense_kernel_array_d0),
    .q0(dense_kernel_array_q0)
);

face_classifier_cDeQ #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
dense_bias_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_bias_array_address0),
    .ce0(dense_bias_array_ce0),
    .q0(dense_bias_array_q0)
);

face_classifier_cAem #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
dense_bias_array_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_bias_array_0_address0),
    .ce0(dense_bias_array_0_ce0),
    .we0(dense_bias_array_0_we0),
    .d0(dense_bias_array_q0),
    .q0(dense_bias_array_0_q0)
);

face_classifier_cFfa #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
batch_normalization_23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_23_address0),
    .ce0(batch_normalization_23_ce0),
    .we0(batch_normalization_23_we0),
    .d0(batch_normalization_23_d0),
    .q0(batch_normalization_23_q0),
    .address1(batch_normalization_23_address1),
    .ce1(batch_normalization_23_ce1),
    .we1(batch_normalization_23_we1),
    .d1(grp_generic_tanh_float_s_fu_1921_ap_return),
    .q1(batch_normalization_23_q1)
);

face_classifier_cGfk #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
batch_normalization_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_11_address0),
    .ce0(batch_normalization_11_ce0),
    .q0(batch_normalization_11_q0)
);

face_classifier_cAem #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
batch_normalization_22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_22_address0),
    .ce0(batch_normalization_22_ce0),
    .we0(batch_normalization_22_we0),
    .d0(batch_normalization_11_q0),
    .q0(batch_normalization_22_q0)
);

face_classifier_cIfE #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
batch_normalization_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_s_address0),
    .ce0(batch_normalization_s_ce0),
    .q0(batch_normalization_s_q0)
);

face_classifier_cAem #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
batch_normalization_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_18_address0),
    .ce0(batch_normalization_18_ce0),
    .we0(batch_normalization_18_we0),
    .d0(batch_normalization_s_q0),
    .q0(batch_normalization_18_q0)
);

face_classifier_cKfY #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
batch_normalization_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_14_address0),
    .ce0(batch_normalization_14_ce0),
    .q0(batch_normalization_14_q0)
);

face_classifier_cAem #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
batch_normalization_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_21_address0),
    .ce0(batch_normalization_21_ce0),
    .we0(batch_normalization_21_we0),
    .d0(batch_normalization_14_q0),
    .q0(batch_normalization_21_q0)
);

face_classifier_cMgi #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
batch_normalization_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_17_address0),
    .ce0(batch_normalization_17_ce0),
    .q0(batch_normalization_17_q0)
);

face_classifier_cAem #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
batch_normalization_19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_19_address0),
    .ce0(batch_normalization_19_ce0),
    .we0(batch_normalization_19_we0),
    .d0(batch_normalization_17_q0),
    .q0(batch_normalization_19_q0)
);

face_classifier_cAem #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
dense_1_output_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_output_array_address0),
    .ce0(dense_1_output_array_ce0),
    .we0(dense_1_output_array_we0),
    .d0(dense_1_output_array_d0),
    .q0(dense_1_output_array_q0)
);

face_classifier_cPgM #(
    .DataWidth( 32 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
dense_1_kernel_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_kernel_array_address0),
    .ce0(dense_1_kernel_array_ce0),
    .q0(dense_1_kernel_array_q0)
);

face_classifier_cCeG #(
    .DataWidth( 32 ),
    .AddressRange( 262200 ),
    .AddressWidth( 19 ))
dense_1_kernel_array_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_kernel_array_1_address0),
    .ce0(dense_1_kernel_array_1_ce0),
    .we0(dense_1_kernel_array_1_we0),
    .d0(dense_1_kernel_array_q0),
    .q0(dense_1_kernel_array_1_q0)
);

face_classifier_cRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_1_bias_array8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_bias_array8_address0),
    .ce0(dense_1_bias_array8_ce0),
    .q0(dense_1_bias_array8_q0)
);

face_classifier_cAem #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
dense_1_bias_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_bias_array_address0),
    .ce0(dense_1_bias_array_ce0),
    .we0(dense_1_bias_array_we0),
    .d0(dense_1_bias_array8_q0),
    .q0(dense_1_bias_array_q0)
);

face_classifier_cFfa #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
batch_normalization_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_8_address0),
    .ce0(batch_normalization_8_ce0),
    .we0(batch_normalization_8_we0),
    .d0(batch_normalization_8_d0),
    .q0(batch_normalization_8_q0),
    .address1(batch_normalization_8_address1),
    .ce1(batch_normalization_8_ce1),
    .we1(batch_normalization_8_we1),
    .d1(grp_generic_tanh_float_s_fu_1921_ap_return),
    .q1(batch_normalization_8_q1)
);

face_classifier_cUhA #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
batch_normalization_29_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_29_address0),
    .ce0(batch_normalization_29_ce0),
    .q0(batch_normalization_29_q0)
);

face_classifier_cAem #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
batch_normalization_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_7_address0),
    .ce0(batch_normalization_7_ce0),
    .we0(batch_normalization_7_we0),
    .d0(batch_normalization_29_q0),
    .q0(batch_normalization_7_q0)
);

face_classifier_cWhU #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
batch_normalization_20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_20_address0),
    .ce0(batch_normalization_20_ce0),
    .q0(batch_normalization_20_q0)
);

face_classifier_cAem #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
batch_normalization_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_15_address0),
    .ce0(batch_normalization_15_ce0),
    .we0(batch_normalization_15_we0),
    .d0(batch_normalization_20_q0),
    .q0(batch_normalization_15_q0)
);

face_classifier_cYie #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
batch_normalization_32_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_32_address0),
    .ce0(batch_normalization_32_ce0),
    .q0(batch_normalization_32_q0)
);

face_classifier_cAem #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
batch_normalization_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_6_address0),
    .ce0(batch_normalization_6_ce0),
    .we0(batch_normalization_6_we0),
    .d0(batch_normalization_32_q0),
    .q0(batch_normalization_6_q0)
);

face_classifier_c0iy #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
batch_normalization_35_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_35_address0),
    .ce0(batch_normalization_35_ce0),
    .q0(batch_normalization_35_q0)
);

face_classifier_cAem #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
batch_normalization_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_5_address0),
    .ce0(batch_normalization_5_ce0),
    .we0(batch_normalization_5_we0),
    .d0(batch_normalization_35_q0),
    .q0(batch_normalization_5_q0)
);

face_classifier_cAem #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
dense_2_output_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_output_array_address0),
    .ce0(dense_2_output_array_ce0),
    .we0(dense_2_output_array_we0),
    .d0(dense_2_output_array_d0),
    .q0(dense_2_output_array_q0)
);

face_classifier_c3i2 #(
    .DataWidth( 32 ),
    .AddressRange( 60 ),
    .AddressWidth( 6 ))
dense_2_kernel_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_kernel_array_address0),
    .ce0(dense_2_kernel_array_ce0),
    .q0(dense_2_kernel_array_q0)
);

face_classifier_cAem #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
dense_2_kernel_array_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_kernel_array_2_address0),
    .ce0(dense_2_kernel_array_2_ce0),
    .we0(dense_2_kernel_array_2_we0),
    .d0(dense_2_kernel_array_q0),
    .q0(dense_2_kernel_array_2_q0)
);

face_classifier_c5jm #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
dense_2_bias_array13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_bias_array13_address0),
    .ce0(dense_2_bias_array13_ce0),
    .q0(dense_2_bias_array13_q0)
);

face_classifier_cAem #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
dense_2_bias_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_bias_array_address0),
    .ce0(dense_2_bias_array_ce0),
    .we0(dense_2_bias_array_we0),
    .d0(dense_2_bias_array13_q0),
    .q0(dense_2_bias_array_q0)
);

face_classifier_c7jG #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dense_kernel_shape_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_kernel_shape_address0),
    .ce0(dense_kernel_shape_ce0),
    .we0(dense_kernel_shape_we0),
    .d0(dense_kernel_shape_d0),
    .q0(dense_kernel_shape_q0),
    .address1(dense_kernel_shape_address1),
    .ce1(dense_kernel_shape_ce1),
    .we1(dense_kernel_shape_we1),
    .d1(64'd1),
    .q1(dense_kernel_shape_q1)
);

face_classifier_c8jQ #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dense_output_shape_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_output_shape_address0),
    .ce0(dense_output_shape_ce0),
    .we0(dense_output_shape_we0),
    .d0(dense_output_shape_d0),
    .q0(dense_output_shape_q0),
    .address1(dense_output_shape_address1),
    .ce1(dense_output_shape_ce1),
    .we1(dense_output_shape_we1),
    .d1(64'd1)
);

face_classifier_c9j0 #(
    .DataWidth( 9 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
batch_normalization_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_4_address0),
    .ce0(batch_normalization_4_ce0),
    .we0(batch_normalization_4_we0),
    .d0(batch_normalization_4_d0),
    .address1(batch_normalization_4_address1),
    .ce1(batch_normalization_4_ce1),
    .we1(batch_normalization_4_we1),
    .d1(9'd1),
    .q1(batch_normalization_4_q1)
);

face_classifier_cbak #(
    .DataWidth( 9 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
activation_1_output_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(activation_1_output_s_address0),
    .ce0(activation_1_output_s_ce0),
    .we0(activation_1_output_s_we0),
    .d0(batch_normalization_4_q1),
    .q0(activation_1_output_s_q0)
);

face_classifier_cAem #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
activation_1_output_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(activation_1_output_1_address0),
    .ce0(activation_1_output_1_ce0),
    .we0(activation_1_output_1_we0),
    .d0(batch_normalization_23_q1),
    .q0(activation_1_output_1_q0)
);

face_classifier_cbck #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dropout_2_output_sha_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dropout_2_output_sha_address0),
    .ce0(dropout_2_output_sha_ce0),
    .we0(dropout_2_output_sha_we0),
    .d0(dropout_2_output_sha_d0),
    .q0(dropout_2_output_sha_q0)
);

face_classifier_cAem #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
dropout_2_output_arr_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dropout_2_output_arr_address0),
    .ce0(dropout_2_output_arr_ce0),
    .we0(dropout_2_output_arr_we0),
    .d0(activation_1_output_1_q0),
    .q0(dropout_2_output_arr_q0)
);

face_classifier_c7jG #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dense_1_kernel_shape_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_kernel_shape_address0),
    .ce0(dense_1_kernel_shape_ce0),
    .we0(dense_1_kernel_shape_we0),
    .d0(dense_1_kernel_shape_d0),
    .q0(dense_1_kernel_shape_q0),
    .address1(dense_1_kernel_shape_address1),
    .ce1(dense_1_kernel_shape_ce1),
    .we1(dense_1_kernel_shape_we1),
    .d1(64'd1),
    .q1(dense_1_kernel_shape_q1)
);

face_classifier_c8jQ #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dense_1_output_shape_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_output_shape_address0),
    .ce0(dense_1_output_shape_ce0),
    .we0(dense_1_output_shape_we0),
    .d0(dense_1_output_shape_d0),
    .q0(dense_1_output_shape_q0),
    .address1(dense_1_output_shape_address1),
    .ce1(dense_1_output_shape_ce1),
    .we1(dense_1_output_shape_we1),
    .d1(64'd1)
);

face_classifier_cbgk #(
    .DataWidth( 6 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
batch_normalization_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(batch_normalization_12_address0),
    .ce0(batch_normalization_12_ce0),
    .we0(batch_normalization_12_we0),
    .d0(batch_normalization_12_d0),
    .address1(batch_normalization_12_address1),
    .ce1(batch_normalization_12_ce1),
    .we1(batch_normalization_12_we1),
    .d1(6'd1),
    .q1(batch_normalization_12_q1)
);

face_classifier_cbhl #(
    .DataWidth( 6 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
activation_2_output_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(activation_2_output_s_address0),
    .ce0(activation_2_output_s_ce0),
    .we0(activation_2_output_s_we0),
    .d0(batch_normalization_12_q1),
    .q0(activation_2_output_s_q0)
);

face_classifier_cAem #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
activation_2_output_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(activation_2_output_1_address0),
    .ce0(activation_2_output_1_ce0),
    .we0(activation_2_output_1_we0),
    .d0(batch_normalization_8_q1),
    .q0(activation_2_output_1_q0)
);

face_classifier_cbck #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dropout_3_output_sha_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dropout_3_output_sha_address0),
    .ce0(dropout_3_output_sha_ce0),
    .we0(dropout_3_output_sha_we0),
    .d0(dropout_3_output_sha_d0),
    .q0(dropout_3_output_sha_q0)
);

face_classifier_cAem #(
    .DataWidth( 32 ),
    .AddressRange( 2622 ),
    .AddressWidth( 12 ))
dropout_3_output_arr_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dropout_3_output_arr_address0),
    .ce0(dropout_3_output_arr_ce0),
    .we0(dropout_3_output_arr_we0),
    .d0(activation_2_output_1_q0),
    .q0(dropout_3_output_arr_q0)
);

face_classifier_c7jG #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dense_2_kernel_shape_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_kernel_shape_address0),
    .ce0(dense_2_kernel_shape_ce0),
    .we0(dense_2_kernel_shape_we0),
    .d0(dense_2_kernel_shape_d0),
    .q0(dense_2_kernel_shape_q0),
    .address1(dense_2_kernel_shape_address1),
    .ce1(dense_2_kernel_shape_ce1),
    .we1(dense_2_kernel_shape_we1),
    .d1(64'd1),
    .q1(dense_2_kernel_shape_q1)
);

face_classifier_cbml #(
    .DataWidth( 5 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
dense_2_output_shape_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_output_shape_address0),
    .ce0(dense_2_output_shape_ce0),
    .we0(dense_2_output_shape_we0),
    .d0(dense_2_output_shape_d0),
    .address1(dense_2_output_shape_address1),
    .ce1(dense_2_output_shape_ce1),
    .we1(dense_2_output_shape_we1),
    .d1(5'd1),
    .q1(dense_2_output_shape_q1)
);

face_classifier_cbnm #(
    .DataWidth( 32 ),
    .AddressRange( 264822 ),
    .AddressWidth( 19 ))
dense_fwork_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_fwork_address0),
    .ce0(dense_fwork_ce0),
    .we0(dense_fwork_we0),
    .d0(dense_fwork_d0),
    .q0(dense_fwork_q0),
    .address1(grp_k2c_dense_fu_1902_fwork_address1),
    .ce1(dense_fwork_ce1),
    .q1(dense_fwork_q1)
);

face_classifier_cbom #(
    .DataWidth( 32 ),
    .AddressRange( 1100 ),
    .AddressWidth( 11 ))
dense_1_fwork_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_fwork_address0),
    .ce0(dense_1_fwork_ce0),
    .we0(dense_1_fwork_we0),
    .d0(dense_1_fwork_d0),
    .q0(dense_1_fwork_q0),
    .address1(grp_k2c_dense_1_fu_1850_fwork_address1),
    .ce1(dense_1_fwork_ce1),
    .q1(dense_1_fwork_q1)
);

face_classifier_cbpm #(
    .DataWidth( 32 ),
    .AddressRange( 70 ),
    .AddressWidth( 7 ))
dense_2_fwork_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_fwork_address0),
    .ce0(dense_2_fwork_ce0),
    .we0(dense_2_fwork_we0),
    .d0(dense_2_fwork_d0),
    .q0(dense_2_fwork_q0),
    .address1(grp_k2c_dense2_fu_1873_fwork_address1),
    .ce1(dense_2_fwork_ce1),
    .q1(dense_2_fwork_q1)
);

k2c_dense_1 grp_k2c_dense_1_fu_1850(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_dense_1_fu_1850_ap_start),
    .ap_done(grp_k2c_dense_1_fu_1850_ap_done),
    .ap_idle(grp_k2c_dense_1_fu_1850_ap_idle),
    .ap_ready(grp_k2c_dense_1_fu_1850_ap_ready),
    .output_array_address0(grp_k2c_dense_1_fu_1850_output_array_address0),
    .output_array_ce0(grp_k2c_dense_1_fu_1850_output_array_ce0),
    .output_array_we0(grp_k2c_dense_1_fu_1850_output_array_we0),
    .output_array_d0(grp_k2c_dense_1_fu_1850_output_array_d0),
    .output_array_q0(dense_1_output_array_q0),
    .output_numel_read(reg_2001),
    .input_array_address0(grp_k2c_dense_1_fu_1850_input_array_address0),
    .input_array_ce0(grp_k2c_dense_1_fu_1850_input_array_ce0),
    .input_array_q0(dropout_2_output_arr_q0),
    .input_ndim_read(batch_normalization_56_reg_3309),
    .input_numel_read(batch_normalization_53_reg_3286),
    .input_shape_address0(grp_k2c_dense_1_fu_1850_input_shape_address0),
    .input_shape_ce0(grp_k2c_dense_1_fu_1850_input_shape_ce0),
    .input_shape_q0(dropout_2_output_sha_q0),
    .kernel_array_address0(grp_k2c_dense_1_fu_1850_kernel_array_address0),
    .kernel_array_ce0(grp_k2c_dense_1_fu_1850_kernel_array_ce0),
    .kernel_array_q0(dense_1_kernel_array_1_q0),
    .kernel_ndim_read(dense_1_kernel_ndim),
    .kernel_numel_read(dense_1_kernel_numel),
    .kernel_shape_address0(grp_k2c_dense_1_fu_1850_kernel_shape_address0),
    .kernel_shape_ce0(grp_k2c_dense_1_fu_1850_kernel_shape_ce0),
    .kernel_shape_q0(dense_1_kernel_shape_q0),
    .kernel_shape_address1(grp_k2c_dense_1_fu_1850_kernel_shape_address1),
    .kernel_shape_ce1(grp_k2c_dense_1_fu_1850_kernel_shape_ce1),
    .kernel_shape_q1(dense_1_kernel_shape_q1),
    .bias_array_address0(grp_k2c_dense_1_fu_1850_bias_array_address0),
    .bias_array_ce0(grp_k2c_dense_1_fu_1850_bias_array_ce0),
    .bias_array_q0(dense_1_bias_array_q0),
    .bias_numel_read(dense_1_bias_numel),
    .fwork_address0(grp_k2c_dense_1_fu_1850_fwork_address0),
    .fwork_ce0(grp_k2c_dense_1_fu_1850_fwork_ce0),
    .fwork_we0(grp_k2c_dense_1_fu_1850_fwork_we0),
    .fwork_d0(grp_k2c_dense_1_fu_1850_fwork_d0),
    .fwork_q0(dense_1_fwork_q0),
    .fwork_address1(grp_k2c_dense_1_fu_1850_fwork_address1),
    .fwork_ce1(grp_k2c_dense_1_fu_1850_fwork_ce1),
    .fwork_q1(dense_1_fwork_q1)
);

k2c_dense2 grp_k2c_dense2_fu_1873(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_dense2_fu_1873_ap_start),
    .ap_done(grp_k2c_dense2_fu_1873_ap_done),
    .ap_idle(grp_k2c_dense2_fu_1873_ap_idle),
    .ap_ready(grp_k2c_dense2_fu_1873_ap_ready),
    .fwork_address0(grp_k2c_dense2_fu_1873_fwork_address0),
    .fwork_ce0(grp_k2c_dense2_fu_1873_fwork_ce0),
    .fwork_we0(grp_k2c_dense2_fu_1873_fwork_we0),
    .fwork_d0(grp_k2c_dense2_fu_1873_fwork_d0),
    .fwork_q0(dense_2_fwork_q0),
    .fwork_address1(grp_k2c_dense2_fu_1873_fwork_address1),
    .fwork_ce1(grp_k2c_dense2_fu_1873_fwork_ce1),
    .fwork_q1(dense_2_fwork_q1),
    .dropout_3_output_ndi(dropout_3_output_ndi),
    .dense_2_bias_array_address0(grp_k2c_dense2_fu_1873_dense_2_bias_array_address0),
    .dense_2_bias_array_ce0(grp_k2c_dense2_fu_1873_dense_2_bias_array_ce0),
    .dense_2_bias_array_q0(dense_2_bias_array_q0),
    .dense_2_output_array_address0(grp_k2c_dense2_fu_1873_dense_2_output_array_address0),
    .dense_2_output_array_ce0(grp_k2c_dense2_fu_1873_dense_2_output_array_ce0),
    .dense_2_output_array_we0(grp_k2c_dense2_fu_1873_dense_2_output_array_we0),
    .dense_2_output_array_d0(grp_k2c_dense2_fu_1873_dense_2_output_array_d0),
    .dense_2_output_array_q0(dense_2_output_array_q0),
    .dropout_3_output_arr_address0(grp_k2c_dense2_fu_1873_dropout_3_output_arr_address0),
    .dropout_3_output_arr_ce0(grp_k2c_dense2_fu_1873_dropout_3_output_arr_ce0),
    .dropout_3_output_arr_q0(dropout_3_output_arr_q0),
    .dense_2_kernel_array_2_address0(grp_k2c_dense2_fu_1873_dense_2_kernel_array_2_address0),
    .dense_2_kernel_array_2_ce0(grp_k2c_dense2_fu_1873_dense_2_kernel_array_2_ce0),
    .dense_2_kernel_array_2_q0(dense_2_kernel_array_2_q0),
    .dense_2_kernel_ndim(dense_2_kernel_ndim),
    .dropout_3_output_num(dropout_3_output_num),
    .dropout_3_output_sha_address0(grp_k2c_dense2_fu_1873_dropout_3_output_sha_address0),
    .dropout_3_output_sha_ce0(grp_k2c_dense2_fu_1873_dropout_3_output_sha_ce0),
    .dropout_3_output_sha_q0(dropout_3_output_sha_q0),
    .dense_2_kernel_numel(dense_2_kernel_numel),
    .dense_2_kernel_shape_address0(grp_k2c_dense2_fu_1873_dense_2_kernel_shape_address0),
    .dense_2_kernel_shape_ce0(grp_k2c_dense2_fu_1873_dense_2_kernel_shape_ce0),
    .dense_2_kernel_shape_q0(dense_2_kernel_shape_q0),
    .dense_2_kernel_shape_address1(grp_k2c_dense2_fu_1873_dense_2_kernel_shape_address1),
    .dense_2_kernel_shape_ce1(grp_k2c_dense2_fu_1873_dense_2_kernel_shape_ce1),
    .dense_2_kernel_shape_q1(dense_2_kernel_shape_q1),
    .dense_2_output_numel(dense_2_output_numel),
    .dense_2_bias_numel(dense_2_bias_numel)
);

k2c_dense grp_k2c_dense_fu_1902(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_dense_fu_1902_ap_start),
    .ap_done(grp_k2c_dense_fu_1902_ap_done),
    .ap_idle(grp_k2c_dense_fu_1902_ap_idle),
    .ap_ready(grp_k2c_dense_fu_1902_ap_ready),
    .output_array_address0(grp_k2c_dense_fu_1902_output_array_address0),
    .output_array_ce0(grp_k2c_dense_fu_1902_output_array_ce0),
    .output_array_we0(grp_k2c_dense_fu_1902_output_array_we0),
    .output_array_d0(grp_k2c_dense_fu_1902_output_array_d0),
    .output_array_q0(dense_output_array_q0),
    .input_array_address0(grp_k2c_dense_fu_1902_input_array_address0),
    .input_array_ce0(grp_k2c_dense_fu_1902_input_array_ce0),
    .input_array_q0(dense_input_input_array_q0),
    .input_ndim_read(dense_input_input_ndim),
    .input_numel_read(dense_input_input_numel),
    .input_shape_address0(grp_k2c_dense_fu_1902_input_shape_address0),
    .input_shape_ce0(grp_k2c_dense_fu_1902_input_shape_ce0),
    .input_shape_q0(dense_input_input_shape_q0),
    .kernel_array_address0(grp_k2c_dense_fu_1902_kernel_array_address0),
    .kernel_array_ce0(grp_k2c_dense_fu_1902_kernel_array_ce0),
    .kernel_array_q0(dense_kernel_array_q0),
    .kernel_shape_address0(grp_k2c_dense_fu_1902_kernel_shape_address0),
    .kernel_shape_ce0(grp_k2c_dense_fu_1902_kernel_shape_ce0),
    .kernel_shape_q0(dense_kernel_shape_q0),
    .kernel_shape_address1(grp_k2c_dense_fu_1902_kernel_shape_address1),
    .kernel_shape_ce1(grp_k2c_dense_fu_1902_kernel_shape_ce1),
    .kernel_shape_q1(dense_kernel_shape_q1),
    .bias_array_address0(grp_k2c_dense_fu_1902_bias_array_address0),
    .bias_array_ce0(grp_k2c_dense_fu_1902_bias_array_ce0),
    .bias_array_q0(dense_bias_array_0_q0),
    .fwork_address0(grp_k2c_dense_fu_1902_fwork_address0),
    .fwork_ce0(grp_k2c_dense_fu_1902_fwork_ce0),
    .fwork_we0(grp_k2c_dense_fu_1902_fwork_we0),
    .fwork_d0(grp_k2c_dense_fu_1902_fwork_d0),
    .fwork_q0(dense_fwork_q0),
    .fwork_address1(grp_k2c_dense_fu_1902_fwork_address1),
    .fwork_ce1(grp_k2c_dense_fu_1902_fwork_ce1),
    .fwork_q1(dense_fwork_q1)
);

generic_tanh_float_s grp_generic_tanh_float_s_fu_1921(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_tanh_float_s_fu_1921_ap_start),
    .ap_done(grp_generic_tanh_float_s_fu_1921_ap_done),
    .ap_idle(grp_generic_tanh_float_s_fu_1921_ap_idle),
    .ap_ready(grp_generic_tanh_float_s_fu_1921_ap_ready),
    .ap_ce(1'b1),
    .t_in(grp_generic_tanh_float_s_fu_1921_t_in),
    .ap_return(grp_generic_tanh_float_s_fu_1921_ap_return)
);

k2c_batch_norm grp_k2c_batch_norm_fu_1936(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_batch_norm_fu_1936_ap_start),
    .ap_done(grp_k2c_batch_norm_fu_1936_ap_done),
    .ap_idle(grp_k2c_batch_norm_fu_1936_ap_idle),
    .ap_ready(grp_k2c_batch_norm_fu_1936_ap_ready),
    .outputs_array_address0(grp_k2c_batch_norm_fu_1936_outputs_array_address0),
    .outputs_array_ce0(grp_k2c_batch_norm_fu_1936_outputs_array_ce0),
    .outputs_array_we0(grp_k2c_batch_norm_fu_1936_outputs_array_we0),
    .outputs_array_d0(grp_k2c_batch_norm_fu_1936_outputs_array_d0),
    .inputs_array_address0(grp_k2c_batch_norm_fu_1936_inputs_array_address0),
    .inputs_array_ce0(grp_k2c_batch_norm_fu_1936_inputs_array_ce0),
    .inputs_array_q0(grp_k2c_batch_norm_fu_1936_inputs_array_q0),
    .inputs_ndim_read(grp_k2c_batch_norm_fu_1936_inputs_ndim_read),
    .inputs_numel_read(grp_k2c_batch_norm_fu_1936_inputs_numel_read),
    .inputs_shape_address0(grp_k2c_batch_norm_fu_1936_inputs_shape_address0),
    .inputs_shape_ce0(grp_k2c_batch_norm_fu_1936_inputs_shape_ce0),
    .inputs_shape_q0(grp_k2c_batch_norm_fu_1936_inputs_shape_q0),
    .mean_array_address0(grp_k2c_batch_norm_fu_1936_mean_array_address0),
    .mean_array_ce0(grp_k2c_batch_norm_fu_1936_mean_array_ce0),
    .mean_array_q0(grp_k2c_batch_norm_fu_1936_mean_array_q0),
    .stdev_array_address0(grp_k2c_batch_norm_fu_1936_stdev_array_address0),
    .stdev_array_ce0(grp_k2c_batch_norm_fu_1936_stdev_array_ce0),
    .stdev_array_q0(grp_k2c_batch_norm_fu_1936_stdev_array_q0),
    .gamma_array_address0(grp_k2c_batch_norm_fu_1936_gamma_array_address0),
    .gamma_array_ce0(grp_k2c_batch_norm_fu_1936_gamma_array_ce0),
    .gamma_array_q0(grp_k2c_batch_norm_fu_1936_gamma_array_q0),
    .beta_array_address0(grp_k2c_batch_norm_fu_1936_beta_array_address0),
    .beta_array_ce0(grp_k2c_batch_norm_fu_1936_beta_array_ce0),
    .beta_array_q0(grp_k2c_batch_norm_fu_1936_beta_array_q0)
);

face_classifier_cibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_cibs_U167(
    .din0(grp_fu_1963_p0),
    .din1(grp_fu_1963_p1),
    .opcode(grp_fu_1963_opcode),
    .dout(grp_fu_1963_p2)
);

face_classifier_ccud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_ccud_U168(
    .din0(dense_2_output_array_q0),
    .din1(sum_1_reg_3552),
    .dout(tmp_94_fu_1970_p2)
);

face_classifier_cjbC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_cjbC_U169(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd1065353216),
    .din1(sum_reg_1805),
    .ce(1'b1),
    .dout(grp_fu_1976_p2)
);

face_classifier_csc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
face_classifier_csc4_U170(
    .din0(dense_2_output_array_q0),
    .din1(xmax1_reg_1784),
    .opcode(5'd2),
    .dout(tmp_13_fu_1982_p2)
);

face_classifier_cbqm #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_cbqm_U171(
    .din0(32'd0),
    .din1(grp_fu_1963_p2),
    .dout(tmp_92_fu_1988_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp10_stage0) & (1'b1 == ap_condition_pp10_exit_iter0_state42) & (1'b0 == ap_block_pp10_stage0_subdone))) begin
            ap_enable_reg_pp10_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state41)) begin
            ap_enable_reg_pp10_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp10_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp10_exit_iter0_state42) & (1'b0 == ap_block_pp10_stage0_subdone))) begin
            ap_enable_reg_pp10_iter1 <= (1'b1 ^ ap_condition_pp10_exit_iter0_state42);
        end else if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter1 <= ap_enable_reg_pp10_iter0;
        end else if ((1'b1 == ap_CS_fsm_state41)) begin
            ap_enable_reg_pp10_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp12_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp12_stage0) & (1'b1 == ap_condition_pp12_exit_iter0_state50) & (1'b0 == ap_block_pp12_stage0_subdone))) begin
            ap_enable_reg_pp12_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state49)) begin
            ap_enable_reg_pp12_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp12_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp12_exit_iter0_state50) & (1'b0 == ap_block_pp12_stage0_subdone))) begin
            ap_enable_reg_pp12_iter1 <= (1'b1 ^ ap_condition_pp12_exit_iter0_state50);
        end else if ((1'b0 == ap_block_pp12_stage0_subdone)) begin
            ap_enable_reg_pp12_iter1 <= ap_enable_reg_pp12_iter0;
        end else if ((1'b1 == ap_CS_fsm_state49)) begin
            ap_enable_reg_pp12_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp13_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp13_stage0) & (1'b1 == ap_condition_pp13_exit_iter0_state53) & (1'b0 == ap_block_pp13_stage0_subdone))) begin
            ap_enable_reg_pp13_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state52)) begin
            ap_enable_reg_pp13_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp13_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp13_exit_iter0_state53) & (1'b0 == ap_block_pp13_stage0_subdone))) begin
            ap_enable_reg_pp13_iter1 <= (1'b1 ^ ap_condition_pp13_exit_iter0_state53);
        end else if ((1'b0 == ap_block_pp13_stage0_subdone)) begin
            ap_enable_reg_pp13_iter1 <= ap_enable_reg_pp13_iter0;
        end else if ((1'b1 == ap_CS_fsm_state52)) begin
            ap_enable_reg_pp13_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp14_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp14_exit_iter0_state56) & (1'b1 == ap_CS_fsm_pp14_stage0) & (1'b0 == ap_block_pp14_stage0_subdone))) begin
            ap_enable_reg_pp14_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state55)) begin
            ap_enable_reg_pp14_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp14_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp14_exit_iter0_state56) & (1'b0 == ap_block_pp14_stage0_subdone))) begin
            ap_enable_reg_pp14_iter1 <= (1'b1 ^ ap_condition_pp14_exit_iter0_state56);
        end else if ((1'b0 == ap_block_pp14_stage0_subdone)) begin
            ap_enable_reg_pp14_iter1 <= ap_enable_reg_pp14_iter0;
        end else if ((1'b1 == ap_CS_fsm_state55)) begin
            ap_enable_reg_pp14_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp15_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp15_exit_iter0_state59) & (1'b1 == ap_CS_fsm_pp15_stage0) & (1'b0 == ap_block_pp15_stage0_subdone))) begin
            ap_enable_reg_pp15_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state58)) begin
            ap_enable_reg_pp15_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp15_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp15_exit_iter0_state59) & (1'b0 == ap_block_pp15_stage0_subdone))) begin
            ap_enable_reg_pp15_iter1 <= (1'b1 ^ ap_condition_pp15_exit_iter0_state59);
        end else if ((1'b0 == ap_block_pp15_stage0_subdone)) begin
            ap_enable_reg_pp15_iter1 <= ap_enable_reg_pp15_iter0;
        end else if ((1'b1 == ap_CS_fsm_state58)) begin
            ap_enable_reg_pp15_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp17_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp17_exit_iter0_state68) & (1'b1 == ap_CS_fsm_pp17_stage0) & (1'b0 == ap_block_pp17_stage0_subdone))) begin
            ap_enable_reg_pp17_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state67)) begin
            ap_enable_reg_pp17_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp17_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp17_exit_iter0_state68) & (1'b0 == ap_block_pp17_stage0_subdone))) begin
            ap_enable_reg_pp17_iter1 <= (1'b1 ^ ap_condition_pp17_exit_iter0_state68);
        end else if ((1'b0 == ap_block_pp17_stage0_subdone)) begin
            ap_enable_reg_pp17_iter1 <= ap_enable_reg_pp17_iter0;
        end else if ((1'b1 == ap_CS_fsm_state67)) begin
            ap_enable_reg_pp17_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp18_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp18_exit_iter0_state71) & (1'b1 == ap_CS_fsm_pp18_stage0) & (1'b0 == ap_block_pp18_stage0_subdone))) begin
            ap_enable_reg_pp18_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state70)) begin
            ap_enable_reg_pp18_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp18_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp18_exit_iter0_state71) & (1'b0 == ap_block_pp18_stage0_subdone))) begin
            ap_enable_reg_pp18_iter1 <= (1'b1 ^ ap_condition_pp18_exit_iter0_state71);
        end else if ((1'b0 == ap_block_pp18_stage0_subdone)) begin
            ap_enable_reg_pp18_iter1 <= ap_enable_reg_pp18_iter0;
        end else if ((1'b1 == ap_CS_fsm_state70)) begin
            ap_enable_reg_pp18_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp19_exit_iter0_state78) & (1'b1 == ap_CS_fsm_pp19_stage0) & (1'b0 == ap_block_pp19_stage0_subdone))) begin
            ap_enable_reg_pp19_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state77) & (grp_k2c_batch_norm_fu_1936_ap_done == 1'b1))) begin
            ap_enable_reg_pp19_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp19_exit_iter0_state78)) begin
                ap_enable_reg_pp19_iter1 <= (1'b1 ^ ap_condition_pp19_exit_iter0_state78);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp19_iter1 <= ap_enable_reg_pp19_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter2 <= ap_enable_reg_pp19_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter3 <= ap_enable_reg_pp19_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter4 <= ap_enable_reg_pp19_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter5 <= ap_enable_reg_pp19_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter6 <= ap_enable_reg_pp19_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp19_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp19_stage0_subdone)) begin
            ap_enable_reg_pp19_iter7 <= ap_enable_reg_pp19_iter6;
        end else if (((1'b1 == ap_CS_fsm_state77) & (grp_k2c_batch_norm_fu_1936_ap_done == 1'b1))) begin
            ap_enable_reg_pp19_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state10) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state10) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state10);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp20_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp20_exit_iter0_state87) & (1'b1 == ap_CS_fsm_pp20_stage0) & (1'b0 == ap_block_pp20_stage0_subdone))) begin
            ap_enable_reg_pp20_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state86)) begin
            ap_enable_reg_pp20_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp20_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp20_exit_iter0_state87) & (1'b0 == ap_block_pp20_stage0_subdone))) begin
            ap_enable_reg_pp20_iter1 <= (1'b1 ^ ap_condition_pp20_exit_iter0_state87);
        end else if ((1'b0 == ap_block_pp20_stage0_subdone)) begin
            ap_enable_reg_pp20_iter1 <= ap_enable_reg_pp20_iter0;
        end else if ((1'b1 == ap_CS_fsm_state86)) begin
            ap_enable_reg_pp20_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp21_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp21_exit_iter0_state90) & (1'b1 == ap_CS_fsm_pp21_stage0) & (1'b0 == ap_block_pp21_stage0_subdone))) begin
            ap_enable_reg_pp21_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state89)) begin
            ap_enable_reg_pp21_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp21_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp21_exit_iter0_state90) & (1'b0 == ap_block_pp21_stage0_subdone))) begin
            ap_enable_reg_pp21_iter1 <= (1'b1 ^ ap_condition_pp21_exit_iter0_state90);
        end else if ((1'b0 == ap_block_pp21_stage0_subdone)) begin
            ap_enable_reg_pp21_iter1 <= ap_enable_reg_pp21_iter0;
        end else if ((1'b1 == ap_CS_fsm_state89)) begin
            ap_enable_reg_pp21_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp22_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp22_exit_iter0_state93) & (1'b1 == ap_CS_fsm_pp22_stage0) & (1'b0 == ap_block_pp22_stage0_subdone))) begin
            ap_enable_reg_pp22_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state92)) begin
            ap_enable_reg_pp22_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp22_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp22_exit_iter0_state93) & (1'b0 == ap_block_pp22_stage0_subdone))) begin
            ap_enable_reg_pp22_iter1 <= (1'b1 ^ ap_condition_pp22_exit_iter0_state93);
        end else if ((1'b0 == ap_block_pp22_stage0_subdone)) begin
            ap_enable_reg_pp22_iter1 <= ap_enable_reg_pp22_iter0;
        end else if ((1'b1 == ap_CS_fsm_state92)) begin
            ap_enable_reg_pp22_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp23_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp23_exit_iter0_state96) & (1'b1 == ap_CS_fsm_pp23_stage0) & (1'b0 == ap_block_pp23_stage0_subdone))) begin
            ap_enable_reg_pp23_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state95)) begin
            ap_enable_reg_pp23_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp23_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp23_exit_iter0_state96) & (1'b0 == ap_block_pp23_stage0_subdone))) begin
            ap_enable_reg_pp23_iter1 <= (1'b1 ^ ap_condition_pp23_exit_iter0_state96);
        end else if ((1'b0 == ap_block_pp23_stage0_subdone)) begin
            ap_enable_reg_pp23_iter1 <= ap_enable_reg_pp23_iter0;
        end else if ((1'b1 == ap_CS_fsm_state95)) begin
            ap_enable_reg_pp23_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp24_exit_iter0_state102) & (1'b1 == ap_CS_fsm_pp24_stage0) & (1'b0 == ap_block_pp24_stage0_subdone))) begin
            ap_enable_reg_pp24_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state101) & (grp_k2c_batch_norm_fu_1936_ap_done == 1'b1))) begin
            ap_enable_reg_pp24_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp24_exit_iter0_state102)) begin
                ap_enable_reg_pp24_iter1 <= (1'b1 ^ ap_condition_pp24_exit_iter0_state102);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp24_iter1 <= ap_enable_reg_pp24_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter2 <= ap_enable_reg_pp24_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter3 <= ap_enable_reg_pp24_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter4 <= ap_enable_reg_pp24_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter5 <= ap_enable_reg_pp24_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter6 <= ap_enable_reg_pp24_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp24_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp24_stage0_subdone)) begin
            ap_enable_reg_pp24_iter7 <= ap_enable_reg_pp24_iter6;
        end else if (((1'b1 == ap_CS_fsm_state101) & (grp_k2c_batch_norm_fu_1936_ap_done == 1'b1))) begin
            ap_enable_reg_pp24_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp25_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp25_exit_iter0_state111) & (1'b1 == ap_CS_fsm_pp25_stage0) & (1'b0 == ap_block_pp25_stage0_subdone))) begin
            ap_enable_reg_pp25_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state110)) begin
            ap_enable_reg_pp25_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp25_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp25_exit_iter0_state111) & (1'b0 == ap_block_pp25_stage0_subdone))) begin
            ap_enable_reg_pp25_iter1 <= (1'b1 ^ ap_condition_pp25_exit_iter0_state111);
        end else if ((1'b0 == ap_block_pp25_stage0_subdone)) begin
            ap_enable_reg_pp25_iter1 <= ap_enable_reg_pp25_iter0;
        end else if ((1'b1 == ap_CS_fsm_state110)) begin
            ap_enable_reg_pp25_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp26_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp26_exit_iter0_state114) & (1'b1 == ap_CS_fsm_pp26_stage0) & (1'b0 == ap_block_pp26_stage0_subdone))) begin
            ap_enable_reg_pp26_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state113)) begin
            ap_enable_reg_pp26_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp26_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp26_exit_iter0_state114) & (1'b0 == ap_block_pp26_stage0_subdone))) begin
            ap_enable_reg_pp26_iter1 <= (1'b1 ^ ap_condition_pp26_exit_iter0_state114);
        end else if ((1'b0 == ap_block_pp26_stage0_subdone)) begin
            ap_enable_reg_pp26_iter1 <= ap_enable_reg_pp26_iter0;
        end else if ((1'b1 == ap_CS_fsm_state113)) begin
            ap_enable_reg_pp26_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp27_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp27_exit_iter0_state117) & (1'b1 == ap_CS_fsm_pp27_stage0) & (1'b0 == ap_block_pp27_stage0_subdone))) begin
            ap_enable_reg_pp27_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state116)) begin
            ap_enable_reg_pp27_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp27_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp27_exit_iter0_state117) & (1'b0 == ap_block_pp27_stage0_subdone))) begin
            ap_enable_reg_pp27_iter1 <= (1'b1 ^ ap_condition_pp27_exit_iter0_state117);
        end else if ((1'b0 == ap_block_pp27_stage0_subdone)) begin
            ap_enable_reg_pp27_iter1 <= ap_enable_reg_pp27_iter0;
        end else if ((1'b1 == ap_CS_fsm_state116)) begin
            ap_enable_reg_pp27_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp28_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp28_exit_iter0_state120) & (1'b1 == ap_CS_fsm_pp28_stage0) & (1'b0 == ap_block_pp28_stage0_subdone))) begin
            ap_enable_reg_pp28_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state119)) begin
            ap_enable_reg_pp28_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp28_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp28_exit_iter0_state120) & (1'b0 == ap_block_pp28_stage0_subdone))) begin
            ap_enable_reg_pp28_iter1 <= (1'b1 ^ ap_condition_pp28_exit_iter0_state120);
        end else if ((1'b0 == ap_block_pp28_stage0_subdone)) begin
            ap_enable_reg_pp28_iter1 <= ap_enable_reg_pp28_iter0;
        end else if ((1'b1 == ap_CS_fsm_state119)) begin
            ap_enable_reg_pp28_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state13) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state13) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state13);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_condition_pp4_exit_iter0_state21) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp4_exit_iter0_state21) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state21);
        end else if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_condition_pp5_exit_iter0_state24) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp5_exit_iter0_state24) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state24);
        end else if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            ap_enable_reg_pp5_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b1 == ap_condition_pp6_exit_iter0_state27) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state26)) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp6_exit_iter0_state27) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
            ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state27);
        end else if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
        end else if ((1'b1 == ap_CS_fsm_state26)) begin
            ap_enable_reg_pp6_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp7_stage0) & (1'b1 == ap_condition_pp7_exit_iter0_state30) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state29)) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp7_exit_iter0_state30) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
            ap_enable_reg_pp7_iter1 <= (1'b1 ^ ap_condition_pp7_exit_iter0_state30);
        end else if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
        end else if ((1'b1 == ap_CS_fsm_state29)) begin
            ap_enable_reg_pp7_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp9_stage0) & (1'b1 == ap_condition_pp9_exit_iter0_state39) & (1'b0 == ap_block_pp9_stage0_subdone))) begin
            ap_enable_reg_pp9_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state38)) begin
            ap_enable_reg_pp9_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp9_exit_iter0_state39) & (1'b0 == ap_block_pp9_stage0_subdone))) begin
            ap_enable_reg_pp9_iter1 <= (1'b1 ^ ap_condition_pp9_exit_iter0_state39);
        end else if ((1'b0 == ap_block_pp9_stage0_subdone)) begin
            ap_enable_reg_pp9_iter1 <= ap_enable_reg_pp9_iter0;
        end else if ((1'b1 == ap_CS_fsm_state38)) begin
            ap_enable_reg_pp9_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_tanh_float_s_fu_1921_ap_start_reg <= 1'b0;
    end else begin
        if ((((exitcond26_fu_2613_p2 == 1'd0) & (ap_enable_reg_pp24_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp24_stage0) & (1'b0 == ap_block_pp24_stage0_11001)) | ((exitcond27_fu_2507_p2 == 1'd0) & (ap_enable_reg_pp19_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp19_stage0) & (1'b0 == ap_block_pp19_stage0_11001)))) begin
            grp_generic_tanh_float_s_fu_1921_ap_start_reg <= 1'b1;
        end else if ((grp_generic_tanh_float_s_fu_1921_ap_ready == 1'b1)) begin
            grp_generic_tanh_float_s_fu_1921_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_batch_norm_fu_1936_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state76))) begin
            grp_k2c_batch_norm_fu_1936_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_batch_norm_fu_1936_ap_ready == 1'b1)) begin
            grp_k2c_batch_norm_fu_1936_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_dense2_fu_1873_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state122)) begin
            grp_k2c_dense2_fu_1873_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_dense2_fu_1873_ap_ready == 1'b1)) begin
            grp_k2c_dense2_fu_1873_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_dense_1_fu_1850_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state98)) begin
            grp_k2c_dense_1_fu_1850_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_dense_1_fu_1850_ap_ready == 1'b1)) begin
            grp_k2c_dense_1_fu_1850_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_dense_fu_1902_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state74) & (tmp_79_fu_2482_p2 == 1'd1))) begin
            grp_k2c_dense_fu_1902_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_dense_fu_1902_ap_ready == 1'b1)) begin
            grp_k2c_dense_fu_1902_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond26_fu_2613_p2 == 1'd0) & (ap_enable_reg_pp24_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp24_stage0) & (1'b0 == ap_block_pp24_stage0_11001))) begin
        i_1_reg_1718 <= i_44_fu_2619_p2;
    end else if (((1'b1 == ap_CS_fsm_state101) & (grp_k2c_batch_norm_fu_1936_ap_done == 1'b1))) begin
        i_1_reg_1718 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        i_2_reg_1773 <= i_45_reg_3519;
    end else if ((1'b1 == ap_CS_fsm_state125)) begin
        i_2_reg_1773 <= 3'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state126) & (exitcond1_fu_2727_p2 == 1'd1))) begin
        i_3_reg_1794 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state130)) begin
        i_3_reg_1794 <= i_46_reg_3532;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state133)) begin
        i_4_reg_1817 <= i_47_reg_3560;
    end else if ((1'b1 == ap_CS_fsm_state131)) begin
        i_4_reg_1817 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond27_fu_2507_p2 == 1'd0) & (ap_enable_reg_pp19_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp19_stage0) & (1'b0 == ap_block_pp19_stage0_11001))) begin
        i_reg_1663 <= i_43_fu_2512_p2;
    end else if (((1'b1 == ap_CS_fsm_state77) & (grp_k2c_batch_norm_fu_1936_ap_done == 1'b1))) begin
        i_reg_1663 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        invdar1_reg_1454 <= 19'd0;
    end else if (((tmp_59_fu_2098_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        invdar1_reg_1454 <= indvarinc1_fu_2087_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        invdar2_reg_1553 <= 11'd0;
    end else if (((tmp_69_fu_2293_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45))) begin
        invdar2_reg_1553 <= indvarinc2_fu_2282_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        invdar3_reg_1652 <= 7'd0;
    end else if (((tmp_79_fu_2482_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state74))) begin
        invdar3_reg_1652 <= indvarinc3_fu_2471_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        invdar_reg_1421 <= 19'd0;
    end else if (((tmp_55_reg_2950 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        invdar_reg_1421 <= indvarinc_reg_2935;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond13_fu_2305_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state48))) begin
        j_10_reg_1564 <= j_39_fu_2311_p2;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        j_10_reg_1564 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        j_11_reg_1575 <= 4'd0;
    end else if (((1'b0 == ap_block_pp12_stage0_11001) & (exitcond12_fu_2322_p2 == 1'd0) & (ap_enable_reg_pp12_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp12_stage0))) begin
        j_11_reg_1575 <= j_40_fu_2328_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        j_12_reg_1586 <= 4'd0;
    end else if (((exitcond11_fu_2339_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp13_stage0) & (ap_enable_reg_pp13_iter0 == 1'b1) & (1'b0 == ap_block_pp13_stage0_11001))) begin
        j_12_reg_1586 <= j_41_fu_2345_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        j_13_reg_1597 <= 4'd0;
    end else if (((exitcond10_fu_2356_p2 == 1'd0) & (ap_enable_reg_pp14_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp14_stage0) & (1'b0 == ap_block_pp14_stage0_11001))) begin
        j_13_reg_1597 <= j_42_fu_2362_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        j_14_reg_1608 <= 4'd0;
    end else if (((exitcond9_fu_2373_p2 == 1'd0) & (ap_enable_reg_pp15_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp15_stage0) & (1'b0 == ap_block_pp15_stage0_11001))) begin
        j_14_reg_1608 <= j_43_fu_2379_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_fu_2402_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state64))) begin
        j_15_reg_1619 <= j_44_fu_2408_p2;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        j_15_reg_1619 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_fu_2431_p2 == 1'd0) & (ap_enable_reg_pp17_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp17_stage0) & (1'b0 == ap_block_pp17_stage0_11001))) begin
        j_16_reg_1630 <= j_45_fu_2437_p2;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        j_16_reg_1630 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_2454_p2 == 1'd0) & (ap_enable_reg_pp18_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp18_stage0) & (1'b0 == ap_block_pp18_stage0_11001))) begin
        j_17_reg_1641 <= j_46_fu_2460_p2;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        j_17_reg_1641 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_2522_p2 == 1'd0) & (ap_enable_reg_pp20_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp20_stage0) & (1'b0 == ap_block_pp20_stage0_11001))) begin
        j_18_reg_1674 <= j_47_fu_2528_p2;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        j_18_reg_1674 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        j_19_reg_1685 <= 12'd0;
    end else if (((ap_enable_reg_pp21_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp21_stage0) & (tmp_82_fu_2544_p2 == 1'd1) & (1'b0 == ap_block_pp21_stage0_11001))) begin
        j_19_reg_1685 <= j_48_fu_2549_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond23_fu_2053_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j_1_reg_1432 <= j_29_fu_2059_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        j_1_reg_1432 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        j_20_reg_1696 <= 3'd0;
    end else if (((exitcond4_fu_2555_p2 == 1'd0) & (ap_enable_reg_pp22_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp22_stage0) & (1'b0 == ap_block_pp22_stage0_11001))) begin
        j_20_reg_1696 <= j_49_fu_2561_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        j_21_reg_1707 <= 12'd0;
    end else if (((ap_enable_reg_pp23_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp23_stage0) & (1'b0 == ap_block_pp23_stage0_11001) & (tmp_85_fu_2582_p2 == 1'd1))) begin
        j_21_reg_1707 <= j_50_fu_2587_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_2638_p2 == 1'd0) & (ap_enable_reg_pp25_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp25_stage0) & (1'b0 == ap_block_pp25_stage0_11001))) begin
        j_22_reg_1729 <= j_51_fu_2644_p2;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        j_22_reg_1729 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        j_23_reg_1740 <= 4'd0;
    end else if (((exitcond25_fu_2655_p2 == 1'd0) & (ap_enable_reg_pp26_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp26_stage0) & (1'b0 == ap_block_pp26_stage0_11001))) begin
        j_23_reg_1740 <= j_52_fu_2661_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_2683_p2 == 1'd0) & (ap_enable_reg_pp27_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp27_stage0) & (1'b0 == ap_block_pp27_stage0_11001))) begin
        j_24_reg_1751 <= j_53_fu_2689_p2;
    end else if ((1'b1 == ap_CS_fsm_state116)) begin
        j_24_reg_1751 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        j_25_reg_1762 <= 4'd0;
    end else if (((exitcond28_fu_2705_p2 == 1'd0) & (ap_enable_reg_pp28_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp28_stage0) & (1'b0 == ap_block_pp28_stage0_11001))) begin
        j_25_reg_1762 <= j_54_fu_2711_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        j_26_reg_1828 <= j_55_reg_3578;
    end else if (((1'b1 == ap_CS_fsm_state132) & (tmp_93_fu_2853_p2 == 1'd1))) begin
        j_26_reg_1828 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state134) & (exitcond_fu_2879_p2 == 1'd1))) begin
        j_27_reg_1839 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state137)) begin
        j_27_reg_1839 <= j_56_reg_3601;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        j_2_reg_1443 <= 7'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond22_fu_2070_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        j_2_reg_1443 <= j_30_fu_2076_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond21_fu_2116_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        j_3_reg_1465 <= j_31_fu_2122_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        j_3_reg_1465 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        j_4_reg_1476 <= 7'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (exitcond20_fu_2133_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        j_4_reg_1476 <= j_32_fu_2139_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        j_5_reg_1487 <= 7'd0;
    end else if (((1'b0 == ap_block_pp5_stage0_11001) & (exitcond19_fu_2150_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        j_5_reg_1487 <= j_33_fu_2156_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        j_6_reg_1498 <= 7'd0;
    end else if (((1'b0 == ap_block_pp6_stage0_11001) & (exitcond18_fu_2167_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        j_6_reg_1498 <= j_34_fu_2173_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        j_7_reg_1509 <= 7'd0;
    end else if (((1'b0 == ap_block_pp7_stage0_11001) & (exitcond17_fu_2184_p2 == 1'd0) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        j_7_reg_1509 <= j_35_fu_2190_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond16_fu_2213_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state35))) begin
        j_8_reg_1520 <= j_36_fu_2219_p2;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        j_8_reg_1520 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp9_stage0_11001) & (exitcond15_fu_2242_p2 == 1'd0) & (ap_enable_reg_pp9_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp9_stage0))) begin
        j_9_reg_1531 <= j_37_fu_2248_p2;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        j_9_reg_1531 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond24_fu_2019_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        j_reg_1410 <= j_28_fu_2025_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        j_reg_1410 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp10_stage0_11001) & (exitcond14_fu_2265_p2 == 1'd0) & (ap_enable_reg_pp10_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp10_stage0))) begin
        j_s_reg_1542 <= j_38_fu_2271_p2;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        j_s_reg_1542 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state126) & (exitcond1_fu_2727_p2 == 1'd1))) begin
        sum_reg_1805 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state130)) begin
        sum_reg_1805 <= grp_fu_1963_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        xmax1_reg_1784 <= xmax_1_fu_2823_p3;
    end else if ((1'b1 == ap_CS_fsm_state125)) begin
        xmax1_reg_1784 <= dense_2_output_array_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (tmp_59_fu_2098_p2 == 1'd1))) begin
        batch_normalization_1[0] <= 1'b1;
        batch_normalization_3[2] <= 1'b1;
batch_normalization_3[5] <= 1'b1;
batch_normalization_3[6] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state77) & (grp_k2c_batch_norm_fu_1936_ap_done == 1'b1))) begin
        batch_normalization_53_reg_3286[2] <= batch_normalization_3[2];
batch_normalization_53_reg_3286[6 : 5] <= batch_normalization_3[6 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond27_fu_2507_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp19_stage0) & (1'b0 == ap_block_pp19_stage0_11001))) begin
        batch_normalization_54_reg_3303 <= i_cast_fu_2502_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp19_stage0) & (1'b0 == ap_block_pp19_stage0_11001))) begin
        batch_normalization_54_reg_3303_pp19_iter1_reg <= batch_normalization_54_reg_3303;
        exitcond27_reg_3294 <= exitcond27_fu_2507_p2;
        exitcond27_reg_3294_pp19_iter1_reg <= exitcond27_reg_3294;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp19_stage0_11001)) begin
        batch_normalization_54_reg_3303_pp19_iter2_reg <= batch_normalization_54_reg_3303_pp19_iter1_reg;
        batch_normalization_54_reg_3303_pp19_iter3_reg <= batch_normalization_54_reg_3303_pp19_iter2_reg;
        batch_normalization_54_reg_3303_pp19_iter4_reg <= batch_normalization_54_reg_3303_pp19_iter3_reg;
        batch_normalization_54_reg_3303_pp19_iter5_reg <= batch_normalization_54_reg_3303_pp19_iter4_reg;
        batch_normalization_54_reg_3303_pp19_iter6_reg <= batch_normalization_54_reg_3303_pp19_iter5_reg;
        exitcond27_reg_3294_pp19_iter2_reg <= exitcond27_reg_3294_pp19_iter1_reg;
        exitcond27_reg_3294_pp19_iter3_reg <= exitcond27_reg_3294_pp19_iter2_reg;
        exitcond27_reg_3294_pp19_iter4_reg <= exitcond27_reg_3294_pp19_iter3_reg;
        exitcond27_reg_3294_pp19_iter5_reg <= exitcond27_reg_3294_pp19_iter4_reg;
        exitcond27_reg_3294_pp19_iter6_reg <= exitcond27_reg_3294_pp19_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        batch_normalization_56_reg_3309[0] <= batch_normalization_1[0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond26_fu_2613_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp24_stage0) & (1'b0 == ap_block_pp24_stage0_11001))) begin
        batch_normalization_61_reg_3419[3 : 0] <= i_1_cast_fu_2625_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp24_stage0) & (1'b0 == ap_block_pp24_stage0_11001))) begin
        batch_normalization_61_reg_3419_pp24_iter1_reg[3 : 0] <= batch_normalization_61_reg_3419[3 : 0];
        exitcond26_reg_3410 <= exitcond26_fu_2613_p2;
        exitcond26_reg_3410_pp24_iter1_reg <= exitcond26_reg_3410;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp24_stage0_11001)) begin
        batch_normalization_61_reg_3419_pp24_iter2_reg[3 : 0] <= batch_normalization_61_reg_3419_pp24_iter1_reg[3 : 0];
        batch_normalization_61_reg_3419_pp24_iter3_reg[3 : 0] <= batch_normalization_61_reg_3419_pp24_iter2_reg[3 : 0];
        batch_normalization_61_reg_3419_pp24_iter4_reg[3 : 0] <= batch_normalization_61_reg_3419_pp24_iter3_reg[3 : 0];
        batch_normalization_61_reg_3419_pp24_iter5_reg[3 : 0] <= batch_normalization_61_reg_3419_pp24_iter4_reg[3 : 0];
        batch_normalization_61_reg_3419_pp24_iter6_reg[3 : 0] <= batch_normalization_61_reg_3419_pp24_iter5_reg[3 : 0];
        exitcond26_reg_3410_pp24_iter2_reg <= exitcond26_reg_3410_pp24_iter1_reg;
        exitcond26_reg_3410_pp24_iter3_reg <= exitcond26_reg_3410_pp24_iter2_reg;
        exitcond26_reg_3410_pp24_iter4_reg <= exitcond26_reg_3410_pp24_iter3_reg;
        exitcond26_reg_3410_pp24_iter5_reg <= exitcond26_reg_3410_pp24_iter4_reg;
        exitcond26_reg_3410_pp24_iter6_reg <= exitcond26_reg_3410_pp24_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (tmp_69_fu_2293_p2 == 1'd1))) begin
        batch_normalization_9 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        dense_1_bias_numel[1] <= 1'b1;
dense_1_bias_numel[3] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        dense_1_kernel_ndim[1] <= 1'b1;
        dense_1_kernel_numel[3] <= 1'b1;
dense_1_kernel_numel[5] <= 1'b1;
dense_1_kernel_numel[6] <= 1'b1;
dense_1_kernel_numel[7] <= 1'b1;
dense_1_kernel_numel[8] <= 1'b1;
dense_1_kernel_numel[9] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        dense_1_output_ndim[0] <= 1'b1;
        dense_1_output_numel[1] <= 1'b1;
dense_1_output_numel[3] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        dense_2_bias_numel[1] <= 1'b1;
dense_2_bias_numel[2] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        dense_2_kernel_ndim[1] <= 1'b1;
        dense_2_kernel_numel[2] <= 1'b1;
dense_2_kernel_numel[3] <= 1'b1;
dense_2_kernel_numel[4] <= 1'b1;
dense_2_kernel_numel[5] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_90_fu_2836_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state128))) begin
        dense_2_output_array_7_reg_3537[2 : 0] <= i_3_cast_fu_2831_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_93_fu_2853_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state132))) begin
        dense_2_output_array_9_reg_3565[2 : 0] <= i_4_cast_fu_2848_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        dense_2_output_ndim <= 1'd1;
        dense_2_output_numel[1] <= 1'b1;
dense_2_output_numel[2] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state132) & (tmp_93_fu_2853_p2 == 1'd1))) begin
        dense_2_output_numel_2_reg_3570[2 : 1] <= dense_2_output_numel[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        dense_output_ndim[0] <= 1'b1;
        dense_output_numel[2] <= 1'b1;
dense_output_numel[5] <= 1'b1;
dense_output_numel[6] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state116)) begin
        dropout_3_output_ndi[0] <= extLd2_reg_3425[0];
        dropout_3_output_num[1] <= 1'b1;
dropout_3_output_num[3] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp14_stage0) & (1'b0 == ap_block_pp14_stage0_11001))) begin
        exitcond10_reg_3184 <= exitcond10_fu_2356_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp13_stage0) & (1'b0 == ap_block_pp13_stage0_11001))) begin
        exitcond11_reg_3165 <= exitcond11_fu_2339_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp12_stage0_11001) & (1'b1 == ap_CS_fsm_pp12_stage0))) begin
        exitcond12_reg_3146 <= exitcond12_fu_2322_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp10_stage0_11001) & (1'b1 == ap_CS_fsm_pp10_stage0))) begin
        exitcond14_reg_3111 <= exitcond14_fu_2265_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0))) begin
        exitcond15_reg_3092 <= exitcond15_fu_2242_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        exitcond17_reg_3065 <= exitcond17_fu_2184_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        exitcond18_reg_3046 <= exitcond18_fu_2167_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        exitcond19_reg_3027 <= exitcond19_fu_2150_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        exitcond20_reg_3008 <= exitcond20_fu_2133_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond22_reg_2973 <= exitcond22_fu_2070_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond23_reg_2954 <= exitcond23_fu_2053_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp26_stage0) & (1'b0 == ap_block_pp26_stage0_11001))) begin
        exitcond25_reg_3449 <= exitcond25_fu_2655_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp28_stage0) & (1'b0 == ap_block_pp28_stage0_11001))) begin
        exitcond28_reg_3487 <= exitcond28_fu_2705_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp27_stage0) & (1'b0 == ap_block_pp27_stage0_11001))) begin
        exitcond2_reg_3468 <= exitcond2_fu_2683_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp25_stage0) & (1'b0 == ap_block_pp25_stage0_11001))) begin
        exitcond3_reg_3430 <= exitcond3_fu_2638_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp22_stage0) & (1'b0 == ap_block_pp22_stage0_11001))) begin
        exitcond4_reg_3352 <= exitcond4_fu_2555_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp20_stage0) & (1'b0 == ap_block_pp20_stage0_11001))) begin
        exitcond5_reg_3314 <= exitcond5_fu_2522_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp18_stage0) & (1'b0 == ap_block_pp18_stage0_11001))) begin
        exitcond6_reg_3249 <= exitcond6_fu_2454_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp17_stage0) & (1'b0 == ap_block_pp17_stage0_11001))) begin
        exitcond7_reg_3230 <= exitcond7_fu_2431_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp15_stage0) & (1'b0 == ap_block_pp15_stage0_11001))) begin
        exitcond9_reg_3203 <= exitcond9_fu_2373_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state110)) begin
        extLd2_reg_3425[0] <= extLd2_fu_2634_p1[0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_2727_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state126))) begin
        i_45_reg_3519 <= i_45_fu_2733_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        i_46_reg_3532 <= i_46_fu_2842_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state132)) begin
        i_47_reg_3560 <= i_47_fu_2859_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        indvarinc_reg_2935 <= indvarinc_fu_2036_p2;
        tmp_55_reg_2950 <= tmp_55_fu_2047_p2;
        tmp_s_reg_2940[18 : 0] <= tmp_s_fu_2042_p1[18 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state134)) begin
        j_55_reg_3578 <= j_55_fu_2885_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        j_56_reg_3601 <= j_56_fu_2911_p2;
        tmp_96_reg_3593 <= tmp_96_fu_2901_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state98))) begin
        reg_2001[1] <= dense_1_output_numel[1];
reg_2001[3] <= dense_1_output_numel[3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state131)) begin
        sum_1_reg_3552 <= grp_fu_1976_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond23_fu_2053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_56_reg_2963[18 : 0] <= tmp_56_fu_2065_p1[18 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond22_fu_2070_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_57_reg_2982[6 : 0] <= tmp_57_fu_2082_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (exitcond20_fu_2133_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        tmp_61_reg_3017[6 : 0] <= tmp_61_fu_2145_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (exitcond19_fu_2150_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        tmp_62_reg_3036[6 : 0] <= tmp_62_fu_2162_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (exitcond18_fu_2167_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        tmp_63_reg_3055[6 : 0] <= tmp_63_fu_2179_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (exitcond17_fu_2184_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        tmp_64_reg_3074[6 : 0] <= tmp_64_fu_2196_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp9_stage0_11001) & (exitcond15_fu_2242_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp9_stage0))) begin
        tmp_66_reg_3101[9 : 0] <= tmp_66_fu_2254_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp10_stage0_11001) & (exitcond14_fu_2265_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp10_stage0))) begin
        tmp_67_reg_3120[3 : 0] <= tmp_67_fu_2277_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp12_stage0_11001) & (exitcond12_fu_2322_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp12_stage0))) begin
        tmp_71_reg_3155[3 : 0] <= tmp_71_fu_2334_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond11_fu_2339_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp13_stage0) & (1'b0 == ap_block_pp13_stage0_11001))) begin
        tmp_72_reg_3174[3 : 0] <= tmp_72_fu_2351_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond10_fu_2356_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp14_stage0) & (1'b0 == ap_block_pp14_stage0_11001))) begin
        tmp_73_reg_3193[3 : 0] <= tmp_73_fu_2368_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond9_fu_2373_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp15_stage0) & (1'b0 == ap_block_pp15_stage0_11001))) begin
        tmp_74_reg_3212[3 : 0] <= tmp_74_fu_2385_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_fu_2431_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp17_stage0) & (1'b0 == ap_block_pp17_stage0_11001))) begin
        tmp_76_reg_3239[5 : 0] <= tmp_76_fu_2443_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_2454_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp18_stage0) & (1'b0 == ap_block_pp18_stage0_11001))) begin
        tmp_77_reg_3258[2 : 0] <= tmp_77_fu_2466_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_2522_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp20_stage0) & (1'b0 == ap_block_pp20_stage0_11001))) begin
        tmp_80_reg_3323[2 : 0] <= tmp_80_fu_2534_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp21_stage0) & (1'b0 == ap_block_pp21_stage0_11001))) begin
        tmp_81_reg_3333[11 : 0] <= tmp_81_fu_2539_p1[11 : 0];
        tmp_82_reg_3338 <= tmp_82_fu_2544_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_2555_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp22_stage0) & (1'b0 == ap_block_pp22_stage0_11001))) begin
        tmp_83_reg_3361[2 : 0] <= tmp_83_fu_2567_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp23_stage0) & (1'b0 == ap_block_pp23_stage0_11001))) begin
        tmp_84_reg_3371[11 : 0] <= tmp_84_fu_2577_p1[11 : 0];
        tmp_85_reg_3376 <= tmp_85_fu_2582_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_2638_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp25_stage0) & (1'b0 == ap_block_pp25_stage0_11001))) begin
        tmp_86_reg_3439[2 : 0] <= tmp_86_fu_2650_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond25_fu_2655_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp26_stage0) & (1'b0 == ap_block_pp26_stage0_11001))) begin
        tmp_87_reg_3458[3 : 0] <= tmp_87_fu_2667_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_2683_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp27_stage0) & (1'b0 == ap_block_pp27_stage0_11001))) begin
        tmp_88_reg_3477[2 : 0] <= tmp_88_fu_2695_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond28_fu_2705_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp28_stage0) & (1'b0 == ap_block_pp28_stage0_11001))) begin
        tmp_89_reg_3496[3 : 0] <= tmp_89_fu_2717_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state129)) begin
        tmp_92_reg_3542 <= tmp_92_fu_1988_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_2879_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state134))) begin
        tmp_95_reg_3583[2 : 0] <= tmp_95_fu_2891_p1[2 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp23_stage0) & (ap_enable_reg_pp23_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp23_stage0))) begin
        activation_1_output_1_address0 = tmp_84_fu_2577_p1;
    end else if (((1'b0 == ap_block_pp21_stage0) & (ap_enable_reg_pp21_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp21_stage0))) begin
        activation_1_output_1_address0 = tmp_81_reg_3333;
    end else begin
        activation_1_output_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp23_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp23_stage0) & (1'b0 == ap_block_pp23_stage0_11001)) | ((ap_enable_reg_pp21_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp21_stage0) & (1'b0 == ap_block_pp21_stage0_11001)))) begin
        activation_1_output_1_ce0 = 1'b1;
    end else begin
        activation_1_output_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp21_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp21_stage0) & (tmp_82_reg_3338 == 1'd1) & (1'b0 == ap_block_pp21_stage0_11001))) begin
        activation_1_output_1_we0 = 1'b1;
    end else begin
        activation_1_output_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp22_stage0) & (ap_enable_reg_pp22_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp22_stage0))) begin
        activation_1_output_s_address0 = tmp_83_fu_2567_p1;
    end else if (((1'b0 == ap_block_pp20_stage0) & (ap_enable_reg_pp20_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp20_stage0))) begin
        activation_1_output_s_address0 = tmp_80_reg_3323;
    end else begin
        activation_1_output_s_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp22_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp22_stage0) & (1'b0 == ap_block_pp22_stage0_11001)) | ((ap_enable_reg_pp20_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp20_stage0) & (1'b0 == ap_block_pp20_stage0_11001)))) begin
        activation_1_output_s_ce0 = 1'b1;
    end else begin
        activation_1_output_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5_reg_3314 == 1'd0) & (ap_enable_reg_pp20_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp20_stage0) & (1'b0 == ap_block_pp20_stage0_11001))) begin
        activation_1_output_s_we0 = 1'b1;
    end else begin
        activation_1_output_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp28_stage0) & (ap_enable_reg_pp28_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp28_stage0))) begin
        activation_2_output_1_address0 = tmp_89_fu_2717_p1;
    end else if (((1'b0 == ap_block_pp26_stage0) & (ap_enable_reg_pp26_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp26_stage0))) begin
        activation_2_output_1_address0 = tmp_87_reg_3458;
    end else begin
        activation_2_output_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp28_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp28_stage0) & (1'b0 == ap_block_pp28_stage0_11001)) | ((ap_enable_reg_pp26_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp26_stage0) & (1'b0 == ap_block_pp26_stage0_11001)))) begin
        activation_2_output_1_ce0 = 1'b1;
    end else begin
        activation_2_output_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond25_reg_3449 == 1'd0) & (ap_enable_reg_pp26_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp26_stage0) & (1'b0 == ap_block_pp26_stage0_11001))) begin
        activation_2_output_1_we0 = 1'b1;
    end else begin
        activation_2_output_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp27_stage0) & (ap_enable_reg_pp27_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp27_stage0))) begin
        activation_2_output_s_address0 = tmp_88_fu_2695_p1;
    end else if (((1'b0 == ap_block_pp25_stage0) & (ap_enable_reg_pp25_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp25_stage0))) begin
        activation_2_output_s_address0 = tmp_86_reg_3439;
    end else begin
        activation_2_output_s_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp27_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp27_stage0) & (1'b0 == ap_block_pp27_stage0_11001)) | ((ap_enable_reg_pp25_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp25_stage0) & (1'b0 == ap_block_pp25_stage0_11001)))) begin
        activation_2_output_s_ce0 = 1'b1;
    end else begin
        activation_2_output_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond3_reg_3430 == 1'd0) & (ap_enable_reg_pp25_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp25_stage0) & (1'b0 == ap_block_pp25_stage0_11001))) begin
        activation_2_output_s_we0 = 1'b1;
    end else begin
        activation_2_output_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state137)) begin
        activation_3_output_array_ce0 = 1'b1;
    end else begin
        activation_3_output_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state137)) begin
        activation_3_output_array_we0 = 1'b1;
    end else begin
        activation_3_output_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state132) & (tmp_93_fu_2853_p2 == 1'd1))) begin
        activation_3_output_ndim_ap_vld = 1'b1;
    end else begin
        activation_3_output_ndim_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state132) & (tmp_93_fu_2853_p2 == 1'd1))) begin
        activation_3_output_numel_ap_vld = 1'b1;
    end else begin
        activation_3_output_numel_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        activation_3_output_shape_ce0 = 1'b1;
    end else begin
        activation_3_output_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        activation_3_output_shape_we0 = 1'b1;
    end else begin
        activation_3_output_shape_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond14_fu_2265_p2 == 1'd1)) begin
        ap_condition_pp10_exit_iter0_state42 = 1'b1;
    end else begin
        ap_condition_pp10_exit_iter0_state42 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond12_fu_2322_p2 == 1'd1)) begin
        ap_condition_pp12_exit_iter0_state50 = 1'b1;
    end else begin
        ap_condition_pp12_exit_iter0_state50 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond11_fu_2339_p2 == 1'd1)) begin
        ap_condition_pp13_exit_iter0_state53 = 1'b1;
    end else begin
        ap_condition_pp13_exit_iter0_state53 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond10_fu_2356_p2 == 1'd1)) begin
        ap_condition_pp14_exit_iter0_state56 = 1'b1;
    end else begin
        ap_condition_pp14_exit_iter0_state56 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond9_fu_2373_p2 == 1'd1)) begin
        ap_condition_pp15_exit_iter0_state59 = 1'b1;
    end else begin
        ap_condition_pp15_exit_iter0_state59 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond7_fu_2431_p2 == 1'd1)) begin
        ap_condition_pp17_exit_iter0_state68 = 1'b1;
    end else begin
        ap_condition_pp17_exit_iter0_state68 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond6_fu_2454_p2 == 1'd1)) begin
        ap_condition_pp18_exit_iter0_state71 = 1'b1;
    end else begin
        ap_condition_pp18_exit_iter0_state71 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond27_fu_2507_p2 == 1'd1)) begin
        ap_condition_pp19_exit_iter0_state78 = 1'b1;
    end else begin
        ap_condition_pp19_exit_iter0_state78 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond23_fu_2053_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond5_fu_2522_p2 == 1'd1)) begin
        ap_condition_pp20_exit_iter0_state87 = 1'b1;
    end else begin
        ap_condition_pp20_exit_iter0_state87 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_82_fu_2544_p2 == 1'd0)) begin
        ap_condition_pp21_exit_iter0_state90 = 1'b1;
    end else begin
        ap_condition_pp21_exit_iter0_state90 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond4_fu_2555_p2 == 1'd1)) begin
        ap_condition_pp22_exit_iter0_state93 = 1'b1;
    end else begin
        ap_condition_pp22_exit_iter0_state93 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_85_fu_2582_p2 == 1'd0)) begin
        ap_condition_pp23_exit_iter0_state96 = 1'b1;
    end else begin
        ap_condition_pp23_exit_iter0_state96 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond26_fu_2613_p2 == 1'd1)) begin
        ap_condition_pp24_exit_iter0_state102 = 1'b1;
    end else begin
        ap_condition_pp24_exit_iter0_state102 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond3_fu_2638_p2 == 1'd1)) begin
        ap_condition_pp25_exit_iter0_state111 = 1'b1;
    end else begin
        ap_condition_pp25_exit_iter0_state111 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond25_fu_2655_p2 == 1'd1)) begin
        ap_condition_pp26_exit_iter0_state114 = 1'b1;
    end else begin
        ap_condition_pp26_exit_iter0_state114 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond2_fu_2683_p2 == 1'd1)) begin
        ap_condition_pp27_exit_iter0_state117 = 1'b1;
    end else begin
        ap_condition_pp27_exit_iter0_state117 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond28_fu_2705_p2 == 1'd1)) begin
        ap_condition_pp28_exit_iter0_state120 = 1'b1;
    end else begin
        ap_condition_pp28_exit_iter0_state120 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond22_fu_2070_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state13 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state13 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond20_fu_2133_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state21 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state21 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond19_fu_2150_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state24 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state24 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond18_fu_2167_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state27 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state27 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond17_fu_2184_p2 == 1'd1)) begin
        ap_condition_pp7_exit_iter0_state30 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter0_state30 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond15_fu_2242_p2 == 1'd1)) begin
        ap_condition_pp9_exit_iter0_state39 = 1'b1;
    end else begin
        ap_condition_pp9_exit_iter0_state39 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_97_fu_2906_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state136))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp10_iter0 == 1'b0) & (ap_enable_reg_pp10_iter1 == 1'b0))) begin
        ap_idle_pp10 = 1'b1;
    end else begin
        ap_idle_pp10 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp12_iter0 == 1'b0) & (ap_enable_reg_pp12_iter1 == 1'b0))) begin
        ap_idle_pp12 = 1'b1;
    end else begin
        ap_idle_pp12 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp13_iter1 == 1'b0) & (ap_enable_reg_pp13_iter0 == 1'b0))) begin
        ap_idle_pp13 = 1'b1;
    end else begin
        ap_idle_pp13 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp14_iter1 == 1'b0) & (ap_enable_reg_pp14_iter0 == 1'b0))) begin
        ap_idle_pp14 = 1'b1;
    end else begin
        ap_idle_pp14 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp15_iter1 == 1'b0) & (ap_enable_reg_pp15_iter0 == 1'b0))) begin
        ap_idle_pp15 = 1'b1;
    end else begin
        ap_idle_pp15 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp17_iter1 == 1'b0) & (ap_enable_reg_pp17_iter0 == 1'b0))) begin
        ap_idle_pp17 = 1'b1;
    end else begin
        ap_idle_pp17 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp18_iter1 == 1'b0) & (ap_enable_reg_pp18_iter0 == 1'b0))) begin
        ap_idle_pp18 = 1'b1;
    end else begin
        ap_idle_pp18 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp19_iter7 == 1'b0) & (ap_enable_reg_pp19_iter6 == 1'b0) & (ap_enable_reg_pp19_iter5 == 1'b0) & (ap_enable_reg_pp19_iter4 == 1'b0) & (ap_enable_reg_pp19_iter3 == 1'b0) & (ap_enable_reg_pp19_iter2 == 1'b0) & (ap_enable_reg_pp19_iter1 == 1'b0) & (ap_enable_reg_pp19_iter0 == 1'b0))) begin
        ap_idle_pp19 = 1'b1;
    end else begin
        ap_idle_pp19 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp20_iter1 == 1'b0) & (ap_enable_reg_pp20_iter0 == 1'b0))) begin
        ap_idle_pp20 = 1'b1;
    end else begin
        ap_idle_pp20 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp21_iter1 == 1'b0) & (ap_enable_reg_pp21_iter0 == 1'b0))) begin
        ap_idle_pp21 = 1'b1;
    end else begin
        ap_idle_pp21 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp22_iter1 == 1'b0) & (ap_enable_reg_pp22_iter0 == 1'b0))) begin
        ap_idle_pp22 = 1'b1;
    end else begin
        ap_idle_pp22 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp23_iter1 == 1'b0) & (ap_enable_reg_pp23_iter0 == 1'b0))) begin
        ap_idle_pp23 = 1'b1;
    end else begin
        ap_idle_pp23 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp24_iter7 == 1'b0) & (ap_enable_reg_pp24_iter6 == 1'b0) & (ap_enable_reg_pp24_iter5 == 1'b0) & (ap_enable_reg_pp24_iter4 == 1'b0) & (ap_enable_reg_pp24_iter3 == 1'b0) & (ap_enable_reg_pp24_iter2 == 1'b0) & (ap_enable_reg_pp24_iter1 == 1'b0) & (ap_enable_reg_pp24_iter0 == 1'b0))) begin
        ap_idle_pp24 = 1'b1;
    end else begin
        ap_idle_pp24 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp25_iter1 == 1'b0) & (ap_enable_reg_pp25_iter0 == 1'b0))) begin
        ap_idle_pp25 = 1'b1;
    end else begin
        ap_idle_pp25 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp26_iter1 == 1'b0) & (ap_enable_reg_pp26_iter0 == 1'b0))) begin
        ap_idle_pp26 = 1'b1;
    end else begin
        ap_idle_pp26 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp27_iter1 == 1'b0) & (ap_enable_reg_pp27_iter0 == 1'b0))) begin
        ap_idle_pp27 = 1'b1;
    end else begin
        ap_idle_pp27 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp28_iter1 == 1'b0) & (ap_enable_reg_pp28_iter0 == 1'b0))) begin
        ap_idle_pp28 = 1'b1;
    end else begin
        ap_idle_pp28 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b0) & (ap_enable_reg_pp7_iter1 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp9_iter0 == 1'b0) & (ap_enable_reg_pp9_iter1 == 1'b0))) begin
        ap_idle_pp9 = 1'b1;
    end else begin
        ap_idle_pp9 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_97_fu_2906_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state136))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        batch_normalization_11_ce0 = 1'b1;
    end else begin
        batch_normalization_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        batch_normalization_12_address0 = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        batch_normalization_12_address0 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        batch_normalization_12_address0 = 3'd0;
    end else begin
        batch_normalization_12_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp25_stage0) & (ap_enable_reg_pp25_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp25_stage0))) begin
        batch_normalization_12_address1 = tmp_86_fu_2650_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        batch_normalization_12_address1 = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        batch_normalization_12_address1 = 3'd2;
    end else begin
        batch_normalization_12_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state47))) begin
        batch_normalization_12_ce0 = 1'b1;
    end else begin
        batch_normalization_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state47) | ((ap_enable_reg_pp25_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp25_stage0) & (1'b0 == ap_block_pp25_stage0_11001)))) begin
        batch_normalization_12_ce1 = 1'b1;
    end else begin
        batch_normalization_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state47))) begin
        batch_normalization_12_d0 = 6'd1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        batch_normalization_12_d0 = 6'd10;
    end else begin
        batch_normalization_12_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state47) | ((1'b1 == ap_CS_fsm_state45) & (tmp_69_fu_2293_p2 == 1'd1)))) begin
        batch_normalization_12_we0 = 1'b1;
    end else begin
        batch_normalization_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state47))) begin
        batch_normalization_12_we1 = 1'b1;
    end else begin
        batch_normalization_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        batch_normalization_14_ce0 = 1'b1;
    end else begin
        batch_normalization_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp13_stage0) & (1'b1 == ap_CS_fsm_pp13_stage0) & (ap_enable_reg_pp13_iter1 == 1'b1))) begin
        batch_normalization_15_address0 = tmp_72_reg_3174;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        batch_normalization_15_address0 = grp_k2c_batch_norm_fu_1936_stdev_array_address0;
    end else begin
        batch_normalization_15_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp13_stage0) & (ap_enable_reg_pp13_iter1 == 1'b1) & (1'b0 == ap_block_pp13_stage0_11001))) begin
        batch_normalization_15_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        batch_normalization_15_ce0 = grp_k2c_batch_norm_fu_1936_stdev_array_ce0;
    end else begin
        batch_normalization_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond11_reg_3165 == 1'd0) & (1'b1 == ap_CS_fsm_pp13_stage0) & (ap_enable_reg_pp13_iter1 == 1'b1) & (1'b0 == ap_block_pp13_stage0_11001))) begin
        batch_normalization_15_we0 = 1'b1;
    end else begin
        batch_normalization_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        batch_normalization_17_ce0 = 1'b1;
    end else begin
        batch_normalization_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        batch_normalization_18_address0 = tmp_62_reg_3036;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        batch_normalization_18_address0 = grp_k2c_batch_norm_fu_1936_stdev_array_address0;
    end else begin
        batch_normalization_18_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        batch_normalization_18_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        batch_normalization_18_ce0 = grp_k2c_batch_norm_fu_1936_stdev_array_ce0;
    end else begin
        batch_normalization_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (exitcond19_reg_3027 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        batch_normalization_18_we0 = 1'b1;
    end else begin
        batch_normalization_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1))) begin
        batch_normalization_19_address0 = tmp_64_reg_3074;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        batch_normalization_19_address0 = grp_k2c_batch_norm_fu_1936_beta_array_address0;
    end else begin
        batch_normalization_19_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1))) begin
        batch_normalization_19_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        batch_normalization_19_ce0 = grp_k2c_batch_norm_fu_1936_beta_array_ce0;
    end else begin
        batch_normalization_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (exitcond17_reg_3065 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1))) begin
        batch_normalization_19_we0 = 1'b1;
    end else begin
        batch_normalization_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp13_stage0) & (ap_enable_reg_pp13_iter0 == 1'b1) & (1'b0 == ap_block_pp13_stage0_11001))) begin
        batch_normalization_20_ce0 = 1'b1;
    end else begin
        batch_normalization_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1))) begin
        batch_normalization_21_address0 = tmp_63_reg_3055;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        batch_normalization_21_address0 = grp_k2c_batch_norm_fu_1936_gamma_array_address0;
    end else begin
        batch_normalization_21_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1))) begin
        batch_normalization_21_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        batch_normalization_21_ce0 = grp_k2c_batch_norm_fu_1936_gamma_array_ce0;
    end else begin
        batch_normalization_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (exitcond18_reg_3046 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1))) begin
        batch_normalization_21_we0 = 1'b1;
    end else begin
        batch_normalization_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        batch_normalization_22_address0 = tmp_61_reg_3017;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        batch_normalization_22_address0 = grp_k2c_batch_norm_fu_1936_mean_array_address0;
    end else begin
        batch_normalization_22_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        batch_normalization_22_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        batch_normalization_22_ce0 = grp_k2c_batch_norm_fu_1936_mean_array_ce0;
    end else begin
        batch_normalization_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (exitcond20_reg_3008 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        batch_normalization_22_we0 = 1'b1;
    end else begin
        batch_normalization_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp19_stage0) & (ap_enable_reg_pp19_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp19_stage0))) begin
        batch_normalization_23_address0 = i_cast_fu_2502_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        batch_normalization_23_address0 = tmp_60_fu_2128_p1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        batch_normalization_23_address0 = grp_k2c_batch_norm_fu_1936_outputs_array_address0;
    end else begin
        batch_normalization_23_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp21_stage0) & (ap_enable_reg_pp21_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp21_stage0))) begin
        batch_normalization_23_address1 = tmp_81_fu_2539_p1;
    end else if (((1'b0 == ap_block_pp19_stage0) & (ap_enable_reg_pp19_iter7 == 1'b1))) begin
        batch_normalization_23_address1 = batch_normalization_54_reg_3303_pp19_iter6_reg;
    end else begin
        batch_normalization_23_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | ((ap_enable_reg_pp19_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp19_stage0) & (1'b0 == ap_block_pp19_stage0_11001)))) begin
        batch_normalization_23_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        batch_normalization_23_ce0 = grp_k2c_batch_norm_fu_1936_outputs_array_ce0;
    end else begin
        batch_normalization_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp21_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp21_stage0) & (1'b0 == ap_block_pp21_stage0_11001)) | ((ap_enable_reg_pp19_iter7 == 1'b1) & (1'b0 == ap_block_pp19_stage0_11001)))) begin
        batch_normalization_23_ce1 = 1'b1;
    end else begin
        batch_normalization_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        batch_normalization_23_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        batch_normalization_23_d0 = grp_k2c_batch_norm_fu_1936_outputs_array_d0;
    end else begin
        batch_normalization_23_d0 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond21_fu_2116_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        batch_normalization_23_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        batch_normalization_23_we0 = grp_k2c_batch_norm_fu_1936_outputs_array_we0;
    end else begin
        batch_normalization_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond27_reg_3294_pp19_iter6_reg == 1'd0) & (ap_enable_reg_pp19_iter7 == 1'b1) & (1'b0 == ap_block_pp19_stage0_11001))) begin
        batch_normalization_23_we1 = 1'b1;
    end else begin
        batch_normalization_23_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp12_stage0_11001) & (ap_enable_reg_pp12_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp12_stage0))) begin
        batch_normalization_29_ce0 = 1'b1;
    end else begin
        batch_normalization_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp14_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp14_stage0) & (1'b0 == ap_block_pp14_stage0_11001))) begin
        batch_normalization_32_ce0 = 1'b1;
    end else begin
        batch_normalization_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp15_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp15_stage0) & (1'b0 == ap_block_pp15_stage0_11001))) begin
        batch_normalization_35_ce0 = 1'b1;
    end else begin
        batch_normalization_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        batch_normalization_4_address0 = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        batch_normalization_4_address0 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        batch_normalization_4_address0 = 3'd0;
    end else begin
        batch_normalization_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp20_stage0) & (ap_enable_reg_pp20_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp20_stage0))) begin
        batch_normalization_4_address1 = tmp_80_fu_2534_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        batch_normalization_4_address1 = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        batch_normalization_4_address1 = 3'd2;
    end else begin
        batch_normalization_4_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18))) begin
        batch_normalization_4_ce0 = 1'b1;
    end else begin
        batch_normalization_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | ((ap_enable_reg_pp20_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp20_stage0) & (1'b0 == ap_block_pp20_stage0_11001)))) begin
        batch_normalization_4_ce1 = 1'b1;
    end else begin
        batch_normalization_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18))) begin
        batch_normalization_4_d0 = 9'd1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        batch_normalization_4_d0 = 9'd100;
    end else begin
        batch_normalization_4_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_CS_fsm_state16) & (tmp_59_fu_2098_p2 == 1'd1)))) begin
        batch_normalization_4_we0 = 1'b1;
    end else begin
        batch_normalization_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18))) begin
        batch_normalization_4_we1 = 1'b1;
    end else begin
        batch_normalization_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp15_stage0) & (ap_enable_reg_pp15_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp15_stage0))) begin
        batch_normalization_5_address0 = tmp_74_reg_3212;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        batch_normalization_5_address0 = grp_k2c_batch_norm_fu_1936_beta_array_address0;
    end else begin
        batch_normalization_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp15_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp15_stage0) & (1'b0 == ap_block_pp15_stage0_11001))) begin
        batch_normalization_5_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        batch_normalization_5_ce0 = grp_k2c_batch_norm_fu_1936_beta_array_ce0;
    end else begin
        batch_normalization_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond9_reg_3203 == 1'd0) & (ap_enable_reg_pp15_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp15_stage0) & (1'b0 == ap_block_pp15_stage0_11001))) begin
        batch_normalization_5_we0 = 1'b1;
    end else begin
        batch_normalization_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp14_stage0) & (ap_enable_reg_pp14_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp14_stage0))) begin
        batch_normalization_6_address0 = tmp_73_reg_3193;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        batch_normalization_6_address0 = grp_k2c_batch_norm_fu_1936_gamma_array_address0;
    end else begin
        batch_normalization_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp14_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp14_stage0) & (1'b0 == ap_block_pp14_stage0_11001))) begin
        batch_normalization_6_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        batch_normalization_6_ce0 = grp_k2c_batch_norm_fu_1936_gamma_array_ce0;
    end else begin
        batch_normalization_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond10_reg_3184 == 1'd0) & (ap_enable_reg_pp14_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp14_stage0) & (1'b0 == ap_block_pp14_stage0_11001))) begin
        batch_normalization_6_we0 = 1'b1;
    end else begin
        batch_normalization_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp12_stage0) & (1'b1 == ap_CS_fsm_pp12_stage0) & (ap_enable_reg_pp12_iter1 == 1'b1))) begin
        batch_normalization_7_address0 = tmp_71_reg_3155;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        batch_normalization_7_address0 = grp_k2c_batch_norm_fu_1936_mean_array_address0;
    end else begin
        batch_normalization_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp12_stage0_11001) & (1'b1 == ap_CS_fsm_pp12_stage0) & (ap_enable_reg_pp12_iter1 == 1'b1))) begin
        batch_normalization_7_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        batch_normalization_7_ce0 = grp_k2c_batch_norm_fu_1936_mean_array_ce0;
    end else begin
        batch_normalization_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp12_stage0_11001) & (exitcond12_reg_3146 == 1'd0) & (1'b1 == ap_CS_fsm_pp12_stage0) & (ap_enable_reg_pp12_iter1 == 1'b1))) begin
        batch_normalization_7_we0 = 1'b1;
    end else begin
        batch_normalization_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp24_stage0) & (ap_enable_reg_pp24_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp24_stage0))) begin
        batch_normalization_8_address0 = i_1_cast_fu_2625_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        batch_normalization_8_address0 = tmp_70_fu_2317_p1;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        batch_normalization_8_address0 = grp_k2c_batch_norm_fu_1936_outputs_array_address0;
    end else begin
        batch_normalization_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp26_stage0) & (ap_enable_reg_pp26_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp26_stage0))) begin
        batch_normalization_8_address1 = tmp_87_fu_2667_p1;
    end else if (((1'b0 == ap_block_pp24_stage0) & (ap_enable_reg_pp24_iter7 == 1'b1))) begin
        batch_normalization_8_address1 = batch_normalization_61_reg_3419_pp24_iter6_reg;
    end else begin
        batch_normalization_8_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | ((ap_enable_reg_pp24_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp24_stage0) & (1'b0 == ap_block_pp24_stage0_11001)))) begin
        batch_normalization_8_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        batch_normalization_8_ce0 = grp_k2c_batch_norm_fu_1936_outputs_array_ce0;
    end else begin
        batch_normalization_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp26_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp26_stage0) & (1'b0 == ap_block_pp26_stage0_11001)) | ((ap_enable_reg_pp24_iter7 == 1'b1) & (1'b0 == ap_block_pp24_stage0_11001)))) begin
        batch_normalization_8_ce1 = 1'b1;
    end else begin
        batch_normalization_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        batch_normalization_8_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        batch_normalization_8_d0 = grp_k2c_batch_norm_fu_1936_outputs_array_d0;
    end else begin
        batch_normalization_8_d0 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond13_fu_2305_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state48))) begin
        batch_normalization_8_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        batch_normalization_8_we0 = grp_k2c_batch_norm_fu_1936_outputs_array_we0;
    end else begin
        batch_normalization_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond26_reg_3410_pp24_iter6_reg == 1'd0) & (ap_enable_reg_pp24_iter7 == 1'b1) & (1'b0 == ap_block_pp24_stage0_11001))) begin
        batch_normalization_8_we1 = 1'b1;
    end else begin
        batch_normalization_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        batch_normalization_s_ce0 = 1'b1;
    end else begin
        batch_normalization_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp10_stage0_11001) & (ap_enable_reg_pp10_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp10_stage0))) begin
        dense_1_bias_array8_ce0 = 1'b1;
    end else begin
        dense_1_bias_array8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp10_stage0) & (1'b1 == ap_CS_fsm_pp10_stage0) & (ap_enable_reg_pp10_iter1 == 1'b1))) begin
        dense_1_bias_array_address0 = tmp_67_reg_3120;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        dense_1_bias_array_address0 = grp_k2c_dense_1_fu_1850_bias_array_address0;
    end else begin
        dense_1_bias_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp10_stage0_11001) & (1'b1 == ap_CS_fsm_pp10_stage0) & (ap_enable_reg_pp10_iter1 == 1'b1))) begin
        dense_1_bias_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        dense_1_bias_array_ce0 = grp_k2c_dense_1_fu_1850_bias_array_ce0;
    end else begin
        dense_1_bias_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp10_stage0_11001) & (exitcond14_reg_3111 == 1'd0) & (1'b1 == ap_CS_fsm_pp10_stage0) & (ap_enable_reg_pp10_iter1 == 1'b1))) begin
        dense_1_bias_array_we0 = 1'b1;
    end else begin
        dense_1_bias_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        dense_1_fwork_address0 = tmp_68_fu_2288_p1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        dense_1_fwork_address0 = grp_k2c_dense_1_fu_1850_fwork_address0;
    end else begin
        dense_1_fwork_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        dense_1_fwork_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        dense_1_fwork_ce0 = grp_k2c_dense_1_fu_1850_fwork_ce0;
    end else begin
        dense_1_fwork_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        dense_1_fwork_ce1 = grp_k2c_dense_1_fu_1850_fwork_ce1;
    end else begin
        dense_1_fwork_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        dense_1_fwork_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        dense_1_fwork_d0 = grp_k2c_dense_1_fu_1850_fwork_d0;
    end else begin
        dense_1_fwork_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        dense_1_fwork_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        dense_1_fwork_we0 = grp_k2c_dense_1_fu_1850_fwork_we0;
    end else begin
        dense_1_fwork_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp9_stage0) & (1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter1 == 1'b1))) begin
        dense_1_kernel_array_1_address0 = tmp_66_reg_3101;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        dense_1_kernel_array_1_address0 = grp_k2c_dense_1_fu_1850_kernel_array_address0;
    end else begin
        dense_1_kernel_array_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp9_stage0_11001) & (1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter1 == 1'b1))) begin
        dense_1_kernel_array_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        dense_1_kernel_array_1_ce0 = grp_k2c_dense_1_fu_1850_kernel_array_ce0;
    end else begin
        dense_1_kernel_array_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp9_stage0_11001) & (exitcond15_reg_3092 == 1'd0) & (1'b1 == ap_CS_fsm_pp9_stage0) & (ap_enable_reg_pp9_iter1 == 1'b1))) begin
        dense_1_kernel_array_1_we0 = 1'b1;
    end else begin
        dense_1_kernel_array_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp9_stage0_11001) & (ap_enable_reg_pp9_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp9_stage0))) begin
        dense_1_kernel_array_ce0 = 1'b1;
    end else begin
        dense_1_kernel_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        dense_1_kernel_shape_address0 = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        dense_1_kernel_shape_address0 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        dense_1_kernel_shape_address0 = 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        dense_1_kernel_shape_address0 = grp_k2c_dense_1_fu_1850_kernel_shape_address0;
    end else begin
        dense_1_kernel_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        dense_1_kernel_shape_address1 = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        dense_1_kernel_shape_address1 = 3'd2;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        dense_1_kernel_shape_address1 = grp_k2c_dense_1_fu_1850_kernel_shape_address1;
    end else begin
        dense_1_kernel_shape_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state38))) begin
        dense_1_kernel_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        dense_1_kernel_shape_ce0 = grp_k2c_dense_1_fu_1850_kernel_shape_ce0;
    end else begin
        dense_1_kernel_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        dense_1_kernel_shape_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        dense_1_kernel_shape_ce1 = grp_k2c_dense_1_fu_1850_kernel_shape_ce1;
    end else begin
        dense_1_kernel_shape_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        dense_1_kernel_shape_d0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        dense_1_kernel_shape_d0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        dense_1_kernel_shape_d0 = 64'd100;
    end else begin
        dense_1_kernel_shape_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state38))) begin
        dense_1_kernel_shape_we0 = 1'b1;
    end else begin
        dense_1_kernel_shape_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        dense_1_kernel_shape_we1 = 1'b1;
    end else begin
        dense_1_kernel_shape_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        dense_1_output_array_address0 = tmp_65_fu_2225_p1;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        dense_1_output_array_address0 = grp_k2c_batch_norm_fu_1936_inputs_array_address0;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        dense_1_output_array_address0 = grp_k2c_dense_1_fu_1850_output_array_address0;
    end else begin
        dense_1_output_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        dense_1_output_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        dense_1_output_array_ce0 = grp_k2c_batch_norm_fu_1936_inputs_array_ce0;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        dense_1_output_array_ce0 = grp_k2c_dense_1_fu_1850_output_array_ce0;
    end else begin
        dense_1_output_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        dense_1_output_array_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        dense_1_output_array_d0 = grp_k2c_dense_1_fu_1850_output_array_d0;
    end else begin
        dense_1_output_array_d0 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond16_fu_2213_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state35))) begin
        dense_1_output_array_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        dense_1_output_array_we0 = grp_k2c_dense_1_fu_1850_output_array_we0;
    end else begin
        dense_1_output_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        dense_1_output_shape_address0 = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        dense_1_output_shape_address0 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        dense_1_output_shape_address0 = 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        dense_1_output_shape_address0 = grp_k2c_batch_norm_fu_1936_inputs_shape_address0;
    end else begin
        dense_1_output_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        dense_1_output_shape_address1 = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        dense_1_output_shape_address1 = 3'd2;
    end else begin
        dense_1_output_shape_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state34))) begin
        dense_1_output_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        dense_1_output_shape_ce0 = grp_k2c_batch_norm_fu_1936_inputs_shape_ce0;
    end else begin
        dense_1_output_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34))) begin
        dense_1_output_shape_ce1 = 1'b1;
    end else begin
        dense_1_output_shape_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34))) begin
        dense_1_output_shape_d0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        dense_1_output_shape_d0 = 64'd10;
    end else begin
        dense_1_output_shape_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state34))) begin
        dense_1_output_shape_we0 = 1'b1;
    end else begin
        dense_1_output_shape_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34))) begin
        dense_1_output_shape_we1 = 1'b1;
    end else begin
        dense_1_output_shape_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp18_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp18_stage0) & (1'b0 == ap_block_pp18_stage0_11001))) begin
        dense_2_bias_array13_ce0 = 1'b1;
    end else begin
        dense_2_bias_array13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp18_stage0) & (ap_enable_reg_pp18_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp18_stage0))) begin
        dense_2_bias_array_address0 = tmp_77_reg_3258;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        dense_2_bias_array_address0 = grp_k2c_dense2_fu_1873_dense_2_bias_array_address0;
    end else begin
        dense_2_bias_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp18_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp18_stage0) & (1'b0 == ap_block_pp18_stage0_11001))) begin
        dense_2_bias_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        dense_2_bias_array_ce0 = grp_k2c_dense2_fu_1873_dense_2_bias_array_ce0;
    end else begin
        dense_2_bias_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond6_reg_3249 == 1'd0) & (ap_enable_reg_pp18_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp18_stage0) & (1'b0 == ap_block_pp18_stage0_11001))) begin
        dense_2_bias_array_we0 = 1'b1;
    end else begin
        dense_2_bias_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        dense_2_fwork_address0 = tmp_78_fu_2477_p1;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        dense_2_fwork_address0 = grp_k2c_dense2_fu_1873_fwork_address0;
    end else begin
        dense_2_fwork_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        dense_2_fwork_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        dense_2_fwork_ce0 = grp_k2c_dense2_fu_1873_fwork_ce0;
    end else begin
        dense_2_fwork_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state123)) begin
        dense_2_fwork_ce1 = grp_k2c_dense2_fu_1873_fwork_ce1;
    end else begin
        dense_2_fwork_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        dense_2_fwork_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        dense_2_fwork_d0 = grp_k2c_dense2_fu_1873_fwork_d0;
    end else begin
        dense_2_fwork_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        dense_2_fwork_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        dense_2_fwork_we0 = grp_k2c_dense2_fu_1873_fwork_we0;
    end else begin
        dense_2_fwork_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp17_stage0) & (ap_enable_reg_pp17_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp17_stage0))) begin
        dense_2_kernel_array_2_address0 = tmp_76_reg_3239;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        dense_2_kernel_array_2_address0 = grp_k2c_dense2_fu_1873_dense_2_kernel_array_2_address0;
    end else begin
        dense_2_kernel_array_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp17_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp17_stage0) & (1'b0 == ap_block_pp17_stage0_11001))) begin
        dense_2_kernel_array_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        dense_2_kernel_array_2_ce0 = grp_k2c_dense2_fu_1873_dense_2_kernel_array_2_ce0;
    end else begin
        dense_2_kernel_array_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond7_reg_3230 == 1'd0) & (ap_enable_reg_pp17_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp17_stage0) & (1'b0 == ap_block_pp17_stage0_11001))) begin
        dense_2_kernel_array_2_we0 = 1'b1;
    end else begin
        dense_2_kernel_array_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp17_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp17_stage0) & (1'b0 == ap_block_pp17_stage0_11001))) begin
        dense_2_kernel_array_ce0 = 1'b1;
    end else begin
        dense_2_kernel_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        dense_2_kernel_shape_address0 = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        dense_2_kernel_shape_address0 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        dense_2_kernel_shape_address0 = 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        dense_2_kernel_shape_address0 = grp_k2c_dense2_fu_1873_dense_2_kernel_shape_address0;
    end else begin
        dense_2_kernel_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        dense_2_kernel_shape_address1 = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        dense_2_kernel_shape_address1 = 3'd2;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        dense_2_kernel_shape_address1 = grp_k2c_dense2_fu_1873_dense_2_kernel_shape_address1;
    end else begin
        dense_2_kernel_shape_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state67))) begin
        dense_2_kernel_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        dense_2_kernel_shape_ce0 = grp_k2c_dense2_fu_1873_dense_2_kernel_shape_ce0;
    end else begin
        dense_2_kernel_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state67))) begin
        dense_2_kernel_shape_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        dense_2_kernel_shape_ce1 = grp_k2c_dense2_fu_1873_dense_2_kernel_shape_ce1;
    end else begin
        dense_2_kernel_shape_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        dense_2_kernel_shape_d0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        dense_2_kernel_shape_d0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        dense_2_kernel_shape_d0 = 64'd10;
    end else begin
        dense_2_kernel_shape_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state67))) begin
        dense_2_kernel_shape_we0 = 1'b1;
    end else begin
        dense_2_kernel_shape_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state67))) begin
        dense_2_kernel_shape_we1 = 1'b1;
    end else begin
        dense_2_kernel_shape_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        dense_2_output_array_address0 = tmp_96_fu_2901_p1;
    end else if ((1'b1 == ap_CS_fsm_state133)) begin
        dense_2_output_array_address0 = dense_2_output_array_9_reg_3565;
    end else if ((1'b1 == ap_CS_fsm_state132)) begin
        dense_2_output_array_address0 = i_4_cast_fu_2848_p1;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        dense_2_output_array_address0 = dense_2_output_array_7_reg_3537;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        dense_2_output_array_address0 = i_3_cast_fu_2831_p1;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        dense_2_output_array_address0 = i_2_cast_fu_2722_p1;
    end else if ((1'b1 == ap_CS_fsm_state124)) begin
        dense_2_output_array_address0 = 12'd0;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        dense_2_output_array_address0 = tmp_75_fu_2414_p1;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        dense_2_output_array_address0 = grp_k2c_dense2_fu_1873_dense_2_output_array_address0;
    end else begin
        dense_2_output_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state64))) begin
        dense_2_output_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        dense_2_output_array_ce0 = grp_k2c_dense2_fu_1873_dense_2_output_array_ce0;
    end else begin
        dense_2_output_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state133)) begin
        dense_2_output_array_d0 = tmp_94_fu_1970_p2;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        dense_2_output_array_d0 = tmp_92_fu_1988_p2;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        dense_2_output_array_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        dense_2_output_array_d0 = grp_k2c_dense2_fu_1873_dense_2_output_array_d0;
    end else begin
        dense_2_output_array_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state129) | ((exitcond8_fu_2402_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state64)))) begin
        dense_2_output_array_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        dense_2_output_array_we0 = grp_k2c_dense2_fu_1873_dense_2_output_array_we0;
    end else begin
        dense_2_output_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        dense_2_output_shape_address0 = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        dense_2_output_shape_address0 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        dense_2_output_shape_address0 = 3'd0;
    end else begin
        dense_2_output_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state134)) begin
        dense_2_output_shape_address1 = tmp_95_fu_2891_p1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        dense_2_output_shape_address1 = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        dense_2_output_shape_address1 = 3'd2;
    end else begin
        dense_2_output_shape_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state63))) begin
        dense_2_output_shape_ce0 = 1'b1;
    end else begin
        dense_2_output_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state134))) begin
        dense_2_output_shape_ce1 = 1'b1;
    end else begin
        dense_2_output_shape_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state63))) begin
        dense_2_output_shape_d0 = 5'd1;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        dense_2_output_shape_d0 = 5'd6;
    end else begin
        dense_2_output_shape_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state63))) begin
        dense_2_output_shape_we0 = 1'b1;
    end else begin
        dense_2_output_shape_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state63))) begin
        dense_2_output_shape_we1 = 1'b1;
    end else begin
        dense_2_output_shape_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        dense_bias_array_0_address0 = tmp_57_reg_2982;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_bias_array_0_address0 = grp_k2c_dense_fu_1902_bias_array_address0;
    end else begin
        dense_bias_array_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        dense_bias_array_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_bias_array_0_ce0 = grp_k2c_dense_fu_1902_bias_array_ce0;
    end else begin
        dense_bias_array_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond22_reg_2973 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        dense_bias_array_0_we0 = 1'b1;
    end else begin
        dense_bias_array_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        dense_bias_array_ce0 = 1'b1;
    end else begin
        dense_bias_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        dense_fwork_address0 = tmp_58_fu_2093_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_fwork_address0 = grp_k2c_dense_fu_1902_fwork_address0;
    end else begin
        dense_fwork_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        dense_fwork_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_fwork_ce0 = grp_k2c_dense_fu_1902_fwork_ce0;
    end else begin
        dense_fwork_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_fwork_ce1 = grp_k2c_dense_fu_1902_fwork_ce1;
    end else begin
        dense_fwork_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        dense_fwork_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_fwork_d0 = grp_k2c_dense_fu_1902_fwork_d0;
    end else begin
        dense_fwork_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        dense_fwork_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_fwork_we0 = grp_k2c_dense_fu_1902_fwork_we0;
    end else begin
        dense_fwork_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        dense_kernel_array_address0 = tmp_56_reg_2963;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        dense_kernel_array_address0 = tmp_56_fu_2065_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dense_kernel_array_address0 = tmp_s_reg_2940;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_kernel_array_address0 = grp_k2c_dense_fu_1902_kernel_array_address0;
    end else begin
        dense_kernel_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        dense_kernel_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_kernel_array_ce0 = grp_k2c_dense_fu_1902_kernel_array_ce0;
    end else begin
        dense_kernel_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        dense_kernel_array_d0 = dense_kernel_array_q0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dense_kernel_array_d0 = face_classifier_c_de_q0;
    end else begin
        dense_kernel_array_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp1_stage0_11001) & (exitcond23_reg_2954 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        dense_kernel_array_we0 = 1'b1;
    end else begin
        dense_kernel_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dense_kernel_shape_address0 = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        dense_kernel_shape_address0 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dense_kernel_shape_address0 = 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_kernel_shape_address0 = grp_k2c_dense_fu_1902_kernel_shape_address0;
    end else begin
        dense_kernel_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dense_kernel_shape_address1 = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        dense_kernel_shape_address1 = 3'd2;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_kernel_shape_address1 = grp_k2c_dense_fu_1902_kernel_shape_address1;
    end else begin
        dense_kernel_shape_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9))) begin
        dense_kernel_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_kernel_shape_ce0 = grp_k2c_dense_fu_1902_kernel_shape_ce0;
    end else begin
        dense_kernel_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        dense_kernel_shape_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_kernel_shape_ce1 = grp_k2c_dense_fu_1902_kernel_shape_ce1;
    end else begin
        dense_kernel_shape_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dense_kernel_shape_d0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        dense_kernel_shape_d0 = 64'd100;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dense_kernel_shape_d0 = 64'd2622;
    end else begin
        dense_kernel_shape_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | ((tmp_55_reg_2950 == 1'd1) & (1'b1 == ap_CS_fsm_state7)))) begin
        dense_kernel_shape_we0 = 1'b1;
    end else begin
        dense_kernel_shape_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        dense_kernel_shape_we1 = 1'b1;
    end else begin
        dense_kernel_shape_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dense_output_array_address0 = tmp_fu_2031_p1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        dense_output_array_address0 = grp_k2c_batch_norm_fu_1936_inputs_array_address0;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_output_array_address0 = grp_k2c_dense_fu_1902_output_array_address0;
    end else begin
        dense_output_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dense_output_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        dense_output_array_ce0 = grp_k2c_batch_norm_fu_1936_inputs_array_ce0;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_output_array_ce0 = grp_k2c_dense_fu_1902_output_array_ce0;
    end else begin
        dense_output_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dense_output_array_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_output_array_d0 = grp_k2c_dense_fu_1902_output_array_d0;
    end else begin
        dense_output_array_d0 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond24_fu_2019_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        dense_output_array_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dense_output_array_we0 = grp_k2c_dense_fu_1902_output_array_we0;
    end else begin
        dense_output_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        dense_output_shape_address0 = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        dense_output_shape_address0 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        dense_output_shape_address0 = 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        dense_output_shape_address0 = grp_k2c_batch_norm_fu_1936_inputs_shape_address0;
    end else begin
        dense_output_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        dense_output_shape_address1 = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        dense_output_shape_address1 = 3'd2;
    end else begin
        dense_output_shape_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        dense_output_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        dense_output_shape_ce0 = grp_k2c_batch_norm_fu_1936_inputs_shape_ce0;
    end else begin
        dense_output_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        dense_output_shape_ce1 = 1'b1;
    end else begin
        dense_output_shape_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        dense_output_shape_d0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        dense_output_shape_d0 = 64'd100;
    end else begin
        dense_output_shape_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        dense_output_shape_we0 = 1'b1;
    end else begin
        dense_output_shape_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        dense_output_shape_we1 = 1'b1;
    end else begin
        dense_output_shape_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp23_stage0) & (ap_enable_reg_pp23_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp23_stage0))) begin
        dropout_2_output_arr_address0 = tmp_84_reg_3371;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        dropout_2_output_arr_address0 = grp_k2c_dense_1_fu_1850_input_array_address0;
    end else begin
        dropout_2_output_arr_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp23_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp23_stage0) & (1'b0 == ap_block_pp23_stage0_11001))) begin
        dropout_2_output_arr_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        dropout_2_output_arr_ce0 = grp_k2c_dense_1_fu_1850_input_array_ce0;
    end else begin
        dropout_2_output_arr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp23_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp23_stage0) & (1'b0 == ap_block_pp23_stage0_11001) & (tmp_85_reg_3376 == 1'd1))) begin
        dropout_2_output_arr_we0 = 1'b1;
    end else begin
        dropout_2_output_arr_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp22_stage0) & (ap_enable_reg_pp22_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp22_stage0))) begin
        dropout_2_output_sha_address0 = tmp_83_reg_3361;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        dropout_2_output_sha_address0 = grp_k2c_dense_1_fu_1850_input_shape_address0;
    end else begin
        dropout_2_output_sha_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp22_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp22_stage0) & (1'b0 == ap_block_pp22_stage0_11001))) begin
        dropout_2_output_sha_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        dropout_2_output_sha_ce0 = grp_k2c_dense_1_fu_1850_input_shape_ce0;
    end else begin
        dropout_2_output_sha_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond4_reg_3352 == 1'd0) & (ap_enable_reg_pp22_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp22_stage0) & (1'b0 == ap_block_pp22_stage0_11001))) begin
        dropout_2_output_sha_we0 = 1'b1;
    end else begin
        dropout_2_output_sha_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp28_stage0) & (ap_enable_reg_pp28_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp28_stage0))) begin
        dropout_3_output_arr_address0 = tmp_89_reg_3496;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        dropout_3_output_arr_address0 = grp_k2c_dense2_fu_1873_dropout_3_output_arr_address0;
    end else begin
        dropout_3_output_arr_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp28_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp28_stage0) & (1'b0 == ap_block_pp28_stage0_11001))) begin
        dropout_3_output_arr_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        dropout_3_output_arr_ce0 = grp_k2c_dense2_fu_1873_dropout_3_output_arr_ce0;
    end else begin
        dropout_3_output_arr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond28_reg_3487 == 1'd0) & (ap_enable_reg_pp28_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp28_stage0) & (1'b0 == ap_block_pp28_stage0_11001))) begin
        dropout_3_output_arr_we0 = 1'b1;
    end else begin
        dropout_3_output_arr_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp27_stage0) & (ap_enable_reg_pp27_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp27_stage0))) begin
        dropout_3_output_sha_address0 = tmp_88_reg_3477;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        dropout_3_output_sha_address0 = grp_k2c_dense2_fu_1873_dropout_3_output_sha_address0;
    end else begin
        dropout_3_output_sha_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp27_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp27_stage0) & (1'b0 == ap_block_pp27_stage0_11001))) begin
        dropout_3_output_sha_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        dropout_3_output_sha_ce0 = grp_k2c_dense2_fu_1873_dropout_3_output_sha_ce0;
    end else begin
        dropout_3_output_sha_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_reg_3468 == 1'd0) & (ap_enable_reg_pp27_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp27_stage0) & (1'b0 == ap_block_pp27_stage0_11001))) begin
        dropout_3_output_sha_we0 = 1'b1;
    end else begin
        dropout_3_output_sha_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        face_classifier_c_de_ce0 = 1'b1;
    end else begin
        face_classifier_c_de_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state129)) begin
        grp_fu_1963_opcode = 2'd1;
    end else if ((1'b1 == ap_CS_fsm_state130)) begin
        grp_fu_1963_opcode = 2'd0;
    end else begin
        grp_fu_1963_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state130)) begin
        grp_fu_1963_p0 = sum_reg_1805;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        grp_fu_1963_p0 = dense_2_output_array_q0;
    end else begin
        grp_fu_1963_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state130)) begin
        grp_fu_1963_p1 = tmp_92_reg_3542;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        grp_fu_1963_p1 = xmax1_reg_1784;
    end else begin
        grp_fu_1963_p1 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond26_reg_3410 == 1'd0) & (1'b0 == ap_block_pp24_stage0) & (ap_enable_reg_pp24_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp24_stage0))) begin
        grp_generic_tanh_float_s_fu_1921_t_in = batch_normalization_8_q0;
    end else if (((exitcond27_reg_3294 == 1'd0) & (1'b0 == ap_block_pp19_stage0) & (ap_enable_reg_pp19_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp19_stage0))) begin
        grp_generic_tanh_float_s_fu_1921_t_in = batch_normalization_23_q0;
    end else begin
        grp_generic_tanh_float_s_fu_1921_t_in = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        grp_k2c_batch_norm_fu_1936_beta_array_q0 = batch_normalization_5_q0;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_k2c_batch_norm_fu_1936_beta_array_q0 = batch_normalization_19_q0;
    end else begin
        grp_k2c_batch_norm_fu_1936_beta_array_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        grp_k2c_batch_norm_fu_1936_gamma_array_q0 = batch_normalization_6_q0;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_k2c_batch_norm_fu_1936_gamma_array_q0 = batch_normalization_21_q0;
    end else begin
        grp_k2c_batch_norm_fu_1936_gamma_array_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        grp_k2c_batch_norm_fu_1936_inputs_array_q0 = dense_1_output_array_q0;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_k2c_batch_norm_fu_1936_inputs_array_q0 = dense_output_array_q0;
    end else begin
        grp_k2c_batch_norm_fu_1936_inputs_array_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        grp_k2c_batch_norm_fu_1936_inputs_ndim_read = dense_1_output_ndim;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_k2c_batch_norm_fu_1936_inputs_ndim_read = dense_output_ndim;
    end else begin
        grp_k2c_batch_norm_fu_1936_inputs_ndim_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        grp_k2c_batch_norm_fu_1936_inputs_numel_read = reg_2001;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_k2c_batch_norm_fu_1936_inputs_numel_read = dense_output_numel;
    end else begin
        grp_k2c_batch_norm_fu_1936_inputs_numel_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        grp_k2c_batch_norm_fu_1936_inputs_shape_q0 = dense_1_output_shape_q0;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_k2c_batch_norm_fu_1936_inputs_shape_q0 = dense_output_shape_q0;
    end else begin
        grp_k2c_batch_norm_fu_1936_inputs_shape_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        grp_k2c_batch_norm_fu_1936_mean_array_q0 = batch_normalization_7_q0;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_k2c_batch_norm_fu_1936_mean_array_q0 = batch_normalization_22_q0;
    end else begin
        grp_k2c_batch_norm_fu_1936_mean_array_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        grp_k2c_batch_norm_fu_1936_stdev_array_q0 = batch_normalization_15_q0;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_k2c_batch_norm_fu_1936_stdev_array_q0 = batch_normalization_18_q0;
    end else begin
        grp_k2c_batch_norm_fu_1936_stdev_array_q0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((exitcond24_fu_2019_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((tmp_55_reg_2950 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((exitcond23_fu_2053_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((exitcond23_fu_2053_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((exitcond22_fu_2070_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((exitcond22_fu_2070_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (tmp_59_fu_2098_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((exitcond21_fu_2116_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((exitcond20_fu_2133_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((exitcond20_fu_2133_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if (~((exitcond19_fu_2150_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if (((exitcond19_fu_2150_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if (~((exitcond18_fu_2167_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if (((exitcond18_fu_2167_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_pp7_stage0;
        end
        ap_ST_fsm_pp7_stage0 : begin
            if (~((exitcond17_fu_2184_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if (((exitcond17_fu_2184_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            if (((exitcond16_fu_2213_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_pp9_stage0;
        end
        ap_ST_fsm_pp9_stage0 : begin
            if (~((exitcond15_fu_2242_p2 == 1'd1) & (ap_enable_reg_pp9_iter0 == 1'b1) & (1'b0 == ap_block_pp9_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage0;
            end else if (((exitcond15_fu_2242_p2 == 1'd1) & (ap_enable_reg_pp9_iter0 == 1'b1) & (1'b0 == ap_block_pp9_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage0;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_pp10_stage0;
        end
        ap_ST_fsm_pp10_stage0 : begin
            if (~((exitcond14_fu_2265_p2 == 1'd1) & (ap_enable_reg_pp10_iter0 == 1'b1) & (1'b0 == ap_block_pp10_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp10_stage0;
            end else if (((exitcond14_fu_2265_p2 == 1'd1) & (ap_enable_reg_pp10_iter0 == 1'b1) & (1'b0 == ap_block_pp10_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp10_stage0;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            if (((1'b1 == ap_CS_fsm_state45) & (tmp_69_fu_2293_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            if (((exitcond13_fu_2305_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_pp12_stage0;
        end
        ap_ST_fsm_pp12_stage0 : begin
            if (~((exitcond12_fu_2322_p2 == 1'd1) & (ap_enable_reg_pp12_iter0 == 1'b1) & (1'b0 == ap_block_pp12_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp12_stage0;
            end else if (((exitcond12_fu_2322_p2 == 1'd1) & (ap_enable_reg_pp12_iter0 == 1'b1) & (1'b0 == ap_block_pp12_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp12_stage0;
            end
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_pp13_stage0;
        end
        ap_ST_fsm_pp13_stage0 : begin
            if (~((exitcond11_fu_2339_p2 == 1'd1) & (ap_enable_reg_pp13_iter0 == 1'b1) & (1'b0 == ap_block_pp13_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp13_stage0;
            end else if (((exitcond11_fu_2339_p2 == 1'd1) & (ap_enable_reg_pp13_iter0 == 1'b1) & (1'b0 == ap_block_pp13_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp13_stage0;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_pp14_stage0;
        end
        ap_ST_fsm_pp14_stage0 : begin
            if (~((ap_enable_reg_pp14_iter0 == 1'b1) & (1'b0 == ap_block_pp14_stage0_subdone) & (exitcond10_fu_2356_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp14_stage0;
            end else if (((ap_enable_reg_pp14_iter0 == 1'b1) & (1'b0 == ap_block_pp14_stage0_subdone) & (exitcond10_fu_2356_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp14_stage0;
            end
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_pp15_stage0;
        end
        ap_ST_fsm_pp15_stage0 : begin
            if (~((ap_enable_reg_pp15_iter0 == 1'b1) & (1'b0 == ap_block_pp15_stage0_subdone) & (exitcond9_fu_2373_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp15_stage0;
            end else if (((ap_enable_reg_pp15_iter0 == 1'b1) & (1'b0 == ap_block_pp15_stage0_subdone) & (exitcond9_fu_2373_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp15_stage0;
            end
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            if (((exitcond8_fu_2402_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state64))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_pp17_stage0;
        end
        ap_ST_fsm_pp17_stage0 : begin
            if (~((ap_enable_reg_pp17_iter0 == 1'b1) & (1'b0 == ap_block_pp17_stage0_subdone) & (exitcond7_fu_2431_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp17_stage0;
            end else if (((ap_enable_reg_pp17_iter0 == 1'b1) & (1'b0 == ap_block_pp17_stage0_subdone) & (exitcond7_fu_2431_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp17_stage0;
            end
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_pp18_stage0;
        end
        ap_ST_fsm_pp18_stage0 : begin
            if (~((ap_enable_reg_pp18_iter0 == 1'b1) & (1'b0 == ap_block_pp18_stage0_subdone) & (exitcond6_fu_2454_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp18_stage0;
            end else if (((ap_enable_reg_pp18_iter0 == 1'b1) & (1'b0 == ap_block_pp18_stage0_subdone) & (exitcond6_fu_2454_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp18_stage0;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            if (((1'b1 == ap_CS_fsm_state74) & (tmp_79_fu_2482_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end
        end
        ap_ST_fsm_state75 : begin
            if (((grp_k2c_dense_fu_1902_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state75))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            if (((1'b1 == ap_CS_fsm_state77) & (grp_k2c_batch_norm_fu_1936_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp19_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end
        end
        ap_ST_fsm_pp19_stage0 : begin
            if ((~((ap_enable_reg_pp19_iter0 == 1'b1) & (ap_enable_reg_pp19_iter1 == 1'b0) & (1'b0 == ap_block_pp19_stage0_subdone) & (exitcond27_fu_2507_p2 == 1'd1)) & ~((ap_enable_reg_pp19_iter7 == 1'b1) & (ap_enable_reg_pp19_iter6 == 1'b0) & (1'b0 == ap_block_pp19_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp19_stage0;
            end else if ((((ap_enable_reg_pp19_iter7 == 1'b1) & (ap_enable_reg_pp19_iter6 == 1'b0) & (1'b0 == ap_block_pp19_stage0_subdone)) | ((ap_enable_reg_pp19_iter0 == 1'b1) & (ap_enable_reg_pp19_iter1 == 1'b0) & (1'b0 == ap_block_pp19_stage0_subdone) & (exitcond27_fu_2507_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state86;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp19_stage0;
            end
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_pp20_stage0;
        end
        ap_ST_fsm_pp20_stage0 : begin
            if (~((ap_enable_reg_pp20_iter0 == 1'b1) & (1'b0 == ap_block_pp20_stage0_subdone) & (exitcond5_fu_2522_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp20_stage0;
            end else if (((ap_enable_reg_pp20_iter0 == 1'b1) & (1'b0 == ap_block_pp20_stage0_subdone) & (exitcond5_fu_2522_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp20_stage0;
            end
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_pp21_stage0;
        end
        ap_ST_fsm_pp21_stage0 : begin
            if (~((tmp_82_fu_2544_p2 == 1'd0) & (ap_enable_reg_pp21_iter0 == 1'b1) & (1'b0 == ap_block_pp21_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp21_stage0;
            end else if (((tmp_82_fu_2544_p2 == 1'd0) & (ap_enable_reg_pp21_iter0 == 1'b1) & (1'b0 == ap_block_pp21_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state92;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp21_stage0;
            end
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_pp22_stage0;
        end
        ap_ST_fsm_pp22_stage0 : begin
            if (~((ap_enable_reg_pp22_iter0 == 1'b1) & (1'b0 == ap_block_pp22_stage0_subdone) & (exitcond4_fu_2555_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp22_stage0;
            end else if (((ap_enable_reg_pp22_iter0 == 1'b1) & (1'b0 == ap_block_pp22_stage0_subdone) & (exitcond4_fu_2555_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp22_stage0;
            end
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_pp23_stage0;
        end
        ap_ST_fsm_pp23_stage0 : begin
            if (~((tmp_85_fu_2582_p2 == 1'd0) & (ap_enable_reg_pp23_iter0 == 1'b1) & (1'b0 == ap_block_pp23_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp23_stage0;
            end else if (((tmp_85_fu_2582_p2 == 1'd0) & (ap_enable_reg_pp23_iter0 == 1'b1) & (1'b0 == ap_block_pp23_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp23_stage0;
            end
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            if (((1'b1 == ap_CS_fsm_state99) & (grp_k2c_dense_1_fu_1850_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state100;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            if (((1'b1 == ap_CS_fsm_state101) & (grp_k2c_batch_norm_fu_1936_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp24_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state101;
            end
        end
        ap_ST_fsm_pp24_stage0 : begin
            if ((~((ap_enable_reg_pp24_iter0 == 1'b1) & (ap_enable_reg_pp24_iter1 == 1'b0) & (1'b0 == ap_block_pp24_stage0_subdone) & (exitcond26_fu_2613_p2 == 1'd1)) & ~((ap_enable_reg_pp24_iter7 == 1'b1) & (ap_enable_reg_pp24_iter6 == 1'b0) & (1'b0 == ap_block_pp24_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp24_stage0;
            end else if ((((ap_enable_reg_pp24_iter7 == 1'b1) & (ap_enable_reg_pp24_iter6 == 1'b0) & (1'b0 == ap_block_pp24_stage0_subdone)) | ((ap_enable_reg_pp24_iter0 == 1'b1) & (ap_enable_reg_pp24_iter1 == 1'b0) & (1'b0 == ap_block_pp24_stage0_subdone) & (exitcond26_fu_2613_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state110;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp24_stage0;
            end
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_pp25_stage0;
        end
        ap_ST_fsm_pp25_stage0 : begin
            if (~((ap_enable_reg_pp25_iter0 == 1'b1) & (1'b0 == ap_block_pp25_stage0_subdone) & (exitcond3_fu_2638_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp25_stage0;
            end else if (((ap_enable_reg_pp25_iter0 == 1'b1) & (1'b0 == ap_block_pp25_stage0_subdone) & (exitcond3_fu_2638_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state113;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp25_stage0;
            end
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_pp26_stage0;
        end
        ap_ST_fsm_pp26_stage0 : begin
            if (~((ap_enable_reg_pp26_iter0 == 1'b1) & (1'b0 == ap_block_pp26_stage0_subdone) & (exitcond25_fu_2655_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp26_stage0;
            end else if (((ap_enable_reg_pp26_iter0 == 1'b1) & (1'b0 == ap_block_pp26_stage0_subdone) & (exitcond25_fu_2655_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state116;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp26_stage0;
            end
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_pp27_stage0;
        end
        ap_ST_fsm_pp27_stage0 : begin
            if (~((ap_enable_reg_pp27_iter0 == 1'b1) & (1'b0 == ap_block_pp27_stage0_subdone) & (exitcond2_fu_2683_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp27_stage0;
            end else if (((ap_enable_reg_pp27_iter0 == 1'b1) & (1'b0 == ap_block_pp27_stage0_subdone) & (exitcond2_fu_2683_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state119;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp27_stage0;
            end
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_pp28_stage0;
        end
        ap_ST_fsm_pp28_stage0 : begin
            if (~((ap_enable_reg_pp28_iter0 == 1'b1) & (1'b0 == ap_block_pp28_stage0_subdone) & (exitcond28_fu_2705_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp28_stage0;
            end else if (((ap_enable_reg_pp28_iter0 == 1'b1) & (1'b0 == ap_block_pp28_stage0_subdone) & (exitcond28_fu_2705_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state122;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp28_stage0;
            end
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            if (((grp_k2c_dense2_fu_1873_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state123))) begin
                ap_NS_fsm = ap_ST_fsm_state124;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state123;
            end
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            if (((1'b1 == ap_CS_fsm_state126) & (exitcond1_fu_2727_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state128;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state127;
            end
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state128 : begin
            if (((1'b1 == ap_CS_fsm_state128) & (tmp_90_fu_2836_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state131;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state129;
            end
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            if (((1'b1 == ap_CS_fsm_state132) & (tmp_93_fu_2853_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state134;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state133;
            end
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state134 : begin
            if (((1'b1 == ap_CS_fsm_state134) & (exitcond_fu_2879_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state136;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state135;
            end
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state136 : begin
            if (((tmp_97_fu_2906_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state136))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state137;
            end
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign activation_3_output_array_address0 = tmp_96_reg_3593;

assign activation_3_output_array_d0 = dense_2_output_array_q0;

assign activation_3_output_ndim = dense_2_output_ndim;

assign activation_3_output_numel = dense_2_output_numel;

assign activation_3_output_shape_address0 = tmp_95_reg_3583;

assign activation_3_output_shape_d0 = $signed(dense_2_output_shape_q1);

assign ap_CS_fsm_pp10_stage0 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_pp12_stage0 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_pp13_stage0 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_pp14_stage0 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_pp15_stage0 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_pp17_stage0 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_pp18_stage0 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_pp19_stage0 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp20_stage0 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_pp21_stage0 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_pp22_stage0 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_pp23_stage0 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_pp24_stage0 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_pp25_stage0 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_pp26_stage0 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_pp27_stage0 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_pp28_stage0 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp9_stage0 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state124 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state130 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state131 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state134 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state135 = ap_CS_fsm[32'd98];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd73];

assign ap_block_pp10_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp10_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp10_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp12_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp12_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp12_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp13_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp13_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp13_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp14_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp14_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp14_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp15_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp15_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp15_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp17_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp17_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp17_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp18_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp18_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp18_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp19_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp19_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp19_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp20_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp20_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp20_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp21_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp21_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp21_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp22_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp22_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp22_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp23_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp23_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp23_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp24_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp24_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp24_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp25_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp25_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp25_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp26_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp26_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp26_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp27_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp27_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp27_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp28_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp28_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp28_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp9_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp9_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp9_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state102_pp24_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp24_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp24_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp24_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp24_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp24_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp24_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp24_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp25_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp25_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state114_pp26_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state115_pp26_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state117_pp27_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state118_pp27_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state120_pp28_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state121_pp28_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp9_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp9_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp10_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp10_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp12_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp12_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp13_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp13_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp14_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp14_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp15_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp15_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp17_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp17_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp18_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp18_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp19_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp19_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp19_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp19_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp19_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp19_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp19_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp19_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp20_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp20_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp21_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp21_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp22_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp22_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp23_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp23_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp10 = (ap_idle_pp10 ^ 1'b1);

assign ap_enable_pp12 = (ap_idle_pp12 ^ 1'b1);

assign ap_enable_pp13 = (ap_idle_pp13 ^ 1'b1);

assign ap_enable_pp14 = (ap_idle_pp14 ^ 1'b1);

assign ap_enable_pp15 = (ap_idle_pp15 ^ 1'b1);

assign ap_enable_pp17 = (ap_idle_pp17 ^ 1'b1);

assign ap_enable_pp18 = (ap_idle_pp18 ^ 1'b1);

assign ap_enable_pp19 = (ap_idle_pp19 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp20 = (ap_idle_pp20 ^ 1'b1);

assign ap_enable_pp21 = (ap_idle_pp21 ^ 1'b1);

assign ap_enable_pp22 = (ap_idle_pp22 ^ 1'b1);

assign ap_enable_pp23 = (ap_idle_pp23 ^ 1'b1);

assign ap_enable_pp24 = (ap_idle_pp24 ^ 1'b1);

assign ap_enable_pp25 = (ap_idle_pp25 ^ 1'b1);

assign ap_enable_pp26 = (ap_idle_pp26 ^ 1'b1);

assign ap_enable_pp27 = (ap_idle_pp27 ^ 1'b1);

assign ap_enable_pp28 = (ap_idle_pp28 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

assign ap_enable_pp9 = (ap_idle_pp9 ^ 1'b1);

assign batch_normalization_11_address0 = tmp_61_fu_2145_p1;

assign batch_normalization_14_address0 = tmp_63_fu_2179_p1;

assign batch_normalization_17_address0 = tmp_64_fu_2196_p1;

assign batch_normalization_20_address0 = tmp_72_fu_2351_p1;

assign batch_normalization_29_address0 = tmp_71_fu_2334_p1;

assign batch_normalization_32_address0 = tmp_73_fu_2368_p1;

assign batch_normalization_35_address0 = tmp_74_fu_2385_p1;

assign batch_normalization_s_address0 = tmp_62_fu_2162_p1;

assign dense_1_bias_array8_address0 = tmp_67_fu_2277_p1;

assign dense_1_kernel_array_address0 = tmp_66_fu_2254_p1;

assign dense_2_bias_array13_address0 = tmp_77_fu_2466_p1;

assign dense_2_kernel_array_address0 = tmp_76_fu_2443_p1;

assign dense_bias_array_address0 = tmp_57_fu_2082_p1;

assign dense_input_input_array_address0 = grp_k2c_dense_fu_1902_input_array_address0;

assign dense_input_input_array_ce0 = grp_k2c_dense_fu_1902_input_array_ce0;

assign dense_input_input_shape_address0 = grp_k2c_dense_fu_1902_input_shape_address0;

assign dense_input_input_shape_ce0 = grp_k2c_dense_fu_1902_input_shape_ce0;

assign dropout_2_output_sha_d0 = $signed(activation_1_output_s_q0);

assign dropout_3_output_sha_d0 = $signed(activation_2_output_s_q0);

assign exitcond10_fu_2356_p2 = ((j_13_reg_1597 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond11_fu_2339_p2 = ((j_12_reg_1586 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond12_fu_2322_p2 = ((j_11_reg_1575 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond13_fu_2305_p2 = ((j_10_reg_1564 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond14_fu_2265_p2 = ((j_s_reg_1542 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond15_fu_2242_p2 = ((j_9_reg_1531 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond16_fu_2213_p2 = ((j_8_reg_1520 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond17_fu_2184_p2 = ((j_7_reg_1509 == 7'd100) ? 1'b1 : 1'b0);

assign exitcond18_fu_2167_p2 = ((j_6_reg_1498 == 7'd100) ? 1'b1 : 1'b0);

assign exitcond19_fu_2150_p2 = ((j_5_reg_1487 == 7'd100) ? 1'b1 : 1'b0);

assign exitcond1_fu_2727_p2 = ((i_2_reg_1773 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond20_fu_2133_p2 = ((j_4_reg_1476 == 7'd100) ? 1'b1 : 1'b0);

assign exitcond21_fu_2116_p2 = ((j_3_reg_1465 == 7'd100) ? 1'b1 : 1'b0);

assign exitcond22_fu_2070_p2 = ((j_2_reg_1443 == 7'd100) ? 1'b1 : 1'b0);

assign exitcond23_fu_2053_p2 = ((j_1_reg_1432 == 19'd262200) ? 1'b1 : 1'b0);

assign exitcond24_fu_2019_p2 = ((j_reg_1410 == 7'd100) ? 1'b1 : 1'b0);

assign exitcond25_fu_2655_p2 = ((j_23_reg_1740 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond26_fu_2613_p2 = ((i_1_reg_1718 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond27_fu_2507_p2 = ((i_cast_fu_2502_p1 == batch_normalization_53_reg_3286) ? 1'b1 : 1'b0);

assign exitcond28_fu_2705_p2 = ((j_25_reg_1762 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond2_fu_2683_p2 = ((j_24_reg_1751 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond3_fu_2638_p2 = ((j_22_reg_1729 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond4_fu_2555_p2 = ((j_20_reg_1696 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond5_fu_2522_p2 = ((j_18_reg_1674 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond6_fu_2454_p2 = ((j_17_reg_1641 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond7_fu_2431_p2 = ((j_16_reg_1630 == 6'd60) ? 1'b1 : 1'b0);

assign exitcond8_fu_2402_p2 = ((j_15_reg_1619 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond9_fu_2373_p2 = ((j_14_reg_1608 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond_fu_2879_p2 = ((j_26_reg_1828 == 3'd5) ? 1'b1 : 1'b0);

assign extLd2_fu_2634_p1 = batch_normalization_9;

assign face_classifier_c_de_address0 = tmp_s_fu_2042_p1;

assign grp_generic_tanh_float_s_fu_1921_ap_start = grp_generic_tanh_float_s_fu_1921_ap_start_reg;

assign grp_k2c_batch_norm_fu_1936_ap_start = grp_k2c_batch_norm_fu_1936_ap_start_reg;

assign grp_k2c_dense2_fu_1873_ap_start = grp_k2c_dense2_fu_1873_ap_start_reg;

assign grp_k2c_dense_1_fu_1850_ap_start = grp_k2c_dense_1_fu_1850_ap_start_reg;

assign grp_k2c_dense_fu_1902_ap_start = grp_k2c_dense_fu_1902_ap_start_reg;

assign i_1_cast_fu_2625_p1 = i_1_reg_1718;

assign i_2_cast_fu_2722_p1 = i_2_reg_1773;

assign i_3_cast_fu_2831_p1 = i_3_reg_1794;

assign i_43_fu_2512_p2 = (i_reg_1663 + 12'd1);

assign i_44_fu_2619_p2 = (i_1_reg_1718 + 4'd1);

assign i_45_fu_2733_p2 = (3'd1 + i_2_reg_1773);

assign i_46_fu_2842_p2 = (i_3_reg_1794 + 3'd1);

assign i_47_fu_2859_p2 = (i_4_reg_1817 + 3'd1);

assign i_4_cast_fu_2848_p1 = i_4_reg_1817;

assign i_cast_fu_2502_p1 = i_reg_1663;

assign indvarinc1_fu_2087_p2 = (invdar1_reg_1454 + 19'd1);

assign indvarinc2_fu_2282_p2 = (invdar2_reg_1553 + 11'd1);

assign indvarinc3_fu_2471_p2 = (invdar3_reg_1652 + 7'd1);

assign indvarinc_fu_2036_p2 = (invdar_reg_1421 + 19'd1);

assign j_28_fu_2025_p2 = (j_reg_1410 + 7'd1);

assign j_29_fu_2059_p2 = (j_1_reg_1432 + 19'd1);

assign j_30_fu_2076_p2 = (j_2_reg_1443 + 7'd1);

assign j_31_fu_2122_p2 = (j_3_reg_1465 + 7'd1);

assign j_32_fu_2139_p2 = (j_4_reg_1476 + 7'd1);

assign j_33_fu_2156_p2 = (j_5_reg_1487 + 7'd1);

assign j_34_fu_2173_p2 = (j_6_reg_1498 + 7'd1);

assign j_35_fu_2190_p2 = (j_7_reg_1509 + 7'd1);

assign j_36_fu_2219_p2 = (j_8_reg_1520 + 4'd1);

assign j_37_fu_2248_p2 = (j_9_reg_1531 + 10'd1);

assign j_38_fu_2271_p2 = (j_s_reg_1542 + 4'd1);

assign j_39_fu_2311_p2 = (j_10_reg_1564 + 4'd1);

assign j_40_fu_2328_p2 = (j_11_reg_1575 + 4'd1);

assign j_41_fu_2345_p2 = (j_12_reg_1586 + 4'd1);

assign j_42_fu_2362_p2 = (j_13_reg_1597 + 4'd1);

assign j_43_fu_2379_p2 = (j_14_reg_1608 + 4'd1);

assign j_44_fu_2408_p2 = (j_15_reg_1619 + 3'd1);

assign j_45_fu_2437_p2 = (j_16_reg_1630 + 6'd1);

assign j_46_fu_2460_p2 = (j_17_reg_1641 + 3'd1);

assign j_47_fu_2528_p2 = (j_18_reg_1674 + 3'd1);

assign j_48_fu_2549_p2 = (j_19_reg_1685 + 12'd1);

assign j_49_fu_2561_p2 = (j_20_reg_1696 + 3'd1);

assign j_50_fu_2587_p2 = (j_21_reg_1707 + 12'd1);

assign j_51_fu_2644_p2 = (j_22_reg_1729 + 3'd1);

assign j_52_fu_2661_p2 = (j_23_reg_1740 + 4'd1);

assign j_53_fu_2689_p2 = (j_24_reg_1751 + 3'd1);

assign j_54_fu_2711_p2 = (j_25_reg_1762 + 4'd1);

assign j_55_fu_2885_p2 = (j_26_reg_1828 + 3'd1);

assign j_56_fu_2911_p2 = ($signed(j_27_reg_1839) + $signed(32'd1));

assign notlhs1_fu_2793_p2 = ((tmp_8_fu_2761_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs_fu_2775_p2 = ((tmp_6_fu_2743_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs1_fu_2799_p2 = ((tmp_99_fu_2771_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_2781_p2 = ((tmp_98_fu_2753_p1 == 23'd0) ? 1'b1 : 1'b0);

assign tmp_10_fu_2787_p2 = (notrhs_fu_2781_p2 | notlhs_fu_2775_p2);

assign tmp_11_fu_2805_p2 = (notrhs1_fu_2799_p2 | notlhs1_fu_2793_p2);

assign tmp_12_fu_2811_p2 = (tmp_11_fu_2805_p2 & tmp_10_fu_2787_p2);

assign tmp_14_fu_2817_p2 = (tmp_13_fu_1982_p2 & tmp_12_fu_2811_p2);

assign tmp_55_fu_2047_p2 = ((invdar_reg_1421 == 19'd262199) ? 1'b1 : 1'b0);

assign tmp_56_fu_2065_p1 = j_1_reg_1432;

assign tmp_57_fu_2082_p1 = j_2_reg_1443;

assign tmp_58_fu_2093_p1 = invdar1_reg_1454;

assign tmp_59_fu_2098_p2 = ((invdar1_reg_1454 == 19'd264821) ? 1'b1 : 1'b0);

assign tmp_60_fu_2128_p1 = j_3_reg_1465;

assign tmp_61_fu_2145_p1 = j_4_reg_1476;

assign tmp_62_fu_2162_p1 = j_5_reg_1487;

assign tmp_63_fu_2179_p1 = j_6_reg_1498;

assign tmp_64_fu_2196_p1 = j_7_reg_1509;

assign tmp_65_fu_2225_p1 = j_8_reg_1520;

assign tmp_66_fu_2254_p1 = j_9_reg_1531;

assign tmp_67_fu_2277_p1 = j_s_reg_1542;

assign tmp_68_fu_2288_p1 = invdar2_reg_1553;

assign tmp_69_fu_2293_p2 = ((invdar2_reg_1553 == 11'd1099) ? 1'b1 : 1'b0);

assign tmp_6_fu_2743_p4 = {{xmax_2_to_int_fu_2739_p1[30:23]}};

assign tmp_70_fu_2317_p1 = j_10_reg_1564;

assign tmp_71_fu_2334_p1 = j_11_reg_1575;

assign tmp_72_fu_2351_p1 = j_12_reg_1586;

assign tmp_73_fu_2368_p1 = j_13_reg_1597;

assign tmp_74_fu_2385_p1 = j_14_reg_1608;

assign tmp_75_fu_2414_p1 = j_15_reg_1619;

assign tmp_76_fu_2443_p1 = j_16_reg_1630;

assign tmp_77_fu_2466_p1 = j_17_reg_1641;

assign tmp_78_fu_2477_p1 = invdar3_reg_1652;

assign tmp_79_fu_2482_p2 = ((invdar3_reg_1652 == 7'd69) ? 1'b1 : 1'b0);

assign tmp_80_fu_2534_p1 = j_18_reg_1674;

assign tmp_81_fu_2539_p1 = j_19_reg_1685;

assign tmp_82_fu_2544_p2 = ((tmp_81_fu_2539_p1 < batch_normalization_53_reg_3286) ? 1'b1 : 1'b0);

assign tmp_83_fu_2567_p1 = j_20_reg_1696;

assign tmp_84_fu_2577_p1 = j_21_reg_1707;

assign tmp_85_fu_2582_p2 = ((tmp_84_fu_2577_p1 < batch_normalization_53_reg_3286) ? 1'b1 : 1'b0);

assign tmp_86_fu_2650_p1 = j_22_reg_1729;

assign tmp_87_fu_2667_p1 = j_23_reg_1740;

assign tmp_88_fu_2695_p1 = j_24_reg_1751;

assign tmp_89_fu_2717_p1 = j_25_reg_1762;

assign tmp_8_fu_2761_p4 = {{xmax1_to_int_fu_2757_p1[30:23]}};

assign tmp_90_fu_2836_p2 = ((i_3_reg_1794 == 3'd6) ? 1'b1 : 1'b0);

assign tmp_93_fu_2853_p2 = ((i_4_reg_1817 == 3'd6) ? 1'b1 : 1'b0);

assign tmp_95_fu_2891_p1 = j_26_reg_1828;

assign tmp_96_fu_2901_p1 = j_27_reg_1839;

assign tmp_97_fu_2906_p2 = ((tmp_96_fu_2901_p1 < dense_2_output_numel_2_reg_3570) ? 1'b1 : 1'b0);

assign tmp_98_fu_2753_p1 = xmax_2_to_int_fu_2739_p1[22:0];

assign tmp_99_fu_2771_p1 = xmax1_to_int_fu_2757_p1[22:0];

assign tmp_fu_2031_p1 = j_reg_1410;

assign tmp_s_fu_2042_p1 = invdar_reg_1421;

assign xmax1_to_int_fu_2757_p1 = xmax1_reg_1784;

assign xmax_1_fu_2823_p3 = ((tmp_14_fu_2817_p2[0:0] === 1'b1) ? dense_2_output_array_q0 : xmax1_reg_1784);

assign xmax_2_to_int_fu_2739_p1 = dense_2_output_array_q0;

always @ (posedge ap_clk) begin
    dense_output_ndim[63:1] <= 63'b000000000000000000000000000000000000000000000000000000000000000;
    dense_output_numel[1:0] <= 2'b00;
    dense_output_numel[4:3] <= 2'b00;
    dense_output_numel[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    batch_normalization_1[63:1] <= 63'b000000000000000000000000000000000000000000000000000000000000000;
    batch_normalization_3[1:0] <= 2'b00;
    batch_normalization_3[4:3] <= 2'b00;
    batch_normalization_3[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    dense_1_output_ndim[63:1] <= 63'b000000000000000000000000000000000000000000000000000000000000000;
    dense_1_output_numel[0] <= 1'b0;
    dense_1_output_numel[2:2] <= 1'b0;
    dense_1_output_numel[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    dense_1_kernel_ndim[0] <= 1'b0;
    dense_1_kernel_ndim[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    dense_1_kernel_numel[2:0] <= 3'b000;
    dense_1_kernel_numel[4:4] <= 1'b0;
    dense_1_kernel_numel[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    dense_1_bias_numel[0] <= 1'b0;
    dense_1_bias_numel[2:2] <= 1'b0;
    dense_1_bias_numel[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    dense_2_output_numel[0] <= 1'b0;
    dense_2_output_numel[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    dense_2_kernel_ndim[0] <= 1'b0;
    dense_2_kernel_ndim[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    dense_2_kernel_numel[1:0] <= 2'b00;
    dense_2_kernel_numel[6] <= 1'b0;
    dense_2_bias_numel[0] <= 1'b0;
    dense_2_bias_numel[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    dropout_3_output_ndi[63:1] <= 63'b000000000000000000000000000000000000000000000000000000000000000;
    dropout_3_output_num[0] <= 1'b0;
    dropout_3_output_num[2:2] <= 1'b0;
    dropout_3_output_num[4] <= 1'b0;
    reg_2001[0] <= 1'b0;
    reg_2001[2:2] <= 1'b0;
    reg_2001[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_s_reg_2940[63:19] <= 45'b000000000000000000000000000000000000000000000;
    tmp_56_reg_2963[63:19] <= 45'b000000000000000000000000000000000000000000000;
    tmp_57_reg_2982[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    tmp_61_reg_3017[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    tmp_62_reg_3036[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    tmp_63_reg_3055[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    tmp_64_reg_3074[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    tmp_66_reg_3101[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    tmp_67_reg_3120[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_71_reg_3155[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_72_reg_3174[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_73_reg_3193[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_74_reg_3212[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_76_reg_3239[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_77_reg_3258[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    batch_normalization_53_reg_3286[1:0] <= 2'b00;
    batch_normalization_53_reg_3286[4:3] <= 2'b00;
    batch_normalization_53_reg_3286[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    batch_normalization_56_reg_3309[63:1] <= 63'b000000000000000000000000000000000000000000000000000000000000000;
    tmp_80_reg_3323[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    tmp_81_reg_3333[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    tmp_83_reg_3361[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    tmp_84_reg_3371[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    batch_normalization_61_reg_3419[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3419_pp24_iter1_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3419_pp24_iter2_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3419_pp24_iter3_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3419_pp24_iter4_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3419_pp24_iter5_reg[11:4] <= 8'b00000000;
    batch_normalization_61_reg_3419_pp24_iter6_reg[11:4] <= 8'b00000000;
    extLd2_reg_3425[63:1] <= 63'b000000000000000000000000000000000000000000000000000000000000000;
    tmp_86_reg_3439[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    tmp_87_reg_3458[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_88_reg_3477[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    tmp_89_reg_3496[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    dense_2_output_array_7_reg_3537[11:3] <= 9'b000000000;
    dense_2_output_array_9_reg_3565[11:3] <= 9'b000000000;
    dense_2_output_numel_2_reg_3570[0] <= 1'b0;
    dense_2_output_numel_2_reg_3570[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    tmp_95_reg_3583[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
end

endmodule //face_classifier_c
