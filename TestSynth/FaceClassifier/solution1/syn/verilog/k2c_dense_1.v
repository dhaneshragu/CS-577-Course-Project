// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module k2c_dense_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        output_array_address0,
        output_array_ce0,
        output_array_we0,
        output_array_d0,
        output_array_q0,
        output_numel_read,
        input_array_address0,
        input_array_ce0,
        input_array_q0,
        input_ndim_read,
        input_numel_read,
        input_shape_address0,
        input_shape_ce0,
        input_shape_q0,
        kernel_array_address0,
        kernel_array_ce0,
        kernel_array_q0,
        kernel_ndim_read,
        kernel_numel_read,
        kernel_shape_address0,
        kernel_shape_ce0,
        kernel_shape_q0,
        kernel_shape_address1,
        kernel_shape_ce1,
        kernel_shape_q1,
        bias_array_address0,
        bias_array_ce0,
        bias_array_q0,
        bias_numel_read,
        fwork_address0,
        fwork_ce0,
        fwork_we0,
        fwork_d0,
        fwork_q0,
        fwork_address1,
        fwork_ce1,
        fwork_q1
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_state4 = 9'd8;
parameter    ap_ST_fsm_state5 = 9'd16;
parameter    ap_ST_fsm_state6 = 9'd32;
parameter    ap_ST_fsm_state7 = 9'd64;
parameter    ap_ST_fsm_pp0_stage0 = 9'd128;
parameter    ap_ST_fsm_state10 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] output_array_address0;
output   output_array_ce0;
output   output_array_we0;
output  [31:0] output_array_d0;
input  [31:0] output_array_q0;
input  [63:0] output_numel_read;
output  [11:0] input_array_address0;
output   input_array_ce0;
input  [31:0] input_array_q0;
input  [63:0] input_ndim_read;
input  [63:0] input_numel_read;
output  [2:0] input_shape_address0;
output   input_shape_ce0;
input  [63:0] input_shape_q0;
output  [18:0] kernel_array_address0;
output   kernel_array_ce0;
input  [31:0] kernel_array_q0;
input  [63:0] kernel_ndim_read;
input  [63:0] kernel_numel_read;
output  [2:0] kernel_shape_address0;
output   kernel_shape_ce0;
input  [63:0] kernel_shape_q0;
output  [2:0] kernel_shape_address1;
output   kernel_shape_ce1;
input  [63:0] kernel_shape_q1;
output  [11:0] bias_array_address0;
output   bias_array_ce0;
input  [31:0] bias_array_q0;
input  [63:0] bias_numel_read;
output  [10:0] fwork_address0;
output   fwork_ce0;
output   fwork_we0;
output  [31:0] fwork_d0;
input  [31:0] fwork_q0;
output  [10:0] fwork_address1;
output   fwork_ce1;
input  [31:0] fwork_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] output_array_address0;
reg output_array_ce0;
reg output_array_we0;
reg[31:0] output_array_d0;
reg[11:0] input_array_address0;
reg input_array_ce0;
reg[2:0] input_shape_address0;
reg input_shape_ce0;
reg[18:0] kernel_array_address0;
reg kernel_array_ce0;
reg[2:0] kernel_shape_address0;
reg kernel_shape_ce0;
reg kernel_shape_ce1;
reg[11:0] bias_array_address0;
reg bias_array_ce0;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] tmp_36_reg_268;
reg   [63:0] k_reg_278;
wire   [0:0] tmp_fu_328_p2;
reg   [0:0] tmp_reg_578;
wire   [63:0] tmp_s_fu_334_p2;
reg   [63:0] tmp_s_reg_582;
wire   [11:0] tmp_65_fu_341_p1;
reg   [11:0] tmp_65_reg_587;
wire   [0:0] icmp_fu_356_p2;
reg   [0:0] icmp_reg_592;
wire   [127:0] indvar_flatten_next_fu_372_p2;
reg   [127:0] indvar_flatten_next_reg_618;
wire    ap_CS_fsm_state3;
wire   [63:0] j_mid2_fu_383_p3;
reg   [63:0] j_mid2_reg_623;
wire   [0:0] exitcond_flatten_fu_367_p2;
wire   [63:0] outrowidx_mid2_v_v_fu_398_p3;
reg   [63:0] outrowidx_mid2_v_v_reg_628;
wire  signed [12:0] inneridx_mid2_fu_547_p2;
reg  signed [12:0] inneridx_mid2_reg_633;
wire   [19:0] tmp_67_fu_410_p1;
reg   [19:0] tmp_67_reg_638;
reg   [11:0] output_array_addr_reg_648;
wire   [63:0] j_14_fu_431_p2;
reg   [63:0] j_14_reg_656;
wire    ap_CS_fsm_state4;
wire   [0:0] exitcond_i_fu_426_p2;
reg   [11:0] output_array_addr_1_reg_666;
wire   [63:0] i_40_fu_452_p2;
reg   [63:0] outcols_reg_676;
wire    ap_CS_fsm_state6;
wire  signed [19:0] tmp_62_fu_464_p1;
reg  signed [19:0] tmp_62_reg_681;
wire  signed [12:0] tmp_63_fu_468_p1;
reg  signed [12:0] tmp_63_reg_686;
reg   [63:0] innerdim_reg_691;
wire  signed [12:0] tmp_64_fu_472_p1;
reg  signed [12:0] tmp_64_reg_696;
wire   [127:0] bound_fu_484_p2;
reg   [127:0] bound_reg_701;
wire    ap_CS_fsm_state7;
wire   [0:0] exitcond_fu_490_p2;
reg   [0:0] exitcond_reg_711;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state8_pp0_stage0_iter0;
wire    ap_block_state9_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] k_4_fu_495_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [31:0] grp_fu_313_p2;
reg    ap_enable_reg_pp0_iter1;
wire   [63:0] j_1_fu_534_p2;
wire    ap_CS_fsm_state10;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state8;
wire    grp_k2c_dot_fu_289_ap_start;
wire    grp_k2c_dot_fu_289_ap_done;
wire    grp_k2c_dot_fu_289_ap_idle;
wire    grp_k2c_dot_fu_289_ap_ready;
wire   [11:0] grp_k2c_dot_fu_289_C_array_address0;
wire    grp_k2c_dot_fu_289_C_array_ce0;
wire    grp_k2c_dot_fu_289_C_array_we0;
wire   [31:0] grp_k2c_dot_fu_289_C_array_d0;
wire   [11:0] grp_k2c_dot_fu_289_Ar_array_address0;
wire    grp_k2c_dot_fu_289_Ar_array_ce0;
wire   [2:0] grp_k2c_dot_fu_289_Ar_shape_address0;
wire    grp_k2c_dot_fu_289_Ar_shape_ce0;
wire   [18:0] grp_k2c_dot_fu_289_B_array_address0;
wire    grp_k2c_dot_fu_289_B_array_ce0;
wire   [2:0] grp_k2c_dot_fu_289_B_shape_address0;
wire    grp_k2c_dot_fu_289_B_shape_ce0;
wire   [10:0] grp_k2c_dot_fu_289_fwork_address0;
wire    grp_k2c_dot_fu_289_fwork_ce0;
wire    grp_k2c_dot_fu_289_fwork_we0;
wire   [31:0] grp_k2c_dot_fu_289_fwork_d0;
wire   [10:0] grp_k2c_dot_fu_289_fwork_address1;
wire    grp_k2c_dot_fu_289_fwork_ce1;
reg   [63:0] i_i_reg_211;
wire    ap_CS_fsm_state2;
reg   [127:0] indvar_flatten_reg_223;
reg   [63:0] i_reg_234;
reg   [63:0] j_reg_245;
reg   [63:0] j_i_reg_256;
wire    ap_CS_fsm_state5;
wire   [0:0] tmp_i_fu_362_p2;
reg    grp_k2c_dot_fu_289_ap_start_reg;
wire   [63:0] tmp_42_cast_fu_418_p1;
wire   [63:0] tmp_i_cast_fu_447_p1;
wire   [63:0] tmp_44_cast_fu_514_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] tmp_46_cast_fu_529_p1;
reg   [31:0] grp_fu_313_p0;
reg   [31:0] grp_fu_313_p1;
wire   [31:0] tmp_40_fu_321_p2;
wire   [62:0] tmp_61_fu_346_p4;
wire   [0:0] exitcond16_fu_378_p2;
wire   [63:0] i_s_fu_392_p2;
wire  signed [12:0] grp_fu_539_p3;
wire   [12:0] tmp_72_fu_437_p1;
wire   [12:0] tmp_69_fu_422_p1;
wire   [12:0] tmp_i_40_fu_441_p2;
wire   [63:0] outrows2_fu_457_p3;
wire   [63:0] bound_fu_484_p0;
wire   [63:0] bound_fu_484_p1;
wire   [12:0] tmp_71_fu_505_p1;
(* use_dsp48 = "no" *) wire   [12:0] tmp_37_fu_509_p2;
wire  signed [19:0] tmp_70_fu_501_p1;
wire   [19:0] tmp_38_fu_519_p2;
wire   [19:0] tmp_39_fu_524_p2;
wire  signed [12:0] tmp_66_fu_406_p1;
wire   [12:0] grp_fu_539_p2;
reg   [8:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [127:0] bound_fu_484_p00;
wire   [127:0] bound_fu_484_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_k2c_dot_fu_289_ap_start_reg = 1'b0;
end

k2c_dot grp_k2c_dot_fu_289(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_dot_fu_289_ap_start),
    .ap_done(grp_k2c_dot_fu_289_ap_done),
    .ap_idle(grp_k2c_dot_fu_289_ap_idle),
    .ap_ready(grp_k2c_dot_fu_289_ap_ready),
    .C_array_address0(grp_k2c_dot_fu_289_C_array_address0),
    .C_array_ce0(grp_k2c_dot_fu_289_C_array_ce0),
    .C_array_we0(grp_k2c_dot_fu_289_C_array_we0),
    .C_array_d0(grp_k2c_dot_fu_289_C_array_d0),
    .Ar_array_address0(grp_k2c_dot_fu_289_Ar_array_address0),
    .Ar_array_ce0(grp_k2c_dot_fu_289_Ar_array_ce0),
    .Ar_array_q0(input_array_q0),
    .Ar_ndim_read(input_ndim_read),
    .Ar_numel_read(tmp_65_reg_587),
    .Ar_shape_address0(grp_k2c_dot_fu_289_Ar_shape_address0),
    .Ar_shape_ce0(grp_k2c_dot_fu_289_Ar_shape_ce0),
    .Ar_shape_q0(input_shape_q0),
    .B_array_address0(grp_k2c_dot_fu_289_B_array_address0),
    .B_array_ce0(grp_k2c_dot_fu_289_B_array_ce0),
    .B_array_q0(kernel_array_q0),
    .B_ndim_read(kernel_ndim_read),
    .B_numel_read(kernel_numel_read),
    .B_shape_address0(grp_k2c_dot_fu_289_B_shape_address0),
    .B_shape_ce0(grp_k2c_dot_fu_289_B_shape_ce0),
    .B_shape_q0(kernel_shape_q0),
    .axesA_0_read(tmp_s_reg_582),
    .fwork_address0(grp_k2c_dot_fu_289_fwork_address0),
    .fwork_ce0(grp_k2c_dot_fu_289_fwork_ce0),
    .fwork_we0(grp_k2c_dot_fu_289_fwork_we0),
    .fwork_d0(grp_k2c_dot_fu_289_fwork_d0),
    .fwork_q0(fwork_q0),
    .fwork_address1(grp_k2c_dot_fu_289_fwork_address1),
    .fwork_ce1(grp_k2c_dot_fu_289_fwork_ce1),
    .fwork_q1(fwork_q1)
);

face_classifier_cbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_cbkb_U108(
    .din0(grp_fu_313_p0),
    .din1(grp_fu_313_p1),
    .dout(grp_fu_313_p2)
);

face_classifier_ccud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
face_classifier_ccud_U109(
    .din0(input_array_q0),
    .din1(kernel_array_q0),
    .dout(tmp_40_fu_321_p2)
);

face_classifier_chbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
face_classifier_chbi_U110(
    .din0(tmp_63_reg_686),
    .din1(tmp_66_fu_406_p1),
    .din2(grp_fu_539_p2),
    .dout(grp_fu_539_p3)
);

face_classifier_cg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
face_classifier_cg8j_U111(
    .din0(tmp_64_reg_696),
    .din1(tmp_66_fu_406_p1),
    .dout(inneridx_mid2_fu_547_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state8) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state8))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state8);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_dot_fu_289_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_328_p2 == 1'd0))) begin
            grp_k2c_dot_fu_289_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_dot_fu_289_ap_ready == 1'b1)) begin
            grp_k2c_dot_fu_289_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond_i_fu_426_p2 == 1'd1))) begin
        i_i_reg_211 <= i_40_fu_452_p2;
    end else if (((grp_k2c_dot_fu_289_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_i_reg_211 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_reg_234 <= outrowidx_mid2_v_v_reg_628;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        i_reg_234 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        indvar_flatten_reg_223 <= indvar_flatten_next_reg_618;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        indvar_flatten_reg_223 <= 128'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_i_fu_362_p2 == 1'd1) & (tmp_reg_578 == 1'd0))) begin
        j_i_reg_256 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        j_i_reg_256 <= j_14_reg_656;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        j_reg_245 <= j_1_fu_534_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        j_reg_245 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_fu_490_p2 == 1'd0))) begin
        k_reg_278 <= k_4_fu_495_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        k_reg_278 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_reg_711 == 1'd0))) begin
        tmp_36_reg_268 <= grp_fu_313_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_36_reg_268 <= bias_array_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        bound_reg_701 <= bound_fu_484_p2;
        innerdim_reg_691 <= kernel_shape_q1;
        outcols_reg_676 <= kernel_shape_q0;
        tmp_62_reg_681 <= tmp_62_fu_464_p1;
        tmp_63_reg_686 <= tmp_63_fu_468_p1;
        tmp_64_reg_696 <= tmp_64_fu_472_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_reg_711 <= exitcond_fu_490_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_328_p2 == 1'd1))) begin
        icmp_reg_592 <= icmp_fu_356_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_reg_578 == 1'd1))) begin
        indvar_flatten_next_reg_618 <= indvar_flatten_next_fu_372_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond_flatten_fu_367_p2 == 1'd0) & (tmp_reg_578 == 1'd1))) begin
        inneridx_mid2_reg_633 <= inneridx_mid2_fu_547_p2;
        j_mid2_reg_623 <= j_mid2_fu_383_p3;
        output_array_addr_reg_648 <= tmp_42_cast_fu_418_p1;
        outrowidx_mid2_v_v_reg_628 <= outrowidx_mid2_v_v_fu_398_p3;
        tmp_67_reg_638 <= tmp_67_fu_410_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        j_14_reg_656 <= j_14_fu_431_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond_i_fu_426_p2 == 1'd0))) begin
        output_array_addr_1_reg_666 <= tmp_i_cast_fu_447_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_328_p2 == 1'd0))) begin
        tmp_65_reg_587 <= tmp_65_fu_341_p1;
        tmp_s_reg_582 <= tmp_s_fu_334_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_reg_578 <= tmp_fu_328_p2;
    end
end

always @ (*) begin
    if ((exitcond_fu_490_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state3) & (((tmp_i_fu_362_p2 == 1'd0) & (tmp_reg_578 == 1'd0)) | ((exitcond_flatten_fu_367_p2 == 1'd1) & (tmp_reg_578 == 1'd1)))))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (((tmp_i_fu_362_p2 == 1'd0) & (tmp_reg_578 == 1'd0)) | ((exitcond_flatten_fu_367_p2 == 1'd1) & (tmp_reg_578 == 1'd1))))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        bias_array_address0 = j_i_reg_256;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        bias_array_address0 = j_mid2_fu_383_p3;
    end else begin
        bias_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        bias_array_ce0 = 1'b1;
    end else begin
        bias_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_313_p0 = tmp_36_reg_268;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_313_p0 = output_array_q0;
    end else begin
        grp_fu_313_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_313_p1 = tmp_40_fu_321_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_313_p1 = bias_array_q0;
    end else begin
        grp_fu_313_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_array_address0 = tmp_44_cast_fu_514_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_array_address0 = grp_k2c_dot_fu_289_Ar_array_address0;
    end else begin
        input_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_array_ce0 = grp_k2c_dot_fu_289_Ar_array_ce0;
    end else begin
        input_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (tmp_fu_328_p2 == 1'd1))) begin
        input_shape_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_shape_address0 = grp_k2c_dot_fu_289_Ar_shape_address0;
    end else begin
        input_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_328_p2 == 1'd1))) begin
        input_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_shape_ce0 = grp_k2c_dot_fu_289_Ar_shape_ce0;
    end else begin
        input_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kernel_array_address0 = tmp_46_cast_fu_529_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_array_address0 = grp_k2c_dot_fu_289_B_array_address0;
    end else begin
        kernel_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_array_ce0 = grp_k2c_dot_fu_289_B_array_ce0;
    end else begin
        kernel_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (tmp_fu_328_p2 == 1'd1))) begin
        kernel_shape_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_shape_address0 = grp_k2c_dot_fu_289_B_shape_address0;
    end else begin
        kernel_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_328_p2 == 1'd1))) begin
        kernel_shape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_shape_ce0 = grp_k2c_dot_fu_289_B_shape_ce0;
    end else begin
        kernel_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_328_p2 == 1'd1))) begin
        kernel_shape_ce1 = 1'b1;
    end else begin
        kernel_shape_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        output_array_address0 = output_array_addr_reg_648;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        output_array_address0 = output_array_addr_1_reg_666;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        output_array_address0 = tmp_i_cast_fu_447_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_array_address0 = grp_k2c_dot_fu_289_C_array_address0;
    end else begin
        output_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state4) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_array_ce0 = grp_k2c_dot_fu_289_C_array_ce0;
    end else begin
        output_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        output_array_d0 = bias_array_q0;
    end else if (((1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        output_array_d0 = grp_fu_313_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_array_d0 = grp_k2c_dot_fu_289_C_array_d0;
    end else begin
        output_array_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state7) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_reg_711 == 1'd0)))) begin
        output_array_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_array_we0 = grp_k2c_dot_fu_289_C_array_we0;
    end else begin
        output_array_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_328_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_328_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_k2c_dot_fu_289_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (((tmp_i_fu_362_p2 == 1'd0) & (tmp_reg_578 == 1'd0)) | ((exitcond_flatten_fu_367_p2 == 1'd1) & (tmp_reg_578 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b1 == ap_CS_fsm_state3) & (exitcond_flatten_fu_367_p2 == 1'd0) & (tmp_reg_578 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (exitcond_i_fu_426_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_fu_490_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_fu_490_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bound_fu_484_p0 = bound_fu_484_p00;

assign bound_fu_484_p00 = kernel_shape_q0;

assign bound_fu_484_p1 = bound_fu_484_p10;

assign bound_fu_484_p10 = outrows2_fu_457_p3;

assign bound_fu_484_p2 = (bound_fu_484_p0 * bound_fu_484_p1);

assign exitcond16_fu_378_p2 = ((j_reg_245 == outcols_reg_676) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_367_p2 = ((indvar_flatten_reg_223 == bound_reg_701) ? 1'b1 : 1'b0);

assign exitcond_fu_490_p2 = ((k_reg_278 == innerdim_reg_691) ? 1'b1 : 1'b0);

assign exitcond_i_fu_426_p2 = ((j_i_reg_256 == bias_numel_read) ? 1'b1 : 1'b0);

assign fwork_address0 = grp_k2c_dot_fu_289_fwork_address0;

assign fwork_address1 = grp_k2c_dot_fu_289_fwork_address1;

assign fwork_ce0 = grp_k2c_dot_fu_289_fwork_ce0;

assign fwork_ce1 = grp_k2c_dot_fu_289_fwork_ce1;

assign fwork_d0 = grp_k2c_dot_fu_289_fwork_d0;

assign fwork_we0 = grp_k2c_dot_fu_289_fwork_we0;

assign grp_fu_539_p2 = j_mid2_fu_383_p3[12:0];

assign grp_k2c_dot_fu_289_ap_start = grp_k2c_dot_fu_289_ap_start_reg;

assign i_40_fu_452_p2 = (i_i_reg_211 + bias_numel_read);

assign i_s_fu_392_p2 = (64'd1 + i_reg_234);

assign icmp_fu_356_p2 = ((tmp_61_fu_346_p4 != 63'd0) ? 1'b1 : 1'b0);

assign indvar_flatten_next_fu_372_p2 = (indvar_flatten_reg_223 + 128'd1);

assign j_14_fu_431_p2 = (64'd1 + j_i_reg_256);

assign j_1_fu_534_p2 = (j_mid2_reg_623 + 64'd1);

assign j_mid2_fu_383_p3 = ((exitcond16_fu_378_p2[0:0] === 1'b1) ? 64'd0 : j_reg_245);

assign k_4_fu_495_p2 = (k_reg_278 + 64'd1);

assign kernel_shape_address1 = 64'd0;

assign outrowidx_mid2_v_v_fu_398_p3 = ((exitcond16_fu_378_p2[0:0] === 1'b1) ? i_s_fu_392_p2 : i_reg_234);

assign outrows2_fu_457_p3 = ((icmp_reg_592[0:0] === 1'b1) ? input_shape_q0 : 64'd1);

assign tmp_37_fu_509_p2 = ($signed(tmp_71_fu_505_p1) + $signed(inneridx_mid2_reg_633));

assign tmp_38_fu_519_p2 = ($signed(tmp_62_reg_681) * $signed(tmp_70_fu_501_p1));

assign tmp_39_fu_524_p2 = (tmp_38_fu_519_p2 + tmp_67_reg_638);

assign tmp_42_cast_fu_418_p1 = $unsigned(grp_fu_539_p3);

assign tmp_44_cast_fu_514_p1 = tmp_37_fu_509_p2;

assign tmp_46_cast_fu_529_p1 = tmp_39_fu_524_p2;

assign tmp_61_fu_346_p4 = {{input_ndim_read[63:1]}};

assign tmp_62_fu_464_p1 = kernel_shape_q0[19:0];

assign tmp_63_fu_468_p1 = kernel_shape_q0[12:0];

assign tmp_64_fu_472_p1 = kernel_shape_q1[12:0];

assign tmp_65_fu_341_p1 = input_numel_read[11:0];

assign tmp_66_fu_406_p1 = outrowidx_mid2_v_v_fu_398_p3[12:0];

assign tmp_67_fu_410_p1 = j_mid2_fu_383_p3[19:0];

assign tmp_69_fu_422_p1 = j_i_reg_256[12:0];

assign tmp_70_fu_501_p1 = k_reg_278[19:0];

assign tmp_71_fu_505_p1 = k_reg_278[12:0];

assign tmp_72_fu_437_p1 = i_i_reg_211[12:0];

assign tmp_fu_328_p2 = ((input_ndim_read < 64'd3) ? 1'b1 : 1'b0);

assign tmp_i_40_fu_441_p2 = (tmp_72_fu_437_p1 + tmp_69_fu_422_p1);

assign tmp_i_cast_fu_447_p1 = tmp_i_40_fu_441_p2;

assign tmp_i_fu_362_p2 = ((i_i_reg_211 < output_numel_read) ? 1'b1 : 1'b0);

assign tmp_s_fu_334_p2 = ($signed(64'd18446744073709551615) + $signed(input_ndim_read));

endmodule //k2c_dense_1
