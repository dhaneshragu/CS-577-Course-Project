-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity generic_tanh_float_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    t_in : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of generic_tanh_float_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_40000000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    constant ap_const_lv32_41B00000 : STD_LOGIC_VECTOR (31 downto 0) := "01000001101100000000000000000000";
    constant ap_const_lv64_BFF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_48 : STD_LOGIC_VECTOR (7 downto 0) := "01001000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_60 : STD_LOGIC_VECTOR (7 downto 0) := "01100000";
    constant ap_const_lv32_7FFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "01111111111111111111111111111111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter29 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter30 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter31 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter32 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter28 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter29 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter30 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter31 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter32 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal expx_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal expx_reg_58_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal expx_reg_58_pp0_iter19_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_109_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_156 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_345 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_125_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_161 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_345_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_161_pp0_iter29_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_161_pp0_iter30_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_reg_331 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_331_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal abst_in_fu_207_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal abst_in_reg_336 : STD_LOGIC_VECTOR (31 downto 0);
    signal abst_in_reg_336_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal abst_in_reg_336_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal abst_in_reg_336_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_345_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_fu_222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_349_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_353_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_357_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_fu_240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_361_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_fu_252_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_fu_151_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_371_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_2_fu_257_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_2_reg_376 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_100_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_reg_383 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_fu_277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_388 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_388_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_388_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_388_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_388_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_388_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_388_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_388_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_388_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_388_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_388_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_388_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_50_fu_283_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_50_reg_392 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_50_reg_392_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_50_reg_392_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_50_reg_392_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_50_reg_392_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_50_reg_392_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_50_reg_392_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_50_reg_392_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_50_reg_392_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_50_reg_392_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_50_reg_392_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_50_reg_392_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xd_fu_133_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xd_reg_396 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_121_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_401 : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_401_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_401_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_401_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_401_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_401_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_401_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_401_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_401_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_401_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_401_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_401_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_401_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_401_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_401_pp0_iter19_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_401_pp0_iter20_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_401_pp0_iter21_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_401_pp0_iter22_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_401_pp0_iter23_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_401_pp0_iter24_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_401_pp0_iter25_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_401_pp0_iter26_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_401_pp0_iter27_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_401_pp0_iter28_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_401_pp0_iter29_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal resultf_reg_401_pp0_iter30_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_exp_generic_double_s_fu_89_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_118_i_reg_406 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_141_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_119_i_reg_411 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_120_i_fu_130_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_114_neg_fu_293_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_114_neg_reg_421 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_61_fu_299_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_fu_303_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_exp_generic_double_s_fu_89_ap_start : STD_LOGIC;
    signal grp_exp_generic_double_s_fu_89_ap_done : STD_LOGIC;
    signal grp_exp_generic_double_s_fu_89_ap_idle : STD_LOGIC;
    signal grp_exp_generic_double_s_fu_89_ap_ready : STD_LOGIC;
    signal grp_exp_generic_double_s_fu_89_ap_ce : STD_LOGIC;
    signal ap_predicate_op78_call_state6 : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_expx_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_expx_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_expx_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_expx_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter4_expx_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter5_expx_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter6_expx_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter7_expx_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter8_expx_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter9_expx_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter10_expx_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter11_expx_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter12_expx_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter13_expx_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter14_expx_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter15_expx_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter16_expx_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter17_expx_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_resultf_4_phi_fu_76_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter4_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter5_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter6_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter7_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter8_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter9_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter10_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter11_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter12_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter13_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter14_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter15_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter16_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter17_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter18_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter19_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter20_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter21_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter22_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter23_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter24_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter25_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter26_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter27_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter28_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter29_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter30_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter31_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter32_resultf_4_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_115_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_exp_generic_double_s_fu_89_ap_start_reg : STD_LOGIC := '0';
    signal ap_predicate_op78_call_state6_state5 : BOOLEAN;
    signal grp_fu_100_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_100_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_125_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_1_fu_189_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Val2_s_fu_167_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_195_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_9_fu_199_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_fu_179_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_56_fu_228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_113_neg_fu_246_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_104_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_fu_264_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_2_fu_267_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_114_to_int_fu_289_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_118_to_int_fu_310_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_118_neg_fu_314_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_65_fu_320_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_100_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal grp_fu_100_ce : STD_LOGIC;
    signal ap_predicate_op55_fsub_state1 : BOOLEAN;
    signal grp_fu_104_ce : STD_LOGIC;
    signal grp_fu_109_ce : STD_LOGIC;
    signal grp_fu_115_ce : STD_LOGIC;
    signal grp_fu_121_ce : STD_LOGIC;
    signal grp_fu_125_ce : STD_LOGIC;
    signal grp_fu_141_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to31 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_644 : BOOLEAN;
    signal ap_condition_835 : BOOLEAN;
    signal ap_condition_959 : BOOLEAN;
    signal ap_condition_172 : BOOLEAN;
    signal ap_condition_928 : BOOLEAN;
    signal ap_condition_940 : BOOLEAN;
    signal ap_condition_922 : BOOLEAN;
    signal ap_condition_844 : BOOLEAN;
    signal ap_condition_851 : BOOLEAN;
    signal ap_condition_787 : BOOLEAN;
    signal ap_condition_1019 : BOOLEAN;
    signal ap_condition_426 : BOOLEAN;
    signal ap_condition_1154 : BOOLEAN;
    signal ap_condition_25 : BOOLEAN;
    signal ap_condition_1603 : BOOLEAN;

    component exp_generic_double_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        x : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component face_classifier_cqcK IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component face_classifier_cdEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component face_classifier_cjbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component face_classifier_ceOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component face_classifier_ckbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component face_classifier_crcU IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component face_classifier_csc4 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component face_classifier_ctde IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component face_classifier_cudo IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_exp_generic_double_s_fu_89 : component exp_generic_double_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_exp_generic_double_s_fu_89_ap_start,
        ap_done => grp_exp_generic_double_s_fu_89_ap_done,
        ap_idle => grp_exp_generic_double_s_fu_89_ap_idle,
        ap_ready => grp_exp_generic_double_s_fu_89_ap_ready,
        ap_ce => grp_exp_generic_double_s_fu_89_ap_ce,
        x => xd_reg_396,
        ap_return => grp_exp_generic_double_s_fu_89_ap_return);

    face_classifier_cqcK_U74 : component face_classifier_cqcK
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_100_p0,
        din1 => grp_fu_100_p1,
        opcode => grp_fu_100_opcode,
        ce => grp_fu_100_ce,
        dout => grp_fu_100_p2);

    face_classifier_cdEe_U75 : component face_classifier_cdEe
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => abst_in_fu_207_p1,
        din1 => abst_in_fu_207_p1,
        ce => grp_fu_104_ce,
        dout => grp_fu_104_p2);

    face_classifier_cdEe_U76 : component face_classifier_cdEe
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_phi_reg_pp0_iter17_expx_reg_58,
        din1 => ap_const_lv32_40000000,
        ce => grp_fu_109_ce,
        dout => grp_fu_109_p2);

    face_classifier_cjbC_U77 : component face_classifier_cjbC
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_3F800000,
        din1 => reg_161,
        ce => grp_fu_115_ce,
        dout => grp_fu_115_p2);

    face_classifier_ceOg_U78 : component face_classifier_ceOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => abst_in_reg_336_pp0_iter3_reg,
        din1 => tmp_58_reg_383,
        ce => grp_fu_121_ce,
        dout => grp_fu_121_p2);

    face_classifier_ckbM_U79 : component face_classifier_ckbM
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_125_p0,
        din1 => reg_156,
        ce => grp_fu_125_ce,
        dout => grp_fu_125_p2);

    face_classifier_crcU_U80 : component face_classifier_crcU
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_119_i_reg_411,
        dout => tmp_120_i_fu_130_p1);

    face_classifier_csc4_U81 : component face_classifier_csc4
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => x_2_reg_376,
        dout => xd_fu_133_p1);

    face_classifier_ctde_U82 : component face_classifier_ctde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => abst_in_fu_207_p1,
        din1 => ap_const_lv32_41B00000,
        opcode => ap_const_lv5_4,
        dout => tmp_18_fu_136_p2);

    face_classifier_cudo_U83 : component face_classifier_cudo
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_118_i_reg_406,
        din1 => ap_const_lv64_BFF0000000000000,
        ce => grp_fu_141_ce,
        dout => grp_fu_141_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter29 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter30 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter31 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter32 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    grp_exp_generic_double_s_fu_89_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_exp_generic_double_s_fu_89_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_predicate_op78_call_state6_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    grp_exp_generic_double_s_fu_89_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_exp_generic_double_s_fu_89_ap_ready = ap_const_logic_1)) then 
                    grp_exp_generic_double_s_fu_89_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter17_expx_reg_58_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_835)) then
                if ((ap_const_boolean_1 = ap_condition_644)) then 
                    ap_phi_reg_pp0_iter17_expx_reg_58 <= tmp_120_i_fu_130_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter17_expx_reg_58 <= ap_phi_reg_pp0_iter16_expx_reg_58;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_resultf_4_reg_72_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_172)) then
                if ((ap_const_boolean_1 = ap_condition_959)) then 
                    ap_phi_reg_pp0_iter1_resultf_4_reg_72 <= ap_const_lv32_3F800000;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_resultf_4_reg_72 <= ap_phi_reg_pp0_iter0_resultf_4_reg_72;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter32_resultf_4_reg_72_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_922)) then
                if ((tmp_s_reg_345_pp0_iter30_reg = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter32_resultf_4_reg_72 <= p_1_fu_303_p3;
                elsif ((ap_const_boolean_1 = ap_condition_940)) then 
                    ap_phi_reg_pp0_iter32_resultf_4_reg_72 <= reg_161_pp0_iter30_reg;
                elsif ((ap_const_boolean_1 = ap_condition_928)) then 
                    ap_phi_reg_pp0_iter32_resultf_4_reg_72 <= resultf_reg_401_pp0_iter30_reg;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter32_resultf_4_reg_72 <= ap_phi_reg_pp0_iter31_resultf_4_reg_72;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter5_expx_reg_58_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_787)) then
                if ((ap_const_boolean_1 = ap_condition_851)) then 
                    ap_phi_reg_pp0_iter5_expx_reg_58 <= x_2_reg_376;
                elsif ((ap_const_boolean_1 = ap_condition_844)) then 
                    ap_phi_reg_pp0_iter5_expx_reg_58 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter5_expx_reg_58 <= ap_phi_reg_pp0_iter4_expx_reg_58;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    abst_in_reg_336(30 downto 0) <= abst_in_fu_207_p1(30 downto 0);
                    abst_in_reg_336_pp0_iter1_reg(30 downto 0) <= abst_in_reg_336(30 downto 0);
                or_cond_reg_353_pp0_iter1_reg <= or_cond_reg_353;
                p_Result_s_reg_331 <= p_Val2_s_fu_167_p1(31 downto 31);
                p_Result_s_reg_331_pp0_iter1_reg <= p_Result_s_reg_331;
                tmp_18_reg_357_pp0_iter1_reg <= tmp_18_reg_357;
                tmp_54_reg_371_pp0_iter1_reg <= tmp_54_reg_371;
                tmp_55_reg_349_pp0_iter1_reg <= tmp_55_reg_349;
                tmp_59_reg_361_pp0_iter1_reg <= tmp_59_reg_361;
                tmp_s_reg_345 <= tmp_s_fu_216_p2;
                tmp_s_reg_345_pp0_iter1_reg <= tmp_s_reg_345;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    abst_in_reg_336_pp0_iter2_reg(30 downto 0) <= abst_in_reg_336_pp0_iter1_reg(30 downto 0);
                    abst_in_reg_336_pp0_iter3_reg(30 downto 0) <= abst_in_reg_336_pp0_iter2_reg(30 downto 0);
                expx_reg_58_pp0_iter18_reg <= expx_reg_58;
                expx_reg_58_pp0_iter19_reg <= expx_reg_58_pp0_iter18_reg;
                or_cond_reg_353_pp0_iter10_reg <= or_cond_reg_353_pp0_iter9_reg;
                or_cond_reg_353_pp0_iter11_reg <= or_cond_reg_353_pp0_iter10_reg;
                or_cond_reg_353_pp0_iter12_reg <= or_cond_reg_353_pp0_iter11_reg;
                or_cond_reg_353_pp0_iter13_reg <= or_cond_reg_353_pp0_iter12_reg;
                or_cond_reg_353_pp0_iter14_reg <= or_cond_reg_353_pp0_iter13_reg;
                or_cond_reg_353_pp0_iter15_reg <= or_cond_reg_353_pp0_iter14_reg;
                or_cond_reg_353_pp0_iter16_reg <= or_cond_reg_353_pp0_iter15_reg;
                or_cond_reg_353_pp0_iter17_reg <= or_cond_reg_353_pp0_iter16_reg;
                or_cond_reg_353_pp0_iter18_reg <= or_cond_reg_353_pp0_iter17_reg;
                or_cond_reg_353_pp0_iter19_reg <= or_cond_reg_353_pp0_iter18_reg;
                or_cond_reg_353_pp0_iter20_reg <= or_cond_reg_353_pp0_iter19_reg;
                or_cond_reg_353_pp0_iter21_reg <= or_cond_reg_353_pp0_iter20_reg;
                or_cond_reg_353_pp0_iter22_reg <= or_cond_reg_353_pp0_iter21_reg;
                or_cond_reg_353_pp0_iter23_reg <= or_cond_reg_353_pp0_iter22_reg;
                or_cond_reg_353_pp0_iter24_reg <= or_cond_reg_353_pp0_iter23_reg;
                or_cond_reg_353_pp0_iter25_reg <= or_cond_reg_353_pp0_iter24_reg;
                or_cond_reg_353_pp0_iter26_reg <= or_cond_reg_353_pp0_iter25_reg;
                or_cond_reg_353_pp0_iter27_reg <= or_cond_reg_353_pp0_iter26_reg;
                or_cond_reg_353_pp0_iter28_reg <= or_cond_reg_353_pp0_iter27_reg;
                or_cond_reg_353_pp0_iter29_reg <= or_cond_reg_353_pp0_iter28_reg;
                or_cond_reg_353_pp0_iter2_reg <= or_cond_reg_353_pp0_iter1_reg;
                or_cond_reg_353_pp0_iter30_reg <= or_cond_reg_353_pp0_iter29_reg;
                or_cond_reg_353_pp0_iter31_reg <= or_cond_reg_353_pp0_iter30_reg;
                or_cond_reg_353_pp0_iter3_reg <= or_cond_reg_353_pp0_iter2_reg;
                or_cond_reg_353_pp0_iter4_reg <= or_cond_reg_353_pp0_iter3_reg;
                or_cond_reg_353_pp0_iter5_reg <= or_cond_reg_353_pp0_iter4_reg;
                or_cond_reg_353_pp0_iter6_reg <= or_cond_reg_353_pp0_iter5_reg;
                or_cond_reg_353_pp0_iter7_reg <= or_cond_reg_353_pp0_iter6_reg;
                or_cond_reg_353_pp0_iter8_reg <= or_cond_reg_353_pp0_iter7_reg;
                or_cond_reg_353_pp0_iter9_reg <= or_cond_reg_353_pp0_iter8_reg;
                p_Result_s_reg_331_pp0_iter10_reg <= p_Result_s_reg_331_pp0_iter9_reg;
                p_Result_s_reg_331_pp0_iter11_reg <= p_Result_s_reg_331_pp0_iter10_reg;
                p_Result_s_reg_331_pp0_iter12_reg <= p_Result_s_reg_331_pp0_iter11_reg;
                p_Result_s_reg_331_pp0_iter13_reg <= p_Result_s_reg_331_pp0_iter12_reg;
                p_Result_s_reg_331_pp0_iter14_reg <= p_Result_s_reg_331_pp0_iter13_reg;
                p_Result_s_reg_331_pp0_iter15_reg <= p_Result_s_reg_331_pp0_iter14_reg;
                p_Result_s_reg_331_pp0_iter16_reg <= p_Result_s_reg_331_pp0_iter15_reg;
                p_Result_s_reg_331_pp0_iter17_reg <= p_Result_s_reg_331_pp0_iter16_reg;
                p_Result_s_reg_331_pp0_iter18_reg <= p_Result_s_reg_331_pp0_iter17_reg;
                p_Result_s_reg_331_pp0_iter19_reg <= p_Result_s_reg_331_pp0_iter18_reg;
                p_Result_s_reg_331_pp0_iter20_reg <= p_Result_s_reg_331_pp0_iter19_reg;
                p_Result_s_reg_331_pp0_iter21_reg <= p_Result_s_reg_331_pp0_iter20_reg;
                p_Result_s_reg_331_pp0_iter22_reg <= p_Result_s_reg_331_pp0_iter21_reg;
                p_Result_s_reg_331_pp0_iter23_reg <= p_Result_s_reg_331_pp0_iter22_reg;
                p_Result_s_reg_331_pp0_iter24_reg <= p_Result_s_reg_331_pp0_iter23_reg;
                p_Result_s_reg_331_pp0_iter25_reg <= p_Result_s_reg_331_pp0_iter24_reg;
                p_Result_s_reg_331_pp0_iter26_reg <= p_Result_s_reg_331_pp0_iter25_reg;
                p_Result_s_reg_331_pp0_iter27_reg <= p_Result_s_reg_331_pp0_iter26_reg;
                p_Result_s_reg_331_pp0_iter28_reg <= p_Result_s_reg_331_pp0_iter27_reg;
                p_Result_s_reg_331_pp0_iter29_reg <= p_Result_s_reg_331_pp0_iter28_reg;
                p_Result_s_reg_331_pp0_iter2_reg <= p_Result_s_reg_331_pp0_iter1_reg;
                p_Result_s_reg_331_pp0_iter30_reg <= p_Result_s_reg_331_pp0_iter29_reg;
                p_Result_s_reg_331_pp0_iter31_reg <= p_Result_s_reg_331_pp0_iter30_reg;
                p_Result_s_reg_331_pp0_iter3_reg <= p_Result_s_reg_331_pp0_iter2_reg;
                p_Result_s_reg_331_pp0_iter4_reg <= p_Result_s_reg_331_pp0_iter3_reg;
                p_Result_s_reg_331_pp0_iter5_reg <= p_Result_s_reg_331_pp0_iter4_reg;
                p_Result_s_reg_331_pp0_iter6_reg <= p_Result_s_reg_331_pp0_iter5_reg;
                p_Result_s_reg_331_pp0_iter7_reg <= p_Result_s_reg_331_pp0_iter6_reg;
                p_Result_s_reg_331_pp0_iter8_reg <= p_Result_s_reg_331_pp0_iter7_reg;
                p_Result_s_reg_331_pp0_iter9_reg <= p_Result_s_reg_331_pp0_iter8_reg;
                reg_161_pp0_iter29_reg <= reg_161;
                reg_161_pp0_iter30_reg <= reg_161_pp0_iter29_reg;
                resultf_reg_401_pp0_iter10_reg <= resultf_reg_401_pp0_iter9_reg;
                resultf_reg_401_pp0_iter11_reg <= resultf_reg_401_pp0_iter10_reg;
                resultf_reg_401_pp0_iter12_reg <= resultf_reg_401_pp0_iter11_reg;
                resultf_reg_401_pp0_iter13_reg <= resultf_reg_401_pp0_iter12_reg;
                resultf_reg_401_pp0_iter14_reg <= resultf_reg_401_pp0_iter13_reg;
                resultf_reg_401_pp0_iter15_reg <= resultf_reg_401_pp0_iter14_reg;
                resultf_reg_401_pp0_iter16_reg <= resultf_reg_401_pp0_iter15_reg;
                resultf_reg_401_pp0_iter17_reg <= resultf_reg_401_pp0_iter16_reg;
                resultf_reg_401_pp0_iter18_reg <= resultf_reg_401_pp0_iter17_reg;
                resultf_reg_401_pp0_iter19_reg <= resultf_reg_401_pp0_iter18_reg;
                resultf_reg_401_pp0_iter20_reg <= resultf_reg_401_pp0_iter19_reg;
                resultf_reg_401_pp0_iter21_reg <= resultf_reg_401_pp0_iter20_reg;
                resultf_reg_401_pp0_iter22_reg <= resultf_reg_401_pp0_iter21_reg;
                resultf_reg_401_pp0_iter23_reg <= resultf_reg_401_pp0_iter22_reg;
                resultf_reg_401_pp0_iter24_reg <= resultf_reg_401_pp0_iter23_reg;
                resultf_reg_401_pp0_iter25_reg <= resultf_reg_401_pp0_iter24_reg;
                resultf_reg_401_pp0_iter26_reg <= resultf_reg_401_pp0_iter25_reg;
                resultf_reg_401_pp0_iter27_reg <= resultf_reg_401_pp0_iter26_reg;
                resultf_reg_401_pp0_iter28_reg <= resultf_reg_401_pp0_iter27_reg;
                resultf_reg_401_pp0_iter29_reg <= resultf_reg_401_pp0_iter28_reg;
                resultf_reg_401_pp0_iter30_reg <= resultf_reg_401_pp0_iter29_reg;
                resultf_reg_401_pp0_iter6_reg <= resultf_reg_401;
                resultf_reg_401_pp0_iter7_reg <= resultf_reg_401_pp0_iter6_reg;
                resultf_reg_401_pp0_iter8_reg <= resultf_reg_401_pp0_iter7_reg;
                resultf_reg_401_pp0_iter9_reg <= resultf_reg_401_pp0_iter8_reg;
                tmp_18_reg_357_pp0_iter10_reg <= tmp_18_reg_357_pp0_iter9_reg;
                tmp_18_reg_357_pp0_iter11_reg <= tmp_18_reg_357_pp0_iter10_reg;
                tmp_18_reg_357_pp0_iter12_reg <= tmp_18_reg_357_pp0_iter11_reg;
                tmp_18_reg_357_pp0_iter13_reg <= tmp_18_reg_357_pp0_iter12_reg;
                tmp_18_reg_357_pp0_iter14_reg <= tmp_18_reg_357_pp0_iter13_reg;
                tmp_18_reg_357_pp0_iter15_reg <= tmp_18_reg_357_pp0_iter14_reg;
                tmp_18_reg_357_pp0_iter16_reg <= tmp_18_reg_357_pp0_iter15_reg;
                tmp_18_reg_357_pp0_iter17_reg <= tmp_18_reg_357_pp0_iter16_reg;
                tmp_18_reg_357_pp0_iter18_reg <= tmp_18_reg_357_pp0_iter17_reg;
                tmp_18_reg_357_pp0_iter19_reg <= tmp_18_reg_357_pp0_iter18_reg;
                tmp_18_reg_357_pp0_iter20_reg <= tmp_18_reg_357_pp0_iter19_reg;
                tmp_18_reg_357_pp0_iter21_reg <= tmp_18_reg_357_pp0_iter20_reg;
                tmp_18_reg_357_pp0_iter22_reg <= tmp_18_reg_357_pp0_iter21_reg;
                tmp_18_reg_357_pp0_iter23_reg <= tmp_18_reg_357_pp0_iter22_reg;
                tmp_18_reg_357_pp0_iter24_reg <= tmp_18_reg_357_pp0_iter23_reg;
                tmp_18_reg_357_pp0_iter25_reg <= tmp_18_reg_357_pp0_iter24_reg;
                tmp_18_reg_357_pp0_iter26_reg <= tmp_18_reg_357_pp0_iter25_reg;
                tmp_18_reg_357_pp0_iter27_reg <= tmp_18_reg_357_pp0_iter26_reg;
                tmp_18_reg_357_pp0_iter28_reg <= tmp_18_reg_357_pp0_iter27_reg;
                tmp_18_reg_357_pp0_iter29_reg <= tmp_18_reg_357_pp0_iter28_reg;
                tmp_18_reg_357_pp0_iter2_reg <= tmp_18_reg_357_pp0_iter1_reg;
                tmp_18_reg_357_pp0_iter30_reg <= tmp_18_reg_357_pp0_iter29_reg;
                tmp_18_reg_357_pp0_iter31_reg <= tmp_18_reg_357_pp0_iter30_reg;
                tmp_18_reg_357_pp0_iter3_reg <= tmp_18_reg_357_pp0_iter2_reg;
                tmp_18_reg_357_pp0_iter4_reg <= tmp_18_reg_357_pp0_iter3_reg;
                tmp_18_reg_357_pp0_iter5_reg <= tmp_18_reg_357_pp0_iter4_reg;
                tmp_18_reg_357_pp0_iter6_reg <= tmp_18_reg_357_pp0_iter5_reg;
                tmp_18_reg_357_pp0_iter7_reg <= tmp_18_reg_357_pp0_iter6_reg;
                tmp_18_reg_357_pp0_iter8_reg <= tmp_18_reg_357_pp0_iter7_reg;
                tmp_18_reg_357_pp0_iter9_reg <= tmp_18_reg_357_pp0_iter8_reg;
                tmp_54_reg_371_pp0_iter10_reg <= tmp_54_reg_371_pp0_iter9_reg;
                tmp_54_reg_371_pp0_iter11_reg <= tmp_54_reg_371_pp0_iter10_reg;
                tmp_54_reg_371_pp0_iter12_reg <= tmp_54_reg_371_pp0_iter11_reg;
                tmp_54_reg_371_pp0_iter13_reg <= tmp_54_reg_371_pp0_iter12_reg;
                tmp_54_reg_371_pp0_iter14_reg <= tmp_54_reg_371_pp0_iter13_reg;
                tmp_54_reg_371_pp0_iter15_reg <= tmp_54_reg_371_pp0_iter14_reg;
                tmp_54_reg_371_pp0_iter16_reg <= tmp_54_reg_371_pp0_iter15_reg;
                tmp_54_reg_371_pp0_iter17_reg <= tmp_54_reg_371_pp0_iter16_reg;
                tmp_54_reg_371_pp0_iter18_reg <= tmp_54_reg_371_pp0_iter17_reg;
                tmp_54_reg_371_pp0_iter19_reg <= tmp_54_reg_371_pp0_iter18_reg;
                tmp_54_reg_371_pp0_iter20_reg <= tmp_54_reg_371_pp0_iter19_reg;
                tmp_54_reg_371_pp0_iter21_reg <= tmp_54_reg_371_pp0_iter20_reg;
                tmp_54_reg_371_pp0_iter22_reg <= tmp_54_reg_371_pp0_iter21_reg;
                tmp_54_reg_371_pp0_iter23_reg <= tmp_54_reg_371_pp0_iter22_reg;
                tmp_54_reg_371_pp0_iter24_reg <= tmp_54_reg_371_pp0_iter23_reg;
                tmp_54_reg_371_pp0_iter25_reg <= tmp_54_reg_371_pp0_iter24_reg;
                tmp_54_reg_371_pp0_iter26_reg <= tmp_54_reg_371_pp0_iter25_reg;
                tmp_54_reg_371_pp0_iter27_reg <= tmp_54_reg_371_pp0_iter26_reg;
                tmp_54_reg_371_pp0_iter28_reg <= tmp_54_reg_371_pp0_iter27_reg;
                tmp_54_reg_371_pp0_iter29_reg <= tmp_54_reg_371_pp0_iter28_reg;
                tmp_54_reg_371_pp0_iter2_reg <= tmp_54_reg_371_pp0_iter1_reg;
                tmp_54_reg_371_pp0_iter30_reg <= tmp_54_reg_371_pp0_iter29_reg;
                tmp_54_reg_371_pp0_iter3_reg <= tmp_54_reg_371_pp0_iter2_reg;
                tmp_54_reg_371_pp0_iter4_reg <= tmp_54_reg_371_pp0_iter3_reg;
                tmp_54_reg_371_pp0_iter5_reg <= tmp_54_reg_371_pp0_iter4_reg;
                tmp_54_reg_371_pp0_iter6_reg <= tmp_54_reg_371_pp0_iter5_reg;
                tmp_54_reg_371_pp0_iter7_reg <= tmp_54_reg_371_pp0_iter6_reg;
                tmp_54_reg_371_pp0_iter8_reg <= tmp_54_reg_371_pp0_iter7_reg;
                tmp_54_reg_371_pp0_iter9_reg <= tmp_54_reg_371_pp0_iter8_reg;
                tmp_55_reg_349_pp0_iter10_reg <= tmp_55_reg_349_pp0_iter9_reg;
                tmp_55_reg_349_pp0_iter11_reg <= tmp_55_reg_349_pp0_iter10_reg;
                tmp_55_reg_349_pp0_iter12_reg <= tmp_55_reg_349_pp0_iter11_reg;
                tmp_55_reg_349_pp0_iter13_reg <= tmp_55_reg_349_pp0_iter12_reg;
                tmp_55_reg_349_pp0_iter14_reg <= tmp_55_reg_349_pp0_iter13_reg;
                tmp_55_reg_349_pp0_iter15_reg <= tmp_55_reg_349_pp0_iter14_reg;
                tmp_55_reg_349_pp0_iter16_reg <= tmp_55_reg_349_pp0_iter15_reg;
                tmp_55_reg_349_pp0_iter17_reg <= tmp_55_reg_349_pp0_iter16_reg;
                tmp_55_reg_349_pp0_iter18_reg <= tmp_55_reg_349_pp0_iter17_reg;
                tmp_55_reg_349_pp0_iter19_reg <= tmp_55_reg_349_pp0_iter18_reg;
                tmp_55_reg_349_pp0_iter20_reg <= tmp_55_reg_349_pp0_iter19_reg;
                tmp_55_reg_349_pp0_iter21_reg <= tmp_55_reg_349_pp0_iter20_reg;
                tmp_55_reg_349_pp0_iter22_reg <= tmp_55_reg_349_pp0_iter21_reg;
                tmp_55_reg_349_pp0_iter23_reg <= tmp_55_reg_349_pp0_iter22_reg;
                tmp_55_reg_349_pp0_iter24_reg <= tmp_55_reg_349_pp0_iter23_reg;
                tmp_55_reg_349_pp0_iter25_reg <= tmp_55_reg_349_pp0_iter24_reg;
                tmp_55_reg_349_pp0_iter26_reg <= tmp_55_reg_349_pp0_iter25_reg;
                tmp_55_reg_349_pp0_iter27_reg <= tmp_55_reg_349_pp0_iter26_reg;
                tmp_55_reg_349_pp0_iter28_reg <= tmp_55_reg_349_pp0_iter27_reg;
                tmp_55_reg_349_pp0_iter29_reg <= tmp_55_reg_349_pp0_iter28_reg;
                tmp_55_reg_349_pp0_iter2_reg <= tmp_55_reg_349_pp0_iter1_reg;
                tmp_55_reg_349_pp0_iter30_reg <= tmp_55_reg_349_pp0_iter29_reg;
                tmp_55_reg_349_pp0_iter31_reg <= tmp_55_reg_349_pp0_iter30_reg;
                tmp_55_reg_349_pp0_iter3_reg <= tmp_55_reg_349_pp0_iter2_reg;
                tmp_55_reg_349_pp0_iter4_reg <= tmp_55_reg_349_pp0_iter3_reg;
                tmp_55_reg_349_pp0_iter5_reg <= tmp_55_reg_349_pp0_iter4_reg;
                tmp_55_reg_349_pp0_iter6_reg <= tmp_55_reg_349_pp0_iter5_reg;
                tmp_55_reg_349_pp0_iter7_reg <= tmp_55_reg_349_pp0_iter6_reg;
                tmp_55_reg_349_pp0_iter8_reg <= tmp_55_reg_349_pp0_iter7_reg;
                tmp_55_reg_349_pp0_iter9_reg <= tmp_55_reg_349_pp0_iter8_reg;
                tmp_59_reg_361_pp0_iter10_reg <= tmp_59_reg_361_pp0_iter9_reg;
                tmp_59_reg_361_pp0_iter11_reg <= tmp_59_reg_361_pp0_iter10_reg;
                tmp_59_reg_361_pp0_iter12_reg <= tmp_59_reg_361_pp0_iter11_reg;
                tmp_59_reg_361_pp0_iter13_reg <= tmp_59_reg_361_pp0_iter12_reg;
                tmp_59_reg_361_pp0_iter14_reg <= tmp_59_reg_361_pp0_iter13_reg;
                tmp_59_reg_361_pp0_iter15_reg <= tmp_59_reg_361_pp0_iter14_reg;
                tmp_59_reg_361_pp0_iter16_reg <= tmp_59_reg_361_pp0_iter15_reg;
                tmp_59_reg_361_pp0_iter17_reg <= tmp_59_reg_361_pp0_iter16_reg;
                tmp_59_reg_361_pp0_iter18_reg <= tmp_59_reg_361_pp0_iter17_reg;
                tmp_59_reg_361_pp0_iter19_reg <= tmp_59_reg_361_pp0_iter18_reg;
                tmp_59_reg_361_pp0_iter20_reg <= tmp_59_reg_361_pp0_iter19_reg;
                tmp_59_reg_361_pp0_iter21_reg <= tmp_59_reg_361_pp0_iter20_reg;
                tmp_59_reg_361_pp0_iter22_reg <= tmp_59_reg_361_pp0_iter21_reg;
                tmp_59_reg_361_pp0_iter23_reg <= tmp_59_reg_361_pp0_iter22_reg;
                tmp_59_reg_361_pp0_iter24_reg <= tmp_59_reg_361_pp0_iter23_reg;
                tmp_59_reg_361_pp0_iter25_reg <= tmp_59_reg_361_pp0_iter24_reg;
                tmp_59_reg_361_pp0_iter26_reg <= tmp_59_reg_361_pp0_iter25_reg;
                tmp_59_reg_361_pp0_iter27_reg <= tmp_59_reg_361_pp0_iter26_reg;
                tmp_59_reg_361_pp0_iter28_reg <= tmp_59_reg_361_pp0_iter27_reg;
                tmp_59_reg_361_pp0_iter29_reg <= tmp_59_reg_361_pp0_iter28_reg;
                tmp_59_reg_361_pp0_iter2_reg <= tmp_59_reg_361_pp0_iter1_reg;
                tmp_59_reg_361_pp0_iter30_reg <= tmp_59_reg_361_pp0_iter29_reg;
                tmp_59_reg_361_pp0_iter31_reg <= tmp_59_reg_361_pp0_iter30_reg;
                tmp_59_reg_361_pp0_iter3_reg <= tmp_59_reg_361_pp0_iter2_reg;
                tmp_59_reg_361_pp0_iter4_reg <= tmp_59_reg_361_pp0_iter3_reg;
                tmp_59_reg_361_pp0_iter5_reg <= tmp_59_reg_361_pp0_iter4_reg;
                tmp_59_reg_361_pp0_iter6_reg <= tmp_59_reg_361_pp0_iter5_reg;
                tmp_59_reg_361_pp0_iter7_reg <= tmp_59_reg_361_pp0_iter6_reg;
                tmp_59_reg_361_pp0_iter8_reg <= tmp_59_reg_361_pp0_iter7_reg;
                tmp_59_reg_361_pp0_iter9_reg <= tmp_59_reg_361_pp0_iter8_reg;
                tmp_i_50_reg_392_pp0_iter10_reg <= tmp_i_50_reg_392_pp0_iter9_reg;
                tmp_i_50_reg_392_pp0_iter11_reg <= tmp_i_50_reg_392_pp0_iter10_reg;
                tmp_i_50_reg_392_pp0_iter12_reg <= tmp_i_50_reg_392_pp0_iter11_reg;
                tmp_i_50_reg_392_pp0_iter13_reg <= tmp_i_50_reg_392_pp0_iter12_reg;
                tmp_i_50_reg_392_pp0_iter14_reg <= tmp_i_50_reg_392_pp0_iter13_reg;
                tmp_i_50_reg_392_pp0_iter15_reg <= tmp_i_50_reg_392_pp0_iter14_reg;
                tmp_i_50_reg_392_pp0_iter5_reg <= tmp_i_50_reg_392;
                tmp_i_50_reg_392_pp0_iter6_reg <= tmp_i_50_reg_392_pp0_iter5_reg;
                tmp_i_50_reg_392_pp0_iter7_reg <= tmp_i_50_reg_392_pp0_iter6_reg;
                tmp_i_50_reg_392_pp0_iter8_reg <= tmp_i_50_reg_392_pp0_iter7_reg;
                tmp_i_50_reg_392_pp0_iter9_reg <= tmp_i_50_reg_392_pp0_iter8_reg;
                tmp_i_reg_388_pp0_iter10_reg <= tmp_i_reg_388_pp0_iter9_reg;
                tmp_i_reg_388_pp0_iter11_reg <= tmp_i_reg_388_pp0_iter10_reg;
                tmp_i_reg_388_pp0_iter12_reg <= tmp_i_reg_388_pp0_iter11_reg;
                tmp_i_reg_388_pp0_iter13_reg <= tmp_i_reg_388_pp0_iter12_reg;
                tmp_i_reg_388_pp0_iter14_reg <= tmp_i_reg_388_pp0_iter13_reg;
                tmp_i_reg_388_pp0_iter15_reg <= tmp_i_reg_388_pp0_iter14_reg;
                tmp_i_reg_388_pp0_iter5_reg <= tmp_i_reg_388;
                tmp_i_reg_388_pp0_iter6_reg <= tmp_i_reg_388_pp0_iter5_reg;
                tmp_i_reg_388_pp0_iter7_reg <= tmp_i_reg_388_pp0_iter6_reg;
                tmp_i_reg_388_pp0_iter8_reg <= tmp_i_reg_388_pp0_iter7_reg;
                tmp_i_reg_388_pp0_iter9_reg <= tmp_i_reg_388_pp0_iter8_reg;
                tmp_s_reg_345_pp0_iter10_reg <= tmp_s_reg_345_pp0_iter9_reg;
                tmp_s_reg_345_pp0_iter11_reg <= tmp_s_reg_345_pp0_iter10_reg;
                tmp_s_reg_345_pp0_iter12_reg <= tmp_s_reg_345_pp0_iter11_reg;
                tmp_s_reg_345_pp0_iter13_reg <= tmp_s_reg_345_pp0_iter12_reg;
                tmp_s_reg_345_pp0_iter14_reg <= tmp_s_reg_345_pp0_iter13_reg;
                tmp_s_reg_345_pp0_iter15_reg <= tmp_s_reg_345_pp0_iter14_reg;
                tmp_s_reg_345_pp0_iter16_reg <= tmp_s_reg_345_pp0_iter15_reg;
                tmp_s_reg_345_pp0_iter17_reg <= tmp_s_reg_345_pp0_iter16_reg;
                tmp_s_reg_345_pp0_iter18_reg <= tmp_s_reg_345_pp0_iter17_reg;
                tmp_s_reg_345_pp0_iter19_reg <= tmp_s_reg_345_pp0_iter18_reg;
                tmp_s_reg_345_pp0_iter20_reg <= tmp_s_reg_345_pp0_iter19_reg;
                tmp_s_reg_345_pp0_iter21_reg <= tmp_s_reg_345_pp0_iter20_reg;
                tmp_s_reg_345_pp0_iter22_reg <= tmp_s_reg_345_pp0_iter21_reg;
                tmp_s_reg_345_pp0_iter23_reg <= tmp_s_reg_345_pp0_iter22_reg;
                tmp_s_reg_345_pp0_iter24_reg <= tmp_s_reg_345_pp0_iter23_reg;
                tmp_s_reg_345_pp0_iter25_reg <= tmp_s_reg_345_pp0_iter24_reg;
                tmp_s_reg_345_pp0_iter26_reg <= tmp_s_reg_345_pp0_iter25_reg;
                tmp_s_reg_345_pp0_iter27_reg <= tmp_s_reg_345_pp0_iter26_reg;
                tmp_s_reg_345_pp0_iter28_reg <= tmp_s_reg_345_pp0_iter27_reg;
                tmp_s_reg_345_pp0_iter29_reg <= tmp_s_reg_345_pp0_iter28_reg;
                tmp_s_reg_345_pp0_iter2_reg <= tmp_s_reg_345_pp0_iter1_reg;
                tmp_s_reg_345_pp0_iter30_reg <= tmp_s_reg_345_pp0_iter29_reg;
                tmp_s_reg_345_pp0_iter31_reg <= tmp_s_reg_345_pp0_iter30_reg;
                tmp_s_reg_345_pp0_iter3_reg <= tmp_s_reg_345_pp0_iter2_reg;
                tmp_s_reg_345_pp0_iter4_reg <= tmp_s_reg_345_pp0_iter3_reg;
                tmp_s_reg_345_pp0_iter5_reg <= tmp_s_reg_345_pp0_iter4_reg;
                tmp_s_reg_345_pp0_iter6_reg <= tmp_s_reg_345_pp0_iter5_reg;
                tmp_s_reg_345_pp0_iter7_reg <= tmp_s_reg_345_pp0_iter6_reg;
                tmp_s_reg_345_pp0_iter8_reg <= tmp_s_reg_345_pp0_iter7_reg;
                tmp_s_reg_345_pp0_iter9_reg <= tmp_s_reg_345_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter10_expx_reg_58 <= ap_phi_reg_pp0_iter9_expx_reg_58;
                ap_phi_reg_pp0_iter10_resultf_4_reg_72 <= ap_phi_reg_pp0_iter9_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter11_expx_reg_58 <= ap_phi_reg_pp0_iter10_expx_reg_58;
                ap_phi_reg_pp0_iter11_resultf_4_reg_72 <= ap_phi_reg_pp0_iter10_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter12_expx_reg_58 <= ap_phi_reg_pp0_iter11_expx_reg_58;
                ap_phi_reg_pp0_iter12_resultf_4_reg_72 <= ap_phi_reg_pp0_iter11_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter13_expx_reg_58 <= ap_phi_reg_pp0_iter12_expx_reg_58;
                ap_phi_reg_pp0_iter13_resultf_4_reg_72 <= ap_phi_reg_pp0_iter12_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter14_expx_reg_58 <= ap_phi_reg_pp0_iter13_expx_reg_58;
                ap_phi_reg_pp0_iter14_resultf_4_reg_72 <= ap_phi_reg_pp0_iter13_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter15_expx_reg_58 <= ap_phi_reg_pp0_iter14_expx_reg_58;
                ap_phi_reg_pp0_iter15_resultf_4_reg_72 <= ap_phi_reg_pp0_iter14_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter16_expx_reg_58 <= ap_phi_reg_pp0_iter15_expx_reg_58;
                ap_phi_reg_pp0_iter16_resultf_4_reg_72 <= ap_phi_reg_pp0_iter15_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter17_resultf_4_reg_72 <= ap_phi_reg_pp0_iter16_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter18_resultf_4_reg_72 <= ap_phi_reg_pp0_iter17_resultf_4_reg_72;
                expx_reg_58 <= ap_phi_reg_pp0_iter17_expx_reg_58;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter19_resultf_4_reg_72 <= ap_phi_reg_pp0_iter18_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter1_expx_reg_58 <= ap_phi_reg_pp0_iter0_expx_reg_58;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter20_resultf_4_reg_72 <= ap_phi_reg_pp0_iter19_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter21_resultf_4_reg_72 <= ap_phi_reg_pp0_iter20_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter22_resultf_4_reg_72 <= ap_phi_reg_pp0_iter21_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter22 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter23_resultf_4_reg_72 <= ap_phi_reg_pp0_iter22_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter23 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter24_resultf_4_reg_72 <= ap_phi_reg_pp0_iter23_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter25_resultf_4_reg_72 <= ap_phi_reg_pp0_iter24_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter25 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter26_resultf_4_reg_72 <= ap_phi_reg_pp0_iter25_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter26 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter27_resultf_4_reg_72 <= ap_phi_reg_pp0_iter26_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter27 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter28_resultf_4_reg_72 <= ap_phi_reg_pp0_iter27_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter28 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter29_resultf_4_reg_72 <= ap_phi_reg_pp0_iter28_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter2_expx_reg_58 <= ap_phi_reg_pp0_iter1_expx_reg_58;
                ap_phi_reg_pp0_iter2_resultf_4_reg_72 <= ap_phi_reg_pp0_iter1_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter29 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter30_resultf_4_reg_72 <= ap_phi_reg_pp0_iter29_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter30 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter31_resultf_4_reg_72 <= ap_phi_reg_pp0_iter30_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter3_expx_reg_58 <= ap_phi_reg_pp0_iter2_expx_reg_58;
                ap_phi_reg_pp0_iter3_resultf_4_reg_72 <= ap_phi_reg_pp0_iter2_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter4_expx_reg_58 <= ap_phi_reg_pp0_iter3_expx_reg_58;
                ap_phi_reg_pp0_iter4_resultf_4_reg_72 <= ap_phi_reg_pp0_iter3_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter5_resultf_4_reg_72 <= ap_phi_reg_pp0_iter4_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter6_expx_reg_58 <= ap_phi_reg_pp0_iter5_expx_reg_58;
                ap_phi_reg_pp0_iter6_resultf_4_reg_72 <= ap_phi_reg_pp0_iter5_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter7_expx_reg_58 <= ap_phi_reg_pp0_iter6_expx_reg_58;
                ap_phi_reg_pp0_iter7_resultf_4_reg_72 <= ap_phi_reg_pp0_iter6_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter8_expx_reg_58 <= ap_phi_reg_pp0_iter7_expx_reg_58;
                ap_phi_reg_pp0_iter8_resultf_4_reg_72 <= ap_phi_reg_pp0_iter7_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter9_expx_reg_58 <= ap_phi_reg_pp0_iter8_expx_reg_58;
                ap_phi_reg_pp0_iter9_resultf_4_reg_72 <= ap_phi_reg_pp0_iter8_resultf_4_reg_72;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_55_fu_222_p2 = ap_const_lv1_0) and (tmp_s_fu_216_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                or_cond_reg_353 <= or_cond_fu_234_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_59_reg_361_pp0_iter19_reg = ap_const_lv1_1) and (tmp_18_reg_357_pp0_iter19_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (or_cond_reg_353_pp0_iter19_reg = ap_const_lv1_0) and (tmp_55_reg_349_pp0_iter19_reg = ap_const_lv1_0) and (tmp_s_reg_345_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_18_reg_357_pp0_iter19_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (tmp_59_reg_361_pp0_iter19_reg = ap_const_lv1_0) and (or_cond_reg_353_pp0_iter19_reg = ap_const_lv1_0) and (tmp_55_reg_349_pp0_iter19_reg = ap_const_lv1_0) and (tmp_s_reg_345_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_156 <= grp_fu_109_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_59_reg_361_pp0_iter27_reg = ap_const_lv1_1) and (tmp_18_reg_357_pp0_iter27_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1) and (or_cond_reg_353_pp0_iter27_reg = ap_const_lv1_0) and (tmp_55_reg_349_pp0_iter27_reg = ap_const_lv1_0) and (tmp_s_reg_345_pp0_iter27_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_18_reg_357_pp0_iter27_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1) and (tmp_59_reg_361_pp0_iter27_reg = ap_const_lv1_0) and (or_cond_reg_353_pp0_iter27_reg = ap_const_lv1_0) and (tmp_55_reg_349_pp0_iter27_reg = ap_const_lv1_0) and (tmp_s_reg_345_pp0_iter27_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_161 <= grp_fu_125_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (((or_cond_reg_353_pp0_iter4_reg = ap_const_lv1_1) and (tmp_s_reg_345_pp0_iter4_reg = ap_const_lv1_0)) or ((tmp_55_reg_349_pp0_iter4_reg = ap_const_lv1_1) and (tmp_s_reg_345_pp0_iter4_reg = ap_const_lv1_0))))) then
                resultf_reg_401 <= grp_fu_121_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_59_reg_361_pp0_iter19_reg = ap_const_lv1_1) and (tmp_18_reg_357_pp0_iter19_reg = ap_const_lv1_1) and (or_cond_reg_353_pp0_iter19_reg = ap_const_lv1_0) and (tmp_55_reg_349_pp0_iter19_reg = ap_const_lv1_0) and (tmp_s_reg_345_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_114_neg_reg_421 <= tmp_114_neg_fu_293_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_18_reg_357_pp0_iter10_reg = ap_const_lv1_1) and (tmp_i_50_reg_392_pp0_iter10_reg = ap_const_lv1_0) and (tmp_i_reg_388_pp0_iter10_reg = ap_const_lv1_0) and (or_cond_reg_353_pp0_iter10_reg = ap_const_lv1_0) and (tmp_55_reg_349_pp0_iter10_reg = ap_const_lv1_0) and (tmp_s_reg_345_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_118_i_reg_406 <= grp_exp_generic_double_s_fu_89_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_18_reg_357_pp0_iter14_reg = ap_const_lv1_1) and (tmp_i_50_reg_392_pp0_iter14_reg = ap_const_lv1_0) and (tmp_i_reg_388_pp0_iter14_reg = ap_const_lv1_0) and (or_cond_reg_353_pp0_iter14_reg = ap_const_lv1_0) and (tmp_55_reg_349_pp0_iter14_reg = ap_const_lv1_0) and (tmp_s_reg_345_pp0_iter14_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_119_i_reg_411 <= grp_fu_141_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond_fu_234_p2 = ap_const_lv1_0) and (tmp_55_fu_222_p2 = ap_const_lv1_0) and (tmp_s_fu_216_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_18_reg_357 <= tmp_18_fu_136_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_fu_216_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_54_reg_371 <= tmp_54_fu_151_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_s_fu_216_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_55_reg_349 <= tmp_55_fu_222_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (((or_cond_reg_353_pp0_iter2_reg = ap_const_lv1_1) and (tmp_s_reg_345_pp0_iter2_reg = ap_const_lv1_0)) or ((tmp_55_reg_349_pp0_iter2_reg = ap_const_lv1_1) and (tmp_s_reg_345_pp0_iter2_reg = ap_const_lv1_0))))) then
                tmp_58_reg_383 <= grp_fu_100_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_18_fu_136_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond_fu_234_p2 = ap_const_lv1_0) and (tmp_55_fu_222_p2 = ap_const_lv1_0) and (tmp_s_fu_216_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_59_reg_361 <= tmp_59_fu_240_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_18_reg_357_pp0_iter3_reg = ap_const_lv1_1) and (tmp_i_fu_277_p2 = ap_const_lv1_0) and (or_cond_reg_353_pp0_iter3_reg = ap_const_lv1_0) and (tmp_55_reg_349_pp0_iter3_reg = ap_const_lv1_0) and (tmp_s_reg_345_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_i_50_reg_392 <= tmp_i_50_fu_283_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_18_reg_357_pp0_iter3_reg = ap_const_lv1_1) and (or_cond_reg_353_pp0_iter3_reg = ap_const_lv1_0) and (tmp_55_reg_349_pp0_iter3_reg = ap_const_lv1_0) and (tmp_s_reg_345_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_i_reg_388 <= tmp_i_fu_277_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_18_reg_357_pp0_iter2_reg = ap_const_lv1_1) and (or_cond_reg_353_pp0_iter2_reg = ap_const_lv1_0) and (tmp_55_reg_349_pp0_iter2_reg = ap_const_lv1_0) and (tmp_s_reg_345_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                x_2_reg_376 <= x_2_fu_257_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_18_reg_357_pp0_iter3_reg = ap_const_lv1_1) and (tmp_i_50_fu_283_p2 = ap_const_lv1_0) and (tmp_i_fu_277_p2 = ap_const_lv1_0) and (or_cond_reg_353_pp0_iter3_reg = ap_const_lv1_0) and (tmp_55_reg_349_pp0_iter3_reg = ap_const_lv1_0) and (tmp_s_reg_345_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                xd_reg_396 <= xd_fu_133_p1;
            end if;
        end if;
    end process;
    abst_in_reg_336(31) <= '0';
    abst_in_reg_336_pp0_iter1_reg(31) <= '0';
    abst_in_reg_336_pp0_iter2_reg(31) <= '0';
    abst_in_reg_336_pp0_iter3_reg(31) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    abst_in_fu_207_p1 <= p_Result_9_fu_199_p3;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_00001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_00001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state20_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage0_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1019_assign_proc : process(tmp_s_fu_216_p2, tmp_55_fu_222_p2, or_cond_fu_234_p2)
    begin
                ap_condition_1019 <= (((or_cond_fu_234_p2 = ap_const_lv1_1) and (tmp_s_fu_216_p2 = ap_const_lv1_0)) or ((tmp_55_fu_222_p2 = ap_const_lv1_1) and (tmp_s_fu_216_p2 = ap_const_lv1_0)));
    end process;


    ap_condition_1154_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_00001)
    begin
                ap_condition_1154 <= ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_00001));
    end process;


    ap_condition_1603_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter21, tmp_s_reg_345_pp0_iter20_reg, tmp_55_reg_349_pp0_iter20_reg, or_cond_reg_353_pp0_iter20_reg, tmp_18_reg_357_pp0_iter20_reg)
    begin
                ap_condition_1603 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_18_reg_357_pp0_iter20_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (or_cond_reg_353_pp0_iter20_reg = ap_const_lv1_0) and (tmp_55_reg_349_pp0_iter20_reg = ap_const_lv1_0) and (tmp_s_reg_345_pp0_iter20_reg = ap_const_lv1_0));
    end process;


    ap_condition_172_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
                ap_condition_172 <= ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_25_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
                ap_condition_25 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_426_assign_proc : process(tmp_s_fu_216_p2, tmp_55_fu_222_p2, or_cond_fu_234_p2, tmp_18_fu_136_p2)
    begin
                ap_condition_426 <= ((tmp_18_fu_136_p2 = ap_const_lv1_1) and (or_cond_fu_234_p2 = ap_const_lv1_0) and (tmp_55_fu_222_p2 = ap_const_lv1_0) and (tmp_s_fu_216_p2 = ap_const_lv1_0));
    end process;


    ap_condition_644_assign_proc : process(tmp_s_reg_345_pp0_iter15_reg, tmp_55_reg_349_pp0_iter15_reg, or_cond_reg_353_pp0_iter15_reg, tmp_18_reg_357_pp0_iter15_reg, tmp_i_reg_388_pp0_iter15_reg, tmp_i_50_reg_392_pp0_iter15_reg)
    begin
                ap_condition_644 <= ((tmp_18_reg_357_pp0_iter15_reg = ap_const_lv1_1) and (tmp_i_50_reg_392_pp0_iter15_reg = ap_const_lv1_0) and (tmp_i_reg_388_pp0_iter15_reg = ap_const_lv1_0) and (or_cond_reg_353_pp0_iter15_reg = ap_const_lv1_0) and (tmp_55_reg_349_pp0_iter15_reg = ap_const_lv1_0) and (tmp_s_reg_345_pp0_iter15_reg = ap_const_lv1_0));
    end process;


    ap_condition_787_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, ap_ce)
    begin
                ap_condition_787 <= ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_835_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001, ap_ce)
    begin
                ap_condition_835 <= ((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_844_assign_proc : process(tmp_s_reg_345_pp0_iter3_reg, tmp_55_reg_349_pp0_iter3_reg, or_cond_reg_353_pp0_iter3_reg, tmp_18_reg_357_pp0_iter3_reg, tmp_i_fu_277_p2)
    begin
                ap_condition_844 <= ((tmp_i_fu_277_p2 = ap_const_lv1_1) and (tmp_18_reg_357_pp0_iter3_reg = ap_const_lv1_1) and (or_cond_reg_353_pp0_iter3_reg = ap_const_lv1_0) and (tmp_55_reg_349_pp0_iter3_reg = ap_const_lv1_0) and (tmp_s_reg_345_pp0_iter3_reg = ap_const_lv1_0));
    end process;


    ap_condition_851_assign_proc : process(tmp_s_reg_345_pp0_iter3_reg, tmp_55_reg_349_pp0_iter3_reg, or_cond_reg_353_pp0_iter3_reg, tmp_18_reg_357_pp0_iter3_reg, tmp_i_fu_277_p2, tmp_i_50_fu_283_p2)
    begin
                ap_condition_851 <= ((tmp_i_50_fu_283_p2 = ap_const_lv1_1) and (tmp_18_reg_357_pp0_iter3_reg = ap_const_lv1_1) and (tmp_i_fu_277_p2 = ap_const_lv1_0) and (or_cond_reg_353_pp0_iter3_reg = ap_const_lv1_0) and (tmp_55_reg_349_pp0_iter3_reg = ap_const_lv1_0) and (tmp_s_reg_345_pp0_iter3_reg = ap_const_lv1_0));
    end process;


    ap_condition_922_assign_proc : process(ap_enable_reg_pp0_iter31, ap_block_pp0_stage0_11001, ap_ce)
    begin
                ap_condition_922 <= ((ap_enable_reg_pp0_iter31 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_928_assign_proc : process(tmp_s_reg_345_pp0_iter30_reg, tmp_55_reg_349_pp0_iter30_reg, or_cond_reg_353_pp0_iter30_reg)
    begin
                ap_condition_928 <= (((or_cond_reg_353_pp0_iter30_reg = ap_const_lv1_1) and (tmp_s_reg_345_pp0_iter30_reg = ap_const_lv1_0)) or ((tmp_55_reg_349_pp0_iter30_reg = ap_const_lv1_1) and (tmp_s_reg_345_pp0_iter30_reg = ap_const_lv1_0)));
    end process;


    ap_condition_940_assign_proc : process(tmp_s_reg_345_pp0_iter30_reg, tmp_55_reg_349_pp0_iter30_reg, or_cond_reg_353_pp0_iter30_reg, tmp_18_reg_357_pp0_iter30_reg, tmp_59_reg_361_pp0_iter30_reg)
    begin
                ap_condition_940 <= ((tmp_59_reg_361_pp0_iter30_reg = ap_const_lv1_1) and (tmp_18_reg_357_pp0_iter30_reg = ap_const_lv1_1) and (or_cond_reg_353_pp0_iter30_reg = ap_const_lv1_0) and (tmp_55_reg_349_pp0_iter30_reg = ap_const_lv1_0) and (tmp_s_reg_345_pp0_iter30_reg = ap_const_lv1_0));
    end process;


    ap_condition_959_assign_proc : process(tmp_s_fu_216_p2, tmp_55_fu_222_p2, or_cond_fu_234_p2, tmp_18_fu_136_p2)
    begin
                ap_condition_959 <= ((tmp_18_fu_136_p2 = ap_const_lv1_0) and (or_cond_fu_234_p2 = ap_const_lv1_0) and (tmp_55_fu_222_p2 = ap_const_lv1_0) and (tmp_s_fu_216_p2 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter32, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_enable_reg_pp0_iter32 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_idle_pp0 = ap_const_logic_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, ap_enable_reg_pp0_iter32)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to31_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0))) then 
            ap_idle_pp0_0to31 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to31 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_resultf_4_phi_fu_76_p10_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter32, tmp_s_reg_345_pp0_iter31_reg, tmp_55_reg_349_pp0_iter31_reg, or_cond_reg_353_pp0_iter31_reg, tmp_18_reg_357_pp0_iter31_reg, tmp_59_reg_361_pp0_iter31_reg, ap_phi_reg_pp0_iter32_resultf_4_reg_72, grp_fu_115_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_18_reg_357_pp0_iter31_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter32 = ap_const_logic_1) and (tmp_59_reg_361_pp0_iter31_reg = ap_const_lv1_0) and (or_cond_reg_353_pp0_iter31_reg = ap_const_lv1_0) and (tmp_55_reg_349_pp0_iter31_reg = ap_const_lv1_0) and (tmp_s_reg_345_pp0_iter31_reg = ap_const_lv1_0))) then 
            ap_phi_mux_resultf_4_phi_fu_76_p10 <= grp_fu_115_p2;
        else 
            ap_phi_mux_resultf_4_phi_fu_76_p10 <= ap_phi_reg_pp0_iter32_resultf_4_reg_72;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_expx_reg_58 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_resultf_4_reg_72 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op55_fsub_state1_assign_proc : process(tmp_s_fu_216_p2, tmp_55_fu_222_p2, or_cond_fu_234_p2, tmp_18_fu_136_p2)
    begin
                ap_predicate_op55_fsub_state1 <= ((tmp_18_fu_136_p2 = ap_const_lv1_1) and (or_cond_fu_234_p2 = ap_const_lv1_0) and (tmp_55_fu_222_p2 = ap_const_lv1_0) and (tmp_s_fu_216_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op78_call_state6_assign_proc : process(tmp_s_reg_345_pp0_iter4_reg, tmp_55_reg_349_pp0_iter4_reg, or_cond_reg_353_pp0_iter4_reg, tmp_18_reg_357_pp0_iter4_reg, tmp_i_reg_388, tmp_i_50_reg_392)
    begin
                ap_predicate_op78_call_state6 <= ((tmp_18_reg_357_pp0_iter4_reg = ap_const_lv1_1) and (tmp_i_50_reg_392 = ap_const_lv1_0) and (tmp_i_reg_388 = ap_const_lv1_0) and (or_cond_reg_353_pp0_iter4_reg = ap_const_lv1_0) and (tmp_55_reg_349_pp0_iter4_reg = ap_const_lv1_0) and (tmp_s_reg_345_pp0_iter4_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op78_call_state6_state5_assign_proc : process(tmp_s_reg_345_pp0_iter3_reg, tmp_55_reg_349_pp0_iter3_reg, or_cond_reg_353_pp0_iter3_reg, tmp_18_reg_357_pp0_iter3_reg, tmp_i_fu_277_p2, tmp_i_50_fu_283_p2)
    begin
                ap_predicate_op78_call_state6_state5 <= ((tmp_18_reg_357_pp0_iter3_reg = ap_const_lv1_1) and (tmp_i_50_fu_283_p2 = ap_const_lv1_0) and (tmp_i_fu_277_p2 = ap_const_lv1_0) and (or_cond_reg_353_pp0_iter3_reg = ap_const_lv1_0) and (tmp_55_reg_349_pp0_iter3_reg = ap_const_lv1_0) and (tmp_s_reg_345_pp0_iter3_reg = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to31)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to31 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= 
        tmp_65_fu_320_p1 when (p_Result_s_reg_331_pp0_iter31_reg(0) = '1') else 
        ap_phi_mux_resultf_4_phi_fu_76_p10;

    grp_exp_generic_double_s_fu_89_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_exp_generic_double_s_fu_89_ap_ce <= ap_const_logic_1;
        else 
            grp_exp_generic_double_s_fu_89_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_exp_generic_double_s_fu_89_ap_start <= grp_exp_generic_double_s_fu_89_ap_start_reg;

    grp_fu_100_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_100_ce <= ap_const_logic_1;
        else 
            grp_fu_100_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_100_opcode_assign_proc : process(ap_condition_1019, ap_condition_426, ap_condition_1154)
    begin
        if ((ap_const_boolean_1 = ap_condition_1154)) then
            if ((ap_const_boolean_1 = ap_condition_426)) then 
                grp_fu_100_opcode <= ap_const_lv2_1;
            elsif ((ap_const_boolean_1 = ap_condition_1019)) then 
                grp_fu_100_opcode <= ap_const_lv2_0;
            else 
                grp_fu_100_opcode <= "XX";
            end if;
        else 
            grp_fu_100_opcode <= "XX";
        end if; 
    end process;


    grp_fu_100_p0_assign_proc : process(abst_in_fu_207_p1, tmp_60_fu_252_p1, ap_condition_1019, ap_condition_426, ap_condition_25)
    begin
        if ((ap_const_boolean_1 = ap_condition_25)) then
            if ((ap_const_boolean_1 = ap_condition_1019)) then 
                grp_fu_100_p0 <= abst_in_fu_207_p1;
            elsif ((ap_const_boolean_1 = ap_condition_426)) then 
                grp_fu_100_p0 <= tmp_60_fu_252_p1;
            else 
                grp_fu_100_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_100_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_100_p1_assign_proc : process(abst_in_fu_207_p1, ap_condition_1019, ap_condition_426, ap_condition_25)
    begin
        if ((ap_const_boolean_1 = ap_condition_25)) then
            if ((ap_const_boolean_1 = ap_condition_1019)) then 
                grp_fu_100_p1 <= ap_const_lv32_3F800000;
            elsif ((ap_const_boolean_1 = ap_condition_426)) then 
                grp_fu_100_p1 <= abst_in_fu_207_p1;
            else 
                grp_fu_100_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_100_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_104_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_104_ce <= ap_const_logic_1;
        else 
            grp_fu_104_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_109_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_109_ce <= ap_const_logic_1;
        else 
            grp_fu_109_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_115_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_115_ce <= ap_const_logic_1;
        else 
            grp_fu_115_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_121_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_121_ce <= ap_const_logic_1;
        else 
            grp_fu_121_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_125_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_125_ce <= ap_const_logic_1;
        else 
            grp_fu_125_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_125_p0_assign_proc : process(tmp_59_reg_361_pp0_iter20_reg, tmp_61_fu_299_p1, ap_condition_1603)
    begin
        if ((ap_const_boolean_1 = ap_condition_1603)) then
            if ((tmp_59_reg_361_pp0_iter20_reg = ap_const_lv1_1)) then 
                grp_fu_125_p0 <= tmp_61_fu_299_p1;
            elsif ((tmp_59_reg_361_pp0_iter20_reg = ap_const_lv1_0)) then 
                grp_fu_125_p0 <= ap_const_lv32_40000000;
            else 
                grp_fu_125_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_125_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_141_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_141_ce <= ap_const_logic_1;
        else 
            grp_fu_141_ce <= ap_const_logic_0;
        end if; 
    end process;

    loc_V_1_fu_189_p1 <= p_Val2_s_fu_167_p1(23 - 1 downto 0);
    loc_V_2_fu_267_p4 <= p_Val2_3_fu_264_p1(30 downto 23);
    loc_V_fu_179_p4 <= p_Val2_s_fu_167_p1(30 downto 23);
    or_cond_fu_234_p2 <= (tmp_57_fu_146_p2 and tmp_56_fu_228_p2);
    p_1_fu_303_p3 <= 
        ap_const_lv32_3F800000 when (tmp_54_reg_371_pp0_iter30_reg(0) = '1') else 
        ap_const_lv32_7FFFFFFF;
    p_Result_9_fu_199_p3 <= (ap_const_lv1_0 & tmp_fu_195_p1);
    p_Val2_3_fu_264_p1 <= x_2_reg_376;
    p_Val2_s_fu_167_p1 <= t_in;
    tmp_113_neg_fu_246_p2 <= (p_Result_9_fu_199_p3 xor ap_const_lv32_80000000);
    tmp_114_neg_fu_293_p2 <= (tmp_114_to_int_fu_289_p1 xor ap_const_lv32_80000000);
    tmp_114_to_int_fu_289_p1 <= expx_reg_58_pp0_iter19_reg;
    tmp_118_neg_fu_314_p2 <= (tmp_118_to_int_fu_310_p1 xor ap_const_lv32_80000000);
    tmp_118_to_int_fu_310_p1 <= ap_phi_mux_resultf_4_phi_fu_76_p10;
    tmp_54_fu_151_p2 <= "1" when (loc_V_1_fu_189_p1 = ap_const_lv23_0) else "0";
    tmp_55_fu_222_p2 <= "1" when (unsigned(loc_V_fu_179_p4) < unsigned(ap_const_lv8_48)) else "0";
    tmp_56_fu_228_p2 <= "1" when (loc_V_fu_179_p4 = ap_const_lv8_48) else "0";
    tmp_57_fu_146_p2 <= "1" when (loc_V_1_fu_189_p1 = ap_const_lv23_0) else "0";
    tmp_59_fu_240_p2 <= "1" when (unsigned(loc_V_fu_179_p4) < unsigned(ap_const_lv8_7F)) else "0";
    tmp_60_fu_252_p1 <= tmp_113_neg_fu_246_p2;
    tmp_61_fu_299_p1 <= tmp_114_neg_reg_421;
    tmp_65_fu_320_p1 <= tmp_118_neg_fu_314_p2;
    tmp_fu_195_p1 <= p_Val2_s_fu_167_p1(31 - 1 downto 0);
    tmp_i_50_fu_283_p2 <= "1" when (unsigned(loc_V_2_fu_267_p4) < unsigned(ap_const_lv8_60)) else "0";
    tmp_i_fu_277_p2 <= "1" when (loc_V_2_fu_267_p4 = ap_const_lv8_0) else "0";
    tmp_s_fu_216_p2 <= "1" when (loc_V_fu_179_p4 = ap_const_lv8_FF) else "0";
    x_2_fu_257_p3 <= 
        grp_fu_100_p2 when (tmp_59_reg_361_pp0_iter2_reg(0) = '1') else 
        grp_fu_104_p2;
end behav;
