// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#ifndef __face_classifier_cIfE_H__
#define __face_classifier_cIfE_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct face_classifier_cIfE_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 100;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(face_classifier_cIfE_ram) {
        ram[0] = "0b01000000011111111001001101011001";
        ram[1] = "0b01000000100000100110001101000000";
        ram[2] = "0b01000000100100010001111110100010";
        ram[3] = "0b01000000101011101110010110101110";
        ram[4] = "0b01000000110000001000010001100000";
        ram[5] = "0b01000000100000101100010111101110";
        ram[6] = "0b01000000011101010000000000110011";
        ram[7] = "0b01000000101000000110010101100111";
        ram[8] = "0b01000000100010001001000010000000";
        ram[9] = "0b01000000101101101011011001111111";
        ram[10] = "0b01000000100001100110110101100010";
        ram[11] = "0b01000000100111000110011010101100";
        ram[12] = "0b01000000100011000101111100001010";
        ram[13] = "0b01000000100101001010111011000110";
        ram[14] = "0b01000000100001000001100010010111";
        ram[15] = "0b01000000100000010110000011101000";
        ram[16] = "0b01000000100010011001001100000101";
        ram[17] = "0b01000000100001100011011011000010";
        ram[18] = "0b01000000100011001011100101010000";
        ram[19] = "0b01000000100110001100011110101011";
        ram[20] = "0b01000000100101011010001111101110";
        ram[21] = "0b01000000100110001000101110010100";
        ram[22] = "0b01000000101011110111110100100110";
        ram[23] = "0b01000000101101011110000110010011";
        ram[24] = "0b01000000100010000001101101010001";
        ram[25] = "0b01000000100100100010100010110110";
        ram[26] = "0b01000000100011001111110101101000";
        ram[27] = "0b01000000100011101110001000110100";
        ram[28] = "0b01000000100010001000111010011110";
        ram[29] = "0b01000000100100011110001011110101";
        ram[30] = "0b01000000011000101011010101100010";
        ram[31] = "0b01000000100001011000011000010000";
        ram[32] = "0b01000000100111101100100100110000";
        ram[33] = "0b01000000011010101111011010110111";
        ram[34] = "0b01000000101000100010110110010101";
        ram[35] = "0b01000000110101111110111100010111";
        ram[36] = "0b01000000100000110110011011010100";
        ram[37] = "0b01000000011110001101000101100001";
        ram[38] = "0b01000000100100111010011101011000";
        ram[39] = "0b01000000110010010111101110000100";
        ram[40] = "0b01000000100011001100000001110100";
        ram[41] = "0b01000000100101001101100101011110";
        ram[42] = "0b01000000100111011001011101000001";
        ram[43] = "0b01000000100011000100110100011110";
        ram[44] = "0b01000000101000111011111010111111";
        ram[45] = "0b01000000011101111111101001001010";
        ram[46] = "0b01000000011101000111111111010101";
        ram[47] = "0b01000000100010000110111011100000";
        ram[48] = "0b01000000100101111101001001010010";
        ram[49] = "0b01000000100110100001001001100000";
        ram[50] = "0b01000000011001100101100010011001";
        ram[51] = "0b01000000111000110110111101000101";
        ram[52] = "0b01000000101011000110101011110101";
        ram[53] = "0b01000000100000100101001101110110";
        ram[54] = "0b01000000011101111011111101110011";
        ram[55] = "0b01000000100101101010010000011100";
        ram[56] = "0b01000000100110000110011000011100";
        ram[57] = "0b01000000100101101010001001111000";
        ram[58] = "0b01000000100111000000110000100110";
        ram[59] = "0b01000000100100110110110011110100";
        ram[60] = "0b01000000101001101100110010111010";
        ram[61] = "0b01000000100100110110101101011100";
        ram[62] = "0b01000000100101010111010001111100";
        ram[63] = "0b01000000100010010000011111011010";
        ram[64] = "0b01000000100001111000011011110100";
        ram[65] = "0b01000000101101101000001110111100";
        ram[66] = "0b01000000110010101110010001011111";
        ram[67] = "0b01000000101010011000000011000000";
        ram[68] = "0b01000000100000101110001000010011";
        ram[69] = "0b01000000100001000101011011001011";
        ram[70] = "0b01000000011111001110110011100001";
        ram[71] = "0b01000000100100101100001011001110";
        ram[72] = "0b01000000100111001001010011011010";
        ram[73] = "0b01000000011110000111000010101010";
        ram[74] = "0b01000000011111001100011000110011";
        ram[75] = "0b01000000100001000001011101110010";
        ram[76] = "0b01000000100011111100001010110111";
        ram[77] = "0b01000000100000111011101100000001";
        ram[78] = "0b01000000011011000001000100001100";
        ram[79] = "0b01000000100100110000100110011111";
        ram[80] = "0b01000000100001110110001010101000";
        ram[81] = "0b01000000011101100111101110010100";
        ram[82] = "0b01000000011101110101001111011110";
        ram[83] = "0b01000000100000011111000000001011";
        ram[84] = "0b01000000100110100000101010010001";
        ram[85] = "0b01000000100000110100001100000011";
        ram[86] = "0b01000000010101110011101110111000";
        ram[87] = "0b01000000100011001010010011011000";
        ram[88] = "0b01000000100110010100100001001000";
        ram[89] = "0b01000000100101000111100110010010";
        ram[90] = "0b01000000100101100000111001100101";
        ram[91] = "0b01000000010101100010101111000000";
        ram[92] = "0b01000000100000000101010111101110";
        ram[93] = "0b01000000100010001011110101001010";
        ram[94] = "0b01000000100000010000001001010101";
        ram[95] = "0b01000000011010100000011001101010";
        ram[96] = "0b01000000100101011011110111110100";
        ram[97] = "0b01000000100000011001101110001111";
        ram[98] = "0b01000000100001100000110010010001";
        ram[99] = "0b01000000011010110010110110010110";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(face_classifier_cIfE) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 100;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


face_classifier_cIfE_ram* meminst;


SC_CTOR(face_classifier_cIfE) {
meminst = new face_classifier_cIfE_ram("face_classifier_cIfE_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~face_classifier_cIfE() {
    delete meminst;
}


};//endmodule
#endif
