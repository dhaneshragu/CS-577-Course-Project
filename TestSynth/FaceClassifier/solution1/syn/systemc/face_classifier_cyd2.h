// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#ifndef __face_classifier_cyd2_H__
#define __face_classifier_cyd2_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct face_classifier_cyd2_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 100;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(face_classifier_cyd2_ram) {
        ram[0] = "0b00110101101101011011111011010101";
        ram[1] = "0b10110111010100011010111001110001";
        ram[2] = "0b00110111011100100001110101011111";
        ram[3] = "0b10110110000001001011110000001010";
        ram[4] = "0b00110101110111111001001010111110";
        ram[5] = "0b10110110010001110000011100010011";
        ram[6] = "0b10110101010110011111110101011111";
        ram[7] = "0b10110111111011100000100111001011";
        ram[8] = "0b10110101101100011000000100010011";
        ram[9] = "0b00110111000000100001000011011011";
        ram[10] = "0b00110110111100111110010101101010";
        ram[11] = "0b10110111000110010100011011001011";
        ram[12] = "0b10110111001001110110110001001100";
        ram[13] = "0b10110110110000100001011101110010";
        ram[14] = "0b00110111101001110110100110010001";
        ram[15] = "0b10111000000001011011101010100110";
        ram[16] = "0b00110101110011001101001100110000";
        ram[17] = "0b00110101100100010110110000011011";
        ram[18] = "0b00110111001110100100100111001000";
        ram[19] = "0b00110111001011010001100010111100";
        ram[20] = "0b00110111010100101111010000010111";
        ram[21] = "0b10110111001100110101000001000100";
        ram[22] = "0b10110111000110011000111011111111";
        ram[23] = "0b00110111101100110010000011000100";
        ram[24] = "0b00110101010110101110011110000111";
        ram[25] = "0b10110111001000100110110010100100";
        ram[26] = "0b10110111100011001000101000110010";
        ram[27] = "0b00110110001111010001011111010001";
        ram[28] = "0b10110111100010100000101010011010";
        ram[29] = "0b10110110000111101110000100101101";
        ram[30] = "0b00110101011001101010000100010011";
        ram[31] = "0b10110110111011011010011011010001";
        ram[32] = "0b10110111011011010010100000100110";
        ram[33] = "0b10110111001001001000110000110010";
        ram[34] = "0b10110111100011000001101110111110";
        ram[35] = "0b00110111100000100010011010011011";
        ram[36] = "0b00110111010010000011000001110000";
        ram[37] = "0b00110101101001010110000101010010";
        ram[38] = "0b00111000100001111011111101001110";
        ram[39] = "0b10110111000111000000101010100110";
        ram[40] = "0b10110111010100001101111011010011";
        ram[41] = "0b10110111101011000011100110100101";
        ram[42] = "0b10110111000110111100010000100001";
        ram[43] = "0b10110100100110000101010110000110";
        ram[44] = "0b00110111100011110011101000001010";
        ram[45] = "0b00110110111110101111100010111011";
        ram[46] = "0b10111000001100100100111100110100";
        ram[47] = "0b10110101100001111010101000111000";
        ram[48] = "0b10110111101110010001100111101110";
        ram[49] = "0b10110111000101001110111000110110";
        ram[50] = "0b10110111100011100010010111111010";
        ram[51] = "0b10110101100000110000110110010001";
        ram[52] = "0b00110111111001111101011001110110";
        ram[53] = "0b10111000000111111101010011001010";
        ram[54] = "0b10110111011000011001011100101010";
        ram[55] = "0b00110111100110110111000001100011";
        ram[56] = "0b00110111000011111001001001101010";
        ram[57] = "0b00110111100100001101000111111111";
        ram[58] = "0b10110101011010110100001101111010";
        ram[59] = "0b10110111101010011000010100101110";
        ram[60] = "0b00110110010001010111101111001110";
        ram[61] = "0b10110111110110100010110010010010";
        ram[62] = "0b10110111010000001001010001100100";
        ram[63] = "0b10111000011000111010000110000100";
        ram[64] = "0b10110111000000110100101000101000";
        ram[65] = "0b00110100010011010100011011111011";
        ram[66] = "0b00110111011000000001010000010100";
        ram[67] = "0b00110101001001110001100100100100";
        ram[68] = "0b10110110110000101000000000001101";
        ram[69] = "0b00110110101101001110111101001001";
        ram[70] = "0b10110111011010001111000001010101";
        ram[71] = "0b00110110101101000010001001101000";
        ram[72] = "0b10110110000010010101100110001010";
        ram[73] = "0b10110110000111110100000011011000";
        ram[74] = "0b10110110101010010110011001011100";
        ram[75] = "0b10110111010100110100000000111001";
        ram[76] = "0b00110110111010010011110110110010";
        ram[77] = "0b00110110010110101110111111011010";
        ram[78] = "0b00110111101110010100111101010111";
        ram[79] = "0b00110111111001110010001010111000";
        ram[80] = "0b00110111011000101100101001101100";
        ram[81] = "0b10110111000000101111101101000011";
        ram[82] = "0b10110111110011100000001000111011";
        ram[83] = "0b10110111110010000111001010100100";
        ram[84] = "0b10110110111101111100111110010000";
        ram[85] = "0b00110111010100011110100010111001";
        ram[86] = "0b00110111010111001010100100101110";
        ram[87] = "0b10110111100100000011011010001100";
        ram[88] = "0b10110111000010011101100010110101";
        ram[89] = "0b10110110111010110011010100110011";
        ram[90] = "0b10110111001000101110001101100001";
        ram[91] = "0b10110111110100110100100011111000";
        ram[92] = "0b00110111000101110000110110011110";
        ram[93] = "0b00110110010110000111010111000101";
        ram[94] = "0b00111000011011110100000100001000";
        ram[95] = "0b00111000001110000010000110001101";
        ram[96] = "0b00110100001000010010101101010010";
        ram[97] = "0b10111000011001100010111000111100";
        ram[98] = "0b10110110100111110001110010011111";
        ram[99] = "0b00110111101100001011010000011110";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(face_classifier_cyd2) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 100;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


face_classifier_cyd2_ram* meminst;


SC_CTOR(face_classifier_cyd2) {
meminst = new face_classifier_cyd2_ram("face_classifier_cyd2_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~face_classifier_cyd2() {
    delete meminst;
}


};//endmodule
#endif
