// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#ifndef __face_classifier_cHfu_H__
#define __face_classifier_cHfu_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct face_classifier_cHfu_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 100;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(face_classifier_cHfu_ram) {
        ram[0] = "0b00111001000100011110001001111010";
        ram[1] = "0b10111010010100101001011001011110";
        ram[2] = "0b10111011101010001011100100100101";
        ram[3] = "0b00111011111010000101110111000101";
        ram[4] = "0b10111011100011010101101000110101";
        ram[5] = "0b00111011100000101011100110110100";
        ram[6] = "0b10111011111011011010001000001000";
        ram[7] = "0b00111100011101101011010101010111";
        ram[8] = "0b10111001110000110101101000101101";
        ram[9] = "0b10111011011101111111010001111000";
        ram[10] = "0b00111011101111100110000000101110";
        ram[11] = "0b10111011011000000111011101111100";
        ram[12] = "0b10111011011000000110010000110110";
        ram[13] = "0b10111011110110001001000110101101";
        ram[14] = "0b10111001110001111010000100001001";
        ram[15] = "0b00111100100011011110110011010011";
        ram[16] = "0b00111011100100001001011101001011";
        ram[17] = "0b10111100000000011100011100000100";
        ram[18] = "0b10111010000001010000111111010011";
        ram[19] = "0b10111011110101001000000001101110";
        ram[20] = "0b00111011101000010010101111100000";
        ram[21] = "0b10111011101101111100111110110111";
        ram[22] = "0b10111100100000100000111010001101";
        ram[23] = "0b00111011111101000110000100101100";
        ram[24] = "0b00111100010011101001100000100111";
        ram[25] = "0b10111011000011000111111000101011";
        ram[26] = "0b10111011111011111101010111000100";
        ram[27] = "0b00111011110101000011000000011110";
        ram[28] = "0b00111100001011110100111010011000";
        ram[29] = "0b10111100011101110110001001110111";
        ram[30] = "0b10111001101011101111000110101010";
        ram[31] = "0b00111011010101111110111011100110";
        ram[32] = "0b00111011000010000001101010011000";
        ram[33] = "0b00111100011001011011001011001001";
        ram[34] = "0b10111011110111101110001110001111";
        ram[35] = "0b00111100000100101001000110100010";
        ram[36] = "0b10111011100111001000101111010100";
        ram[37] = "0b00111010100100010000001001011100";
        ram[38] = "0b10111100100000010011101011000110";
        ram[39] = "0b10111100100010010110001011111000";
        ram[40] = "0b10111010101000110010100101000000";
        ram[41] = "0b10111100011011101011011100111110";
        ram[42] = "0b10111011100000110011110110011100";
        ram[43] = "0b10111011100000111111001001100110";
        ram[44] = "0b10111011010011000111101011000011";
        ram[45] = "0b10111100101111100001010110001100";
        ram[46] = "0b00111000010110010010111010111000";
        ram[47] = "0b00111001001110000101100101100100";
        ram[48] = "0b10111010100101100110010001011011";
        ram[49] = "0b00111010101011000001100101000010";
        ram[50] = "0b10111011000000001110010010101100";
        ram[51] = "0b00111000011111001110101101011100";
        ram[52] = "0b10111011110110110110100111011001";
        ram[53] = "0b00111011000111110010011011000101";
        ram[54] = "0b00111011010100001101111010101111";
        ram[55] = "0b10111011110000001110100000100010";
        ram[56] = "0b10111100011010000111010000001110";
        ram[57] = "0b10111011010111011001010101111100";
        ram[58] = "0b00111100000111001100010100101110";
        ram[59] = "0b00111100001000000010000101101111";
        ram[60] = "0b00111100100100100000110010100100";
        ram[61] = "0b10111010110010011011000001100001";
        ram[62] = "0b10111100110000110100110100010111";
        ram[63] = "0b10111100001000011011100100010001";
        ram[64] = "0b00111010000100110011100000101000";
        ram[65] = "0b00111011100000110111111010111100";
        ram[66] = "0b00111010101111110101000010111010";
        ram[67] = "0b00111011111010000101101111101010";
        ram[68] = "0b10111010011110110100011000111100";
        ram[69] = "0b00111011010011110010010011010111";
        ram[70] = "0b00111010101101011011111100110010";
        ram[71] = "0b00111011100001010011001100110110";
        ram[72] = "0b00111100100000111101100111101000";
        ram[73] = "0b10111000110110000100100100111000";
        ram[74] = "0b10111011000100111110011100011110";
        ram[75] = "0b10111011110001011011011000110001";
        ram[76] = "0b10111011011110011000100110111000";
        ram[77] = "0b10111100000000100111011000100011";
        ram[78] = "0b10111011101101100000111111101000";
        ram[79] = "0b10111011010010101110001011010100";
        ram[80] = "0b10111011100101000011111000000101";
        ram[81] = "0b00111100000010010001101000001100";
        ram[82] = "0b00111011001011111011011010111101";
        ram[83] = "0b10111010001000111101110000010111";
        ram[84] = "0b10111100100010000111000010000011";
        ram[85] = "0b00111011100101010001001000010011";
        ram[86] = "0b10111001011100011010000110000111";
        ram[87] = "0b10111011110101111001101111010001";
        ram[88] = "0b00111011101100101001010100001000";
        ram[89] = "0b10111011011000101111110000010111";
        ram[90] = "0b10111011111101111100110100010010";
        ram[91] = "0b10111011101000001001101000110001";
        ram[92] = "0b10111011011111000100111110100000";
        ram[93] = "0b10111010001101001110111010010101";
        ram[94] = "0b00111011011000111101111001001011";
        ram[95] = "0b10111100000110010010010010001010";
        ram[96] = "0b10111100000001001101101010000000";
        ram[97] = "0b00111100010010000111011101110100";
        ram[98] = "0b10111011011100101010101100101111";
        ram[99] = "0b00111011000111010010001100001100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(face_classifier_cHfu) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 100;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


face_classifier_cHfu_ram* meminst;


SC_CTOR(face_classifier_cHfu) {
meminst = new face_classifier_cHfu_ram("face_classifier_cHfu_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~face_classifier_cHfu() {
    delete meminst;
}


};//endmodule
#endif
