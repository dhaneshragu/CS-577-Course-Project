// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#ifndef __dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_b2_V_H__
#define __dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_b2_V_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_b2_V_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 12;
  static const unsigned AddressRange = 100;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_b2_V_ram) {
        ram[0] = "0b110101001000";
        ram[1] = "0b000110011011";
        ram[2] = "0b000110000011";
        ram[3] = "0b000001110011";
        ram[4] = "0b001001100101";
        ram[5] = "0b000000001001";
        ram[6] = "0b110010001101";
        ram[7] = "0b111101101101";
        ram[8] = "0b111010101111";
        ram[9] = "0b111100011100";
        ram[10] = "0b001000001101";
        ram[11] = "0b110010010101";
        ram[12] = "0b111000100001";
        ram[13] = "0b110010111100";
        ram[14] = "0b111011010010";
        ram[15] = "0b111110101011";
        ram[16] = "0b000000001001";
        ram[17] = "0b001001101000";
        ram[18] = "0b110100011011";
        ram[19] = "0b000111011111";
        ram[20] = "0b001111010001";
        ram[21] = "0b111111000000";
        ram[22] = "0b111110100001";
        ram[23] = "0b101001101111";
        ram[24] = "0b111010001011";
        ram[25] = "0b110110111000";
        ram[26] = "0b001000111010";
        ram[27] = "0b111001011101";
        ram[28] = "0b000011111111";
        ram[29] = "0b111100110110";
        ram[30] = "0b010000010101";
        ram[31] = "0b111100001010";
        ram[32] = "0b110110011010";
        ram[33] = "0b000101101010";
        ram[34] = "0b111011110100";
        ram[35] = "0b000110011000";
        ram[36] = "0b000100110001";
        ram[37] = "0b000111100101";
        ram[38] = "0b010101111010";
        ram[39] = "0b001110001001";
        ram[40] = "0b001101100011";
        ram[41] = "0b110110110010";
        ram[42] = "0b000011001001";
        ram[43] = "0b111110101110";
        ram[44] = "0b111001100000";
        ram[45] = "0b111101011101";
        ram[46] = "0b110110000011";
        ram[47] = "0b111111111110";
        ram[48] = "0b110110000101";
        ram[49] = "0b111000111000";
        ram[50] = "0b110010001000";
        ram[51] = "0b000001111101";
        ram[52] = "0b000000010010";
        ram[53] = "0b000001001001";
        ram[54] = "0b110110001010";
        ram[55] = "0b000001000101";
        ram[56] = "0b111011101111";
        ram[57] = "0b111011110110";
        ram[58] = "0b111001001000";
        ram[59] = "0b000001000011";
        ram[60] = "0b110110010000";
        ram[61] = "0b111100001111";
        ram[62] = "0b110100110101";
        ram[63] = "0b000010100100";
        ram[64] = "0b000111110110";
        ram[65] = "0b000101111001";
        ram[66] = "0b000111111010";
        ram[67] = "0b000011001100";
        ram[68] = "0b111010111011";
        ram[69] = "0b110101111010";
        ram[70] = "0b111101010000";
        ram[71] = "0b000110011111";
        ram[72] = "0b001010001110";
        ram[73] = "0b110010010100";
        ram[74] = "0b001000011000";
        ram[75] = "0b000111001100";
        ram[76] = "0b110100111001";
        ram[77] = "0b000111010101";
        ram[78] = "0b111011001110";
        ram[79] = "0b000000010010";
        ram[80] = "0b000000111000";
        ram[81] = "0b110110001001";
        ram[82] = "0b000001111000";
        ram[83] = "0b110101010000";
        ram[84] = "0b111111110100";
        ram[85] = "0b000110110101";
        ram[86] = "0b000101011010";
        ram[87] = "0b111111011100";
        ram[88] = "0b111101111011";
        ram[89] = "0b000011110111";
        ram[90] = "0b111111001010";
        ram[91] = "0b111010011111";
        ram[92] = "0b111100010100";
        ram[93] = "0b000100101111";
        ram[94] = "0b000000010001";
        ram[95] = "0b001001110000";
        ram[96] = "0b000000010100";
        ram[97] = "0b000011010011";
        ram[98] = "0b001000001000";
        ram[99] = "0b111101010001";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_b2_V) {


static const unsigned DataWidth = 12;
static const unsigned AddressRange = 100;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_b2_V_ram* meminst;


SC_CTOR(dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_b2_V) {
meminst = new dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_b2_V_ram("dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_b2_V_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_b2_V() {
    delete meminst;
}


};//endmodule
#endif
