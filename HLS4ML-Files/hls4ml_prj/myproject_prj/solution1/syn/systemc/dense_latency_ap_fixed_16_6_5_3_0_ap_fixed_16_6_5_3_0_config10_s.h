// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config10_s_HH_
#define _dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config10_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "myproject_mul_mul_11s_11s_22_1_1.h"
#include "dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config10_s_w10_V.h"
#include "dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config10_s_b10_V.h"
#include "dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config10_s_mult_V.h"
#include "dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config10_s_acc_V.h"

namespace ap_rtl {

struct dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config10_s : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > data_V_address0;
    sc_out< sc_logic > data_V_ce0;
    sc_in< sc_lv<11> > data_V_q0;
    sc_out< sc_lv<3> > res_V_address0;
    sc_out< sc_logic > res_V_ce0;
    sc_out< sc_logic > res_V_we0;
    sc_out< sc_lv<16> > res_V_d0;


    // Module declarations
    dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config10_s(sc_module_name name);
    SC_HAS_PROCESS(dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config10_s);

    ~dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config10_s();

    sc_trace_file* mVcdFile;

    dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config10_s_w10_V* w10_V_U;
    dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config10_s_b10_V* b10_V_U;
    dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config10_s_mult_V* mult_V_U;
    dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config10_s_acc_V* acc_V_U;
    myproject_mul_mul_11s_11s_22_1_1<1,1,11,11,22>* myproject_mul_mul_11s_11s_22_1_1_U22;
    sc_signal< sc_lv<12> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<6> > w10_V_address0;
    sc_signal< sc_logic > w10_V_ce0;
    sc_signal< sc_lv<11> > w10_V_q0;
    sc_signal< sc_lv<3> > b10_V_address0;
    sc_signal< sc_logic > b10_V_ce0;
    sc_signal< sc_lv<7> > b10_V_q0;
    sc_signal< sc_lv<4> > ii_5_fu_239_p2;
    sc_signal< sc_lv<4> > ii_5_reg_464;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_fu_233_p2;
    sc_signal< sc_lv<8> > tmp_31_fu_274_p2;
    sc_signal< sc_lv<8> > tmp_31_reg_474;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<22> > OP1_V_cast_cast_fu_280_p1;
    sc_signal< sc_lv<22> > OP1_V_cast_cast_reg_479;
    sc_signal< sc_lv<3> > jj_5_fu_294_p2;
    sc_signal< sc_lv<3> > jj_5_reg_487;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<64> > tmp_37_fu_309_p1;
    sc_signal< sc_lv<64> > tmp_37_reg_492;
    sc_signal< sc_lv<1> > tmp_34_fu_288_p2;
    sc_signal< sc_lv<3> > iacc_3_fu_338_p2;
    sc_signal< sc_lv<3> > iacc_3_reg_505;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<64> > tmp_33_fu_344_p1;
    sc_signal< sc_lv<64> > tmp_33_reg_510;
    sc_signal< sc_lv<1> > tmp_30_fu_332_p2;
    sc_signal< sc_lv<4> > ii_6_fu_360_p2;
    sc_signal< sc_lv<4> > ii_6_reg_523;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<8> > tmp_36_fu_390_p2;
    sc_signal< sc_lv<8> > tmp_36_reg_528;
    sc_signal< sc_lv<1> > tmp_32_fu_354_p2;
    sc_signal< sc_lv<3> > jj_6_fu_406_p2;
    sc_signal< sc_lv<3> > jj_6_reg_536;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<3> > acc_V_addr_6_reg_541;
    sc_signal< sc_lv<1> > tmp_41_fu_400_p2;
    sc_signal< sc_lv<3> > ires_3_fu_444_p2;
    sc_signal< sc_lv<3> > ires_3_reg_554;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<64> > tmp_40_fu_450_p1;
    sc_signal< sc_lv<64> > tmp_40_reg_559;
    sc_signal< sc_lv<1> > tmp_35_fu_438_p2;
    sc_signal< sc_lv<6> > mult_V_address0;
    sc_signal< sc_logic > mult_V_ce0;
    sc_signal< sc_logic > mult_V_we0;
    sc_signal< sc_lv<16> > mult_V_d0;
    sc_signal< sc_lv<16> > mult_V_q0;
    sc_signal< sc_lv<3> > acc_V_address0;
    sc_signal< sc_logic > acc_V_ce0;
    sc_signal< sc_logic > acc_V_we0;
    sc_signal< sc_lv<16> > acc_V_d0;
    sc_signal< sc_lv<16> > acc_V_q0;
    sc_signal< sc_lv<4> > ii_reg_166;
    sc_signal< sc_lv<3> > jj_reg_178;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<3> > iacc_reg_189;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<4> > ii2_reg_200;
    sc_signal< sc_lv<3> > jj3_reg_211;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<3> > ires_reg_222;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<64> > tmp_s_fu_245_p1;
    sc_signal< sc_lv<64> > tmp_42_fu_421_p1;
    sc_signal< sc_lv<64> > tmp_43_fu_426_p1;
    sc_signal< sc_lv<16> > b10_V_load_cast_fu_349_p1;
    sc_signal< sc_lv<16> > p_Val2_s_51_fu_431_p2;
    sc_signal< sc_lv<7> > p_shl_fu_250_p3;
    sc_signal< sc_lv<5> > p_shl7_fu_262_p3;
    sc_signal< sc_lv<8> > p_shl_cast_fu_258_p1;
    sc_signal< sc_lv<8> > p_shl7_cast_fu_270_p1;
    sc_signal< sc_lv<8> > jj_cast6_fu_284_p1;
    sc_signal< sc_lv<8> > index_fu_300_p2;
    sc_signal< sc_lv<32> > index_cast_fu_305_p1;
    sc_signal< sc_lv<22> > p_Val2_s_fu_455_p2;
    sc_signal< sc_lv<12> > tmp_768_fu_318_p4;
    sc_signal< sc_lv<7> > p_shl8_fu_366_p3;
    sc_signal< sc_lv<5> > p_shl9_fu_378_p3;
    sc_signal< sc_lv<8> > p_shl8_cast_fu_374_p1;
    sc_signal< sc_lv<8> > p_shl9_cast_fu_386_p1;
    sc_signal< sc_lv<8> > jj3_cast3_fu_396_p1;
    sc_signal< sc_lv<8> > index_3_fu_412_p2;
    sc_signal< sc_lv<32> > index_3_cast_fu_417_p1;
    sc_signal< sc_lv<11> > p_Val2_s_fu_455_p1;
    sc_signal< sc_lv<12> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<12> ap_ST_fsm_state1;
    static const sc_lv<12> ap_ST_fsm_state2;
    static const sc_lv<12> ap_ST_fsm_state3;
    static const sc_lv<12> ap_ST_fsm_state4;
    static const sc_lv<12> ap_ST_fsm_state5;
    static const sc_lv<12> ap_ST_fsm_state6;
    static const sc_lv<12> ap_ST_fsm_state7;
    static const sc_lv<12> ap_ST_fsm_state8;
    static const sc_lv<12> ap_ST_fsm_state9;
    static const sc_lv<12> ap_ST_fsm_state10;
    static const sc_lv<12> ap_ST_fsm_state11;
    static const sc_lv<12> ap_ST_fsm_state12;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<32> ap_const_lv32_15;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_OP1_V_cast_cast_fu_280_p1();
    void thread_acc_V_address0();
    void thread_acc_V_ce0();
    void thread_acc_V_d0();
    void thread_acc_V_we0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_b10_V_address0();
    void thread_b10_V_ce0();
    void thread_b10_V_load_cast_fu_349_p1();
    void thread_data_V_address0();
    void thread_data_V_ce0();
    void thread_iacc_3_fu_338_p2();
    void thread_ii_5_fu_239_p2();
    void thread_ii_6_fu_360_p2();
    void thread_index_3_cast_fu_417_p1();
    void thread_index_3_fu_412_p2();
    void thread_index_cast_fu_305_p1();
    void thread_index_fu_300_p2();
    void thread_ires_3_fu_444_p2();
    void thread_jj3_cast3_fu_396_p1();
    void thread_jj_5_fu_294_p2();
    void thread_jj_6_fu_406_p2();
    void thread_jj_cast6_fu_284_p1();
    void thread_mult_V_address0();
    void thread_mult_V_ce0();
    void thread_mult_V_d0();
    void thread_mult_V_we0();
    void thread_p_Val2_s_51_fu_431_p2();
    void thread_p_Val2_s_fu_455_p1();
    void thread_p_shl7_cast_fu_270_p1();
    void thread_p_shl7_fu_262_p3();
    void thread_p_shl8_cast_fu_374_p1();
    void thread_p_shl8_fu_366_p3();
    void thread_p_shl9_cast_fu_386_p1();
    void thread_p_shl9_fu_378_p3();
    void thread_p_shl_cast_fu_258_p1();
    void thread_p_shl_fu_250_p3();
    void thread_res_V_address0();
    void thread_res_V_ce0();
    void thread_res_V_d0();
    void thread_res_V_we0();
    void thread_tmp_30_fu_332_p2();
    void thread_tmp_31_fu_274_p2();
    void thread_tmp_32_fu_354_p2();
    void thread_tmp_33_fu_344_p1();
    void thread_tmp_34_fu_288_p2();
    void thread_tmp_35_fu_438_p2();
    void thread_tmp_36_fu_390_p2();
    void thread_tmp_37_fu_309_p1();
    void thread_tmp_40_fu_450_p1();
    void thread_tmp_41_fu_400_p2();
    void thread_tmp_42_fu_421_p1();
    void thread_tmp_43_fu_426_p1();
    void thread_tmp_768_fu_318_p4();
    void thread_tmp_fu_233_p2();
    void thread_tmp_s_fu_245_p1();
    void thread_w10_V_address0();
    void thread_w10_V_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
