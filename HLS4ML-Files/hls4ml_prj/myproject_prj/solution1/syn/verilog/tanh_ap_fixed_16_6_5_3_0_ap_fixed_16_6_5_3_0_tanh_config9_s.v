// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module tanh_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_tanh_config9_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_V_address0,
        data_V_ce0,
        data_V_q0,
        data_V_address1,
        data_V_ce1,
        data_V_q1,
        res_V_address0,
        res_V_ce0,
        res_V_we0,
        res_V_d0,
        res_V_address1,
        res_V_ce1,
        res_V_we1,
        res_V_d1
);

parameter    ap_ST_fsm_pp0_stage0 = 5'd1;
parameter    ap_ST_fsm_pp0_stage1 = 5'd2;
parameter    ap_ST_fsm_pp0_stage2 = 5'd4;
parameter    ap_ST_fsm_pp0_stage3 = 5'd8;
parameter    ap_ST_fsm_pp0_stage4 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] data_V_address0;
output   data_V_ce0;
input  [15:0] data_V_q0;
output  [3:0] data_V_address1;
output   data_V_ce1;
input  [15:0] data_V_q1;
output  [3:0] res_V_address0;
output   res_V_ce0;
output   res_V_we0;
output  [10:0] res_V_d0;
output  [3:0] res_V_address1;
output   res_V_ce1;
output   res_V_we1;
output  [10:0] res_V_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] data_V_address0;
reg data_V_ce0;
reg[3:0] data_V_address1;
reg data_V_ce1;
reg[3:0] res_V_address0;
reg res_V_ce0;
reg res_V_we0;
reg[3:0] res_V_address1;
reg res_V_ce1;
reg res_V_we1;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
reg   [9:0] tanh_table3_address0;
reg    tanh_table3_ce0;
wire   [10:0] tanh_table3_q0;
reg   [9:0] tanh_table3_address1;
reg    tanh_table3_ce1;
wire   [10:0] tanh_table3_q1;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage4_subdone;
wire   [63:0] tmp_3_fu_493_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] tmp_3_1_fu_610_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] tmp_3_2_fu_727_p1;
wire   [63:0] tmp_3_3_fu_844_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] tmp_3_4_fu_961_p1;
wire   [63:0] tmp_3_5_fu_1078_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] tmp_3_6_fu_1195_p1;
wire   [63:0] tmp_3_7_fu_1312_p1;
wire   [63:0] tmp_3_8_fu_1429_p1;
wire   [63:0] tmp_3_9_fu_1546_p1;
wire   [12:0] grp_fu_361_p4;
wire   [2:0] tmp_2_fu_393_p1;
wire   [9:0] p_Result_2_fu_397_p3;
wire  signed [13:0] p_Result_cast_fu_381_p1;
wire   [0:0] tmp_9_fu_405_p2;
wire   [13:0] ret_V_1_fu_411_p2;
wire   [0:0] tmp_1_fu_385_p3;
wire   [13:0] p_s_fu_417_p3;
wire   [13:0] p_2_fu_425_p3;
wire   [12:0] tmp_5_fu_433_p1;
wire   [13:0] index_fu_437_p2;
wire   [0:0] tmp_6_fu_449_p3;
wire   [12:0] index_cast_fu_443_p2;
wire   [12:0] p_1_fu_457_p3;
wire   [2:0] tmp_11_fu_469_p4;
wire   [0:0] icmp_fu_479_p2;
wire   [9:0] tmp_8_fu_465_p1;
wire   [9:0] index_1_fu_485_p3;
wire   [12:0] grp_fu_371_p4;
wire   [2:0] tmp_15_fu_510_p1;
wire   [9:0] p_Result_2_1_fu_514_p3;
wire  signed [13:0] p_Result_cast_17_fu_498_p1;
wire   [0:0] tmp_9_1_fu_522_p2;
wire   [13:0] ret_V_1_1_fu_528_p2;
wire   [0:0] tmp_13_fu_502_p3;
wire   [13:0] p_1_18_fu_534_p3;
wire   [13:0] p_2_1_fu_542_p3;
wire   [12:0] tmp_17_fu_550_p1;
wire   [13:0] index_s_fu_554_p2;
wire   [0:0] tmp_19_fu_566_p3;
wire   [12:0] index_cast_19_fu_560_p2;
wire   [12:0] p_1_1_fu_574_p3;
wire   [2:0] tmp_23_fu_586_p4;
wire   [0:0] icmp6_fu_596_p2;
wire   [9:0] tmp_21_fu_582_p1;
wire   [9:0] index_1_1_fu_602_p3;
wire   [2:0] tmp_25_fu_627_p1;
wire   [9:0] p_Result_2_2_fu_631_p3;
wire  signed [13:0] p_Result_10_cast_fu_615_p1;
wire   [0:0] tmp_9_2_fu_639_p2;
wire   [13:0] ret_V_1_2_fu_645_p2;
wire   [0:0] tmp_24_fu_619_p3;
wire   [13:0] p_2_20_fu_651_p3;
wire   [13:0] p_2_2_fu_659_p3;
wire   [12:0] tmp_26_fu_667_p1;
wire   [13:0] index_2_fu_671_p2;
wire   [0:0] tmp_27_fu_683_p3;
wire   [12:0] index_2_cast_fu_677_p2;
wire   [12:0] p_1_2_fu_691_p3;
wire   [2:0] tmp_29_fu_703_p4;
wire   [0:0] icmp1_fu_713_p2;
wire   [9:0] tmp_28_fu_699_p1;
wire   [9:0] index_1_2_fu_719_p3;
wire   [2:0] tmp_31_fu_744_p1;
wire   [9:0] p_Result_2_3_fu_748_p3;
wire  signed [13:0] p_Result_3_cast_fu_732_p1;
wire   [0:0] tmp_9_3_fu_756_p2;
wire   [13:0] ret_V_1_3_fu_762_p2;
wire   [0:0] tmp_30_fu_736_p3;
wire   [13:0] p_3_fu_768_p3;
wire   [13:0] p_2_3_fu_776_p3;
wire   [12:0] tmp_32_fu_784_p1;
wire   [13:0] index_3_fu_788_p2;
wire   [0:0] tmp_33_fu_800_p3;
wire   [12:0] index_3_cast_fu_794_p2;
wire   [12:0] p_1_3_fu_808_p3;
wire   [2:0] tmp_35_fu_820_p4;
wire   [0:0] icmp2_fu_830_p2;
wire   [9:0] tmp_34_fu_816_p1;
wire   [9:0] index_1_3_fu_836_p3;
wire   [2:0] tmp_37_fu_861_p1;
wire   [9:0] p_Result_2_4_fu_865_p3;
wire  signed [13:0] p_Result_4_cast_fu_849_p1;
wire   [0:0] tmp_9_4_fu_873_p2;
wire   [13:0] ret_V_1_4_fu_879_p2;
wire   [0:0] tmp_36_fu_853_p3;
wire   [13:0] p_4_fu_885_p3;
wire   [13:0] p_2_4_fu_893_p3;
wire   [12:0] tmp_38_fu_901_p1;
wire   [13:0] index_4_fu_905_p2;
wire   [0:0] tmp_39_fu_917_p3;
wire   [12:0] index_4_cast_fu_911_p2;
wire   [12:0] p_1_4_fu_925_p3;
wire   [2:0] tmp_41_fu_937_p4;
wire   [0:0] icmp3_fu_947_p2;
wire   [9:0] tmp_40_fu_933_p1;
wire   [9:0] index_1_4_fu_953_p3;
wire   [2:0] tmp_43_fu_978_p1;
wire   [9:0] p_Result_2_5_fu_982_p3;
wire  signed [13:0] p_Result_5_cast_fu_966_p1;
wire   [0:0] tmp_9_5_fu_990_p2;
wire   [13:0] ret_V_1_5_fu_996_p2;
wire   [0:0] tmp_42_fu_970_p3;
wire   [13:0] p_5_fu_1002_p3;
wire   [13:0] p_2_5_fu_1010_p3;
wire   [12:0] tmp_44_fu_1018_p1;
wire   [13:0] index_5_fu_1022_p2;
wire   [0:0] tmp_45_fu_1034_p3;
wire   [12:0] index_5_cast_fu_1028_p2;
wire   [12:0] p_1_5_fu_1042_p3;
wire   [2:0] tmp_47_fu_1054_p4;
wire   [0:0] icmp4_fu_1064_p2;
wire   [9:0] tmp_46_fu_1050_p1;
wire   [9:0] index_1_5_fu_1070_p3;
wire   [2:0] tmp_49_fu_1095_p1;
wire   [9:0] p_Result_2_6_fu_1099_p3;
wire  signed [13:0] p_Result_6_cast_fu_1083_p1;
wire   [0:0] tmp_9_6_fu_1107_p2;
wire   [13:0] ret_V_1_6_fu_1113_p2;
wire   [0:0] tmp_48_fu_1087_p3;
wire   [13:0] p_6_fu_1119_p3;
wire   [13:0] p_2_6_fu_1127_p3;
wire   [12:0] tmp_50_fu_1135_p1;
wire   [13:0] index_6_fu_1139_p2;
wire   [0:0] tmp_51_fu_1151_p3;
wire   [12:0] index_6_cast_fu_1145_p2;
wire   [12:0] p_1_6_fu_1159_p3;
wire   [2:0] tmp_53_fu_1171_p4;
wire   [0:0] icmp5_fu_1181_p2;
wire   [9:0] tmp_52_fu_1167_p1;
wire   [9:0] index_1_6_fu_1187_p3;
wire   [2:0] tmp_55_fu_1212_p1;
wire   [9:0] p_Result_2_7_fu_1216_p3;
wire  signed [13:0] p_Result_7_cast_fu_1200_p1;
wire   [0:0] tmp_9_7_fu_1224_p2;
wire   [13:0] ret_V_1_7_fu_1230_p2;
wire   [0:0] tmp_54_fu_1204_p3;
wire   [13:0] p_7_fu_1236_p3;
wire   [13:0] p_2_7_fu_1244_p3;
wire   [12:0] tmp_56_fu_1252_p1;
wire   [13:0] index_7_fu_1256_p2;
wire   [0:0] tmp_57_fu_1268_p3;
wire   [12:0] index_7_cast_fu_1262_p2;
wire   [12:0] p_1_7_fu_1276_p3;
wire   [2:0] tmp_59_fu_1288_p4;
wire   [0:0] icmp7_fu_1298_p2;
wire   [9:0] tmp_58_fu_1284_p1;
wire   [9:0] index_1_7_fu_1304_p3;
wire   [2:0] tmp_61_fu_1329_p1;
wire   [9:0] p_Result_2_8_fu_1333_p3;
wire  signed [13:0] p_Result_8_cast_fu_1317_p1;
wire   [0:0] tmp_9_8_fu_1341_p2;
wire   [13:0] ret_V_1_8_fu_1347_p2;
wire   [0:0] tmp_60_fu_1321_p3;
wire   [13:0] p_8_fu_1353_p3;
wire   [13:0] p_2_8_fu_1361_p3;
wire   [12:0] tmp_62_fu_1369_p1;
wire   [13:0] index_8_fu_1373_p2;
wire   [0:0] tmp_63_fu_1385_p3;
wire   [12:0] index_8_cast_fu_1379_p2;
wire   [12:0] p_1_8_fu_1393_p3;
wire   [2:0] tmp_65_fu_1405_p4;
wire   [0:0] icmp8_fu_1415_p2;
wire   [9:0] tmp_64_fu_1401_p1;
wire   [9:0] index_1_8_fu_1421_p3;
wire   [2:0] tmp_67_fu_1446_p1;
wire   [9:0] p_Result_2_9_fu_1450_p3;
wire  signed [13:0] p_Result_9_cast_fu_1434_p1;
wire   [0:0] tmp_9_9_fu_1458_p2;
wire   [13:0] ret_V_1_9_fu_1464_p2;
wire   [0:0] tmp_66_fu_1438_p3;
wire   [13:0] p_9_fu_1470_p3;
wire   [13:0] p_2_9_fu_1478_p3;
wire   [12:0] tmp_68_fu_1486_p1;
wire   [13:0] index_9_fu_1490_p2;
wire   [0:0] tmp_69_fu_1502_p3;
wire   [12:0] index_9_cast_fu_1496_p2;
wire   [12:0] p_1_9_fu_1510_p3;
wire   [2:0] tmp_71_fu_1522_p4;
wire   [0:0] icmp9_fu_1532_p2;
wire   [9:0] tmp_70_fu_1518_p1;
wire   [9:0] index_1_9_fu_1538_p3;
reg   [4:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

tanh_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_tanh_config5_s_tanh_table1 #(
    .DataWidth( 11 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
tanh_table3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tanh_table3_address0),
    .ce0(tanh_table3_ce0),
    .q0(tanh_table3_q0),
    .address1(tanh_table3_address1),
    .ce1(tanh_table3_ce1),
    .q1(tanh_table3_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            data_V_address0 = 64'd8;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            data_V_address0 = 64'd6;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            data_V_address0 = 64'd4;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            data_V_address0 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_V_address0 = 64'd0;
        end else begin
            data_V_address0 = 'bx;
        end
    end else begin
        data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            data_V_address1 = 64'd9;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            data_V_address1 = 64'd7;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            data_V_address1 = 64'd5;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            data_V_address1 = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_V_address1 = 64'd1;
        end else begin
            data_V_address1 = 'bx;
        end
    end else begin
        data_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        data_V_ce0 = 1'b1;
    end else begin
        data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        data_V_ce1 = 1'b1;
    end else begin
        data_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        res_V_address0 = 64'd8;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        res_V_address0 = 64'd6;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        res_V_address0 = 64'd4;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        res_V_address0 = 64'd2;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        res_V_address0 = 64'd0;
    end else begin
        res_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        res_V_address1 = 64'd9;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        res_V_address1 = 64'd7;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        res_V_address1 = 64'd5;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        res_V_address1 = 64'd3;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        res_V_address1 = 64'd1;
    end else begin
        res_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        res_V_ce0 = 1'b1;
    end else begin
        res_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        res_V_ce1 = 1'b1;
    end else begin
        res_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        res_V_we0 = 1'b1;
    end else begin
        res_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        res_V_we1 = 1'b1;
    end else begin
        res_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tanh_table3_address0 = tmp_3_8_fu_1429_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tanh_table3_address0 = tmp_3_6_fu_1195_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        tanh_table3_address0 = tmp_3_4_fu_961_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        tanh_table3_address0 = tmp_3_2_fu_727_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        tanh_table3_address0 = tmp_3_fu_493_p1;
    end else begin
        tanh_table3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tanh_table3_address1 = tmp_3_9_fu_1546_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tanh_table3_address1 = tmp_3_7_fu_1312_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        tanh_table3_address1 = tmp_3_5_fu_1078_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        tanh_table3_address1 = tmp_3_3_fu_844_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        tanh_table3_address1 = tmp_3_1_fu_610_p1;
    end else begin
        tanh_table3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tanh_table3_ce0 = 1'b1;
    end else begin
        tanh_table3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tanh_table3_ce1 = 1'b1;
    end else begin
        tanh_table3_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_reset_idle_pp0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign grp_fu_361_p4 = {{data_V_q0[15:3]}};

assign grp_fu_371_p4 = {{data_V_q1[15:3]}};

assign icmp1_fu_713_p2 = ((tmp_29_fu_703_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp2_fu_830_p2 = ((tmp_35_fu_820_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp3_fu_947_p2 = ((tmp_41_fu_937_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp4_fu_1064_p2 = ((tmp_47_fu_1054_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp5_fu_1181_p2 = ((tmp_53_fu_1171_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp6_fu_596_p2 = ((tmp_23_fu_586_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp7_fu_1298_p2 = ((tmp_59_fu_1288_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp8_fu_1415_p2 = ((tmp_65_fu_1405_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp9_fu_1532_p2 = ((tmp_71_fu_1522_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_fu_479_p2 = ((tmp_11_fu_469_p4 != 3'd0) ? 1'b1 : 1'b0);

assign index_1_1_fu_602_p3 = ((icmp6_fu_596_p2[0:0] === 1'b1) ? 10'd1023 : tmp_21_fu_582_p1);

assign index_1_2_fu_719_p3 = ((icmp1_fu_713_p2[0:0] === 1'b1) ? 10'd1023 : tmp_28_fu_699_p1);

assign index_1_3_fu_836_p3 = ((icmp2_fu_830_p2[0:0] === 1'b1) ? 10'd1023 : tmp_34_fu_816_p1);

assign index_1_4_fu_953_p3 = ((icmp3_fu_947_p2[0:0] === 1'b1) ? 10'd1023 : tmp_40_fu_933_p1);

assign index_1_5_fu_1070_p3 = ((icmp4_fu_1064_p2[0:0] === 1'b1) ? 10'd1023 : tmp_46_fu_1050_p1);

assign index_1_6_fu_1187_p3 = ((icmp5_fu_1181_p2[0:0] === 1'b1) ? 10'd1023 : tmp_52_fu_1167_p1);

assign index_1_7_fu_1304_p3 = ((icmp7_fu_1298_p2[0:0] === 1'b1) ? 10'd1023 : tmp_58_fu_1284_p1);

assign index_1_8_fu_1421_p3 = ((icmp8_fu_1415_p2[0:0] === 1'b1) ? 10'd1023 : tmp_64_fu_1401_p1);

assign index_1_9_fu_1538_p3 = ((icmp9_fu_1532_p2[0:0] === 1'b1) ? 10'd1023 : tmp_70_fu_1518_p1);

assign index_1_fu_485_p3 = ((icmp_fu_479_p2[0:0] === 1'b1) ? 10'd1023 : tmp_8_fu_465_p1);

assign index_2_cast_fu_677_p2 = (13'd512 + tmp_26_fu_667_p1);

assign index_2_fu_671_p2 = (14'd512 + p_2_2_fu_659_p3);

assign index_3_cast_fu_794_p2 = (13'd512 + tmp_32_fu_784_p1);

assign index_3_fu_788_p2 = (14'd512 + p_2_3_fu_776_p3);

assign index_4_cast_fu_911_p2 = (13'd512 + tmp_38_fu_901_p1);

assign index_4_fu_905_p2 = (14'd512 + p_2_4_fu_893_p3);

assign index_5_cast_fu_1028_p2 = (13'd512 + tmp_44_fu_1018_p1);

assign index_5_fu_1022_p2 = (14'd512 + p_2_5_fu_1010_p3);

assign index_6_cast_fu_1145_p2 = (13'd512 + tmp_50_fu_1135_p1);

assign index_6_fu_1139_p2 = (14'd512 + p_2_6_fu_1127_p3);

assign index_7_cast_fu_1262_p2 = (13'd512 + tmp_56_fu_1252_p1);

assign index_7_fu_1256_p2 = (14'd512 + p_2_7_fu_1244_p3);

assign index_8_cast_fu_1379_p2 = (13'd512 + tmp_62_fu_1369_p1);

assign index_8_fu_1373_p2 = (14'd512 + p_2_8_fu_1361_p3);

assign index_9_cast_fu_1496_p2 = (13'd512 + tmp_68_fu_1486_p1);

assign index_9_fu_1490_p2 = (14'd512 + p_2_9_fu_1478_p3);

assign index_cast_19_fu_560_p2 = (13'd512 + tmp_17_fu_550_p1);

assign index_cast_fu_443_p2 = (13'd512 + tmp_5_fu_433_p1);

assign index_fu_437_p2 = (14'd512 + p_2_fu_425_p3);

assign index_s_fu_554_p2 = (14'd512 + p_2_1_fu_542_p3);

assign p_1_18_fu_534_p3 = ((tmp_9_1_fu_522_p2[0:0] === 1'b1) ? p_Result_cast_17_fu_498_p1 : ret_V_1_1_fu_528_p2);

assign p_1_1_fu_574_p3 = ((tmp_19_fu_566_p3[0:0] === 1'b1) ? 13'd0 : index_cast_19_fu_560_p2);

assign p_1_2_fu_691_p3 = ((tmp_27_fu_683_p3[0:0] === 1'b1) ? 13'd0 : index_2_cast_fu_677_p2);

assign p_1_3_fu_808_p3 = ((tmp_33_fu_800_p3[0:0] === 1'b1) ? 13'd0 : index_3_cast_fu_794_p2);

assign p_1_4_fu_925_p3 = ((tmp_39_fu_917_p3[0:0] === 1'b1) ? 13'd0 : index_4_cast_fu_911_p2);

assign p_1_5_fu_1042_p3 = ((tmp_45_fu_1034_p3[0:0] === 1'b1) ? 13'd0 : index_5_cast_fu_1028_p2);

assign p_1_6_fu_1159_p3 = ((tmp_51_fu_1151_p3[0:0] === 1'b1) ? 13'd0 : index_6_cast_fu_1145_p2);

assign p_1_7_fu_1276_p3 = ((tmp_57_fu_1268_p3[0:0] === 1'b1) ? 13'd0 : index_7_cast_fu_1262_p2);

assign p_1_8_fu_1393_p3 = ((tmp_63_fu_1385_p3[0:0] === 1'b1) ? 13'd0 : index_8_cast_fu_1379_p2);

assign p_1_9_fu_1510_p3 = ((tmp_69_fu_1502_p3[0:0] === 1'b1) ? 13'd0 : index_9_cast_fu_1496_p2);

assign p_1_fu_457_p3 = ((tmp_6_fu_449_p3[0:0] === 1'b1) ? 13'd0 : index_cast_fu_443_p2);

assign p_2_1_fu_542_p3 = ((tmp_13_fu_502_p3[0:0] === 1'b1) ? p_1_18_fu_534_p3 : p_Result_cast_17_fu_498_p1);

assign p_2_20_fu_651_p3 = ((tmp_9_2_fu_639_p2[0:0] === 1'b1) ? p_Result_10_cast_fu_615_p1 : ret_V_1_2_fu_645_p2);

assign p_2_2_fu_659_p3 = ((tmp_24_fu_619_p3[0:0] === 1'b1) ? p_2_20_fu_651_p3 : p_Result_10_cast_fu_615_p1);

assign p_2_3_fu_776_p3 = ((tmp_30_fu_736_p3[0:0] === 1'b1) ? p_3_fu_768_p3 : p_Result_3_cast_fu_732_p1);

assign p_2_4_fu_893_p3 = ((tmp_36_fu_853_p3[0:0] === 1'b1) ? p_4_fu_885_p3 : p_Result_4_cast_fu_849_p1);

assign p_2_5_fu_1010_p3 = ((tmp_42_fu_970_p3[0:0] === 1'b1) ? p_5_fu_1002_p3 : p_Result_5_cast_fu_966_p1);

assign p_2_6_fu_1127_p3 = ((tmp_48_fu_1087_p3[0:0] === 1'b1) ? p_6_fu_1119_p3 : p_Result_6_cast_fu_1083_p1);

assign p_2_7_fu_1244_p3 = ((tmp_54_fu_1204_p3[0:0] === 1'b1) ? p_7_fu_1236_p3 : p_Result_7_cast_fu_1200_p1);

assign p_2_8_fu_1361_p3 = ((tmp_60_fu_1321_p3[0:0] === 1'b1) ? p_8_fu_1353_p3 : p_Result_8_cast_fu_1317_p1);

assign p_2_9_fu_1478_p3 = ((tmp_66_fu_1438_p3[0:0] === 1'b1) ? p_9_fu_1470_p3 : p_Result_9_cast_fu_1434_p1);

assign p_2_fu_425_p3 = ((tmp_1_fu_385_p3[0:0] === 1'b1) ? p_s_fu_417_p3 : p_Result_cast_fu_381_p1);

assign p_3_fu_768_p3 = ((tmp_9_3_fu_756_p2[0:0] === 1'b1) ? p_Result_3_cast_fu_732_p1 : ret_V_1_3_fu_762_p2);

assign p_4_fu_885_p3 = ((tmp_9_4_fu_873_p2[0:0] === 1'b1) ? p_Result_4_cast_fu_849_p1 : ret_V_1_4_fu_879_p2);

assign p_5_fu_1002_p3 = ((tmp_9_5_fu_990_p2[0:0] === 1'b1) ? p_Result_5_cast_fu_966_p1 : ret_V_1_5_fu_996_p2);

assign p_6_fu_1119_p3 = ((tmp_9_6_fu_1107_p2[0:0] === 1'b1) ? p_Result_6_cast_fu_1083_p1 : ret_V_1_6_fu_1113_p2);

assign p_7_fu_1236_p3 = ((tmp_9_7_fu_1224_p2[0:0] === 1'b1) ? p_Result_7_cast_fu_1200_p1 : ret_V_1_7_fu_1230_p2);

assign p_8_fu_1353_p3 = ((tmp_9_8_fu_1341_p2[0:0] === 1'b1) ? p_Result_8_cast_fu_1317_p1 : ret_V_1_8_fu_1347_p2);

assign p_9_fu_1470_p3 = ((tmp_9_9_fu_1458_p2[0:0] === 1'b1) ? p_Result_9_cast_fu_1434_p1 : ret_V_1_9_fu_1464_p2);

assign p_Result_10_cast_fu_615_p1 = $signed(grp_fu_361_p4);

assign p_Result_2_1_fu_514_p3 = {{tmp_15_fu_510_p1}, {7'd0}};

assign p_Result_2_2_fu_631_p3 = {{tmp_25_fu_627_p1}, {7'd0}};

assign p_Result_2_3_fu_748_p3 = {{tmp_31_fu_744_p1}, {7'd0}};

assign p_Result_2_4_fu_865_p3 = {{tmp_37_fu_861_p1}, {7'd0}};

assign p_Result_2_5_fu_982_p3 = {{tmp_43_fu_978_p1}, {7'd0}};

assign p_Result_2_6_fu_1099_p3 = {{tmp_49_fu_1095_p1}, {7'd0}};

assign p_Result_2_7_fu_1216_p3 = {{tmp_55_fu_1212_p1}, {7'd0}};

assign p_Result_2_8_fu_1333_p3 = {{tmp_61_fu_1329_p1}, {7'd0}};

assign p_Result_2_9_fu_1450_p3 = {{tmp_67_fu_1446_p1}, {7'd0}};

assign p_Result_2_fu_397_p3 = {{tmp_2_fu_393_p1}, {7'd0}};

assign p_Result_3_cast_fu_732_p1 = $signed(grp_fu_371_p4);

assign p_Result_4_cast_fu_849_p1 = $signed(grp_fu_361_p4);

assign p_Result_5_cast_fu_966_p1 = $signed(grp_fu_371_p4);

assign p_Result_6_cast_fu_1083_p1 = $signed(grp_fu_361_p4);

assign p_Result_7_cast_fu_1200_p1 = $signed(grp_fu_371_p4);

assign p_Result_8_cast_fu_1317_p1 = $signed(grp_fu_361_p4);

assign p_Result_9_cast_fu_1434_p1 = $signed(grp_fu_371_p4);

assign p_Result_cast_17_fu_498_p1 = $signed(grp_fu_371_p4);

assign p_Result_cast_fu_381_p1 = $signed(grp_fu_361_p4);

assign p_s_fu_417_p3 = ((tmp_9_fu_405_p2[0:0] === 1'b1) ? p_Result_cast_fu_381_p1 : ret_V_1_fu_411_p2);

assign res_V_d0 = tanh_table3_q0;

assign res_V_d1 = tanh_table3_q1;

assign ret_V_1_1_fu_528_p2 = ($signed(14'd1) + $signed(p_Result_cast_17_fu_498_p1));

assign ret_V_1_2_fu_645_p2 = ($signed(14'd1) + $signed(p_Result_10_cast_fu_615_p1));

assign ret_V_1_3_fu_762_p2 = ($signed(14'd1) + $signed(p_Result_3_cast_fu_732_p1));

assign ret_V_1_4_fu_879_p2 = ($signed(14'd1) + $signed(p_Result_4_cast_fu_849_p1));

assign ret_V_1_5_fu_996_p2 = ($signed(14'd1) + $signed(p_Result_5_cast_fu_966_p1));

assign ret_V_1_6_fu_1113_p2 = ($signed(14'd1) + $signed(p_Result_6_cast_fu_1083_p1));

assign ret_V_1_7_fu_1230_p2 = ($signed(14'd1) + $signed(p_Result_7_cast_fu_1200_p1));

assign ret_V_1_8_fu_1347_p2 = ($signed(14'd1) + $signed(p_Result_8_cast_fu_1317_p1));

assign ret_V_1_9_fu_1464_p2 = ($signed(14'd1) + $signed(p_Result_9_cast_fu_1434_p1));

assign ret_V_1_fu_411_p2 = ($signed(14'd1) + $signed(p_Result_cast_fu_381_p1));

assign tmp_11_fu_469_p4 = {{p_1_fu_457_p3[12:10]}};

assign tmp_13_fu_502_p3 = data_V_q1[32'd15];

assign tmp_15_fu_510_p1 = data_V_q1[2:0];

assign tmp_17_fu_550_p1 = p_2_1_fu_542_p3[12:0];

assign tmp_19_fu_566_p3 = index_s_fu_554_p2[32'd13];

assign tmp_1_fu_385_p3 = data_V_q0[32'd15];

assign tmp_21_fu_582_p1 = p_1_1_fu_574_p3[9:0];

assign tmp_23_fu_586_p4 = {{p_1_1_fu_574_p3[12:10]}};

assign tmp_24_fu_619_p3 = data_V_q0[32'd15];

assign tmp_25_fu_627_p1 = data_V_q0[2:0];

assign tmp_26_fu_667_p1 = p_2_2_fu_659_p3[12:0];

assign tmp_27_fu_683_p3 = index_2_fu_671_p2[32'd13];

assign tmp_28_fu_699_p1 = p_1_2_fu_691_p3[9:0];

assign tmp_29_fu_703_p4 = {{p_1_2_fu_691_p3[12:10]}};

assign tmp_2_fu_393_p1 = data_V_q0[2:0];

assign tmp_30_fu_736_p3 = data_V_q1[32'd15];

assign tmp_31_fu_744_p1 = data_V_q1[2:0];

assign tmp_32_fu_784_p1 = p_2_3_fu_776_p3[12:0];

assign tmp_33_fu_800_p3 = index_3_fu_788_p2[32'd13];

assign tmp_34_fu_816_p1 = p_1_3_fu_808_p3[9:0];

assign tmp_35_fu_820_p4 = {{p_1_3_fu_808_p3[12:10]}};

assign tmp_36_fu_853_p3 = data_V_q0[32'd15];

assign tmp_37_fu_861_p1 = data_V_q0[2:0];

assign tmp_38_fu_901_p1 = p_2_4_fu_893_p3[12:0];

assign tmp_39_fu_917_p3 = index_4_fu_905_p2[32'd13];

assign tmp_3_1_fu_610_p1 = index_1_1_fu_602_p3;

assign tmp_3_2_fu_727_p1 = index_1_2_fu_719_p3;

assign tmp_3_3_fu_844_p1 = index_1_3_fu_836_p3;

assign tmp_3_4_fu_961_p1 = index_1_4_fu_953_p3;

assign tmp_3_5_fu_1078_p1 = index_1_5_fu_1070_p3;

assign tmp_3_6_fu_1195_p1 = index_1_6_fu_1187_p3;

assign tmp_3_7_fu_1312_p1 = index_1_7_fu_1304_p3;

assign tmp_3_8_fu_1429_p1 = index_1_8_fu_1421_p3;

assign tmp_3_9_fu_1546_p1 = index_1_9_fu_1538_p3;

assign tmp_3_fu_493_p1 = index_1_fu_485_p3;

assign tmp_40_fu_933_p1 = p_1_4_fu_925_p3[9:0];

assign tmp_41_fu_937_p4 = {{p_1_4_fu_925_p3[12:10]}};

assign tmp_42_fu_970_p3 = data_V_q1[32'd15];

assign tmp_43_fu_978_p1 = data_V_q1[2:0];

assign tmp_44_fu_1018_p1 = p_2_5_fu_1010_p3[12:0];

assign tmp_45_fu_1034_p3 = index_5_fu_1022_p2[32'd13];

assign tmp_46_fu_1050_p1 = p_1_5_fu_1042_p3[9:0];

assign tmp_47_fu_1054_p4 = {{p_1_5_fu_1042_p3[12:10]}};

assign tmp_48_fu_1087_p3 = data_V_q0[32'd15];

assign tmp_49_fu_1095_p1 = data_V_q0[2:0];

assign tmp_50_fu_1135_p1 = p_2_6_fu_1127_p3[12:0];

assign tmp_51_fu_1151_p3 = index_6_fu_1139_p2[32'd13];

assign tmp_52_fu_1167_p1 = p_1_6_fu_1159_p3[9:0];

assign tmp_53_fu_1171_p4 = {{p_1_6_fu_1159_p3[12:10]}};

assign tmp_54_fu_1204_p3 = data_V_q1[32'd15];

assign tmp_55_fu_1212_p1 = data_V_q1[2:0];

assign tmp_56_fu_1252_p1 = p_2_7_fu_1244_p3[12:0];

assign tmp_57_fu_1268_p3 = index_7_fu_1256_p2[32'd13];

assign tmp_58_fu_1284_p1 = p_1_7_fu_1276_p3[9:0];

assign tmp_59_fu_1288_p4 = {{p_1_7_fu_1276_p3[12:10]}};

assign tmp_5_fu_433_p1 = p_2_fu_425_p3[12:0];

assign tmp_60_fu_1321_p3 = data_V_q0[32'd15];

assign tmp_61_fu_1329_p1 = data_V_q0[2:0];

assign tmp_62_fu_1369_p1 = p_2_8_fu_1361_p3[12:0];

assign tmp_63_fu_1385_p3 = index_8_fu_1373_p2[32'd13];

assign tmp_64_fu_1401_p1 = p_1_8_fu_1393_p3[9:0];

assign tmp_65_fu_1405_p4 = {{p_1_8_fu_1393_p3[12:10]}};

assign tmp_66_fu_1438_p3 = data_V_q1[32'd15];

assign tmp_67_fu_1446_p1 = data_V_q1[2:0];

assign tmp_68_fu_1486_p1 = p_2_9_fu_1478_p3[12:0];

assign tmp_69_fu_1502_p3 = index_9_fu_1490_p2[32'd13];

assign tmp_6_fu_449_p3 = index_fu_437_p2[32'd13];

assign tmp_70_fu_1518_p1 = p_1_9_fu_1510_p3[9:0];

assign tmp_71_fu_1522_p4 = {{p_1_9_fu_1510_p3[12:10]}};

assign tmp_8_fu_465_p1 = p_1_fu_457_p3[9:0];

assign tmp_9_1_fu_522_p2 = ((p_Result_2_1_fu_514_p3 == 10'd0) ? 1'b1 : 1'b0);

assign tmp_9_2_fu_639_p2 = ((p_Result_2_2_fu_631_p3 == 10'd0) ? 1'b1 : 1'b0);

assign tmp_9_3_fu_756_p2 = ((p_Result_2_3_fu_748_p3 == 10'd0) ? 1'b1 : 1'b0);

assign tmp_9_4_fu_873_p2 = ((p_Result_2_4_fu_865_p3 == 10'd0) ? 1'b1 : 1'b0);

assign tmp_9_5_fu_990_p2 = ((p_Result_2_5_fu_982_p3 == 10'd0) ? 1'b1 : 1'b0);

assign tmp_9_6_fu_1107_p2 = ((p_Result_2_6_fu_1099_p3 == 10'd0) ? 1'b1 : 1'b0);

assign tmp_9_7_fu_1224_p2 = ((p_Result_2_7_fu_1216_p3 == 10'd0) ? 1'b1 : 1'b0);

assign tmp_9_8_fu_1341_p2 = ((p_Result_2_8_fu_1333_p3 == 10'd0) ? 1'b1 : 1'b0);

assign tmp_9_9_fu_1458_p2 = ((p_Result_2_9_fu_1450_p3 == 10'd0) ? 1'b1 : 1'b0);

assign tmp_9_fu_405_p2 = ((p_Result_2_fu_397_p3 == 10'd0) ? 1'b1 : 1'b0);

endmodule //tanh_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_tanh_config9_s
