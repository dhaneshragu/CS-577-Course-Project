// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config12_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_V_address0,
        data_V_ce0,
        data_V_q0,
        data_V_address1,
        data_V_ce1,
        data_V_q1,
        res_V_address0,
        res_V_ce0,
        res_V_we0,
        res_V_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 6'd1;
parameter    ap_ST_fsm_pp0_stage1 = 6'd2;
parameter    ap_ST_fsm_pp0_stage2 = 6'd4;
parameter    ap_ST_fsm_pp0_stage3 = 6'd8;
parameter    ap_ST_fsm_pp0_stage4 = 6'd16;
parameter    ap_ST_fsm_pp0_stage5 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] data_V_address0;
output   data_V_ce0;
input  [15:0] data_V_q0;
output  [2:0] data_V_address1;
output   data_V_ce1;
input  [15:0] data_V_q1;
output  [2:0] res_V_address0;
output   res_V_ce0;
output   res_V_we0;
output  [15:0] res_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] data_V_address0;
reg data_V_ce0;
reg[2:0] data_V_address1;
reg data_V_ce1;
reg[2:0] res_V_address0;
reg res_V_ce0;
reg res_V_we0;
reg[15:0] res_V_d0;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state12_pp0_stage5_iter1;
wire    ap_block_state18_pp0_stage5_iter2;
wire    ap_block_pp0_stage5_11001;
reg   [9:0] exp_table4_address0;
reg    exp_table4_ce0;
wire   [16:0] exp_table4_q0;
wire   [9:0] invert_table5_address0;
reg    invert_table5_ce0;
wire  signed [17:0] invert_table5_q0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_state13_pp0_stage0_iter2;
wire    ap_block_state19_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg  signed [15:0] data_V_load_reg_1362;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state8_pp0_stage1_iter1;
wire    ap_block_state14_pp0_stage1_iter2;
wire    ap_block_state20_pp0_stage1_iter3;
wire    ap_block_pp0_stage1_11001;
reg  signed [15:0] data_V_load_100_reg_1368;
reg  signed [15:0] data_V_load_101_reg_1384;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state9_pp0_stage2_iter1;
wire    ap_block_state15_pp0_stage2_iter2;
wire    ap_block_pp0_stage2_11001;
reg  signed [15:0] data_V_load_102_reg_1390;
wire   [0:0] tmp_i_i_i_i_fu_310_p2;
reg   [0:0] tmp_i_i_i_i_reg_1406;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state10_pp0_stage3_iter1;
wire    ap_block_state16_pp0_stage3_iter2;
wire    ap_block_pp0_stage3_11001;
wire   [0:0] tmp_i_i7_i_i_fu_319_p2;
reg   [0:0] tmp_i_i7_i_i_reg_1416;
reg  signed [15:0] data_V_load_103_reg_1426;
reg  signed [15:0] data_V_load_104_reg_1432;
wire   [1:0] agg_result_i_i_i_fu_342_p3;
reg   [1:0] agg_result_i_i_i_reg_1438;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state11_pp0_stage4_iter1;
wire    ap_block_state17_pp0_stage4_iter2;
wire    ap_block_pp0_stage4_11001;
wire   [0:0] tmp_i_i4_i_fu_355_p2;
reg   [0:0] tmp_i_i4_i_reg_1448;
wire   [9:0] y_V_1_fu_790_p3;
reg   [9:0] y_V_1_reg_1468;
wire   [9:0] y_V_2_fu_824_p3;
reg   [9:0] y_V_2_reg_1473;
wire   [9:0] y_V_3_fu_858_p3;
reg   [9:0] y_V_3_reg_1478;
wire   [9:0] y_V_4_fu_892_p3;
reg   [9:0] y_V_4_reg_1483;
wire   [9:0] y_V_5_fu_926_p3;
reg   [9:0] y_V_5_reg_1488;
reg   [16:0] exp_res_0_V_reg_1493;
reg   [16:0] exp_res_0_V_reg_1493_pp0_iter2_reg;
reg   [16:0] exp_res_1_V_reg_1504;
reg   [16:0] exp_res_1_V_reg_1504_pp0_iter2_reg;
reg   [16:0] exp_res_2_V_reg_1515;
reg   [16:0] exp_res_2_V_reg_1515_pp0_iter2_reg;
reg   [16:0] exp_res_3_V_reg_1526;
reg   [16:0] exp_res_3_V_reg_1526_pp0_iter2_reg;
reg   [16:0] exp_res_4_V_reg_1537;
reg   [16:0] exp_res_4_V_reg_1537_pp0_iter2_reg;
reg   [16:0] exp_res_5_V_reg_1548;
reg   [16:0] exp_res_5_V_reg_1548_pp0_iter3_reg;
wire   [9:0] y_V_6_fu_1221_p3;
reg   [9:0] y_V_6_reg_1553;
wire  signed [25:0] OP2_V_cast_fu_1233_p1;
reg  signed [25:0] OP2_V_cast_reg_1563;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire   [63:0] agg_result_i_i_i_i_fu_314_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] agg_result_i_i8_i_i_cast_cast_fu_323_p3;
wire   [63:0] agg_result_i_i_i_cast_fu_350_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] agg_result_i_i5_i_cast_cast_fu_359_p3;
wire   [63:0] x_max_V_cast_fu_386_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] tmp_24_fu_759_p1;
wire   [63:0] tmp_24_1_fu_934_p1;
wire   [63:0] tmp_24_2_fu_938_p1;
wire   [63:0] tmp_24_3_fu_942_p1;
wire   [63:0] tmp_24_4_fu_946_p1;
wire   [63:0] tmp_24_5_fu_950_p1;
wire   [63:0] tmp_1_fu_1229_p1;
wire   [0:0] grp_fu_304_p2;
wire   [1:0] agg_result_i_i8_i_i_fu_335_p3;
wire   [1:0] agg_result_i_i_i_i_cast_fu_332_p1;
wire   [2:0] agg_result_i_i5_i_fu_371_p3;
wire   [2:0] agg_result_i_i_i_cast8_fu_368_p1;
wire   [2:0] x_max_V_fu_378_p3;
wire  signed [16:0] tmp_14_fu_391_p1;
wire  signed [16:0] tmp_15_fu_394_p1;
wire   [16:0] p_Val2_4_fu_398_p2;
wire   [0:0] tmp_748_fu_412_p3;
wire   [0:0] tmp_747_fu_404_p3;
wire   [0:0] tmp_20_fu_420_p2;
wire   [0:0] p_Result_0_not_fu_438_p2;
wire  signed [16:0] tmp_14_1_fu_450_p1;
wire   [16:0] p_Val2_4_1_fu_453_p2;
wire   [0:0] tmp_750_fu_467_p3;
wire   [0:0] tmp_749_fu_459_p3;
wire   [0:0] tmp_20_1_fu_475_p2;
wire   [0:0] p_Result_1_not_fu_493_p2;
wire  signed [16:0] tmp_14_2_fu_505_p1;
wire   [16:0] p_Val2_4_2_fu_508_p2;
wire   [0:0] tmp_752_fu_522_p3;
wire   [0:0] tmp_751_fu_514_p3;
wire   [0:0] tmp_20_2_fu_530_p2;
wire   [0:0] p_Result_2_not_fu_548_p2;
wire  signed [16:0] tmp_14_3_fu_560_p1;
wire   [16:0] p_Val2_4_3_fu_563_p2;
wire   [0:0] tmp_754_fu_577_p3;
wire   [0:0] tmp_753_fu_569_p3;
wire   [0:0] tmp_20_3_fu_585_p2;
wire   [0:0] p_Result_3_not_fu_603_p2;
wire  signed [16:0] tmp_14_4_fu_615_p1;
wire   [16:0] p_Val2_4_4_fu_618_p2;
wire   [0:0] tmp_756_fu_632_p3;
wire   [0:0] tmp_755_fu_624_p3;
wire   [0:0] tmp_20_4_fu_640_p2;
wire   [0:0] p_Result_4_not_fu_658_p2;
wire  signed [16:0] tmp_14_5_fu_670_p1;
wire   [16:0] p_Val2_4_5_fu_673_p2;
wire   [0:0] tmp_758_fu_687_p3;
wire   [0:0] tmp_757_fu_679_p3;
wire   [0:0] tmp_20_5_fu_695_p2;
wire   [0:0] p_Result_511_not_fu_713_p2;
wire   [0:0] brmerge_i_i_fu_432_p2;
wire   [9:0] tmp_fu_725_p4;
wire   [0:0] underflow_fu_426_p2;
wire   [0:0] brmerge_fu_444_p2;
wire   [9:0] tmp_s_fu_735_p3;
wire   [9:0] tmp_165_fu_743_p3;
wire   [9:0] y_V_fu_751_p3;
wire   [0:0] brmerge_i_i_1_fu_487_p2;
wire   [9:0] tmp_166_fu_764_p4;
wire   [0:0] underflow_1_fu_481_p2;
wire   [0:0] brmerge1_fu_499_p2;
wire   [9:0] tmp_167_fu_774_p3;
wire   [9:0] tmp_168_fu_782_p3;
wire   [0:0] brmerge_i_i_2_fu_542_p2;
wire   [9:0] tmp_169_fu_798_p4;
wire   [0:0] underflow_2_fu_536_p2;
wire   [0:0] brmerge2_fu_554_p2;
wire   [9:0] tmp_170_fu_808_p3;
wire   [9:0] tmp_171_fu_816_p3;
wire   [0:0] brmerge_i_i_3_fu_597_p2;
wire   [9:0] tmp_172_fu_832_p4;
wire   [0:0] underflow_3_fu_591_p2;
wire   [0:0] brmerge3_fu_609_p2;
wire   [9:0] tmp_173_fu_842_p3;
wire   [9:0] tmp_174_fu_850_p3;
wire   [0:0] brmerge_i_i_4_fu_652_p2;
wire   [9:0] tmp_175_fu_866_p4;
wire   [0:0] underflow_4_fu_646_p2;
wire   [0:0] brmerge4_fu_664_p2;
wire   [9:0] tmp_176_fu_876_p3;
wire   [9:0] tmp_177_fu_884_p3;
wire   [0:0] brmerge_i_i_5_fu_707_p2;
wire   [9:0] tmp_178_fu_900_p4;
wire   [0:0] underflow_5_fu_701_p2;
wire   [0:0] brmerge5_fu_719_p2;
wire   [9:0] tmp_179_fu_910_p3;
wire   [9:0] tmp_180_fu_918_p3;
wire   [17:0] p_Val2_9_fu_954_p1;
wire   [17:0] p_Val2_23_fu_957_p1;
wire   [17:0] p_Val2_24_fu_960_p2;
wire   [0:0] newsignbit_fu_966_p3;
wire   [17:0] p_Val2_1_fu_982_p1;
wire   [17:0] p_Val2_2_fu_985_p1;
wire   [17:0] p_Val2_5_fu_988_p2;
wire   [0:0] newsignbit_1_fu_994_p3;
wire  signed [17:0] p_Val2_25_fu_974_p3;
wire  signed [17:0] p_Val2_26_fu_1002_p3;
wire  signed [18:0] tmp_i_i_i_28_fu_1014_p1;
wire  signed [18:0] tmp_i_i_i5_fu_1010_p1;
wire   [18:0] p_Val2_27_fu_1018_p2;
wire   [17:0] p_Val2_28_fu_1032_p2;
wire   [0:0] newsignbit_2_fu_1038_p3;
wire   [0:0] isneg_fu_1024_p3;
wire   [0:0] tmp_45_i_i_i_fu_1046_p2;
wire   [0:0] p_Result_not_i_i_i_fu_1064_p2;
wire   [0:0] brmerge_i_i_i_i_i_fu_1058_p2;
wire   [0:0] underflow_6_fu_1052_p2;
wire   [0:0] brmerge_i_i_i_fu_1070_p2;
wire   [17:0] p_Val2_21_mux_i_i_i_fu_1076_p3;
wire   [17:0] p_Val2_i_i_i_fu_1084_p3;
wire   [17:0] p_Val2_3_fu_1103_p1;
wire   [17:0] p_Val2_8_fu_1100_p1;
wire   [17:0] p_Val2_6_fu_1107_p2;
wire   [0:0] newsignbit_3_fu_1113_p3;
wire  signed [17:0] p_Val2_29_fu_1092_p3;
wire  signed [17:0] p_Val2_30_fu_1121_p3;
wire  signed [18:0] tmp_i_i_29_fu_1133_p1;
wire  signed [18:0] tmp_i_i6_fu_1129_p1;
wire   [18:0] p_Val2_31_fu_1137_p2;
wire   [17:0] p_Val2_32_fu_1151_p2;
wire   [0:0] newsignbit_4_fu_1157_p3;
wire   [0:0] isneg_1_fu_1143_p3;
wire   [0:0] tmp_45_i_i_fu_1165_p2;
wire   [0:0] p_Result_not_i_i_fu_1183_p2;
wire   [0:0] brmerge_i_i_i2_i_fu_1177_p2;
wire   [9:0] tmp_181_fu_1195_p4;
wire   [0:0] underflow_7_fu_1171_p2;
wire   [0:0] brmerge_i_i7_fu_1189_p2;
wire   [9:0] tmp_182_fu_1205_p3;
wire   [9:0] tmp_183_fu_1213_p3;
wire  signed [25:0] p_Val2_7_fu_1315_p2;
wire  signed [25:0] p_Val2_7_1_fu_1322_p2;
wire  signed [25:0] p_Val2_7_2_fu_1328_p2;
wire  signed [25:0] p_Val2_7_3_fu_1334_p2;
wire  signed [25:0] p_Val2_7_4_fu_1340_p2;
wire  signed [25:0] p_Val2_7_5_fu_1346_p2;
wire   [16:0] p_Val2_7_fu_1315_p1;
wire  signed [17:0] p_Val2_7_1_fu_1322_p0;
wire   [16:0] p_Val2_7_1_fu_1322_p1;
wire  signed [17:0] p_Val2_7_2_fu_1328_p0;
wire   [16:0] p_Val2_7_2_fu_1328_p1;
wire  signed [17:0] p_Val2_7_3_fu_1334_p0;
wire   [16:0] p_Val2_7_3_fu_1334_p1;
wire  signed [17:0] p_Val2_7_4_fu_1340_p0;
wire   [16:0] p_Val2_7_4_fu_1340_p1;
wire  signed [17:0] p_Val2_7_5_fu_1346_p0;
wire   [16:0] p_Val2_7_5_fu_1346_p1;
reg   [5:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to3;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_enable_pp0;
wire   [25:0] p_Val2_7_1_fu_1322_p10;
wire   [25:0] p_Val2_7_2_fu_1328_p10;
wire   [25:0] p_Val2_7_3_fu_1334_p10;
wire   [25:0] p_Val2_7_4_fu_1340_p10;
wire   [25:0] p_Val2_7_5_fu_1346_p10;
wire   [25:0] p_Val2_7_fu_1315_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config12_s_exp_table4 #(
    .DataWidth( 17 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
exp_table4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_table4_address0),
    .ce0(exp_table4_ce0),
    .q0(exp_table4_q0)
);

softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config12_s_invert_table5 #(
    .DataWidth( 18 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
invert_table5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(invert_table5_address0),
    .ce0(invert_table5_ce0),
    .q0(invert_table5_q0)
);

myproject_mul_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_18s_17ns_26_1_1_U30(
    .din0(invert_table5_q0),
    .din1(p_Val2_7_fu_1315_p1),
    .dout(p_Val2_7_fu_1315_p2)
);

myproject_mul_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_18s_17ns_26_1_1_U31(
    .din0(p_Val2_7_1_fu_1322_p0),
    .din1(p_Val2_7_1_fu_1322_p1),
    .dout(p_Val2_7_1_fu_1322_p2)
);

myproject_mul_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_18s_17ns_26_1_1_U32(
    .din0(p_Val2_7_2_fu_1328_p0),
    .din1(p_Val2_7_2_fu_1328_p1),
    .dout(p_Val2_7_2_fu_1328_p2)
);

myproject_mul_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_18s_17ns_26_1_1_U33(
    .din0(p_Val2_7_3_fu_1334_p0),
    .din1(p_Val2_7_3_fu_1334_p1),
    .dout(p_Val2_7_3_fu_1334_p2)
);

myproject_mul_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_18s_17ns_26_1_1_U34(
    .din0(p_Val2_7_4_fu_1340_p0),
    .din1(p_Val2_7_4_fu_1340_p1),
    .dout(p_Val2_7_4_fu_1340_p2)
);

myproject_mul_mul_18s_17ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_18s_17ns_26_1_1_U35(
    .din0(p_Val2_7_5_fu_1346_p0),
    .din1(p_Val2_7_5_fu_1346_p1),
    .dout(p_Val2_7_5_fu_1346_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        OP2_V_cast_reg_1563 <= OP2_V_cast_fu_1233_p1;
        exp_res_1_V_reg_1504_pp0_iter2_reg <= exp_res_1_V_reg_1504;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        agg_result_i_i_i_reg_1438 <= agg_result_i_i_i_fu_342_p3;
        exp_res_3_V_reg_1526_pp0_iter2_reg <= exp_res_3_V_reg_1526;
        tmp_i_i4_i_reg_1448 <= tmp_i_i4_i_fu_355_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        data_V_load_100_reg_1368 <= data_V_q1;
        data_V_load_reg_1362 <= data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        data_V_load_101_reg_1384 <= data_V_q0;
        data_V_load_102_reg_1390 <= data_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        data_V_load_103_reg_1426 <= data_V_q0;
        data_V_load_104_reg_1432 <= data_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        exp_res_0_V_reg_1493 <= exp_table4_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        exp_res_0_V_reg_1493_pp0_iter2_reg <= exp_res_0_V_reg_1493;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        exp_res_1_V_reg_1504 <= exp_table4_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        exp_res_2_V_reg_1515 <= exp_table4_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        exp_res_2_V_reg_1515_pp0_iter2_reg <= exp_res_2_V_reg_1515;
        tmp_i_i7_i_i_reg_1416 <= tmp_i_i7_i_i_fu_319_p2;
        tmp_i_i_i_i_reg_1406 <= tmp_i_i_i_i_fu_310_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        exp_res_3_V_reg_1526 <= exp_table4_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        exp_res_4_V_reg_1537 <= exp_table4_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        exp_res_4_V_reg_1537_pp0_iter2_reg <= exp_res_4_V_reg_1537;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_res_5_V_reg_1548 <= exp_table4_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_res_5_V_reg_1548_pp0_iter3_reg <= exp_res_5_V_reg_1548;
        y_V_1_reg_1468 <= y_V_1_fu_790_p3;
        y_V_2_reg_1473 <= y_V_2_fu_824_p3;
        y_V_3_reg_1478 <= y_V_3_fu_858_p3;
        y_V_4_reg_1483 <= y_V_4_fu_892_p3;
        y_V_5_reg_1488 <= y_V_5_fu_926_p3;
        y_V_6_reg_1553 <= y_V_6_fu_1221_p3;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to3 = 1'b1;
    end else begin
        ap_idle_pp0_1to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            data_V_address0 = x_max_V_cast_fu_386_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            data_V_address0 = agg_result_i_i_i_cast_fu_350_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            data_V_address0 = agg_result_i_i_i_i_fu_314_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            data_V_address0 = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            data_V_address0 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_V_address0 = 64'd0;
        end else begin
            data_V_address0 = 'bx;
        end
    end else begin
        data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            data_V_address1 = agg_result_i_i5_i_cast_cast_fu_359_p3;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            data_V_address1 = agg_result_i_i8_i_i_cast_cast_fu_323_p3;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            data_V_address1 = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            data_V_address1 = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_V_address1 = 64'd1;
        end else begin
            data_V_address1 = 'bx;
        end
    end else begin
        data_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        data_V_ce0 = 1'b1;
    end else begin
        data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        data_V_ce1 = 1'b1;
    end else begin
        data_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            exp_table4_address0 = tmp_24_5_fu_950_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            exp_table4_address0 = tmp_24_4_fu_946_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            exp_table4_address0 = tmp_24_3_fu_942_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            exp_table4_address0 = tmp_24_2_fu_938_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            exp_table4_address0 = tmp_24_1_fu_934_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            exp_table4_address0 = tmp_24_fu_759_p1;
        end else begin
            exp_table4_address0 = 'bx;
        end
    end else begin
        exp_table4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        exp_table4_ce0 = 1'b1;
    end else begin
        exp_table4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        invert_table5_ce0 = 1'b1;
    end else begin
        invert_table5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_address0 = 64'd5;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        res_V_address0 = 64'd4;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_address0 = 64'd3;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_V_address0 = 64'd2;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        res_V_address0 = 64'd1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        res_V_address0 = 64'd0;
    end else begin
        res_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        res_V_ce0 = 1'b1;
    end else begin
        res_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_V_d0 = {{p_Val2_7_5_fu_1346_p2[25:10]}};
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        res_V_d0 = {{p_Val2_7_4_fu_1340_p2[25:10]}};
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_V_d0 = {{p_Val2_7_3_fu_1334_p2[25:10]}};
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_V_d0 = {{p_Val2_7_2_fu_1328_p2[25:10]}};
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        res_V_d0 = {{p_Val2_7_1_fu_1322_p2[25:10]}};
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        res_V_d0 = {{p_Val2_7_fu_1315_p2[25:10]}};
    end else begin
        res_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        res_V_we0 = 1'b1;
    end else begin
        res_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to3 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_reset_idle_pp0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP2_V_cast_fu_1233_p1 = invert_table5_q0;

assign agg_result_i_i5_i_cast_cast_fu_359_p3 = ((tmp_i_i4_i_fu_355_p2[0:0] === 1'b1) ? 64'd5 : 64'd4);

assign agg_result_i_i5_i_fu_371_p3 = ((tmp_i_i4_i_reg_1448[0:0] === 1'b1) ? 3'd5 : 3'd4);

assign agg_result_i_i8_i_i_cast_cast_fu_323_p3 = ((tmp_i_i7_i_i_fu_319_p2[0:0] === 1'b1) ? 64'd3 : 64'd2);

assign agg_result_i_i8_i_i_fu_335_p3 = ((tmp_i_i7_i_i_reg_1416[0:0] === 1'b1) ? 2'd3 : 2'd2);

assign agg_result_i_i_i_cast8_fu_368_p1 = agg_result_i_i_i_reg_1438;

assign agg_result_i_i_i_cast_fu_350_p1 = agg_result_i_i_i_fu_342_p3;

assign agg_result_i_i_i_fu_342_p3 = ((grp_fu_304_p2[0:0] === 1'b1) ? agg_result_i_i8_i_i_fu_335_p3 : agg_result_i_i_i_i_cast_fu_332_p1);

assign agg_result_i_i_i_i_cast_fu_332_p1 = tmp_i_i_i_i_reg_1406;

assign agg_result_i_i_i_i_fu_314_p1 = tmp_i_i_i_i_fu_310_p2;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state20_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign brmerge1_fu_499_p2 = (tmp_750_fu_467_p3 | p_Result_1_not_fu_493_p2);

assign brmerge2_fu_554_p2 = (tmp_752_fu_522_p3 | p_Result_2_not_fu_548_p2);

assign brmerge3_fu_609_p2 = (tmp_754_fu_577_p3 | p_Result_3_not_fu_603_p2);

assign brmerge4_fu_664_p2 = (tmp_756_fu_632_p3 | p_Result_4_not_fu_658_p2);

assign brmerge5_fu_719_p2 = (tmp_758_fu_687_p3 | p_Result_511_not_fu_713_p2);

assign brmerge_fu_444_p2 = (tmp_748_fu_412_p3 | p_Result_0_not_fu_438_p2);

assign brmerge_i_i7_fu_1189_p2 = (p_Result_not_i_i_fu_1183_p2 | newsignbit_4_fu_1157_p3);

assign brmerge_i_i_1_fu_487_p2 = (tmp_750_fu_467_p3 ^ tmp_749_fu_459_p3);

assign brmerge_i_i_2_fu_542_p2 = (tmp_752_fu_522_p3 ^ tmp_751_fu_514_p3);

assign brmerge_i_i_3_fu_597_p2 = (tmp_754_fu_577_p3 ^ tmp_753_fu_569_p3);

assign brmerge_i_i_4_fu_652_p2 = (tmp_756_fu_632_p3 ^ tmp_755_fu_624_p3);

assign brmerge_i_i_5_fu_707_p2 = (tmp_758_fu_687_p3 ^ tmp_757_fu_679_p3);

assign brmerge_i_i_fu_432_p2 = (tmp_748_fu_412_p3 ^ tmp_747_fu_404_p3);

assign brmerge_i_i_i2_i_fu_1177_p2 = (newsignbit_4_fu_1157_p3 ^ isneg_1_fu_1143_p3);

assign brmerge_i_i_i_fu_1070_p2 = (p_Result_not_i_i_i_fu_1064_p2 | newsignbit_2_fu_1038_p3);

assign brmerge_i_i_i_i_i_fu_1058_p2 = (newsignbit_2_fu_1038_p3 ^ isneg_fu_1024_p3);

assign grp_fu_304_p2 = (($signed(data_V_q0) < $signed(data_V_q1)) ? 1'b1 : 1'b0);

assign invert_table5_address0 = tmp_1_fu_1229_p1;

assign isneg_1_fu_1143_p3 = p_Val2_31_fu_1137_p2[32'd18];

assign isneg_fu_1024_p3 = p_Val2_27_fu_1018_p2[32'd18];

assign newsignbit_1_fu_994_p3 = p_Val2_5_fu_988_p2[32'd17];

assign newsignbit_2_fu_1038_p3 = p_Val2_28_fu_1032_p2[32'd17];

assign newsignbit_3_fu_1113_p3 = p_Val2_6_fu_1107_p2[32'd17];

assign newsignbit_4_fu_1157_p3 = p_Val2_32_fu_1151_p2[32'd17];

assign newsignbit_fu_966_p3 = p_Val2_24_fu_960_p2[32'd17];

assign p_Result_0_not_fu_438_p2 = (tmp_747_fu_404_p3 ^ 1'd1);

assign p_Result_1_not_fu_493_p2 = (tmp_749_fu_459_p3 ^ 1'd1);

assign p_Result_2_not_fu_548_p2 = (tmp_751_fu_514_p3 ^ 1'd1);

assign p_Result_3_not_fu_603_p2 = (tmp_753_fu_569_p3 ^ 1'd1);

assign p_Result_4_not_fu_658_p2 = (tmp_755_fu_624_p3 ^ 1'd1);

assign p_Result_511_not_fu_713_p2 = (tmp_757_fu_679_p3 ^ 1'd1);

assign p_Result_not_i_i_fu_1183_p2 = (isneg_1_fu_1143_p3 ^ 1'd1);

assign p_Result_not_i_i_i_fu_1064_p2 = (isneg_fu_1024_p3 ^ 1'd1);

assign p_Val2_1_fu_982_p1 = exp_res_2_V_reg_1515;

assign p_Val2_21_mux_i_i_i_fu_1076_p3 = ((brmerge_i_i_i_i_i_fu_1058_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_28_fu_1032_p2);

assign p_Val2_23_fu_957_p1 = exp_res_1_V_reg_1504;

assign p_Val2_24_fu_960_p2 = (p_Val2_9_fu_954_p1 + p_Val2_23_fu_957_p1);

assign p_Val2_25_fu_974_p3 = ((newsignbit_fu_966_p3[0:0] === 1'b1) ? 18'd131071 : p_Val2_24_fu_960_p2);

assign p_Val2_26_fu_1002_p3 = ((newsignbit_1_fu_994_p3[0:0] === 1'b1) ? 18'd131071 : p_Val2_5_fu_988_p2);

assign p_Val2_27_fu_1018_p2 = ($signed(tmp_i_i_i_28_fu_1014_p1) + $signed(tmp_i_i_i5_fu_1010_p1));

assign p_Val2_28_fu_1032_p2 = ($signed(p_Val2_25_fu_974_p3) + $signed(p_Val2_26_fu_1002_p3));

assign p_Val2_29_fu_1092_p3 = ((brmerge_i_i_i_fu_1070_p2[0:0] === 1'b1) ? p_Val2_21_mux_i_i_i_fu_1076_p3 : p_Val2_i_i_i_fu_1084_p3);

assign p_Val2_2_fu_985_p1 = exp_res_3_V_reg_1526;

assign p_Val2_30_fu_1121_p3 = ((newsignbit_3_fu_1113_p3[0:0] === 1'b1) ? 18'd131071 : p_Val2_6_fu_1107_p2);

assign p_Val2_31_fu_1137_p2 = ($signed(tmp_i_i_29_fu_1133_p1) + $signed(tmp_i_i6_fu_1129_p1));

assign p_Val2_32_fu_1151_p2 = ($signed(p_Val2_29_fu_1092_p3) + $signed(p_Val2_30_fu_1121_p3));

assign p_Val2_3_fu_1103_p1 = exp_table4_q0;

assign p_Val2_4_1_fu_453_p2 = ($signed(tmp_14_1_fu_450_p1) - $signed(tmp_15_fu_394_p1));

assign p_Val2_4_2_fu_508_p2 = ($signed(tmp_14_2_fu_505_p1) - $signed(tmp_15_fu_394_p1));

assign p_Val2_4_3_fu_563_p2 = ($signed(tmp_14_3_fu_560_p1) - $signed(tmp_15_fu_394_p1));

assign p_Val2_4_4_fu_618_p2 = ($signed(tmp_14_4_fu_615_p1) - $signed(tmp_15_fu_394_p1));

assign p_Val2_4_5_fu_673_p2 = ($signed(tmp_14_5_fu_670_p1) - $signed(tmp_15_fu_394_p1));

assign p_Val2_4_fu_398_p2 = ($signed(tmp_14_fu_391_p1) - $signed(tmp_15_fu_394_p1));

assign p_Val2_5_fu_988_p2 = (p_Val2_1_fu_982_p1 + p_Val2_2_fu_985_p1);

assign p_Val2_6_fu_1107_p2 = (p_Val2_3_fu_1103_p1 + p_Val2_8_fu_1100_p1);

assign p_Val2_7_1_fu_1322_p0 = OP2_V_cast_reg_1563;

assign p_Val2_7_1_fu_1322_p1 = p_Val2_7_1_fu_1322_p10;

assign p_Val2_7_1_fu_1322_p10 = exp_res_1_V_reg_1504_pp0_iter2_reg;

assign p_Val2_7_2_fu_1328_p0 = OP2_V_cast_reg_1563;

assign p_Val2_7_2_fu_1328_p1 = p_Val2_7_2_fu_1328_p10;

assign p_Val2_7_2_fu_1328_p10 = exp_res_2_V_reg_1515_pp0_iter2_reg;

assign p_Val2_7_3_fu_1334_p0 = OP2_V_cast_reg_1563;

assign p_Val2_7_3_fu_1334_p1 = p_Val2_7_3_fu_1334_p10;

assign p_Val2_7_3_fu_1334_p10 = exp_res_3_V_reg_1526_pp0_iter2_reg;

assign p_Val2_7_4_fu_1340_p0 = OP2_V_cast_reg_1563;

assign p_Val2_7_4_fu_1340_p1 = p_Val2_7_4_fu_1340_p10;

assign p_Val2_7_4_fu_1340_p10 = exp_res_4_V_reg_1537_pp0_iter2_reg;

assign p_Val2_7_5_fu_1346_p0 = OP2_V_cast_reg_1563;

assign p_Val2_7_5_fu_1346_p1 = p_Val2_7_5_fu_1346_p10;

assign p_Val2_7_5_fu_1346_p10 = exp_res_5_V_reg_1548_pp0_iter3_reg;

assign p_Val2_7_fu_1315_p1 = p_Val2_7_fu_1315_p10;

assign p_Val2_7_fu_1315_p10 = exp_res_0_V_reg_1493_pp0_iter2_reg;

assign p_Val2_8_fu_1100_p1 = exp_res_4_V_reg_1537;

assign p_Val2_9_fu_954_p1 = exp_res_0_V_reg_1493;

assign p_Val2_i_i_i_fu_1084_p3 = ((underflow_6_fu_1052_p2[0:0] === 1'b1) ? 18'd131072 : p_Val2_28_fu_1032_p2);

assign tmp_14_1_fu_450_p1 = data_V_load_100_reg_1368;

assign tmp_14_2_fu_505_p1 = data_V_load_101_reg_1384;

assign tmp_14_3_fu_560_p1 = data_V_load_102_reg_1390;

assign tmp_14_4_fu_615_p1 = data_V_load_103_reg_1426;

assign tmp_14_5_fu_670_p1 = data_V_load_104_reg_1432;

assign tmp_14_fu_391_p1 = data_V_load_reg_1362;

assign tmp_15_fu_394_p1 = $signed(data_V_q0);

assign tmp_165_fu_743_p3 = ((underflow_fu_426_p2[0:0] === 1'b1) ? 10'd512 : tmp_fu_725_p4);

assign tmp_166_fu_764_p4 = {{p_Val2_4_1_fu_453_p2[15:6]}};

assign tmp_167_fu_774_p3 = ((brmerge_i_i_1_fu_487_p2[0:0] === 1'b1) ? 10'd511 : tmp_166_fu_764_p4);

assign tmp_168_fu_782_p3 = ((underflow_1_fu_481_p2[0:0] === 1'b1) ? 10'd512 : tmp_166_fu_764_p4);

assign tmp_169_fu_798_p4 = {{p_Val2_4_2_fu_508_p2[15:6]}};

assign tmp_170_fu_808_p3 = ((brmerge_i_i_2_fu_542_p2[0:0] === 1'b1) ? 10'd511 : tmp_169_fu_798_p4);

assign tmp_171_fu_816_p3 = ((underflow_2_fu_536_p2[0:0] === 1'b1) ? 10'd512 : tmp_169_fu_798_p4);

assign tmp_172_fu_832_p4 = {{p_Val2_4_3_fu_563_p2[15:6]}};

assign tmp_173_fu_842_p3 = ((brmerge_i_i_3_fu_597_p2[0:0] === 1'b1) ? 10'd511 : tmp_172_fu_832_p4);

assign tmp_174_fu_850_p3 = ((underflow_3_fu_591_p2[0:0] === 1'b1) ? 10'd512 : tmp_172_fu_832_p4);

assign tmp_175_fu_866_p4 = {{p_Val2_4_4_fu_618_p2[15:6]}};

assign tmp_176_fu_876_p3 = ((brmerge_i_i_4_fu_652_p2[0:0] === 1'b1) ? 10'd511 : tmp_175_fu_866_p4);

assign tmp_177_fu_884_p3 = ((underflow_4_fu_646_p2[0:0] === 1'b1) ? 10'd512 : tmp_175_fu_866_p4);

assign tmp_178_fu_900_p4 = {{p_Val2_4_5_fu_673_p2[15:6]}};

assign tmp_179_fu_910_p3 = ((brmerge_i_i_5_fu_707_p2[0:0] === 1'b1) ? 10'd511 : tmp_178_fu_900_p4);

assign tmp_180_fu_918_p3 = ((underflow_5_fu_701_p2[0:0] === 1'b1) ? 10'd512 : tmp_178_fu_900_p4);

assign tmp_181_fu_1195_p4 = {{p_Val2_32_fu_1151_p2[17:8]}};

assign tmp_182_fu_1205_p3 = ((brmerge_i_i_i2_i_fu_1177_p2[0:0] === 1'b1) ? 10'd511 : tmp_181_fu_1195_p4);

assign tmp_183_fu_1213_p3 = ((underflow_7_fu_1171_p2[0:0] === 1'b1) ? 10'd512 : tmp_181_fu_1195_p4);

assign tmp_1_fu_1229_p1 = y_V_6_reg_1553;

assign tmp_20_1_fu_475_p2 = (tmp_750_fu_467_p3 ^ 1'd1);

assign tmp_20_2_fu_530_p2 = (tmp_752_fu_522_p3 ^ 1'd1);

assign tmp_20_3_fu_585_p2 = (tmp_754_fu_577_p3 ^ 1'd1);

assign tmp_20_4_fu_640_p2 = (tmp_756_fu_632_p3 ^ 1'd1);

assign tmp_20_5_fu_695_p2 = (tmp_758_fu_687_p3 ^ 1'd1);

assign tmp_20_fu_420_p2 = (tmp_748_fu_412_p3 ^ 1'd1);

assign tmp_24_1_fu_934_p1 = y_V_1_reg_1468;

assign tmp_24_2_fu_938_p1 = y_V_2_reg_1473;

assign tmp_24_3_fu_942_p1 = y_V_3_reg_1478;

assign tmp_24_4_fu_946_p1 = y_V_4_reg_1483;

assign tmp_24_5_fu_950_p1 = y_V_5_reg_1488;

assign tmp_24_fu_759_p1 = y_V_fu_751_p3;

assign tmp_45_i_i_fu_1165_p2 = (newsignbit_4_fu_1157_p3 ^ 1'd1);

assign tmp_45_i_i_i_fu_1046_p2 = (newsignbit_2_fu_1038_p3 ^ 1'd1);

assign tmp_747_fu_404_p3 = p_Val2_4_fu_398_p2[32'd16];

assign tmp_748_fu_412_p3 = p_Val2_4_fu_398_p2[32'd15];

assign tmp_749_fu_459_p3 = p_Val2_4_1_fu_453_p2[32'd16];

assign tmp_750_fu_467_p3 = p_Val2_4_1_fu_453_p2[32'd15];

assign tmp_751_fu_514_p3 = p_Val2_4_2_fu_508_p2[32'd16];

assign tmp_752_fu_522_p3 = p_Val2_4_2_fu_508_p2[32'd15];

assign tmp_753_fu_569_p3 = p_Val2_4_3_fu_563_p2[32'd16];

assign tmp_754_fu_577_p3 = p_Val2_4_3_fu_563_p2[32'd15];

assign tmp_755_fu_624_p3 = p_Val2_4_4_fu_618_p2[32'd16];

assign tmp_756_fu_632_p3 = p_Val2_4_4_fu_618_p2[32'd15];

assign tmp_757_fu_679_p3 = p_Val2_4_5_fu_673_p2[32'd16];

assign tmp_758_fu_687_p3 = p_Val2_4_5_fu_673_p2[32'd15];

assign tmp_fu_725_p4 = {{p_Val2_4_fu_398_p2[15:6]}};

assign tmp_i_i4_i_fu_355_p2 = (($signed(data_V_load_103_reg_1426) < $signed(data_V_load_104_reg_1432)) ? 1'b1 : 1'b0);

assign tmp_i_i6_fu_1129_p1 = p_Val2_29_fu_1092_p3;

assign tmp_i_i7_i_i_fu_319_p2 = (($signed(data_V_load_101_reg_1384) < $signed(data_V_load_102_reg_1390)) ? 1'b1 : 1'b0);

assign tmp_i_i_29_fu_1133_p1 = p_Val2_30_fu_1121_p3;

assign tmp_i_i_i5_fu_1010_p1 = p_Val2_25_fu_974_p3;

assign tmp_i_i_i_28_fu_1014_p1 = p_Val2_26_fu_1002_p3;

assign tmp_i_i_i_i_fu_310_p2 = (($signed(data_V_load_reg_1362) < $signed(data_V_load_100_reg_1368)) ? 1'b1 : 1'b0);

assign tmp_s_fu_735_p3 = ((brmerge_i_i_fu_432_p2[0:0] === 1'b1) ? 10'd511 : tmp_fu_725_p4);

assign underflow_1_fu_481_p2 = (tmp_749_fu_459_p3 & tmp_20_1_fu_475_p2);

assign underflow_2_fu_536_p2 = (tmp_751_fu_514_p3 & tmp_20_2_fu_530_p2);

assign underflow_3_fu_591_p2 = (tmp_753_fu_569_p3 & tmp_20_3_fu_585_p2);

assign underflow_4_fu_646_p2 = (tmp_755_fu_624_p3 & tmp_20_4_fu_640_p2);

assign underflow_5_fu_701_p2 = (tmp_757_fu_679_p3 & tmp_20_5_fu_695_p2);

assign underflow_6_fu_1052_p2 = (tmp_45_i_i_i_fu_1046_p2 & isneg_fu_1024_p3);

assign underflow_7_fu_1171_p2 = (tmp_45_i_i_fu_1165_p2 & isneg_1_fu_1143_p3);

assign underflow_fu_426_p2 = (tmp_747_fu_404_p3 & tmp_20_fu_420_p2);

assign x_max_V_cast_fu_386_p1 = x_max_V_fu_378_p3;

assign x_max_V_fu_378_p3 = ((grp_fu_304_p2[0:0] === 1'b1) ? agg_result_i_i5_i_fu_371_p3 : agg_result_i_i_i_cast8_fu_368_p1);

assign y_V_1_fu_790_p3 = ((brmerge1_fu_499_p2[0:0] === 1'b1) ? tmp_167_fu_774_p3 : tmp_168_fu_782_p3);

assign y_V_2_fu_824_p3 = ((brmerge2_fu_554_p2[0:0] === 1'b1) ? tmp_170_fu_808_p3 : tmp_171_fu_816_p3);

assign y_V_3_fu_858_p3 = ((brmerge3_fu_609_p2[0:0] === 1'b1) ? tmp_173_fu_842_p3 : tmp_174_fu_850_p3);

assign y_V_4_fu_892_p3 = ((brmerge4_fu_664_p2[0:0] === 1'b1) ? tmp_176_fu_876_p3 : tmp_177_fu_884_p3);

assign y_V_5_fu_926_p3 = ((brmerge5_fu_719_p2[0:0] === 1'b1) ? tmp_179_fu_910_p3 : tmp_180_fu_918_p3);

assign y_V_6_fu_1221_p3 = ((brmerge_i_i7_fu_1189_p2[0:0] === 1'b1) ? tmp_182_fu_1205_p3 : tmp_183_fu_1213_p3);

assign y_V_fu_751_p3 = ((brmerge_fu_444_p2[0:0] === 1'b1) ? tmp_s_fu_735_p3 : tmp_165_fu_743_p3);

endmodule //softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config12_s
