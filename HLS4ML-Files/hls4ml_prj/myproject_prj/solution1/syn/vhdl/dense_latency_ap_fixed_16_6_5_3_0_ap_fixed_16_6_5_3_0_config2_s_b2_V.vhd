-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_b2_V_rom is 
    generic(
             DWIDTH     : integer := 12; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 100
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_b2_V_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "110101001000", 1 => "000110011011", 2 => "000110000011", 
    3 => "000001110011", 4 => "001001100101", 5 => "000000001001", 
    6 => "110010001101", 7 => "111101101101", 8 => "111010101111", 
    9 => "111100011100", 10 => "001000001101", 11 => "110010010101", 
    12 => "111000100001", 13 => "110010111100", 14 => "111011010010", 
    15 => "111110101011", 16 => "000000001001", 17 => "001001101000", 
    18 => "110100011011", 19 => "000111011111", 20 => "001111010001", 
    21 => "111111000000", 22 => "111110100001", 23 => "101001101111", 
    24 => "111010001011", 25 => "110110111000", 26 => "001000111010", 
    27 => "111001011101", 28 => "000011111111", 29 => "111100110110", 
    30 => "010000010101", 31 => "111100001010", 32 => "110110011010", 
    33 => "000101101010", 34 => "111011110100", 35 => "000110011000", 
    36 => "000100110001", 37 => "000111100101", 38 => "010101111010", 
    39 => "001110001001", 40 => "001101100011", 41 => "110110110010", 
    42 => "000011001001", 43 => "111110101110", 44 => "111001100000", 
    45 => "111101011101", 46 => "110110000011", 47 => "111111111110", 
    48 => "110110000101", 49 => "111000111000", 50 => "110010001000", 
    51 => "000001111101", 52 => "000000010010", 53 => "000001001001", 
    54 => "110110001010", 55 => "000001000101", 56 => "111011101111", 
    57 => "111011110110", 58 => "111001001000", 59 => "000001000011", 
    60 => "110110010000", 61 => "111100001111", 62 => "110100110101", 
    63 => "000010100100", 64 => "000111110110", 65 => "000101111001", 
    66 => "000111111010", 67 => "000011001100", 68 => "111010111011", 
    69 => "110101111010", 70 => "111101010000", 71 => "000110011111", 
    72 => "001010001110", 73 => "110010010100", 74 => "001000011000", 
    75 => "000111001100", 76 => "110100111001", 77 => "000111010101", 
    78 => "111011001110", 79 => "000000010010", 80 => "000000111000", 
    81 => "110110001001", 82 => "000001111000", 83 => "110101010000", 
    84 => "111111110100", 85 => "000110110101", 86 => "000101011010", 
    87 => "111111011100", 88 => "111101111011", 89 => "000011110111", 
    90 => "111111001010", 91 => "111010011111", 92 => "111100010100", 
    93 => "000100101111", 94 => "000000010001", 95 => "001001110000", 
    96 => "000000010100", 97 => "000011010011", 98 => "001000001000", 
    99 => "111101010001" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_b2_V is
    generic (
        DataWidth : INTEGER := 12;
        AddressRange : INTEGER := 100;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_b2_V is
    component dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_b2_V_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_b2_V_rom_U :  component dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_b2_V_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


