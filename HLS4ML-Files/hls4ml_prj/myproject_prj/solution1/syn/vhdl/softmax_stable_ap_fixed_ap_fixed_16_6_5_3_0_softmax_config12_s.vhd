-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config12_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_V_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    data_V_ce0 : OUT STD_LOGIC;
    data_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    data_V_ce1 : OUT STD_LOGIC;
    data_V_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    res_V_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    res_V_ce0 : OUT STD_LOGIC;
    res_V_we0 : OUT STD_LOGIC;
    res_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config12_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv10_1FF : STD_LOGIC_VECTOR (9 downto 0) := "0111111111";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv18_1FFFF : STD_LOGIC_VECTOR (17 downto 0) := "011111111111111111";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv18_20000 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_state18_pp0_stage5_iter2 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal exp_table4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table4_ce0 : STD_LOGIC;
    signal exp_table4_q0 : STD_LOGIC_VECTOR (16 downto 0);
    signal invert_table5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal invert_table5_ce0 : STD_LOGIC;
    signal invert_table5_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal data_V_load_reg_1362 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal data_V_load_100_reg_1368 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_load_101_reg_1384 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state15_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal data_V_load_102_reg_1390 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i_i_i_i_fu_310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_i_reg_1406 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state16_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal tmp_i_i7_i_i_fu_319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i7_i_i_reg_1416 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_V_load_103_reg_1426 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_load_104_reg_1432 : STD_LOGIC_VECTOR (15 downto 0);
    signal agg_result_i_i_i_fu_342_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal agg_result_i_i_i_reg_1438 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state17_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal tmp_i_i4_i_fu_355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i4_i_reg_1448 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_V_1_fu_790_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_1_reg_1468 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_2_fu_824_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_2_reg_1473 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_3_fu_858_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_3_reg_1478 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_4_fu_892_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_4_reg_1483 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_5_fu_926_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_5_reg_1488 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_res_0_V_reg_1493 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_0_V_reg_1493_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_1_V_reg_1504 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_1_V_reg_1504_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_2_V_reg_1515 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_2_V_reg_1515_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_3_V_reg_1526 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_3_V_reg_1526_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_4_V_reg_1537 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_4_V_reg_1537_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_5_V_reg_1548 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_5_V_reg_1548_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal y_V_6_fu_1221_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_6_reg_1553 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_cast_fu_1233_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal OP2_V_cast_reg_1563 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal agg_result_i_i_i_i_fu_314_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal agg_result_i_i8_i_i_cast_cast_fu_323_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal agg_result_i_i_i_cast_fu_350_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal agg_result_i_i5_i_cast_cast_fu_359_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_max_V_cast_fu_386_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal tmp_24_fu_759_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_1_fu_934_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_2_fu_938_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_3_fu_942_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_4_fu_946_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_5_fu_950_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_1229_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal agg_result_i_i8_i_i_fu_335_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal agg_result_i_i_i_i_cast_fu_332_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal agg_result_i_i5_i_fu_371_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal agg_result_i_i_i_cast8_fu_368_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal x_max_V_fu_378_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_14_fu_391_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_15_fu_394_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_4_fu_398_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_748_fu_412_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_747_fu_404_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_0_not_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_1_fu_450_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_4_1_fu_453_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_750_fu_467_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_749_fu_459_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_1_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_not_fu_493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_2_fu_505_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_4_2_fu_508_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_752_fu_522_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_751_fu_514_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_2_fu_530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_not_fu_548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_3_fu_560_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_4_3_fu_563_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_754_fu_577_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_753_fu_569_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_3_fu_585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_not_fu_603_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_4_fu_615_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_4_4_fu_618_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_756_fu_632_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_755_fu_624_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_4_fu_640_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_4_not_fu_658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_5_fu_670_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_4_5_fu_673_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_758_fu_687_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_757_fu_679_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_5_fu_695_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_511_not_fu_713_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_fu_432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_725_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal underflow_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_735_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_165_fu_743_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_fu_751_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal brmerge_i_i_1_fu_487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_166_fu_764_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal underflow_1_fu_481_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge1_fu_499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_167_fu_774_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_168_fu_782_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal brmerge_i_i_2_fu_542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_169_fu_798_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal underflow_2_fu_536_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge2_fu_554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_170_fu_808_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_171_fu_816_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal brmerge_i_i_3_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_172_fu_832_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal underflow_3_fu_591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge3_fu_609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_173_fu_842_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_174_fu_850_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal brmerge_i_i_4_fu_652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_175_fu_866_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal underflow_4_fu_646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge4_fu_664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_176_fu_876_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_177_fu_884_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal brmerge_i_i_5_fu_707_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_178_fu_900_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal underflow_5_fu_701_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge5_fu_719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_179_fu_910_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_180_fu_918_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_9_fu_954_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_23_fu_957_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_24_fu_960_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal newsignbit_fu_966_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_1_fu_982_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_2_fu_985_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_5_fu_988_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal newsignbit_1_fu_994_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_25_fu_974_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_26_fu_1002_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_i_i_i_28_fu_1014_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_i_i_i5_fu_1010_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_27_fu_1018_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_28_fu_1032_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal newsignbit_2_fu_1038_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_fu_1024_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_i_i_i_fu_1046_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_not_i_i_i_fu_1064_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_i_i_fu_1058_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_6_fu_1052_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_fu_1070_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_21_mux_i_i_i_fu_1076_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_i_i_i_fu_1084_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_3_fu_1103_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_8_fu_1100_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_6_fu_1107_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal newsignbit_3_fu_1113_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_29_fu_1092_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_30_fu_1121_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_i_i_29_fu_1133_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_i_i6_fu_1129_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_31_fu_1137_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_32_fu_1151_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal newsignbit_4_fu_1157_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_1_fu_1143_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_i_i_fu_1165_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_not_i_i_fu_1183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i2_i_fu_1177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_181_fu_1195_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal underflow_7_fu_1171_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i7_fu_1189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_182_fu_1205_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_183_fu_1213_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_7_fu_1315_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_Val2_7_1_fu_1322_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_Val2_7_2_fu_1328_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_Val2_7_3_fu_1334_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_Val2_7_4_fu_1340_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_Val2_7_5_fu_1346_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_Val2_7_fu_1315_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_7_1_fu_1322_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_7_1_fu_1322_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_7_2_fu_1328_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_7_2_fu_1328_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_7_3_fu_1334_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_7_3_fu_1334_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_7_4_fu_1340_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_7_4_fu_1340_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_7_5_fu_1346_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_7_5_fu_1346_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to3 : STD_LOGIC;
    signal ap_idle_pp0_0to2 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal p_Val2_7_1_fu_1322_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_Val2_7_2_fu_1328_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_Val2_7_3_fu_1334_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_Val2_7_4_fu_1340_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_Val2_7_5_fu_1346_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_Val2_7_fu_1315_p10 : STD_LOGIC_VECTOR (25 downto 0);

    component myproject_mul_mul_18s_17ns_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config12_s_exp_table4 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config12_s_invert_table5 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;



begin
    exp_table4_U : component softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config12_s_exp_table4
    generic map (
        DataWidth => 17,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => exp_table4_address0,
        ce0 => exp_table4_ce0,
        q0 => exp_table4_q0);

    invert_table5_U : component softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config12_s_invert_table5
    generic map (
        DataWidth => 18,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => invert_table5_address0,
        ce0 => invert_table5_ce0,
        q0 => invert_table5_q0);

    myproject_mul_mul_18s_17ns_26_1_1_U30 : component myproject_mul_mul_18s_17ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => invert_table5_q0,
        din1 => p_Val2_7_fu_1315_p1,
        dout => p_Val2_7_fu_1315_p2);

    myproject_mul_mul_18s_17ns_26_1_1_U31 : component myproject_mul_mul_18s_17ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => p_Val2_7_1_fu_1322_p0,
        din1 => p_Val2_7_1_fu_1322_p1,
        dout => p_Val2_7_1_fu_1322_p2);

    myproject_mul_mul_18s_17ns_26_1_1_U32 : component myproject_mul_mul_18s_17ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => p_Val2_7_2_fu_1328_p0,
        din1 => p_Val2_7_2_fu_1328_p1,
        dout => p_Val2_7_2_fu_1328_p2);

    myproject_mul_mul_18s_17ns_26_1_1_U33 : component myproject_mul_mul_18s_17ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => p_Val2_7_3_fu_1334_p0,
        din1 => p_Val2_7_3_fu_1334_p1,
        dout => p_Val2_7_3_fu_1334_p2);

    myproject_mul_mul_18s_17ns_26_1_1_U34 : component myproject_mul_mul_18s_17ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => p_Val2_7_4_fu_1340_p0,
        din1 => p_Val2_7_4_fu_1340_p1,
        dout => p_Val2_7_4_fu_1340_p2);

    myproject_mul_mul_18s_17ns_26_1_1_U35 : component myproject_mul_mul_18s_17ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        din0 => p_Val2_7_5_fu_1346_p0,
        din1 => p_Val2_7_5_fu_1346_p1,
        dout => p_Val2_7_5_fu_1346_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                OP2_V_cast_reg_1563 <= OP2_V_cast_fu_1233_p1;
                exp_res_1_V_reg_1504_pp0_iter2_reg <= exp_res_1_V_reg_1504;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                agg_result_i_i_i_reg_1438 <= agg_result_i_i_i_fu_342_p3;
                exp_res_3_V_reg_1526_pp0_iter2_reg <= exp_res_3_V_reg_1526;
                tmp_i_i4_i_reg_1448 <= tmp_i_i4_i_fu_355_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                data_V_load_100_reg_1368 <= data_V_q1;
                data_V_load_reg_1362 <= data_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                data_V_load_101_reg_1384 <= data_V_q0;
                data_V_load_102_reg_1390 <= data_V_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                data_V_load_103_reg_1426 <= data_V_q0;
                data_V_load_104_reg_1432 <= data_V_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                exp_res_0_V_reg_1493 <= exp_table4_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                exp_res_0_V_reg_1493_pp0_iter2_reg <= exp_res_0_V_reg_1493;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                exp_res_1_V_reg_1504 <= exp_table4_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                exp_res_2_V_reg_1515 <= exp_table4_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                exp_res_2_V_reg_1515_pp0_iter2_reg <= exp_res_2_V_reg_1515;
                tmp_i_i7_i_i_reg_1416 <= tmp_i_i7_i_i_fu_319_p2;
                tmp_i_i_i_i_reg_1406 <= tmp_i_i_i_i_fu_310_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                exp_res_3_V_reg_1526 <= exp_table4_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                exp_res_4_V_reg_1537 <= exp_table4_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                exp_res_4_V_reg_1537_pp0_iter2_reg <= exp_res_4_V_reg_1537;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exp_res_5_V_reg_1548 <= exp_table4_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exp_res_5_V_reg_1548_pp0_iter3_reg <= exp_res_5_V_reg_1548;
                y_V_1_reg_1468 <= y_V_1_fu_790_p3;
                y_V_2_reg_1473 <= y_V_2_fu_824_p3;
                y_V_3_reg_1478 <= y_V_3_fu_858_p3;
                y_V_4_reg_1483 <= y_V_4_fu_892_p3;
                y_V_5_reg_1488 <= y_V_5_fu_926_p3;
                y_V_6_reg_1553 <= y_V_6_fu_1221_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage5_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to3, ap_reset_idle_pp0, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to3 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_reset_idle_pp0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
        OP2_V_cast_fu_1233_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(invert_table5_q0),26));

    agg_result_i_i5_i_cast_cast_fu_359_p3 <= 
        ap_const_lv64_5 when (tmp_i_i4_i_fu_355_p2(0) = '1') else 
        ap_const_lv64_4;
    agg_result_i_i5_i_fu_371_p3 <= 
        ap_const_lv3_5 when (tmp_i_i4_i_reg_1448(0) = '1') else 
        ap_const_lv3_4;
    agg_result_i_i8_i_i_cast_cast_fu_323_p3 <= 
        ap_const_lv64_3 when (tmp_i_i7_i_i_fu_319_p2(0) = '1') else 
        ap_const_lv64_2;
    agg_result_i_i8_i_i_fu_335_p3 <= 
        ap_const_lv2_3 when (tmp_i_i7_i_i_reg_1416(0) = '1') else 
        ap_const_lv2_2;
    agg_result_i_i_i_cast8_fu_368_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(agg_result_i_i_i_reg_1438),3));
    agg_result_i_i_i_cast_fu_350_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(agg_result_i_i_i_fu_342_p3),64));
    agg_result_i_i_i_fu_342_p3 <= 
        agg_result_i_i8_i_i_fu_335_p3 when (grp_fu_304_p2(0) = '1') else 
        agg_result_i_i_i_i_cast_fu_332_p1;
    agg_result_i_i_i_i_cast_fu_332_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i_i_i_i_reg_1406),2));
    agg_result_i_i_i_i_fu_314_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i_i_i_i_fu_310_p2),64));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state20_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to3_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to3 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to2)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to2 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    brmerge1_fu_499_p2 <= (tmp_750_fu_467_p3 or p_Result_1_not_fu_493_p2);
    brmerge2_fu_554_p2 <= (tmp_752_fu_522_p3 or p_Result_2_not_fu_548_p2);
    brmerge3_fu_609_p2 <= (tmp_754_fu_577_p3 or p_Result_3_not_fu_603_p2);
    brmerge4_fu_664_p2 <= (tmp_756_fu_632_p3 or p_Result_4_not_fu_658_p2);
    brmerge5_fu_719_p2 <= (tmp_758_fu_687_p3 or p_Result_511_not_fu_713_p2);
    brmerge_fu_444_p2 <= (tmp_748_fu_412_p3 or p_Result_0_not_fu_438_p2);
    brmerge_i_i7_fu_1189_p2 <= (p_Result_not_i_i_fu_1183_p2 or newsignbit_4_fu_1157_p3);
    brmerge_i_i_1_fu_487_p2 <= (tmp_750_fu_467_p3 xor tmp_749_fu_459_p3);
    brmerge_i_i_2_fu_542_p2 <= (tmp_752_fu_522_p3 xor tmp_751_fu_514_p3);
    brmerge_i_i_3_fu_597_p2 <= (tmp_754_fu_577_p3 xor tmp_753_fu_569_p3);
    brmerge_i_i_4_fu_652_p2 <= (tmp_756_fu_632_p3 xor tmp_755_fu_624_p3);
    brmerge_i_i_5_fu_707_p2 <= (tmp_758_fu_687_p3 xor tmp_757_fu_679_p3);
    brmerge_i_i_fu_432_p2 <= (tmp_748_fu_412_p3 xor tmp_747_fu_404_p3);
    brmerge_i_i_i2_i_fu_1177_p2 <= (newsignbit_4_fu_1157_p3 xor isneg_1_fu_1143_p3);
    brmerge_i_i_i_fu_1070_p2 <= (p_Result_not_i_i_i_fu_1064_p2 or newsignbit_2_fu_1038_p3);
    brmerge_i_i_i_i_i_fu_1058_p2 <= (newsignbit_2_fu_1038_p3 xor isneg_fu_1024_p3);

    data_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage1, ap_block_pp0_stage2, agg_result_i_i_i_i_fu_314_p1, ap_block_pp0_stage3, agg_result_i_i_i_cast_fu_350_p1, ap_block_pp0_stage4, x_max_V_cast_fu_386_p1, ap_block_pp0_stage5)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                data_V_address0 <= x_max_V_cast_fu_386_p1(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                data_V_address0 <= agg_result_i_i_i_cast_fu_350_p1(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                data_V_address0 <= agg_result_i_i_i_i_fu_314_p1(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                data_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                data_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                data_V_address0 <= ap_const_lv64_0(3 - 1 downto 0);
            else 
                data_V_address0 <= "XXX";
            end if;
        else 
            data_V_address0 <= "XXX";
        end if; 
    end process;


    data_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, agg_result_i_i8_i_i_cast_cast_fu_323_p3, ap_block_pp0_stage4, agg_result_i_i5_i_cast_cast_fu_359_p3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                data_V_address1 <= agg_result_i_i5_i_cast_cast_fu_359_p3(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                data_V_address1 <= agg_result_i_i8_i_i_cast_cast_fu_323_p3(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                data_V_address1 <= ap_const_lv64_5(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                data_V_address1 <= ap_const_lv64_3(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                data_V_address1 <= ap_const_lv64_1(3 - 1 downto 0);
            else 
                data_V_address1 <= "XXX";
            end if;
        else 
            data_V_address1 <= "XXX";
        end if; 
    end process;


    data_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            data_V_ce0 <= ap_const_logic_1;
        else 
            data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    data_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            data_V_ce1 <= ap_const_logic_1;
        else 
            data_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table4_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, tmp_24_fu_759_p1, tmp_24_1_fu_934_p1, tmp_24_2_fu_938_p1, tmp_24_3_fu_942_p1, tmp_24_4_fu_946_p1, tmp_24_5_fu_950_p1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                exp_table4_address0 <= tmp_24_5_fu_950_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                exp_table4_address0 <= tmp_24_4_fu_946_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                exp_table4_address0 <= tmp_24_3_fu_942_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                exp_table4_address0 <= tmp_24_2_fu_938_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                exp_table4_address0 <= tmp_24_1_fu_934_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                exp_table4_address0 <= tmp_24_fu_759_p1(10 - 1 downto 0);
            else 
                exp_table4_address0 <= "XXXXXXXXXX";
            end if;
        else 
            exp_table4_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    exp_table4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            exp_table4_ce0 <= ap_const_logic_1;
        else 
            exp_table4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_304_p2 <= "1" when (signed(data_V_q0) < signed(data_V_q1)) else "0";
    invert_table5_address0 <= tmp_1_fu_1229_p1(10 - 1 downto 0);

    invert_table5_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            invert_table5_ce0 <= ap_const_logic_1;
        else 
            invert_table5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    isneg_1_fu_1143_p3 <= p_Val2_31_fu_1137_p2(18 downto 18);
    isneg_fu_1024_p3 <= p_Val2_27_fu_1018_p2(18 downto 18);
    newsignbit_1_fu_994_p3 <= p_Val2_5_fu_988_p2(17 downto 17);
    newsignbit_2_fu_1038_p3 <= p_Val2_28_fu_1032_p2(17 downto 17);
    newsignbit_3_fu_1113_p3 <= p_Val2_6_fu_1107_p2(17 downto 17);
    newsignbit_4_fu_1157_p3 <= p_Val2_32_fu_1151_p2(17 downto 17);
    newsignbit_fu_966_p3 <= p_Val2_24_fu_960_p2(17 downto 17);
    p_Result_0_not_fu_438_p2 <= (tmp_747_fu_404_p3 xor ap_const_lv1_1);
    p_Result_1_not_fu_493_p2 <= (tmp_749_fu_459_p3 xor ap_const_lv1_1);
    p_Result_2_not_fu_548_p2 <= (tmp_751_fu_514_p3 xor ap_const_lv1_1);
    p_Result_3_not_fu_603_p2 <= (tmp_753_fu_569_p3 xor ap_const_lv1_1);
    p_Result_4_not_fu_658_p2 <= (tmp_755_fu_624_p3 xor ap_const_lv1_1);
    p_Result_511_not_fu_713_p2 <= (tmp_757_fu_679_p3 xor ap_const_lv1_1);
    p_Result_not_i_i_fu_1183_p2 <= (isneg_1_fu_1143_p3 xor ap_const_lv1_1);
    p_Result_not_i_i_i_fu_1064_p2 <= (isneg_fu_1024_p3 xor ap_const_lv1_1);
    p_Val2_1_fu_982_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_2_V_reg_1515),18));
    p_Val2_21_mux_i_i_i_fu_1076_p3 <= 
        ap_const_lv18_1FFFF when (brmerge_i_i_i_i_i_fu_1058_p2(0) = '1') else 
        p_Val2_28_fu_1032_p2;
    p_Val2_23_fu_957_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_1_V_reg_1504),18));
    p_Val2_24_fu_960_p2 <= std_logic_vector(unsigned(p_Val2_9_fu_954_p1) + unsigned(p_Val2_23_fu_957_p1));
    p_Val2_25_fu_974_p3 <= 
        ap_const_lv18_1FFFF when (newsignbit_fu_966_p3(0) = '1') else 
        p_Val2_24_fu_960_p2;
    p_Val2_26_fu_1002_p3 <= 
        ap_const_lv18_1FFFF when (newsignbit_1_fu_994_p3(0) = '1') else 
        p_Val2_5_fu_988_p2;
    p_Val2_27_fu_1018_p2 <= std_logic_vector(signed(tmp_i_i_i_28_fu_1014_p1) + signed(tmp_i_i_i5_fu_1010_p1));
    p_Val2_28_fu_1032_p2 <= std_logic_vector(signed(p_Val2_25_fu_974_p3) + signed(p_Val2_26_fu_1002_p3));
    p_Val2_29_fu_1092_p3 <= 
        p_Val2_21_mux_i_i_i_fu_1076_p3 when (brmerge_i_i_i_fu_1070_p2(0) = '1') else 
        p_Val2_i_i_i_fu_1084_p3;
    p_Val2_2_fu_985_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_3_V_reg_1526),18));
    p_Val2_30_fu_1121_p3 <= 
        ap_const_lv18_1FFFF when (newsignbit_3_fu_1113_p3(0) = '1') else 
        p_Val2_6_fu_1107_p2;
    p_Val2_31_fu_1137_p2 <= std_logic_vector(signed(tmp_i_i_29_fu_1133_p1) + signed(tmp_i_i6_fu_1129_p1));
    p_Val2_32_fu_1151_p2 <= std_logic_vector(signed(p_Val2_29_fu_1092_p3) + signed(p_Val2_30_fu_1121_p3));
    p_Val2_3_fu_1103_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_table4_q0),18));
    p_Val2_4_1_fu_453_p2 <= std_logic_vector(signed(tmp_14_1_fu_450_p1) - signed(tmp_15_fu_394_p1));
    p_Val2_4_2_fu_508_p2 <= std_logic_vector(signed(tmp_14_2_fu_505_p1) - signed(tmp_15_fu_394_p1));
    p_Val2_4_3_fu_563_p2 <= std_logic_vector(signed(tmp_14_3_fu_560_p1) - signed(tmp_15_fu_394_p1));
    p_Val2_4_4_fu_618_p2 <= std_logic_vector(signed(tmp_14_4_fu_615_p1) - signed(tmp_15_fu_394_p1));
    p_Val2_4_5_fu_673_p2 <= std_logic_vector(signed(tmp_14_5_fu_670_p1) - signed(tmp_15_fu_394_p1));
    p_Val2_4_fu_398_p2 <= std_logic_vector(signed(tmp_14_fu_391_p1) - signed(tmp_15_fu_394_p1));
    p_Val2_5_fu_988_p2 <= std_logic_vector(unsigned(p_Val2_1_fu_982_p1) + unsigned(p_Val2_2_fu_985_p1));
    p_Val2_6_fu_1107_p2 <= std_logic_vector(unsigned(p_Val2_3_fu_1103_p1) + unsigned(p_Val2_8_fu_1100_p1));
    p_Val2_7_1_fu_1322_p0 <= OP2_V_cast_reg_1563(18 - 1 downto 0);
    p_Val2_7_1_fu_1322_p1 <= p_Val2_7_1_fu_1322_p10(17 - 1 downto 0);
    p_Val2_7_1_fu_1322_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_1_V_reg_1504_pp0_iter2_reg),26));
    p_Val2_7_2_fu_1328_p0 <= OP2_V_cast_reg_1563(18 - 1 downto 0);
    p_Val2_7_2_fu_1328_p1 <= p_Val2_7_2_fu_1328_p10(17 - 1 downto 0);
    p_Val2_7_2_fu_1328_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_2_V_reg_1515_pp0_iter2_reg),26));
    p_Val2_7_3_fu_1334_p0 <= OP2_V_cast_reg_1563(18 - 1 downto 0);
    p_Val2_7_3_fu_1334_p1 <= p_Val2_7_3_fu_1334_p10(17 - 1 downto 0);
    p_Val2_7_3_fu_1334_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_3_V_reg_1526_pp0_iter2_reg),26));
    p_Val2_7_4_fu_1340_p0 <= OP2_V_cast_reg_1563(18 - 1 downto 0);
    p_Val2_7_4_fu_1340_p1 <= p_Val2_7_4_fu_1340_p10(17 - 1 downto 0);
    p_Val2_7_4_fu_1340_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_4_V_reg_1537_pp0_iter2_reg),26));
    p_Val2_7_5_fu_1346_p0 <= OP2_V_cast_reg_1563(18 - 1 downto 0);
    p_Val2_7_5_fu_1346_p1 <= p_Val2_7_5_fu_1346_p10(17 - 1 downto 0);
    p_Val2_7_5_fu_1346_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_5_V_reg_1548_pp0_iter3_reg),26));
    p_Val2_7_fu_1315_p1 <= p_Val2_7_fu_1315_p10(17 - 1 downto 0);
    p_Val2_7_fu_1315_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_0_V_reg_1493_pp0_iter2_reg),26));
    p_Val2_8_fu_1100_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_4_V_reg_1537),18));
    p_Val2_9_fu_954_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_0_V_reg_1493),18));
    p_Val2_i_i_i_fu_1084_p3 <= 
        ap_const_lv18_20000 when (underflow_6_fu_1052_p2(0) = '1') else 
        p_Val2_28_fu_1032_p2;

    res_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            res_V_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            res_V_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            res_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            res_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            res_V_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            res_V_address0 <= "XXX";
        end if; 
    end process;


    res_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            res_V_ce0 <= ap_const_logic_1;
        else 
            res_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    res_V_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, p_Val2_7_fu_1315_p2, p_Val2_7_1_fu_1322_p2, p_Val2_7_2_fu_1328_p2, p_Val2_7_3_fu_1334_p2, p_Val2_7_4_fu_1340_p2, p_Val2_7_5_fu_1346_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            res_V_d0 <= p_Val2_7_5_fu_1346_p2(25 downto 10);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_V_d0 <= p_Val2_7_4_fu_1340_p2(25 downto 10);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            res_V_d0 <= p_Val2_7_3_fu_1334_p2(25 downto 10);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            res_V_d0 <= p_Val2_7_2_fu_1328_p2(25 downto 10);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            res_V_d0 <= p_Val2_7_1_fu_1322_p2(25 downto 10);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            res_V_d0 <= p_Val2_7_fu_1315_p2(25 downto 10);
        else 
            res_V_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    res_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            res_V_we0 <= ap_const_logic_1;
        else 
            res_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

        tmp_14_1_fu_450_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_V_load_100_reg_1368),17));

        tmp_14_2_fu_505_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_V_load_101_reg_1384),17));

        tmp_14_3_fu_560_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_V_load_102_reg_1390),17));

        tmp_14_4_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_V_load_103_reg_1426),17));

        tmp_14_5_fu_670_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_V_load_104_reg_1432),17));

        tmp_14_fu_391_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_V_load_reg_1362),17));

        tmp_15_fu_394_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_V_q0),17));

    tmp_165_fu_743_p3 <= 
        ap_const_lv10_200 when (underflow_fu_426_p2(0) = '1') else 
        tmp_fu_725_p4;
    tmp_166_fu_764_p4 <= p_Val2_4_1_fu_453_p2(15 downto 6);
    tmp_167_fu_774_p3 <= 
        ap_const_lv10_1FF when (brmerge_i_i_1_fu_487_p2(0) = '1') else 
        tmp_166_fu_764_p4;
    tmp_168_fu_782_p3 <= 
        ap_const_lv10_200 when (underflow_1_fu_481_p2(0) = '1') else 
        tmp_166_fu_764_p4;
    tmp_169_fu_798_p4 <= p_Val2_4_2_fu_508_p2(15 downto 6);
    tmp_170_fu_808_p3 <= 
        ap_const_lv10_1FF when (brmerge_i_i_2_fu_542_p2(0) = '1') else 
        tmp_169_fu_798_p4;
    tmp_171_fu_816_p3 <= 
        ap_const_lv10_200 when (underflow_2_fu_536_p2(0) = '1') else 
        tmp_169_fu_798_p4;
    tmp_172_fu_832_p4 <= p_Val2_4_3_fu_563_p2(15 downto 6);
    tmp_173_fu_842_p3 <= 
        ap_const_lv10_1FF when (brmerge_i_i_3_fu_597_p2(0) = '1') else 
        tmp_172_fu_832_p4;
    tmp_174_fu_850_p3 <= 
        ap_const_lv10_200 when (underflow_3_fu_591_p2(0) = '1') else 
        tmp_172_fu_832_p4;
    tmp_175_fu_866_p4 <= p_Val2_4_4_fu_618_p2(15 downto 6);
    tmp_176_fu_876_p3 <= 
        ap_const_lv10_1FF when (brmerge_i_i_4_fu_652_p2(0) = '1') else 
        tmp_175_fu_866_p4;
    tmp_177_fu_884_p3 <= 
        ap_const_lv10_200 when (underflow_4_fu_646_p2(0) = '1') else 
        tmp_175_fu_866_p4;
    tmp_178_fu_900_p4 <= p_Val2_4_5_fu_673_p2(15 downto 6);
    tmp_179_fu_910_p3 <= 
        ap_const_lv10_1FF when (brmerge_i_i_5_fu_707_p2(0) = '1') else 
        tmp_178_fu_900_p4;
    tmp_180_fu_918_p3 <= 
        ap_const_lv10_200 when (underflow_5_fu_701_p2(0) = '1') else 
        tmp_178_fu_900_p4;
    tmp_181_fu_1195_p4 <= p_Val2_32_fu_1151_p2(17 downto 8);
    tmp_182_fu_1205_p3 <= 
        ap_const_lv10_1FF when (brmerge_i_i_i2_i_fu_1177_p2(0) = '1') else 
        tmp_181_fu_1195_p4;
    tmp_183_fu_1213_p3 <= 
        ap_const_lv10_200 when (underflow_7_fu_1171_p2(0) = '1') else 
        tmp_181_fu_1195_p4;
    tmp_1_fu_1229_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_6_reg_1553),64));
    tmp_20_1_fu_475_p2 <= (tmp_750_fu_467_p3 xor ap_const_lv1_1);
    tmp_20_2_fu_530_p2 <= (tmp_752_fu_522_p3 xor ap_const_lv1_1);
    tmp_20_3_fu_585_p2 <= (tmp_754_fu_577_p3 xor ap_const_lv1_1);
    tmp_20_4_fu_640_p2 <= (tmp_756_fu_632_p3 xor ap_const_lv1_1);
    tmp_20_5_fu_695_p2 <= (tmp_758_fu_687_p3 xor ap_const_lv1_1);
    tmp_20_fu_420_p2 <= (tmp_748_fu_412_p3 xor ap_const_lv1_1);
    tmp_24_1_fu_934_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_1_reg_1468),64));
    tmp_24_2_fu_938_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_2_reg_1473),64));
    tmp_24_3_fu_942_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_3_reg_1478),64));
    tmp_24_4_fu_946_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_4_reg_1483),64));
    tmp_24_5_fu_950_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_5_reg_1488),64));
    tmp_24_fu_759_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_fu_751_p3),64));
    tmp_45_i_i_fu_1165_p2 <= (newsignbit_4_fu_1157_p3 xor ap_const_lv1_1);
    tmp_45_i_i_i_fu_1046_p2 <= (newsignbit_2_fu_1038_p3 xor ap_const_lv1_1);
    tmp_747_fu_404_p3 <= p_Val2_4_fu_398_p2(16 downto 16);
    tmp_748_fu_412_p3 <= p_Val2_4_fu_398_p2(15 downto 15);
    tmp_749_fu_459_p3 <= p_Val2_4_1_fu_453_p2(16 downto 16);
    tmp_750_fu_467_p3 <= p_Val2_4_1_fu_453_p2(15 downto 15);
    tmp_751_fu_514_p3 <= p_Val2_4_2_fu_508_p2(16 downto 16);
    tmp_752_fu_522_p3 <= p_Val2_4_2_fu_508_p2(15 downto 15);
    tmp_753_fu_569_p3 <= p_Val2_4_3_fu_563_p2(16 downto 16);
    tmp_754_fu_577_p3 <= p_Val2_4_3_fu_563_p2(15 downto 15);
    tmp_755_fu_624_p3 <= p_Val2_4_4_fu_618_p2(16 downto 16);
    tmp_756_fu_632_p3 <= p_Val2_4_4_fu_618_p2(15 downto 15);
    tmp_757_fu_679_p3 <= p_Val2_4_5_fu_673_p2(16 downto 16);
    tmp_758_fu_687_p3 <= p_Val2_4_5_fu_673_p2(15 downto 15);
    tmp_fu_725_p4 <= p_Val2_4_fu_398_p2(15 downto 6);
    tmp_i_i4_i_fu_355_p2 <= "1" when (signed(data_V_load_103_reg_1426) < signed(data_V_load_104_reg_1432)) else "0";
        tmp_i_i6_fu_1129_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_29_fu_1092_p3),19));

    tmp_i_i7_i_i_fu_319_p2 <= "1" when (signed(data_V_load_101_reg_1384) < signed(data_V_load_102_reg_1390)) else "0";
        tmp_i_i_29_fu_1133_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_30_fu_1121_p3),19));

        tmp_i_i_i5_fu_1010_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_25_fu_974_p3),19));

        tmp_i_i_i_28_fu_1014_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_26_fu_1002_p3),19));

    tmp_i_i_i_i_fu_310_p2 <= "1" when (signed(data_V_load_reg_1362) < signed(data_V_load_100_reg_1368)) else "0";
    tmp_s_fu_735_p3 <= 
        ap_const_lv10_1FF when (brmerge_i_i_fu_432_p2(0) = '1') else 
        tmp_fu_725_p4;
    underflow_1_fu_481_p2 <= (tmp_749_fu_459_p3 and tmp_20_1_fu_475_p2);
    underflow_2_fu_536_p2 <= (tmp_751_fu_514_p3 and tmp_20_2_fu_530_p2);
    underflow_3_fu_591_p2 <= (tmp_753_fu_569_p3 and tmp_20_3_fu_585_p2);
    underflow_4_fu_646_p2 <= (tmp_755_fu_624_p3 and tmp_20_4_fu_640_p2);
    underflow_5_fu_701_p2 <= (tmp_757_fu_679_p3 and tmp_20_5_fu_695_p2);
    underflow_6_fu_1052_p2 <= (tmp_45_i_i_i_fu_1046_p2 and isneg_fu_1024_p3);
    underflow_7_fu_1171_p2 <= (tmp_45_i_i_fu_1165_p2 and isneg_1_fu_1143_p3);
    underflow_fu_426_p2 <= (tmp_747_fu_404_p3 and tmp_20_fu_420_p2);
    x_max_V_cast_fu_386_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_max_V_fu_378_p3),64));
    x_max_V_fu_378_p3 <= 
        agg_result_i_i5_i_fu_371_p3 when (grp_fu_304_p2(0) = '1') else 
        agg_result_i_i_i_cast8_fu_368_p1;
    y_V_1_fu_790_p3 <= 
        tmp_167_fu_774_p3 when (brmerge1_fu_499_p2(0) = '1') else 
        tmp_168_fu_782_p3;
    y_V_2_fu_824_p3 <= 
        tmp_170_fu_808_p3 when (brmerge2_fu_554_p2(0) = '1') else 
        tmp_171_fu_816_p3;
    y_V_3_fu_858_p3 <= 
        tmp_173_fu_842_p3 when (brmerge3_fu_609_p2(0) = '1') else 
        tmp_174_fu_850_p3;
    y_V_4_fu_892_p3 <= 
        tmp_176_fu_876_p3 when (brmerge4_fu_664_p2(0) = '1') else 
        tmp_177_fu_884_p3;
    y_V_5_fu_926_p3 <= 
        tmp_179_fu_910_p3 when (brmerge5_fu_719_p2(0) = '1') else 
        tmp_180_fu_918_p3;
    y_V_6_fu_1221_p3 <= 
        tmp_182_fu_1205_p3 when (brmerge_i_i7_fu_1189_p2(0) = '1') else 
        tmp_183_fu_1213_p3;
    y_V_fu_751_p3 <= 
        tmp_s_fu_735_p3 when (brmerge_fu_444_p2(0) = '1') else 
        tmp_165_fu_743_p3;
end behav;
