-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ALU is
port (
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    inA : IN STD_LOGIC_VECTOR (31 downto 0);
    inB : IN STD_LOGIC_VECTOR (31 downto 0);
    op : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of ALU is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "ALU,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xa7a12tcsg325-1q,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.548000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=469,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal sel_tmp8_fu_96_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_fu_42_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_1_fu_48_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp6_fu_90_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_84_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_2_fu_54_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_3_fu_60_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp2_fu_78_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_72_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_4_fu_66_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_fu_110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_102_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel1_fu_116_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond1_fu_124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_fu_146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel3_fu_138_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel2_fu_130_p3 : STD_LOGIC_VECTOR (31 downto 0);


begin



    ap_done <= ap_start;
    ap_idle <= ap_const_logic_1;
    ap_ready <= ap_start;
    ap_return <= 
        newSel3_fu_138_p3 when (or_cond2_fu_146_p2(0) = '1') else 
        newSel2_fu_130_p3;
    newSel1_fu_116_p3 <= 
        result_2_fu_54_p2 when (sel_tmp4_fu_84_p2(0) = '1') else 
        result_3_fu_60_p2;
    newSel2_fu_130_p3 <= 
        result_4_fu_66_p2 when (sel_tmp_fu_72_p2(0) = '1') else 
        ap_const_lv32_0;
    newSel3_fu_138_p3 <= 
        newSel_fu_102_p3 when (or_cond_fu_110_p2(0) = '1') else 
        newSel1_fu_116_p3;
    newSel_fu_102_p3 <= 
        result_fu_42_p2 when (sel_tmp8_fu_96_p2(0) = '1') else 
        result_1_fu_48_p2;
    or_cond1_fu_124_p2 <= (sel_tmp4_fu_84_p2 or sel_tmp2_fu_78_p2);
    or_cond2_fu_146_p2 <= (or_cond_fu_110_p2 or or_cond1_fu_124_p2);
    or_cond_fu_110_p2 <= (sel_tmp8_fu_96_p2 or sel_tmp6_fu_90_p2);
    result_1_fu_48_p2 <= std_logic_vector(unsigned(inA) - unsigned(inB));
    result_2_fu_54_p2 <= (inB and inA);
    result_3_fu_60_p2 <= (inB or inA);
    result_4_fu_66_p2 <= (inB xor inA);
    result_fu_42_p2 <= std_logic_vector(unsigned(inB) + unsigned(inA));
    sel_tmp2_fu_78_p2 <= "1" when (op = ap_const_lv32_3) else "0";
    sel_tmp4_fu_84_p2 <= "1" when (op = ap_const_lv32_2) else "0";
    sel_tmp6_fu_90_p2 <= "1" when (op = ap_const_lv32_1) else "0";
    sel_tmp8_fu_96_p2 <= "1" when (op = ap_const_lv32_0) else "0";
    sel_tmp_fu_72_p2 <= "1" when (op = ap_const_lv32_4) else "0";
end behav;
